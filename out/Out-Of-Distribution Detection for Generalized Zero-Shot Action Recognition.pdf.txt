Out-of-Distribution Detection for Generalized Zero-Shot Action Recognition

Devraj Mandal*1, Sanath Narayan*2, Saikumar Dwivedi3, Vikram Gupta3, Shuaib Ahmed3,

Fahad Shahbaz Khan2, and Ling Shao2

1Indian Institute of Science, Bangalore

2Inception Institute of Artiﬁcial Intelligence, UAE

3Mercedes-Benz R&D India, Bangalore

1

devrajm@iisc.ac.in

2

firstname.lastname@inceptioniai.org

3

firstname.lastname@daimler.com

Abstract

Generalized zero-shot action recognition is a challeng-
ing problem, where the task is to recognize new action cat-
egories that are unavailable during the training stage, in
addition to the seen action categories. Existing approaches
suffer from the inherent bias of the learned classiﬁer to-
wards the seen action categories. As a consequence, un-
seen category samples are incorrectly classiﬁed as belong-
ing to one of the seen action categories. In this paper, we set
out to tackle this issue by arguing for a separate treatment
of seen and unseen action categories in generalized zero-
shot action recognition. We introduce an out-of-distribution
detector that determines whether the video features belong
to a seen or unseen action category. To train our out-of-
distribution detector, video features for unseen action cat-
egories are synthesized using generative adversarial net-
works trained on seen action category features. To the
best of our knowledge, we are the ﬁrst to propose an out-
of-distribution detector based GZSL framework for action
recognition in videos. Experiments are performed on three
action recognition datasets: Olympic Sports, HMDB51 and
UCF101. For generalized zero-shot action recognition, our
proposed approach outperforms the baseline [33] with ab-
solute gains (in classiﬁcation accuracy) of 7.0%, 3.4%, and
4.9%, respectively, on these datasets.

1. Introduction

Zero-shot

learning (ZSL) is a challenging problem,
where the task is to classify images or videos into new cate-
gories that are unavailable during the training stage. Gener-
alized zero-shot learning (GZSL), introduced in [34], dif-
fers from ZSL in that the test samples can belong to the
seen or unseen categories. The task of GZSL is therefore

∗Equal Contribution. [Code at https://github.com/naraysa/gzsl-od]
1Work done partially during internship at Mercedes-Benz R&D India.

harder than ZSL due to the inherent bias of the learned clas-
siﬁer towards the seen categories. In this paper, we focus
on the problem of generalized zero-shot action recognition
in videos and treat ZSL as a special case of GZSL.

Most existing approaches [14, 12, 31, 6] tackle the prob-
lem of action recognition in videos in a fully-supervised set-
ting. In such a setting, all the action categories that occur
during testing are known a priori, and instances from all
action categories are available during training. However,
the fully-supervised problem setting is unrealistic for many
real-world applications (e.g., automatic tagging of actions
in web videos), where information regarding some action
categories is not available during training. Therefore, in
this work we tackle the problem of action recognition un-
der zero-shot settings.

Contrary to action recognition in videos, extensive re-
search efforts have been dedicated to zero-shot image clas-
siﬁcation. Most earlier ZSL approaches are based on at-
tribute mapping [2, 15]. On the other hand, a few recent
works [10, 18] tackle the problem in a transductive man-
ner, by assuming access to the full set of unlabelled testing
data. This helps in decreasing the domain shift problem, in
ZSL, caused due to disjoint categories in training and test-
ing. Similar transductive strategies have also been explored
for action recognition in videos [36, 24] to reduce the bias
towards seen action categories. However, these approaches
require unlabelled testing data for ﬁne-tuning the parame-
ters. Further, the bias still exists due to the similar treatment
of both seen and unseen categories (see Fig. 1(a)). Instead,
we propose a GZSL framework to separate the classiﬁca-
tion step for the seen and unseen action classes by intro-
ducing an out-of-distribution (OD) detector. As a result, the
inherently-learned bias towards the seen classes in the ac-
tion classiﬁer is reduced (see Fig. 1(b)).

In our approach, the out-of-distribution (OD) detector
is learned to produce a non-uniform distribution with an
emphasis (peaks) for seen categories and a uniformly dis-
tributed output for the unseen categories. This is achieived

9985

by utilizing an entropy loss to train our OD detector for
maximizing the entropy of the output for unseen action cat-
egory features. During inference, the entropy of the detec-
tor’s output is compared to a speciﬁed threshold for deter-
mining whether the test feature belongs to a seen or unseen
action category. Consequently, the test feature is dynami-
cally routed to either of the two classiﬁers explicitly trained
over seen and unseen classes, respectively, for ﬁnal classiﬁ-
cation. Entropy loss has previously been used [30] to train
generative adversarial networks [11] (GAN) for image syn-
thesis, in both unsupervised and semi-supervised settings.
However, to the best of our knowledge, we are the ﬁrst to
propose the use of entropy loss in the construction of an OD
detector for generalized zero-shot action recognition.

The proposed OD detector requires features from both
seen and unseen action classes to avoid an assumption on
the prior data distribution. However, unseen action features
are not available during training. Thus, we propose to syn-
thesize unseen action features, to train our OD detector, by
adapting a conditional Wasserstein GAN [4] (WGAN) with
additional terms: cosine embedding and cycle-consistency
losses. The additional loss terms aid in improving the fea-
ture generation process for a diverse set of action categories.
In our work, both the generator and discriminator of the
WGAN are conditioned on the category-speciﬁc auxiliary
descriptions, called class-embeddings or attributes1, to syn-
thesize class-speciﬁc action features. Consequently, our OD
detector and the two action classiﬁers (seen and unseen) are
trained using real and synthesized features from seen and
unseen categories, respectively.
Contributions: We introduce a novel generalized zero-
shot action recognition framework based on an out-of-
distribution (OD) detector. Our OD detector is designed to
reduce the effect of the inherent bias towards the seen action
classes generally present in the standard GZSL framework.
To synthesize unseen features for our OD detector training,
we adapt the conditional Wasserstein GAN with additional
loss terms. To the best of our knowledge, we are the ﬁrst
to introduce a GZSL action recognition framework based
on an OD detector trained using real features from seen ac-
tion categories and synthesized features from unseen action
classes. Our OD detector efﬁciently discriminates the se-
mantically similar seen and unseen action categories, lead-
ing to improved action classiﬁcation. Our approach sets a
new state-of-the-art for generalized zero-shot action recog-
nition on three benchmarks.

2. Related Work

ZSL and GZSL have gained considerable attention in re-
cent years since they can deal with challenging real-world
problems, such as automatic tagging of images and videos

1Both these terms are used interchangeably in this work

Figure 1. Illustration of the bias reduction achieved by the pro-
posed framework on a random test split of the HMDB51 dataset.
On the left: t-SNE scatter plot for baseline generalized zero-shot
action recognition framework [33]. On the right: t-SNE scatter
plot for our approach based on an OD detector. Action categories
are grouped into seen and unseen classes for illustration. The base-
line GZSL [33] incorrectly classiﬁes several unseen category fea-
tures (denoted by ’FN Unseen’) into seen action categories. Our
approach signiﬁcantly reduces the bias towards seen categories,
resulting in accurate action recognition. Best viewed in color.

with new categories previously unseen during training. Ear-
lier approaches [2, 15, 16] for ZSL in images were based
on direct or indirect attribute mapping between instances
and their class attributes. Alternatively, several more recent
works [26, 7, 1] determine the unseen classes based on the
weighted combination of seen classes. In GZSL, obtaining
realistic and discriminative training data for unseen classes
to overcome the classiﬁer’s bias towards the seen classes is a
challenge. Synthesizing visual features of unseen instances
through an embedding-based matrix mapping to convert the
ZSL problem to a typical supervised problem was explored
in [20, 21]. Approaches such as [5, 33, 9] have used dif-
ferent variants of GANs [11] to generate synthetic unseen
class features for the task of GZSL. Similar to [33, 9], we
adapt the conditional WGAN [4] in our framework for gen-
eralized zero-shot action recognition.

In contrast to image classiﬁcation, the problem of ZSL
and GZSL for action recognition in videos has received less
attention. Existing works pose the problem of ZSL and
GZSL action recognition in the transductive setting, where
unlabelled test data is also used during training [36, 13, 24].
A generative approach using Gaussians was used to syn-
thesize unseen class data in [24], where each action is rep-
resented as a probability distribution in the visual space.
These works do not treat seen and unseen action classes
separately, as proposed in this work. Further, these meth-
ods use unlabelled real features from the unseen classes
to rectify the bias of the learned parameters towards the
seen classes. Unlike these approaches, we do not use any
unlabelled real features from unseen action classes in the

9986

(a) Baseline(b) ProposedTP UnseenTP SeenFN UnseenFP Unseentraining stage of our model. In [37], action recognition un-
der ZSL was addressed using a Fisher vector representation
of traditional features and two-stream deep features with
GloVE [27] class embedding. However, the more challeng-
ing problem of GZSL action recognition was not addressed.
A one-to-one comparison using different features, such as
C3D [31], I3D [6], also remains unexplored in the context
of GZSL in these approaches.

Out-of-distribution detectors [17, 8] have been inves-
tigated in the context of image classiﬁcation via cross-
dataset evaluation. In [17], instances that appear to be at
the boundary of the data manifold were used as out-of-
distribution examples during training while [8] used the
misclassiﬁed in-distribution samples as a proxy for out-of-
distribution samples to calibrate the detector. However, in
our approach, no such prior data distribution assumptions
are made. Further, these detectors [17, 8] consider in-
distribution samples from one image classiﬁcation dataset
and out-of-distribution samples from a different dataset,
while our detector aims to distinguish between the seen and
unseen class features of the same dataset.

Our approach: Different to the aforementioned works,
an out-of-distribution detector is trained, with entropy loss,
using GAN generated features of unseen action categories
(as out-of-distribution samples) to recognize whether a fea-
ture sample belongs to either the seen or unseen group. Our
method assumes no prior data distribution of the seen and
unseen categories. The GAN itself is trained using the real
features of seen categories, conditioned on the associated
class-attributes of seen classes. During inference, based on
the out-of-distribution detector’s decision, features from a
test instance are input to one of the two classiﬁers explicitly
trained over seen and unseen action categories, respectively.

3. Proposed Approach

The proposed framework for GZSL is detailed in this
section. The framework is divided into two parts: synthetic
video feature generation for unseen classes using GANs
(Sec. 3.1) and out-of-distribution (OD) classiﬁer learning
(Sec. 3.2). The illustration of the overall pipeline is shown
in Fig. 2.

Let S = {(x, y, e(y)|x ∈ X , y ∈ Y s, e(y) ∈ E} be the
training set for seen classes, where x ∈ Rdx denotes the
spatio-temporal CNN features, y denotes the class labels in
Y s = {y1, . . . , yS} with S seen classes and e(y) ∈ Rde
denotes the category-speciﬁc embedding that models the
semantic relationship between the classes. Additionally,
U = {(u, e(u)|u ∈ Y u, e(u) ∈ E} is available dur-
ing training, where u is a class from a disjoint label set
Y u = {u1, . . . , uU } of U labels, and the corresponding
videos or features are not available. The task in GZSL is to
learn a classiﬁer fgzsl : X → Y s∪Y u. Using the OD detec-
tor, this task can be reformulated into learning 3 classiﬁers:

the out-of-distribution classiﬁer fod : X → {0, 1} and the
seen and unseen classiﬁers fs : X → Y s and fu : X → Y u,
respectively. The classiﬁer fod will determine if the feature
is an in-distribution or out-of-distribution feature and route
it to either fs or fu to determine the class.

3.1. Generating unseen class features

Given the training data of seen classes, S, the goal is
to synthesize features belonging to unseen classes, ˜x, using
the class attributes, e(u). To this end, a generative adver-
sarial network (GAN) is learned using the seen class fea-
tures, x, and the corresponding class embedding, e(y). A
GAN [11] consists of a generator G and a discriminator
D, which compete against each other in a two player min-
imax game. In the context of generating video features, D
attempts to accurately distinguish real-video features from
synthetically generated features, while G attempts to fool
the discriminator by generating video features that are se-
mantically close to real features. Since we need to synthe-
size features speciﬁc to unseen action categories, we use the
conditional GAN [23] by conditioning both G and D on the
embedding, e(y). A conditional generator G : Z × E → X
takes a random Gaussian noise z ∈ Z and a class embed-
ding e(y) ∈ E. Once the generator is learned, it is used to
synthesize the video features of unseen classes, u, by con-
ditioning on the unseen class embedding, e(u). Further, we
use the Wasserstein GAN [4] for the proposed framework
due to its more stable training and recent success in [33, 9]
for zero-shot image classiﬁcation.

A conditional WGAN [4], conditioned on the embedding
e(y), is learned to synthesize the video features ˜x, given
the corresponding class embedding, e(u). The conditional
WGAN loss is given by

LW GAN = E[D(x, e(y))] − E[D(˜x, e(y))]−

(1)

αE[(||∇ ˆxD(ˆx, e(y))||2 − 1)2]

where ˜x = G(z, e(y)), ˆx is a convex combination of x
and ˜x, α is the penalty coefﬁcient and E is the expectation.
The ﬁrst two terms approximate the Wasserstein distance in
equation 1, with the third term being the penalty for con-
straining the gradient of D to have unit norm along the con-
vex combination of real and generated pairs. Additionally,
we expect the generated features to be sufﬁciently discrim-
inative such that the class embedding that generated them
can be reconstructed back using the same features [38]. To
this end, similar to [9], a decoder is used to reconstruct
the class embedding e(y) from the synthesized features ˜x.
Hence, a cycle-consistency loss is added to the loss formu-
lation, which is given by,

Lcyc = E[||ˆe(y) − e(y)||2]

(2)

where ˆe(y) is the reconstructed embedding. Further, the
synthesized features of a particular class yi should be sim-

9987

Figure 2. Illustration of the proposed GZSL approach: A conditional WGAN is trained to synthesize video features ˜x, conditioned on the
class embedding e(y) via the losses LW GAN , Lcyc and Lemb. A spatio-temporal CNN computes the real features x for the seen class
videos. During post-training, the generator, conditioned on the unseen class embedding e(u), synthesizes unseen class features ˜xu, which,
along with real features xs, are used to learn the three classiﬁers fod, fs and fu. The expected outputs of fod for seen and unseen class
features are also portrayed. Cuboids with dashed borders denote synthesized features. Dashed arrows indicate their corresponding path.

ilar to the real features of the same class and dissimilar to
the features of other classes yj (for j 6= i). To this end, we
ﬁrst pair the real and synthesized features in a mini-batch
to generate matched (same classes) and unmatched (differ-
ent classes) pairs. Then, we minimize and maximize the
distance between the matched and unmatched features, re-
spectively, using the cosine embedding loss, as given by,

Lemb = Em[1 − cos(x, ˜x)] + Eum[max(0, cos(x, ˜x))] (3)

where the respective expectations are over the matched (m)
and unmatched (um) pair distributions. While the other
losses (LW GAN and Lcyc) train the network by emphasiz-
ing the similarity between real and generated features of
a particular class, the embedding loss also trains the net-
work by emphasizing how the generated features of an ac-
tion class should be dissimilar to the other class features.
The ﬁnal objective for training the GAN, using β and γ
as hyper-parameters for weighting the respective losses, is
given by

min

G

max

D

LW GAN + βLcyc + γLemb

(4)

3.2. Out of distribution detector for unseen class

An out-of-distribution detector is proposed for differen-
tiating between the features belonging to the seen classes
and those belonging to unseen classes. After training the
GAN using the training data S, the generator (G) is used to
synthesize features, ˜x = G(z, e(u)), for the unseen cat-
egories u ∈ Y u. A training set of generated features,
˜U = {(˜x, u, e(u))}, is obtained by generating sufﬁcient fea-
tures for all the unseen action categories.

The real features of the seen classes, xs and the gener-
ated features of the unseen classes, ˜xu, are used to train the
out-of-distribution detector. Approaches in [17, 8] learn an

OD detector with a prior data distribution assumption of the
seen class features. However, using generated samples of
the unseen classes can help to better learn the boundaries
between the seen and unseen categories, without assuming
any prior data distribution. The detector is a fully-connected
network with the dimension of the output layer the same
as the number of seen classes, S. As shown in Sec. 4.2,
a binary classiﬁer is insufﬁcient to learn this task due to
the complex boundaries between the many seen and unseen
classes. Instead of attempting to directly predict whether
the input is from a seen or unseen class, we use the concept
of entropy to learn an embedding that projects the features
of the seen and unseen classes far apart in the entropy space.
The network is trained with entropy loss, Lent, as given by

Lent = Ex∼S [H(ps)] − E ˜x∼U [H(˜pu)]

(5)

where H(p)=− Pi p[i] log(p[i]) is the entropy of p, and
ps=fod(xs) and ˜pu=fod(˜xu) ∈ RS are the predictions
of the network for the seen and unseen features xs and
˜xu, respectively. Further, a negative log-likelihood term
N (ps)=− log(ps[ys]), where ys is the class label of xs, is
added to Eq. 5 for faster convergence. This type of loss
formulation models the output of the network such that its
entropy is minimum and maximum for the input features of
seen and unseen classes, respectively. The higher the en-
tropy, the higher the uncertainty. Thus, a seen class feature
input will have a non-uniformly distributed output (with
an emphasis on seen classes). Similarly, an unseen class
feature will have a near-uniform distribution as its output.
The expected output of the classiﬁer, fod, for the seen and
unseen class features is illustrated in the far-right side of
Fig. 2.

Seen and unseen classiﬁers: Alongside the OD detector
training, we also train two separate classiﬁers, one for the

9988

Generator𝐺(𝑧,e(𝑦))DecoderSpatio-Temporal CNNDiscriminator𝐷(𝑥,e(𝑦))Video𝑧 ～ 𝓝(0,1)𝑥𝓛𝑒𝑚𝑏𝓛𝑐𝑦𝑐𝑥𝑠Out-of-distributionDetector (𝑓𝑜𝑑) 𝑥𝑢̃𝑥𝓛𝑒𝑛𝑡̂Class embedding𝑓𝑜𝑑(𝑥𝑠)Seen class Classifier (𝑓𝑠) Unseen class Classifier (𝑓𝑢)𝑓𝑜𝑑(𝑥𝑢)Matched & Unmatched PairingSeen class feature (real)Unseen class feature (synthesized)e(y)e(y)e(y)𝓛𝑊𝐺𝐴𝑁̃̃seen classes and one for the unseen classes. The two clas-
siﬁers fs and fu are trained on real features of seen classes
xs and generated features of unseen classes ˜xu, respec-
tively. During inference, the test video is passed through a
spatio-temporal CNN to compute the real features xtest and
then sent to the OD detector. If the entropy of the output
fod(xtest) is less than a threshold entth, the feature xtest is
passed through the seen-classes classiﬁer fs in order to pre-
dict the label of the test video. If the entropy of fod(xtest)
is greater than entth, then the label is predicted using the
unseen-classes classiﬁer fu. In ZSL, where the test sam-
ples are restricted to belonging to unseen classes, only the
unseen-classes classiﬁer fu is required to predict the cate-
gory of the video. In summary, the OD detector separates
the classiﬁcation of seen and unseen categories and reduces
the bias towards seen categories.

4. Experiments

4.1. Experimental setup

Video features: Two types of video features, I3D [6] (In-
ﬂated 3D) and C3D [31] (Convolution 3D), designed for
generic action recognition, are used for evaluation. The
appearance and ﬂow I3D features are extracted from the
Mixed 5c layer output of the RGB and ﬂow I3D networks,
respectively. Both networks are pretrained on the Kinetics
dataset [6]. For an input video, the Mixed 5c output of both
networks are averaged across the temporal dimension and
pooled by 4 in the spatial dimension and then ﬂattened to
obtain a vector, of size 4096, representing the appearance
and ﬂow features, respectively. The appearance and ﬂow
features are concatenated to obtain video features of size
8192. We use the C3D model, pre-trained on the Sports-1M
dataset [12], to extract the C3D features for representing the
actions in a video. A video is divided into non-overlapping
16-frame clips and the mean of the fc6 layer outputs, of size
4096, is taken as the video feature for the action.
Network architecture: The generator G is a three-layer
fully-connected (FC) network with an output layer dimen-
sion equal to the size of the video feature. The hidden layers
are of size 4096. The decoder is also a three-layer FC net-
work with an output size equal to the class-embedding size
and a hidden size equal to 4096. The discriminator D is a
two-layer FC network with the output size equal to 1 and a
hidden size equal to 4096. The individual classiﬁers fs and
fu are single-layer FC networks with an input size equal to
the video feature size and output sizes equal to the number
of seen and unseen classes, respectively. The OD detec-
tor fod is a three-layer FC network with output and hidden
layer sizes equal to the number of seen classes and 512, re-
spectively. The parameters β and γ are set to 0.01 and 0.1,
respectively, for all the datasets. The threshold value entth
is chosen to be the average of the prediction entropies of the

Dataset
Olympic Sports
HMDB51
UCF101

#Videos

#Class

Split (Seen / Unseen)

783
6766
13320

16
51
101

8/8

26/25
51/50

Table 1. Datasets used for evaluation

seen class features in the training data. All the modules are
trained using the Adam optimizer with a 10−4 learning rate.
Datasets:
Three challenging video action datasets
(Olympic Sports [25], HMDB51 [14] and UCF101 [29]),
widely used as benchmarks for GZSL and ZSL, are used
for evaluating the performance of the proposed technique.
The details of the three datasets are given in Tab. 1. The
mean per-class accuracy averaged over 30 independent test
runs is reported along with the standard deviation. Each test
run is carried out on a random split of the seen and unseen
classes in the dataset. For GZSL, we also report the mean
accuracy for the seen classes, mean accuracy of the unseen
classes and the harmonic mean of the two. For the GZSL
setting, the test data consists of all the videos belonging to
unseen classes and a random subset of 20% videos from
seen class categories.
Class-embedding: We use two types of class-embedding
to semantically represent the classes:
the human anno-
tated attributes and word vectors [22]. The UCF101 and
Olympic Sports datasets also have manually-annotated class
attributes of sizes 40 and 115, respectively. A skip-gram
model, trained on the news text corpus provided by Google,
is used to generate the action class-speciﬁc word vector rep-
resentations of size 300 using the action category names as
input. The HMDB51 dataset does not have any associated
manual attributes.

4.2. Baseline comparison

The proposed framework is compared with the baseline
by evaluating on the generalized zero-shot action recog-
nition task using I3D concatenated features. Since our
GAN framework for synthesizing features also uses the
WGAN [4], we choose f-CLSWGAN [33], originally de-
signed for zero-shot image classiﬁcation, as the baseline.
The performance comparison for the three datasets is shown
in Tab. 2. We also compare our GZSL framework with
and without the OD detector (denoted as CEWGAN-OD
and CEWGAN, respectively, in Tab. 2). Further, to quan-
tify the effectiveness of our OD detector, we also combine
CEWGAN with a binary OD classiﬁer, ODbin. The classiﬁ-
cation accuracy for the seen and unseen categories and their
harmonic mean are denoted by s, u and H , respectively.

The proposed OD detector (ODent) always outperforms
the binary OD detector (ODbin) (see Tab. 2), proving that
a binary classiﬁer is not sufﬁcient for learning the task.
The ODbin requires generated features for seen and unseen
classes to achieve reasonable performance and it still fares,
generally, worse than CEWGAN. It only yields better re-

9989

Embed

Olympic Sports

HMDB51

UCF101

(a)

f-CLSWGAN∗ [33]

(b)

LW GAN + Lcyc + Lemb
(Ours: CEWGAN)

(c)

(b) + ODbin

w2v

manual

w2v

manual

w2v

manual

(d)

(b) + ODent
(Ours: CEWGAN-OD) manual

w2v

s

66.0
72.3

67.6
73.7

71.6
72.1

73.2
71.5

u

35.5
51.1

36.5
52.3

38.1
56.9

41.8
61.6

H
46.1
59.9

47.4
61.1

49.8
63.6

53.1
66.2

s

52.6
-

51.7
-

36.7
-

55.6
-

u

23.7
-

24.9
-

24.1
-

26.8
-

H
32.7
-

33.6
-

29.1
-

36.1
-

s

74.8
83.9

73.7
80.2

62.4
67.4

75.9
76.7

u

20.7
30.2

21.8
31.7

19.2
28.2

24.8
36.4

H
32.4
44.4

33.7
45.5

29.4
39.8

37.3
49.4

Table 2. Comparison of proposed approach with the baseline f-CLSWGAN∗ [33] (* - adapted implementation) using concatenated I3D fea-
tures for GZSL action recognition. CEWGAN-OD and CEWGAN denote the proposed framework with and without the out-of-distribution
(OD) detector, respectively. ODbin and ODent denote the binary classiﬁer and proposed OD detectors, respectively. Higher is better. Man-
ual attributes are not available for HMDB51. s, u and H denote the accuracy for seen and unseen classes and their harmonic mean,
respectively. CEWGAN outperforms the baseline f-CLSWGAN on all datasets. Integrating ODent with CEWGAN achieves further gains.

sults than CEWGAN for the Olympic Sports dataset. The
main reason is that Olympic Sports has only eight seen and
unseen classes. Hence, it is easier to separate the corre-
sponding test features. As the number of classes increases,
ODbin fails to accurately separate the seen and unseen cat-
egory features.

Importantly, we see that the proposed GAN (CEWGAN)
performs better than the baseline approach (f-CLSWGAN)
on all combinations of datasets and attributes.
Integrat-
ing the proposed OD detector (ODent) with CEWGAN
further improves the performance across datasets. Aver-
age gains of 7.0%, 3.4%, and 4.9% (in terms of accu-
racy) are achieved over f-CLSWGAN [33] for the Olympic
Sports, HMDB51 and UCF101 datasets, respectively, us-
ing word2vec. Achieving a considerable gain on a difﬁcult
dataset, such as HMDB51, shows the promise of our frame-
work for generalized zero-shot action recognition.

4.3. State of the art comparison

In this section, a comparison of our proposed frame-
work against the other approaches for the tasks of ZSL and
GZSL in action recognition is given. Since our aim is re-
ducing the bias of the classiﬁer towards seen classes in gen-
eralized zero-shot action recognition, we ﬁrst compare the
GZSL performance (Tab. 3), and then the ZSL performance
(Tab. 4), with the other approaches in literature. In both the
tables, we report the performance of our approach trained
using the I3D (appearance + ﬂow) features. The perfor-
mance of our approach using other features is given as an
ablation study in Sec. 4.6.

GZSL performance comparison: The proposed out-of-
distribution detector is applicable only in the GZSL frame-
work. The comparison of our proposed approach with the
other approaches on the GZSL task is reported in Tab. 3.
The best results for each dataset and attribute combina-
tion are in boldface. The standard deviation from the

mean is also reported. We see that the proposed approach,
CEWGAN-OD, outperforms the other approaches (fewer
approaches compared to the ZSL task) on all datasets. The
results for CLSWGAN [33] are obtained by adapting the
author’s implementation for our GZSL action recognition
task. This is denoted by the superscript ’*’ in Tab. 3. Both
CLSWGAN and the proposed approach are trained using
the I3D features. The best existing approach for GZSL ac-
tion recognition, GGM [24], employs a generative approach
to synthesize unseen class data and utilizes unlabelled real
features (C3D) from the unseen classes to rectify the bias
of the learned parameters towards seen classes. Particu-
larly, for the UCF101 dataset and manual attributes com-
bination, the proposed approach, CEWGAN-OD, achieves
gains of 5.1% and 25.8% (in terms of accuracy) over the
CLSWGAN [33] and GGM [24], respectively. Further,
for the word2vec embedding, the proposed CEWGAN-OD
achieves gains of 16% and 19.8% over the best existing ap-
proach, GGM [24], for the HMDB51 and UCF101 datasets,
respectively.

ZSL performance comparison: In Tab. 4, the proposed
approach trained using the I3D (appearance + ﬂow) fea-
tures is denoted by CEWGAN. Here, the sufﬁx OD (used
in Tab. 3) is dropped since the out-of-distribution detec-
tor is applicable only in the GZSL task. From Tab. 4, we
see that our approach outperforms the other approaches
in the zero-shot action recognition task for all combina-
tions of datasets and attributes. The proposed approach,
CEWGAN, in general, has less or comparable deviation
as the other approaches. This shows that the proposed ap-
proach consistently improves across the splits. All the other
approaches use either the word2vec or manually-annotated
embedding (denoted by w and m, respectively) except
MICC [37], which uses GloVE [27], an embedding simi-
lar to word2vec. The proposed approach using I3D features
and the word2vec embedding has absolute gains of 6.6%,

9990

Method

HAA [19]
SJE [3]
ConSE [26]

GGM [24]

CLSWGAN∗
[33]

-

Olympics HMDB51 UCF101
18.7±2.4
8.9±2.2
12.7±2.2
23.7±1.2
17.5±2.2
44.4±3.0
32.4±3.3

m 49.4±10.8
32.5±6.7
w
37.6±9.9
w
m 52.4±12.2
42.2±10.2
w
59.9±5.3
m
46.1±3.7
w

10.5±2.4
15.4±2.8

20.1±2.1

32.7±3.4

-

-

Ours:
m
CEWGAN-OD w

66.2±6.3
53.1±3.6

-

36.1±2.2

49.4±2.4
37.3±2.1

Table 3. GZSL performance comparison (in %) with existing ap-
proaches. m and w indicate manual attributes and word2vec, re-
spectively. CLSWGAN∗ [33] (* - adapted implementation) and
CEWGAN-OD denote the baseline and proposed approach, re-
spectively, using I3D features. Higher is better. Best results for
each embedding are in bold. Manual attributes are not available
for HMDB51. CEWGAN-OD achieves an absolute gain of 5.0%
over the baseline for UCF101, using manual attributes, and out-
performs existing methods by a signiﬁcant margin on all datasets.

Method

Bi-dir [32]

TZWE [36]

PST [28]
ST [35]

m
w
m
w
m
w
m
g
m
w
CLSWGAN∗ m
[33]
w

UDA [13]
MICC [37]

GGM [24]

-

-

-

15±3

19.1±3.8

53.5±11.9
38.6 ±10.6

Olympics HMDB51 UCF101
15.3±2.2
48.6±11
15.8±2.3
20.2±2.2
18.0±2.7
28.3±1.0
21.4±0.8
13.2±0.6
25.4±3.1
24.5±2.9
20.3±1.9
37.5±3.1
25.8±3.2

43.9±7.9
57.9±14.1
41.3±11.4
64.7±7.5
47.1±6.4

18.9±1.1

25.3±4.5

20.7±3.1

29.1±3.8

-
-
-

-

-

-

-

Ours:
CEWGAN

m
w

65.9±8.1
50.5±6.9

-

30.2±2.7

38.3±3.0
26.9±2.8

Table 4. ZSL performance comparison (in %) with existing ap-
proaches. m, g and w indicate manual attributes, GLoVE and
word2vec, respectively. CLSWGAN∗ [33] (* - adapted implemen-
tation) and CEWGAN denote the baseline and proposed approach,
respectively, using I3D features. Higher is better. Best results for
each embedding are in bold. Our approach achieves the state-of-
the-art on all datasets.

4.9% and 1.5% (in terms of accuracy) over the best existing
ZSL results on the Olympic Sports, HMDB51 and UCF101
datasets, respectively. Further, for the word2vec embed-
ding, we observe that the proposed CEWGAN achieves
gains of 1.2%, 1.1% and 1.1% over the CLSWGAN [33] for
the same datasets, respectively. Generally, for both GZSL
and ZSL tasks, using the same features but learning with
manual attributes (instead of word2vec) results in better per-
formance across different approaches.

4.4. Bias towards seen categories

Tab. 5 quantiﬁes the bias reduction due to the proposed
framework, CEWGAN-OD, for the three datasets, using the

Olympic Sports
HMDB51
UCF101

CEWGAN
SC
UC
72.3
68.2
82.5
66.7
74.4
81.1

CEWGAN-OD
SC
73.9
71.6
76.5

UC
82.8
88.7
92.2

Table 5. Comparison of the bias towards seen classes, between the
baseline (CEWGAN) and the proposed (CEWGAN-OD) frame-
works on the three datasets using the word2vec embedding. SC,
UC denote seen classes and unseen classes, respectively. Lower
UC accuracy indicates higher bias towards seen categories. The
proposed CEWGAN-OD achieves gains of 6.2% and 10.1% (clas-
siﬁcation accuracy) over the baseline CEWGAN for the unseen
categories in the HMDB51 and UCF101 datasets, respectively.

word2vec embedding. For this experiment, we consider all
the features of unseen categories as one class and the re-
maining features from seen categories as another. A fea-
ture sample is said to be wrongly classiﬁed if the predicted
class is not the same as the ground-truth class, regardless
of whether the feature was classiﬁed as belonging to the
correct category within each class or not. This allows us
to quantify the bias reduction achieved by the standalone
OD detector. We observe that CEWGAN-OD reduces the
bias towards the seen categories and achieves better classi-
ﬁcation for the unseen class features. Speciﬁcally, the pro-
posed CEWGAN-OD achieves gains of 6.2% and 10.1%
over CEWGAN for the HMDB51 and UCF101 datasets, re-
spectively, using the word2vec embedding.

Fig. 3 shows a comparison, in terms of the classiﬁca-
tion accuracy, between our two frameworks: CEWGAN
and CEWGAN-OD. The comparison is shown for random
test splits of HMDB51 and UCF101. The x-axis denotes the
number of unseen class feature instances in a test split. The
unseen class feature instances are sorted (high to low) ac-
cording to the conﬁdence scores of the respective classiﬁers
(CEWGAN and CEWGAN-OD). The plot shows that inte-
grating the proposed OD detector in the GZSL framework
results in a signiﬁcant improvement in performance for both
datasets (denoted by green and red curves in Fig. 3). The
number of unseen class feature instances incorrectly clas-
siﬁed (into a seen class) is reduced with the integration of
the proposed OD dectector. This improvement in classiﬁ-
cation performance for unseen action categories leads to a
signiﬁcant reduction in bias towards seen classes.

4.5. Transferring word representations

As mentioned previously in Sec. 4.1, manual attributes
are not available for the HMDB51 dataset. While word2vec
representations give a good measure of the semantic repre-
sentations of the classes, learning with manual attributes al-
ways results in better performance, as can be seen from the
results in Sec. 4.3 and 4.2. Here, we learn to generate the
manual attributes from the word2vec embedding to show
that using the transformed class embedding achieves bet-

9991

Feature

HMDB51

UCF101

C3D

I3Da

I3Df

I3Daf

ZSL GZSL
30.9
29.1
36.1
33.8
34.9
32.0
39.5
36.1

m 26.0
24.2
w
m 30.8
28.2
w
m 29.7
27.4
w
m 34.8
30.2
w

ZSL GZSL
38.7
28.1
32.0
21.5
44.3
33.9
23.2
33.4
42.7
32.2
32.6
22.7
49.4
38.3
26.9
37.3

Table 6. Performance comparison of C3D, I3D appearance (I3Da),
I3D ﬂow (I3Df ) and I3D appearance+ﬂow (I3Daf ) video features
on the HMDB51 and UCF101 datasets. For HMDB51, m denotes
the transferred attributes, as discussed in Sec. 4.5. Best results are
in bold for both types of embedding. For every combination of
feature and attribute, ZSL and GZSL denote the performance of
CEWGAN and CEWGAN-OD, respectively.

are evaluated on the HMDB51 and UCF101 datasets using
both the manual attributes and word2vec embedding. The
manual attributes for HMDB51 refer to the transformed at-
tributes, as described in Sec. 4.5. The entire setup remains
the same except for the input or output layers, which de-
pend on the video feature dimensions. The results are re-
ported in Tab. 6. In general, we see that the I3Da features
perform better than the C3D and I3Df features. The I3Df
features are still better than the C3D features, while the best
performance is achieved when the appearance and ﬂow fea-
tures are combined. This is in line with the performance
of the features in the task of fully-supervised action recog-
nition, as noted in [6]. This also indicates that our frame-
work can be used with new and improved features as and
when they are designed and a corresponding improvement
in GZSL action recognition can be expected. The results
in Tab. 3 and 4 for CEWGAN-OD and CEWGAN, respec-
tively, use the combined features, I3Daf .

5. Conclusion

In this work, we proposed a novel out-of-distribution de-
tector integrated into the generalized zero-shot learning ac-
tion recognition framework. An out-of-distribution detector
was learned to detect unseen category features as out-of-
distribution samples. It was trained using real and GAN-
generated features from seen and unseen categories, respec-
tively. The use of an out-of-distribution detector enabled
the classiﬁcation of the seen and unseen categories to be
separated and hence, reduced the bias towards seen classes
that is present in the baseline approaches. The approach
was evaluated on three human action video datasets, us-
ing different types of embedding and video features. The
proposed approach outperformed the baseline [33] in gen-
eralized zero-shot action recognition using word2vec, with
absolute gains of 7.0%, 3.4% and 4.9% on the Olympic
Sports, HMDB51 and UCF101 datasets, respectively.

9992

Figure 3. Classiﬁcation accuracy (in %) comparison between the
proposed GZSL frameworks (CEWGAN-OD and CEWGAN) for
random test splits of HMDB51 and UCF101 datasets. X-axis de-
notes the number of unseen class instances (in %). For each frame-
work, the unseen feature instances are sorted (in descending order)
according to their respective classiﬁer scores. Integrating the OD
detector in the CEWGAN framework achieves higher classiﬁca-
tion accuracy (red and green lines) for both datasets. CEWGAN-
OD decreases the bias towards seen classes. Best viewed in color.

ter generation of features, resulting in better performance
compared to the word2vec embedding. We use the class
embeddings of the UCF101 dataset to learn the transforma-
tion using a two-layer FC network. To generate a sufﬁcient
number of samples for training, the video features are con-
catenated with their respective word2vec and used as input.
The trained model is then used to transform word2vec rep-
resentations into manual attribute embeddings.

To comply with the ZSL paradigm of not using any video
features from the unseen classes, we use the generated fea-
tures for the HMDB51 unseen classes as input for the em-
bedding transformation network. Here, the generator is
learned using the word2vec embedding and the seen class
features of the HMDB51 dataset. The learned attributes
for HMDB51 are the same size as the manual attributes
of UCF101, i.e., 115. The performance of the proposed
framework under ZSL and GZSL settings for the HMDB51
dataset using the transferred attributes (denoted by m) and
different features is reported in Tab. 6. The results show that
the transferred attributes for HMDB51 achieve better per-
formance than the word2vec. Hence, synthesizing features
using transferred attributes, for datasets without manually-
annotated attributes, achieves better performance compared
to synthesizing using the standard word2vec embedding.

4.6. Comparison of video features

Here, we give a performance comparison of the different
video features for the tasks of ZSL and GZSL. The features
that are used for comparison are C3D, I3Da (appearance),
I3Df (ﬂow) and I3Daf (appearance and ﬂow). The features

References

[1] Zeynep Akata, Mateusz Malinowski, Mario Fritz, and Bernt
Schiele. Multi-cue zero-shot learning with strong supervi-
sion. In CVPR, 2016. 2

[2] Z. Akata, F. Perronnin, Z. Harchaoui, and C. Schmid. Label
embedding for attribute-based classiﬁcation. In CVPR, 2013.
1, 2

[3] Zeynep Akata, Scott Reed, Daniel Walter, Honglak Lee, and
Bernt Schiele. Evaluation of output embeddings for ﬁne-
grained image classiﬁcation. In CVPR, 2015. 7

[4] Martin Arjovsky, Soumith Chintala, and L´eon Bottou.
Wasserstein gan. arXiv preprint arXiv:1701.07875, 2017.
2, 3, 5

[5] Maxime Bucher, Stphane Herbin, and Frdric Jurie. Gener-
In

ating visual representations for zero-shot classiﬁcation.
ICCV-TASK-CV, 2017. 2

[6] Joao Carreira and Andrew Zisserman. Quo vadis, action
recognition? a new model and the kinetics dataset. In CVPR,
2017. 1, 3, 5, 8

[7] Soravit Changpinyo, Wei-Lun Chao, Boqing Gong, and Fei
Sha. Synthesized classiﬁers for zero-shot learning. In CVPR,
2016. 2

[8] Terrance DeVries and Graham W Taylor. Learning conﬁ-
dence for out-of-distribution detection in neural networks.
arXiv preprint arXiv:1802.04865, 2018. 3, 4

[9] Rafael Felix, B. G. Vijay Kumar, Ian Reid, and Gustavo
Carneiro. Multi-modal cycle-consistent generalized zero-
shot learning. In ECCV, 2018. 2, 3

[10] Yanwei Fu, Timothy M Hospedales, Tao Xiang, Zhenyong
Fu, and Shaogang Gong. Transductive multi-view embed-
ding for zero-shot recognition and annotation.
In ECCV,
2014. 1

[11] Ian Goodfellow, Jean PougetAbadie, Mehdi Mirza, Bing Xu,
In

and David Warde-Farley. Generative adversarial nets.
NIPS, 2014. 2, 3

[12] Andrej Karpathy, George Toderici, Sanketh Shetty, Thomas
Leung, Rahul Sukthankar, and Li Fei-Fei. Large-scale video
classiﬁcation with convolutional neural networks. In CVPR,
2014. 1, 5

[13] Elyor Kodirov, Tao Xiang, Zhenyong Fu, and Shaogang
Gong. Unsupervised domain adaptation for zero-shot learn-
ing. In ICCV, 2015. 2, 7

[14] H. Kuehne, H. Jhuang, E. Garrote, T. Poggio, and T. Serre.
HMDB: a large video database for human motion recogni-
tion. In ICCV, 2011. 1, 5

[15] Christoph H Lampert, Hannes Nickisch, and Stefan Harmel-
In CVPR,

ing. Learning to detect unseen object classes.
2009. 1, 2

[16] Christoph H Lampert, Hannes Nickisch, and Stefan Harmel-
ing. Attribute-based classiﬁcation for zero-shot visual object
categorization. TPAMI, 2014. 2

[17] Kimin Lee, Honglak Lee, Kibok Lee, and Jinwoo Shin.
Training conﬁdence-calibrated classiﬁers for detecting out-
of-distribution samples. ICLR, 2018. 3, 4

[18] Xin Li, Yuhong Guo, and Dale Schuurmans.

Semi-
supervised zero-shot classiﬁcation with label representation
learning. In ICCV, 2015. 1

[19] Jingen Liu, Benjamin Kuipers, and Silvio Savarese. Recog-

nizing human actions by attributes. In CVPR, 2011. 7

[20] Yang Long, Li Liu, Ling Shao, Fumin Shen, Guiguang Ding,
and Jungong Han. From zero-shot learning to conventional
supervised classiﬁcation: Unseen visual data synthesis. In
CVPR, 2017. 2

[21] Y. Long, L. Liu, F. Shen, L. Shao, and X. Li. Zero-shot
learning using synthesised unseen visual data with diffusion
regularisation. TPAMI, 2017. 2

[22] Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Corrado,
and Jeff Dean. Distributed representations of words and
phrases and their compositionality. In NIPS, 2013. 5

[23] Mehdi Mirza and Simon Osindero. Conditional generative

adversarial nets. arXiv preprint arXiv:1411.1784, 2014. 3

[24] Ashish Mishra, Vinay Kumar Verma, M Shiva Krishna
Reddy, Arulkumar S, Piyush Rai, and Anurag Mittal. A gen-
erative approach to zero-shot and few-shot action recogni-
tion. In WACV, 2018. 1, 2, 6, 7

[25] Juan Carlos Niebles, Chih-Wei Chen, and Li Fei-Fei. Mod-
eling temporal structure of decomposable motion segments
for activity classiﬁcation. In ECCV, 2010. 5

[26] Mohammad Norouzi, Tomas Mikolov, Samy Bengio, Yoram
Singer, Jonathon Shlens, Andrea Frome, Greg S Corrado,
and Jeffrey Dean. Zeroshot learning by convex combination
of semantic embeddings. In ICLR, 2014. 2, 7

[27] Jeffrey Pennington, Richard Socher, and Christopher Man-
ning. Zero-shot action recognition with error-correcting out-
put codes. In EMNLP, 2014. 3, 6

[28] Marcus Rohrbach, Sandra Ebert, and Bernt Schiele. Transfer

learning in a transductive setting. In NIPS, 2013. 7

[29] Khurram Soomro, Amir Roshan Zamir, and Mubarak Shah.
Ucf101: A dataset of 101 human actions classes from videos
in the wild. arXiv preprint, (arXiv:1212.0402), 2012. 5

[30] Jost Tobias Springenberg.

Unsupervised and semi-
supervised learning with categorical generative adversarial
networks. ICLR, 2016. 2

[31] Du Tran, Lubomir Bourdev, Rob Fergus, Lorenzo Torresani,
and Manohar Paluri. Learning spatiotemporal features with
3d convolutional networks. In ICCV, 2015. 1, 3, 5

[32] Qian Wang and Ke Chen. Zero-shot visual recognition via

bidirectional latent embedding. IJCV, 2017. 7

[33] Yongqin Xian, Tobias Lorenz, Bernt Schiele, and Zeynep
Akata. Feature generating networks for zero-shot learning.
In CVPR, 2018. 1, 2, 3, 5, 6, 7, 8

[34] Yongqin Xian, Bernt Schiele, and Zeynep Akata. Zero-shot

learning-the good, the bad and the ugly. In CVPR, 2017. 1

[35] Xun Xu, Timothy Hospedales, and Shaogang Gong. Se-
mantic embedding space for zero-shot action recognition. In
ICIP, 2015. 7

[36] Xun Xu, Timothy Hospedales, and Shaogang Gong. Trans-
ductive zero-shot action recognition by word-vector embed-
ding. IJCV, 2017. 1, 2, 7

[37] Chenrui Zhang and Yuxin Peng. Visual data synthesis via
gan for zero-shot video classiﬁcation. In IJCAI, 2018. 3, 6,
7

[38] Jun-Yan Zhu, Taesung Park, Phillip Isola, and Alexei A.
Efros. Unpaired image-to-image translation using cycle-
consistent adversarial networks. In ICCV, 2017. 3

9993

