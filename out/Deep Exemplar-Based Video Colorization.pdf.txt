Deep Exemplar-based Video Colorization

Bo Zhang1 ∗, Mingming He1

,

5, Jing Liao2, Pedro V. Sander1, Lu Yuan3

,

4, Amine Bermak1

,

6, Dong Chen3

1Hong Kong University of Science and Technology

2City University of Hong Kong

3Microsoft Research Asia
5USC Institute for Creative Technologies

4Microsoft AI Perception and Mixed Reality
6Hamad Bin Khalifa University

Abstract

This paper presents the ﬁrst end-to-end network for
exemplar-based video colorization. The main challenge
is to achieve temporal consistency while remaining faith-
ful to the reference style. To address this issue, we intro-
duce a recurrent framework that uniﬁes the semantic cor-
respondence and color propagation steps. Both steps al-
low a provided reference image to guide the colorization
of every frame, thus reducing accumulated propagation er-
rors. Video frames are colorized in sequence based on the
colorization history, and its coherency is further enforced
by the temporal consistency loss. All of these components,
learnt end-to-end, help produce realistic videos with good
temporal stability. Experiments show our result is superior
to the state-of-the-art methods both quantitatively and qual-
itatively.

1. Introduction

Prior to the advent of automatic colorization algorithms,
artists revived legacy images or videos through a careful
manual process. Early image colorization methods relied on
user-guided scribbles [1, 2, 3, 4, 5] or a sample reference [6,
7, 8, 9, 10, 11, 12, 13] to address this ill-posed problem, and
more recent deep-learning works [14, 15, 16, 17, 18, 19, 20]
directly predict colors by learning color-semantic relation-
ships from a large database.

A more challenging task is to colorize legacy videos. In-
dependently applying image colorization (e.g., [15, 16, 17])
on each frame often leads to ﬂickering and false discontinu-
ities. Therefore there have been some attempts to impose
temporal constraints on video colorization. A na¨ıve ap-
proach is to run a temporal ﬁlter on the per-frame coloriza-
tion results during post-processing [21, 22], which can alle-
viate the ﬂickering but cause color fading and blurring. An-
other set of approaches propagate the color scribbles across

∗Author did this work during the internship at Microsoft Research Asia.

Email: zhangboknight@gmail.com

frames using optical ﬂow [1, 2, 23, 24, 25]. However, scrib-
bles propagation may be not perfect due to ﬂow error, which
will induce some visual artifacts. The most recent methods
assume that the ﬁrst frame is colorized and then propagate
its colors to the following frames [26, 27, 28, 29]. This is
effective to colorize a short video clip, but the errors will
progressively accumulate when the video is long. These ex-
isting techniques are generally based on color propagation
and do not consider the content of all frames when deter-
mining the colors.

We instead propose a method to colorize video frames
jointly considering three aspects, instead of solely relying
on the previous frame. First, our method takes the result
of the previous frame as input to preserve temporal consis-
tency. Second, our method performs colorization using an
exemplar, allowing a provided reference image to guide the
colorization of every frame and reduce accumulation error.
Thus, ﬁnding semantic correspondence between the refer-
ence and every frame is essential to our method. Finally,
our method leverages large-scale data from learning, so that
it can predict natural colors based on the semantics of the in-
put grayscale image when no proper matching is available
in either the reference image or the previous frame.

To achieve the above objectives, we present the ﬁrst end-
to-end convolutional network for exemplar-based video col-
orization. It is a recurrent structure that allows history in-
formation for maintaining temporal consistency. Each state
consists of two major modules: a correspondence subnet to
align the reference to the input frame based on dense seman-
tic correspondences, and a colorization subnet to colorize a
frame guided by both the colorized result of its previous
frame and the aligned reference. All subnets are jointly
trained, yielding multiple beneﬁts. First, the jointly trained
correspondence subnet is tailored for the colorization task,
thus achieving higher quality. Second, it is two orders of
magnitude faster than the state-of-the-art exemplar-based
colorization method [30] where the reference is aligned in
a pre-processing step using a slow iterative optimization al-
gorithm [31]. Moreover, the joint training allows adding
temporal constraints on the alignment as well, which is es-

18052

sential to consistent video colorization. This entire net-
work is trained with novel loss functions considering nat-
ural occurrence of colors, faithfulness to the reference, spa-
tial smoothness and temporal coherence.

The experiments demonstrate that our video colorization
network outperforms existing methods quantitatively and
qualitatively. Moreover, our video colorization allows two
modes. If the reference is a colorized frame in the video, our
network will perform the same function as previous color
propagation methods but in a more robust way. More im-
portantly, our network supports colorizing a video with a
color reference of a different scene. This allows the user to
achieve customizable multimodal results by simply feeding
various references, which cannot be accomplished in previ-
ous video colorization methods.

2. Related work

Interactive Colorization. Early colorization methods fo-
cus on using local user hints in the form of color points
or strokes [1, 2, 3, 4, 5]. The local color hints are propa-
gated to the entire image according to the assumption that
coherent neighborhoods should have similar colors. These
pioneering works rely on the hand-crafted low-level fea-
tures for the color propagation. Recently, Zhang and Zhu et
al. [32] proposed to employ deep neural networks to prop-
agate the user edits by incorporating semantic information
and achieve remarkable quality. However, all of these user-
guided methods require signiﬁcant manual interactions and
aesthetic skills to generate plausible colorful images, mak-
ing them unsuitable for colorizing images massively.

Exemplar-based Colorization. Another category of
work colorize the grayscale images by transferring the color
from the reference image in a similar content. The pioneer-
ing work [6] transfers the chromatic information to the cor-
responding regions by matching the luminance and texture.
In order to achieve a more accurate local transfer, various
correspondence techniques have been proposed by match-
ing low-level hand-crafted features [7, 8, 9, 10, 11, 12, 13].
Still, these correspondence methods are not robust to com-
plex appearance variations of the same object because low-
level features do not capture semantic information. More
recent works [33, 30] rely on the Deep Analogy method [31]
to establish the semantic correspondence and then reﬁne the
colorization by solving Markov random ﬁeld model [33]
or a neural network [30]. In those works, the correspon-
dence and the color propagation are optimized indepen-
dently, therefore visual artifacts tend to arise due to corre-
spondence error. On the contrary, we unify the two stages
within one network, which is trained end-to-end and pro-
duces more coherent colorization results.

Fully Automatic Colorization. With the advent of deep
learning techniques, various fully automatic colorization

methods have been proposed to learn a parametric map-
ping from grayscale to color using large datasets [14, 15,
16, 17, 18, 19, 20]. These methods predict the color by
incorporating the low and high-level cues and have shown
compelling results. However, these methods lack the mod-
elling of color ambiguity and thus cannot generate multi-
modal results. In order to address these issues, diverse col-
orization methods have been proposed using the generative
models [34, 35, 36, 37, 38]. However, all of these automatic
methods are prone to produce visual artifacts such as color
bleeding and color washout, and the quality may signiﬁ-
cantly deteriorate when colorizing objects out of the scope
of the training data.

Video Colorization. Comparatively, there has been much
less research effort focused on video colorization. Exist-
ing video colorization can be classiﬁed into three categories.
The ﬁrst is to post-process the framewise colorization with
a general temporal ﬁlter [21, 22], but these works tend to
wash out the colors. Another class of methods propagate
the color scribbles to other frames by explicitly calculat-
ing the optical ﬂow [1, 2, 23, 24, 25]. However, scribbles
drawn from one speciﬁc image may not be suitable for other
frames. Another category of video colorization methods use
one colored frame as an example and colorize the follow-
ing frames in sequence. While conventional methods rely
on hand-crafted low-level features to ﬁnd the temporal cor-
respondence [39, 40, 41], a recent trend is to use a deep
neural network to learn the temporal propagation in a data-
driven manner [26, 27, 28, 29]. These approaches generally
achieve better quality. However, a common issue of these
video color propagation methods is that the color propaga-
tion will be problematic if it fails on a particular frame.
Moreover, these methods require a good colored frame to
bootstrap, which can be challenging in some scenes, par-
ticularly when it is dynamic and with signiﬁcant variations.
By contrast, our work refers to an example reference image
during the entire process, thus not relying solely on color
propagation from previous frames. It therefore yields more
robust results, particularly for longer video clips.

3. Method

3.1. Overall framework

We denote the grayscale video frame at time t as xl

t ∈
RH×W ×1, and the reference image as ylab ∈ RH×W ×3.
Here, l and ab represent the luminance and chrominance in
LAB color space, respectively. In order to generate tempo-
rally consistent videos, we let the network, denoted by GV ,
colorize video frames based on the history. Formally, we
formulate the colorization for the frame ˜xl
t to be conditional
t−1 and the reference ylab:
on both the colorized last frame ˜xlab

˜xab
t = GV (xl

t|˜xlab

t−1, ylab)

(1)

8053

t and yab. Formally, we compute a correla-
the features of xl
tion matrix M ∈ RHW ×HW whose elements characterize
the similarity of Fx at position i and Fy at j:

M(i, j) =

(Fx(i) − µFx ) · (Fy(j) − µFy )
kFx(i) − µFxk2 kFy(j) − µFy k2

(3)

where µFx and µFy represent mean feature vectors. We em-
pirically ﬁnd such normalization makes the learning more
stable. Then we can warp the reference color yab towards
xl
t according to the correlation matrix. We propose to cal-
culate the weighted sum of yab to approximate the color
sampling from yab:

W ab(i) =Xj

softmax

j

(M(i, j)/τ ) · yab(j)

(4)

We set τ = 0.01 so that the row vector M(i, ·) approaches
to one-hot vector and weighted color W ab approximates
selecting the pixel in the reference with largest similarity
score. The resulting vector W ab serves as an aligned color
reference to guide the colorization in the next step. Note
that Equation 4 has a close relationship with the non-local
operator proposed by Wang et al. [43]. The major difference
is that the non-local operator computes the pairwise similar-
ity within the same feature map so as to incorporate global
information, whereas we compute the pairwise similarity
between features of different images and use it to warp the
corresponding color from the reference.

Given that the color warping is not accurate everywhere,
we output the matching conﬁdence map S indicating the
reliability of sampling the reference color for each position
i of xl
t:

S(i) = max

j

M(i, j)

(5)

In summary, our correspondence network generates two

outputs: warped color W ab and conﬁdence map S:

(W ab, S) = N (xl

t, ylab; θN )

(6)

Colorization Subnet. The correspondence is not accu-
rate everywhere, so we employ the colorization network C
which is parameterized by θC, to select the well-matched
colors and propagate them properly. The network receives
four inputs: the grayscale input xl
t, the warped color map
W ab and the conﬁdence map S, and the colorized previous
frame ˜xlab
t−1. Given these, this network outputs the predicted
color map ˜xab
t

for the current frame at t:

˜xab
t = C(xl

t, W ab, S|˜xlab

t−1; θC)

(7)

Along with the luminance channel xl
orized image ˜xlab
, also denoted as ˜xt.

t

t, we obtain the col-

8054

Figure 1. The framework of our video colorization network. The
network consists of two subnets: correspondence subnet and col-
orization subnet. The colorization for the frame xl
t is conditional
on the previous colorized frame xl

t−1

.

The pipeline for video colorization is shown in Figure 1.
We propose a two-stage network which consists of two sub-
nets - correspondence network N and colorization network
C. At time t, ﬁrst N aligns the reference color yab to xl
t
based on their semantic correspondences, and yields two in-
termediate outputs: the warped color W ab and a conﬁdence
map S measuring the correspondence reliability. Then C
uses the warped intermediate results along with the col-
orized last frame ˜xlab
t. Thus, the network
colorizes the video frames in sequence and Eq. 1 can be
expressed as:

t−1 to colorize ˜xl

˜xab
t = C(xl

t, N (xl

t, ylab)|˜xlab

t−1)

(2)

3.2. Network architecture

Figure 2 illustrates the two-stage network architecture.

Next we describe these two sub networks.

Correspondence Subnet. We build the semantic cor-
resondence between xl
t and yab using the deep features ex-
tracted from the VGG19 [42] pretrained on image classiﬁ-
cation. In N , we extract the feature maps from layers of
relu2 2, relu3 2, relu4 2 and relu5 2 for both xl and yab.
The multi-layer feature maps are concatenated to form fea-
tures Φx, Φy ∈ RH×W ×C for xl
t, yab respectively. Features
Φx and Φy are fed into several residual blocks to better ex-
ploit the features from different layers, and the outputs are
reshaped into two feature vectors: Fx, Fy ∈ RHW ×C for
xl
t and yab respectively. The residual blocks, parameterized
by θN , share the same weights for xl

t and yab.

Given the feature representation, we can ﬁnd dense cor-
respondence by calculating the pairwise similarity between

                                                    Figure 2. The detailed diagram of the proposed network. The correspondence subnet ﬁnds the correspondence of source image xl
t and
reference image ylab in the deep feature domain, and aligns the reference color accordingly. Based on the intermediate result of the
correspondence map along with the last colorized frame, the colorization subnet predicts the color for the current frame.

3.3. Loss

Our network is supposed to produce realistic video col-
orization without temporal ﬂickering. Furthermore, the col-
orization style should resemble the reference in the corre-
sponding regions. To accomplish these objectives, we im-
pose the following losses.

Perceptual Loss. First, to encourage the output to be per-
ceptually plausible, we adopt the perceptual loss [44] which
measures the semantic difference between the output ˜x and
the ground truth image x:

Lperc = kΦL

˜x − ΦL

x k2
2

(8)

the feature maps extracted at

where ΦL represent
the
reluL 2 layer from the VGG19 network. Here we set
L = 5 since the top layer captures mostly semantic in-
formation. This loss encourages the network to select the
conﬁdent colors from W ab and propagate them properly.

Contextual Loss. We introduce a contextual loss, to en-
courage colors in the output to be close to those in the refer-
ence. The contextual loss is proposed in [45] to measure the
local feature similarity while considering the context of the
entire image, so it is suitable for transferring the color from
the semantically related regions. Our work is the ﬁrst to
apply the contextual loss into exemplar-based colorization.
The cosine distances dL(i, j) are ﬁrst computed between
each pair of feature points ΦL
y (j), and then nor-
malized as ˜dL(i, j) = dL(i, j)/(mink dL(i, k) + ǫ), ǫ =
1e − 5. The pairwise afﬁnities AL(i, j) between features
are deﬁned as:

˜x (i) and ΦL

AL(i, j) = softmax

j

(1 − ˜dL(i, j)/h)

(9)

where we set the bandwidth parameter h = 0.1 as a rec-
ommendation. The afﬁnities Al(i, j) range within [0, 1] and
measure the similarity of ˜xt(i) and y(j) with the Lth layer
features. Contrary to the backward matching in [45], we
use forward matching where for each feature Φl
˜x,i we ﬁnd
the closest feature Φl
y,j in y. This is because some objects
in xl
t may not exist in y. Consequently, the contextual loss
is deﬁned to maximize the afﬁnities between the result and
the reference:

Lcontext =Xl

wL"− log  1

NL Xi

max

j

AL(i, j)!# .

(10)
Here we use multiple feature maps: L = 2 to 5. NL denotes
the feature number of layer L. We set higher weights wL for
higher level features as the correspondence is proven more
reliable using the coarse-to-ﬁne searching strategy [31].

Smoothness Loss. We introduce a smoothness loss to en-
courage spatial smoothness. We assume that neighboring
pixels of ˜xt should be similar if they have similar chromi-
nance in the ground truth image xt. The smoothness loss is
deﬁned as the difference between the color of current pixel
and the weighted color of its 8-connected neighborhoods:

Lsmooth =

1

N Xc∈{a,b}Xi


t (i) − Xj∈N(i)
˜xc

wi,j ˜xc

t (j)
(11)

where wi,j is the WLS weight [46] which measures the
neighborhood correlations. This edge-aware weight helps
to produce edge-preserving colorization and alleviate color
bleeding artifacts.

8055

                                  Adversarial Loss. We also employ an adversarial loss to
constrain the colorization video frames to remain realistic.
Instead of using image discriminator, a video discrimina-
tor is used to evaluate consecutive video frames. We as-
sume that ﬂickering and defective videos can be easily dis-
tinguished from real ones, so the colorization network can
learn to generate coherent natural results during the adver-
sarial training.

It is difﬁcult to stabilize the adversarial training espe-
cially on a large-scale dataset like ImageNet. In this work
we adopt the relativistic discriminator [47] which estimates
the extent in which the real frames (denoted as zt−1 and zt)
look more realistic than the colorized ones ˜xt−1 and ˜xt. We
adopt the least squares GAN in its relativistic format and
the loss for the generator G is deﬁned as:

LG

adv = E(˜xt−1,˜xt)∼P ˜x [(D(˜xt−1, ˜xt)

− E(zt−1zt)∼Pz D(zt−1, zt) − 1)2]
+ E(zt−1zt)∼Pz [(D(zt−1, zt)
− E(˜xt−1,˜xt)∼P ˜x D(˜xt−1, ˜xt) + 1)2]

(12)

The relative discriminator loss can be deﬁned in a similar
way. From our experiments, this GAN is better to stabilize
training than a standard GAN.

Temporal Consistency Loss. To efﬁciently consider tem-
poral coherency, we also impose a temporal consistency
loss [48] which explicitly penalizes the color change along
the ﬂow trajectory:

Ltemporal = kmt−1 ⊙ Wt−1,t(˜xab

t−1) − mt−1 ⊙ ˜xab
t k

(13)

where Wt−1,t is the forward ﬂow from the last frame xt−1
to xt and mt−1 is the binary mask which excludes the oc-
clusion, and ⊙ represents the Hadamard product.

L1 Loss. With the above loss functions, the network can
already generate high quality plausible colorized results
given a customized reference. Still, we want the network
degenerate to the case where the reference comes from the
same scene as the video frames. This is a common case for
video colorization applications. In this case, we have the
ground truth of the predicted frame, so add one more L1
loss term to measure the color difference between output ˜xt
and the ground truth xt:

LL1 = k˜xab

t − xab

t k1

(14)

Objective Function. Combining all the above losses, and
the overall objective we aim to optimize is:

LI =λpercLperc + λcontextLcontext + λsmoothLsmooth

+ λadvLadv + λtemporalLtemporal + λL1LL1

(15)

Figure 3. Augmented training images from ImageNet dataset.

where λ controls the relative importance of terms. With the
guidance of these losses, we successfully unify the corre-
spondence and color propagation within a single network,
which learns to generate plausible results based on the ex-
emplar image.

4. Implementation

Network Structure. The correspondence network in-
volves 4 residual blocks each with 2 conv layers. The col-
orization subnet adopts an auto-encoder structure with skip-
connections to reuse the low-level features. There are 3 con-
volutional blocks in the contractive encoder and 3 convolu-
tional blocks in the decoder which recovers the resolution;
each convolutional block contains 2∼3 conv layers. The
tanh serves as the last layer to bound the chrominance out-
put within the color space. The video discriminator consists
of 7 conv layers where the ﬁrst six layers halve the input
resolution progressively. Also, we insert the self-attention
block [49] after the second conv layer to let the discrimi-
nator examine the global consistency. We use instance nor-
malization since colorization should not be affected by the
samples in the same batch. To further improve training sta-
bility we apply spectral normalization [50] on both genera-
tor and discriminator as suggested in [49].

Training.
In order to cover a wide range of scenes, we use
multiple datasets for training. First, we collect 1052 videos
from Videvo stock [51] which mainly contains animals and
landscapes. Furthermore, we include more portraits videos
using the Hollywood2 dataset [52]. We ﬁlter out the videos
that are either too dark or too faded in color, leaving 768
videos for training. For each video clip we provide refer-
ence candidates by inquiring the ﬁve most similar images
from the corresponding class in the ImageNet dataset. We
extract 25 frames from each video and use FlowNet2 [53] to
compute the optical ﬂow required for the temporal consis-
tency loss and use the method [54] for the occlusion mask.
To further expand the data category, we include images in
the ImageNet and apply random geometric distortion and
luminance noises to generate augmented video frames as
shown in Figure 3. Thus, we get 70k augmented videos in
diverse categories. To suit the standard aspect ratio 16:9, we
crop all the training images to 384 × 216. We occasionally
provide the reference which is the ground truth image itself
but insert Gaussian noise, or feature noise to the VGG19

8056

Input images Warped color image Colorized result

Figure 4. First row: nearest neighbor matching. Second row:
with learning parameters in the correspondence network. The ﬁrst
columns are the grayscale image and reference image respectively.

features before feeding them into the correspondence net-
work. We deliberately cripple the color matching during
training, so the colorization network better learns the color
propagation even when the correspondence is inaccurate.

We set λperc = 0.001, λcontext = 0.2, λsmooth = 5.0,
λadv = 0.2, λf low = 0.02 and λL1 = 2.0. We use a
learning rate of 2 × 10−4 for both generator and discrim-
inator without any decay schedule and train the network
using the AMSGrad solver with parameters β1 = 0.5 and
β2 = 0.999. We train the network for 10 epochs with a
batch size of 40 pairs of video frames.

5. Experiments

In this section, we ﬁrst study the effectiveness of indi-
vidual components in our method. Then, we compare our
method with state-of-the-art approaches.

5.1. Ablation Studies

Correspondence Learning. To demonstrate the impor-
tance of learning parameters in the correspondence subnet,
we compare our method with nearest neighbor (NN) match-
ing, in which each feature point of the input image will be
matched to the nearest neighbor of the reference feature.
Figure 4 shows that our learning-based method matches
mostly correct colors from the reference and eases color
propagation for the colorization subnet.

Analysis of Loss Functions. We ablate the loss functions
individually and evaluate their importance, as shown in Fig-
ure 5. When we remove Lperc, the colorization fully adopts
the color from the reference, but tends to produce more ar-
tifacts since there is no loss function to constrain the output
to be semantically similar to the input. When we remove
Lcontext, the output does not resemble the reference style.
When Lsmooth is ablated, colors may not be fully propa-
gated to the whole coherent region. Without Ladv, the color

Top-5
Acc(%)
90.27
85.03
84.76
83.88
85.08
85.82

Top-1
Acc(%)
71.19
62.94
62.53
60.34
64.05
64.64

FID

Colorful

Flicker

0.00
7.04
7.26
8.38
4.78
4.02

19.1
11.17
10.47
20.16
15.63
17.90

5.22

7.19/5.69+
6.76/5.42+
7.93/5.89+

NA
5.84

GT
[15]
[16]
[17]
[30]
Ours

Table 1. Comparison with image and per-frame video colorization
methods (image test dataset: ImageNet 10k and video test dataset:
Videvo.)

appears washed out and unrealistic. This is because color
warping is not accurate and the ﬁnal output becomes the lo-
cal color average of the warping colors. In comparison, our
full model produces vivid colorization with fewer artifacts.

5.2. Comparisons

Comparison with Image Colorization. We compare our
method against recent learning based image colorization
methods both quantitatively and qualitatively. The base-
line methods include three automatic colorization methods
(Iizuka et al. [15], Larsson et al. [16] and Zhang et al. [17])
and one exemplar based method (He and Chen et al. [30])
since these methods are regarded as state-of-the-art.

For the quantitative comparison, we test these methods
on 10k subset of the ImageNet dataset, as shown in Table 1.
For exemplar based methods, we take the Top-1 recommen-
dation from ImageNet as the reference. First, we measure
the classiﬁcation accuracy using the VGG19 pre-trained on
color images. Our method gives the best Top-5 and Top-1
class accuracy, indicating that our method produces seman-
tically meaningful results. Second, we employ the Fr´echet
Inception Distance (FID) [55] to measure the semantic dis-
tance between the colorized output and the realistic natural
images. Our method achieves the lowest FID, showing that
our method provides the most realistic results. In addition,
we measure the colorfulness using the psychophysics metric
from [56] due to the fact that the users usually prefer col-
orful images. Table 1 shows that Zhang et al.’s work [17]
produces the most vivid color since it encourages rare col-
ors in the loss function; however their method tends to pro-
duce visual artifacts, which are also reﬂected in FID score
and the user study. Overall, the results of our method,
though slightly less vibrant, exhibit similar colorfulness to
the ground truth. The qualitative comparison (in Figure 6)
also indicates that our method produces the most realistic,
vibrant colorization results.

Comparison with Automatic Video Colorization.
In
this experiment, we test video colorization on 116 video
clips collected from Videvo. We apply the learning based
methods for video colorization. It is too costly to use the
method in [30] (90s/frame compared to 0.61s/frame in our

8057

Input image

Reference

w/o Lperc

w/o Lcontext

w/o Lsmooth

w/o Ladv

Full

Figure 5. Ablation study for different loss functions. Please refer to the supplementary material for the quantitative comparisons.

Input

Reference

Ours

[30]

[15]

[16]

[17]

Figure 6. Comparison with image colorization with state-of-the-art methods.

Figure 7. Quantitative comparison with video color propagation.

Video Colorization  (%)

Video Propagation (%)

50.66

19.16

11.81

18.37

Ours

79.67

16.67

3.66

14.25

17.94

26.12

41.69

VPN

7

17.33

75.67

Ours

[17]

[15]

13.09

28.53

35.86

22.51

[16]

21.96

34.39

26.19

17.46

STN

13.33

66

20.67

Top 1

Top 2

Top 3

Top 4

Top 1

Top 2

Top 3

Figure 8. User study results.

method), so we exclude it in this comparison. The quan-
titative comparison is included in Table 1. We also ap-
ply the method proposed in [22] which post-processes per-
frame colorized videos and generates temporally consistent
results. We denote these post-processed outputs with ‘+’ in
Table 1. We measure the temporal stability using Eq. 13
averaged over all adjacent frame pairs in the results. A
smaller temporal error represents less ﬂickering. The post-
processing method [22] signiﬁcantly reduces the temporal
ﬂickering while our method produces a comparably stable
result. However, their method [22] degrades the visual qual-
ity since the temporal ﬁltering introduces blurriness. As
shown in the example in Figure 10, our method exhibits vi-
brant colors in each frame with signiﬁcantly fewer artifacts
compared to other methods. Meanwhile, the successively
colorized frames demonstrate good temporal consistency.

Comparison with Color Propagation Methods.
In or-
der to show that our method can degenerate to the case
where the reference is a colored frame for the video it-
self, we compare it with two recent color propagation meth-
ods: VPN [26] and STN [28]. We also include optical ﬂow
based color propagation as a baseline. Figure 7 shows the
PSNR curve with frame propagation tested on the DAVIS

8058

0510152025Frame number2226303438PSNROurs w/ L1Ours w/o L1Optical flowSTNVPNT = 0

T = 15

T = 30

T = 45

h
t
u
r
t

d
n
u
o
r
G

N
P
V

N
T
S

s
r
u
O

Figure 9. Comparison with video color propagation. With a given color frame as start, colors are propagated to the succeeding video
frames. While other methods purely rely on color propagation, our method takes the initial color frame as a reference and is able to
propagate colors for longer interval.

]
6
1
[

]
5
1
[

]
7
1
[

s
r
u
O

tion: Larsson et al. [16], Zhang et al. [17] and Iizuka et
al. [15]. We used 19 videos randomly selected from the
Videvo test dataset. For each video, we ask the user to rank
the results generated by the four methods in terms of tem-
poral consistency and visual photorealism. Figure 8 (left)
shows the results based on the feedback from 20 users. Our
approach is 50.66% more likely to be chosen as the 1st-
rank result. We also compare against two video propagation
methods: VPN [26] and STN [28] on 15 randomly selected
videos from the DAVIS test dataset. For a fair compari-
son, we initialize all three methods with the same coloriza-
tion result of the ﬁrst frame (using the ground truth). Fig-
ure 8 (right) shows the survey results. Again, our method
achieves the highest 1st-rank percentage at 79.67%.

Figure 10. Comparison with automatic video colorization.

6. Conclusion

dataset [57]. Optical ﬂow based methods provides the high-
est PSNR in the initial frames but deteriorates signiﬁcantly
thereafter. The methods STN and VPN also suffer from
PNSR degradation. Our method with L1 loss attains a most
stable curve, showing the capability for propagating to more
frames.

In this work, we propose the ﬁrst exemplar-based video
colorization algorithm. We unify the semantic correspon-
dence and colorization into a single network, training it end-
to-end. Our method produces temporal consistent video
colorization with realistic effects. Readers could refer to
our supplementary material for more quantitative results.

User Studies. We ﬁrst compare our video colorization
with three methods of per-frame automatic video coloriza-

Acknowledgements: This work was partly supported by
Hong Kong GRF Grant No. 16208814 and CityU of Hong
Kong Startup Grant No. 7200607/CS.

8059

References

[1] A. Levin, D. Lischinski, and Y. Weiss, “Colorization us-
ing optimization,” in ACM transactions on graphics (TOG),
vol. 23, pp. 689–694, ACM, 2004. 1, 2

[2] L. Yatziv and G. Sapiro, “Fast image and video colorization

using chrominance blending,” 2004. 1, 2

[3] Y.-C. Huang, Y.-S. Tung, J.-C. Chen, S.-W. Wang, and J.-
L. Wu, “An adaptive edge detection based colorization algo-
rithm and its applications,” in Proceedings of the 13th annual
ACM international conference on Multimedia, pp. 351–354,
ACM, 2005. 1, 2

[4] Y. Qu, T.-T. Wong, and P.-A. Heng, “Manga colorization,” in
ACM Transactions on Graphics (TOG), vol. 25, pp. 1214–
1220, ACM, 2006. 1, 2

[5] Q. Luan, F. Wen, D. Cohen-Or, L. Liang, Y.-Q. Xu, and H.-
Y. Shum, “Natural image colorization,” in Proceedings of
the 18th Eurographics conference on Rendering Techniques,
pp. 309–320, Eurographics Association, 2007. 1, 2

[6] T. Welsh, M. Ashikhmin, and K. Mueller, “Transferring
color to greyscale images,” in ACM Transactions on Graph-
ics (TOG), vol. 21, pp. 277–280, ACM, 2002. 1, 2

[7] A. Bugeau, V.-T. Ta, and N. Papadakis, “Variational
exemplar-based image colorization,” IEEE Transactions on
Image Processing, vol. 23, no. 1, pp. 298–307, 2014. 1, 2

[8] X. Liu, L. Wan, Y. Qu, T.-T. Wong, S. Lin, C.-S. Leung, and
P.-A. Heng, “Intrinsic colorization,” in ACM Transactions on
Graphics (TOG), vol. 27, p. 152, ACM, 2008. 1, 2

[9] A. Y.-S. Chia, S. Zhuo, R. K. Gupta, Y.-W. Tai, S.-Y. Cho,
P. Tan, and S. Lin, “Semantic colorization with internet im-
ages,” in ACM Transactions on Graphics (TOG), vol. 30,
p. 156, ACM, 2011. 1, 2

[10] R. K. Gupta, A. Y.-S. Chia, D. Rajan, E. S. Ng, and H. Zhiy-
ong, “Image colorization using similar images,” in Proceed-
ings of the 20th ACM international conference on Multime-
dia, pp. 369–378, ACM, 2012. 1, 2

[11] G. Charpiat, M. Hofmann, and B. Sch¨olkopf, “Automatic im-
age colorization via multimodal predictions,” in European
conference on computer vision, pp. 126–139, Springer, 2008.
1, 2

[12] R. Ironi, D. Cohen-Or, and D. Lischinski, “Colorization by
example.,” in Rendering Techniques, pp. 201–210, Citeseer,
2005. 1, 2

[13] Y.-W. Tai, J.-Y. Jia, and C.-K. Tang, “Local color transfer via
probabilistic segmentation by expectation-maximization,” in
IEEE Conference on Computer Vision & Pattern Recognition
(CVPR), 2005. 1, 2

[14] Z. Cheng, Q. Yang, and B. Sheng, “Deep colorization,” in
Proceedings of the IEEE International Conference on Com-
puter Vision, pp. 415–423, 2015. 1, 2

[15] S. Iizuka, E. Simo-Serra, and H. Ishikawa, “Let there be
color!:
joint end-to-end learning of global and local im-
age priors for automatic image colorization with simultane-
ous classiﬁcation,” ACM Transactions on Graphics (TOG),
vol. 35, no. 4, p. 110, 2016. 1, 2, 6, 7, 8

[16] G. Larsson, M. Maire, and G. Shakhnarovich, “Learning rep-
resentations for automatic colorization,” in European Con-
ference on Computer Vision, pp. 577–593, Springer, 2016.
1, 2, 6, 7, 8

[17] R. Zhang, P. Isola, and A. A. Efros, “Colorful image col-
orization,” in European Conference on Computer Vision,
pp. 649–666, Springer, 2016. 1, 2, 6, 7, 8

[18] A. Deshpande, J. Rock, and D. Forsyth, “Learning large-
scale automatic image colorization,” in Proceedings of
the IEEE International Conference on Computer Vision,
pp. 567–575, 2015. 1, 2

[19] J. Zhao, L. Liu, C. G. Snoek, J. Han, and L. Shao, “Pixel-
level semantics guided image colorization,” arXiv preprint
arXiv:1808.01597, 2018. 1, 2

[20] F. Baldassarre, D. G. Mor´ın, and L. Rod´es-Guirao, “Deep
koalarization: Image colorization using cnns and inception-
resnet-v2,” arXiv preprint arXiv:1712.03400, 2017. 1, 2

[21] N. Bonneel, J. Tompkin, K. Sunkavalli, D. Sun, S. Paris, and
H. Pﬁster, “Blind video temporal consistency,” ACM Trans-
actions on Graphics (TOG), vol. 34, no. 6, p. 196, 2015. 1,
2

[22] W.-S. Lai, J.-B. Huang, O. Wang, E. Shechtman, E. Yumer,
and M.-H. Yang, “Learning blind video temporal consis-
tency,” arXiv preprint arXiv:1808.00449, 2018. 1, 2, 7

[23] B. Sheng, H. Sun, M. Magnor, and P. Li, “Video colorization
using parallel optimization in feature space,” IEEE Transac-
tions on Circuits and Systems for Video Technology, vol. 24,
no. 3, pp. 407–417, 2014. 1, 2

[24] P. Do˘gan, T. O. Aydın, N. Stefanoski, and A. Smolic, “Key-
frame based spatiotemporal scribble propagation,” in Pro-
ceedings of the Eurographics Workshop on Intelligent Cin-
ematography and Editing, pp. 13–20, Eurographics Associ-
ation, 2015. 1, 2

[25] S. Paul, S. Bhattacharya, and S. Gupta, “Spatiotemporal
colorization of video using 3d steerable pyramids,” IEEE
Transactions on Circuits and Systems for Video Technology,
vol. 27, no. 8, pp. 1605–1619, 2017. 1, 2

[26] V. Jampani, R. Gadde, and P. V. Gehler, “Video propagation

networks,” in Proc. CVPR, vol. 6, p. 7, 2017. 1, 2, 7, 8

[27] C. Vondrick, A. Shrivastava, A. Fathi, S. Guadarrama, and
K. Murphy, “Tracking emerges by colorizing videos,” in
Proc. ECCV, 2018. 1, 2

[28] S. Liu, G. Zhong, S. De Mello, J. Gu, V. Jampani, M.-H.
Yang, and J. Kautz, “Switchable temporal propagation net-
work,” arXiv preprint arXiv:1804.08758, 2018. 1, 2, 7, 8

[29] S. Meyer, V. Cornill`ere, A. Djelouah, C. Schroers, and
M. Gross, “Deep video color propagation,” arXiv preprint
arXiv:1808.03232, 2018. 1, 2

[30] M. He, D. Chen, J. Liao, P. V. Sander, and L. Yuan, “Deep
exemplar-based colorization,” ACM Transactions on Graph-
ics (TOG), vol. 37, no. 4, p. 47, 2018. 1, 2, 6, 7

[31] J. Liao, Y. Yao, L. Yuan, G. Hua, and S. B. Kang, “Visual at-
tribute transfer through deep image analogy,” arXiv preprint
arXiv:1705.01088, 2017. 1, 2, 4

8060

[32] R. Zhang, J.-Y. Zhu, P. Isola, X. Geng, A. S. Lin, T. Yu,
and A. A. Efros, “Real-time user-guided image colorization
with learned deep priors,” arXiv preprint arXiv:1705.02999,
2017. 2

[48] D. Chen, J. Liao, L. Yuan, N. Yu, and G. Hua, “Coherent
online video style transfer,” in Proceedings of the IEEE In-
ternational Conference on Computer Vision, pp. 1105–1114,
2017. 5

[33] M. He, J. Liao, L. Yuan, and P. V. Sander, “Neural color
transfer between images,” arXiv preprint arXiv:1710.00756,
2017. 2

[49] H. Zhang, I. Goodfellow, D. Metaxas, and A. Odena, “Self-
attention generative adversarial networks,” arXiv preprint
arXiv:1805.08318, 2018. 5

[50] T. Miyato, T. Kataoka, M. Koyama, and Y. Yoshida, “Spec-
tral normalization for generative adversarial networks,”
arXiv preprint arXiv:1802.05957, 2018. 5

[51] “Videvo.” https://www.videvo.net/. 5

[52] M. Marszałek, I. Laptev, and C. Schmid, “Actions in con-
text,” in IEEE Conference on Computer Vision & Pattern
Recognition, 2009. 5

[53] E. Ilg, N. Mayer, T. Saikia, M. Keuper, A. Dosovitskiy, and
T. Brox, “Flownet 2.0: Evolution of optical ﬂow estimation
with deep networks,” in IEEE conference on computer vision
and pattern recognition (CVPR), vol. 2, p. 6, 2017. 5

[54] M. Ruder, A. Dosovitskiy, and T. Brox, “Artistic style trans-
fer for videos,” in German Conference on Pattern Recogni-
tion, pp. 26–36, Springer, 2016. 5

[55] M. Heusel, H. Ramsauer, T. Unterthiner, B. Nessler, and
S. Hochreiter, “Gans trained by a two time-scale update rule
converge to a local nash equilibrium,” in Advances in Neural
Information Processing Systems, pp. 6626–6637, 2017. 6

[56] D. Hasler and S. E. Suesstrunk, “Measuring colorfulness in
natural images,” in Human vision and electronic imaging
VIII, vol. 5007, pp. 87–96, International Society for Optics
and Photonics, 2003. 6

[57] F. Perazzi, J. Pont-Tuset, B. McWilliams, L. Van Gool,
M. Gross, and A. Sorkine-Hornung, “A benchmark dataset
and evaluation methodology for video object segmentation,”
in Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, pp. 724–732, 2016. 8

[34] P. Isola, J.-Y. Zhu, T. Zhou, and A. A. Efros, “Image-
to-image translation with conditional adversarial networks,”
arXiv preprint, 2017. 2

[35] A. Deshpande, J. Lu, M.-C. Yeh, M. J. Chong, and D. A.
Forsyth, “Learning diverse image colorization.,” in CVPR,
pp. 2877–2885, 2017. 2

[36] S. Messaoud, D. Forsyth, and A. G. Schwing, “Struc-
tural consistency and controllability for diverse coloriza-
tion,” arXiv preprint arXiv:1809.02129, 2018. 2

[37] S. Guadarrama, R. Dahl, D. Bieber, M. Norouzi, J. Shlens,
and K. Murphy, “Pixcolor: Pixel recursive colorization,”
arXiv preprint arXiv:1705.07208, 2017. 2

[38] A. Royer, A. Kolesnikov, and C. H. Lampert, “Probabilistic
image colorization,” arXiv preprint arXiv:1705.04258, 2017.
2

[39] V. G. Jacob and S. Gupta, “Colorization of grayscale images
and videos using a semiautomatic approach,” in Image Pro-
cessing (ICIP), 2009 16th IEEE International Conference
on, pp. 1653–1656, IEEE, 2009. 2

[40] N. Ben-Zrihem and L. Zelnik-Manor, “Approximate nearest
neighbor ﬁelds in video,” in Proceedings of the IEEE Confer-
ence on Computer Vision and Pattern Recognition, pp. 5233–
5242, 2015. 2

[41] S. Xia, J. Liu, Y. Fang, W. Yang, and Z. Guo, “Robust and au-
tomatic video colorization via multiframe reordering reﬁne-
ment,” in Image Processing (ICIP), 2016 IEEE International
Conference on, pp. 4017–4021, IEEE, 2016. 2

[42] K. Simonyan and A. Zisserman, “Very deep convolutional
networks for large-scale image recognition,” arXiv preprint
arXiv:1409.1556, 2014. 3

[43] X. Wang, R. Girshick, A. Gupta, and K. He, “Non-local
neural networks,” arXiv preprint arXiv:1711.07971, vol. 10,
2017. 3

[44] J. Johnson, A. Alahi, and L. Fei-Fei, “Perceptual losses for
real-time style transfer and super-resolution,” in European
Conference on Computer Vision, pp. 694–711, Springer,
2016. 4

[45] R. Mechrez, I. Talmi, and L. Zelnik-Manor, “The contextual
loss for image transformation with non-aligned data,” arXiv
preprint arXiv:1803.02077, 2018. 4

[46] Z. Farbman, R. Fattal, D. Lischinski, and R. Szeliski, “Edge-
preserving decompositions for multi-scale tone and detail
manipulation,” in ACM Transactions on Graphics (TOG),
vol. 27, p. 67, ACM, 2008. 4

[47] A. Jolicoeur-Martineau, “The relativistic discriminator: a
key element missing from standard gan,” arXiv preprint
arXiv:1807.00734, 2018. 5

8061

