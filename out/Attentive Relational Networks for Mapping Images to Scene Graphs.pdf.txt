Attentive Relational Networks for Mapping Images to Scene Graphs

Mengshi Qi∗1,2, Weijian Li∗3, Zhengyuan Yang3, Yunhong Wang†1,2, and Jiebo Luo†3

1State Key Laboratory of Virtual Reality Technology and Systems

School of Computer Science and Engineering, Beihang University, China
2Beijing Advanced Innovation Center for Big Data and Brain Computing

3Department of Computer Science, University of Rochester, USA

{qi mengshi, yhwang}@buaa.edu.cn, {wli69,zyang39,jluo}@cs.rochester.edu

Abstract

Scene graph generation refers to the task of automati-
cally mapping an image into a semantic structural graph,
which requires correctly labeling each extracted object and
their interaction relationships. Despite the recent success in
object detection using deep learning techniques, inferring
complex contextual relationships and structured graph rep-
resentations from visual data remains a challenging topic.
In this study, we propose a novel Attentive Relational Net-
work that consists of two key modules with an object de-
tection backbone to approach this problem. The ﬁrst mod-
ule is a semantic transformation module utilized to cap-
ture semantic embedded relation features, by translating
visual features and linguistic features into a common se-
mantic space. The other module is a graph self-attention
module introduced to embed a joint graph representation
through assigning various importance weights to neighbor-
ing nodes. Finally, accurate scene graphs are produced
by the relation inference module to recognize all entities
and the corresponding relations. We evaluate our proposed
method on the widely-adopted Visual Genome Dataset, and
the results demonstrate the effectiveness and superiority of
our model.

1. Introduction

Visual scene understanding [11, 15, 49] is a fundamen-
tal problem in computer vision.
It aims at capturing the
structural information in an image including the object en-
tities and pair-wise relationships. As is shown in Figure 1,
each entity and relation should be processed with a broader
context to correctly understand the image at the semantic

∗Equal contribution.
†Corresponding author.

Figure 1. Illustration of the task of scene graph generation. Us-
ing our proposed Attentive Relational Network, an image can be
mapped to a scene graph, which captures individual entities (e.g.
boy, tree and grass) and their relationships (e.g. <boy-riding-
skateboard> and <weeds-behind-boy>).

level. During recent years, deep neural network based ob-
ject detection models such as Faster R-CNN [8, 31] and
YOLO [30] have achieved great improvements. However,
such conventional object detection approaches cannot cap-
ture and infer the relationships within an image.

Because of its ability to enrich semantic analysis and
clearly describe how objects interact with each other (e.g.
“a boy is riding a skateboard” in Figure 1), generating scene
graphs from images plays a signiﬁcant role in multiple com-
puter vision applications, such as image retrieval [11, 28],
image captioning [16, 19, 40], visual question answer-
ing [17, 33] and video analysis [27, 43]. The highly diverse
visual appearances and the large numbers of distinct visual
relations make scene graph generation a challenging task.

Previous scene graph generation methods [9, 18, 19, 22,
37, 38, 44] locate and infer the visual relationship as a triplet
in the form <subject-predicate-object>, and the predicate
is a word used to link a pair of objects, e.g. <boy-wearing-
hat> in Figure 1. There exist various kinds of relationships
between two objects, including spatial positions (e.g. un-

3957

der, above), attributes/ prepositions (e.g. with, of), compar-
atives (e.g. taller, shorter) and actions/ verb (e.g. play, ride).
Most of the existing works neglect the semantic relation-
ship between the visual features and linguistic knowledge,
and the intra-triplet connections.

Moreover, previous works invariably utilize conven-
tional deep learning models such as Convolutional Neural
Networks (CNN) [18, 19, 22, 38] or Recurrent Neural Net-
works (RNN) [9, 37, 44] for scene graph generation. These
methods require to know the graph structure beforehand and
contain computationally intensive matrix operations during
approximation.
In addition, most of them follow a step-
by-step manner to capture the representation of nodes and
edges, leading to neglect the global structure and informa-
tion in whole image. Effectively extracting a whole joint
graph representation to model the entire scene graph for rea-
soning is promising but remains an arduous problem.

To address the aforementioned issues, we propose a
novel Attentive Relational Network that maps images to
scene graphs. To be speciﬁc, the proposed method ﬁrst
adopts an object detection module to extract the location
and category probability of each entity and relation. Then
a semantic transformation module is introduced to trans-
late entities and relation features as well as their linguis-
tic representation into a common semantic space.
In ad-
dition, we present a graph self-attention module to jointly
embed an adaptive graph representation through measur-
ing the importance of the relationship between neighboring
nodes. Finally, a relation inference module is leveraged to
classify each entity and relation by a Multi-Layer Percep-
tron (MLP), and to generate an accurate scene graph. Our
main contributions are summarized as follows:

• A novel Attentive Relational Network is proposed for
scene graph generation, which translates visual infor-
mation to a graph-structured representation.

• A semantic transformation module is designed to in-
corporate relation features with entity features and lin-
guistic knowledge, by simultaneously mapping word
embeddings and visual features into a common space.

• A graph self-attention module is introduced to embed
the joint graph representation by implicitly specifying
different weights to different neighboring nodes.

• Extensive experiments on the Visual Genome Dataset
the proposed

verify the superior performance of
method compared to the state-of-the-art methods.

2. Related Work

Scene Graph Generation. Signiﬁcant efforts have been
devoted to this task during recent years, which can
be divided into two categories: Recurrent Neural Net-
works (RNN)-based methods [9, 37, 44] and Convolutional

Neural Networks (CNN)-based approaches [18, 19, 22, 38].
Xu et al. [37] employ RNNs to infer scene graphs by mes-
sage passing. Zellers et al. [44] introduce motifs to capture
the common substructures in scene graphs. To minimize
the effect of different input factors’ order, Herzig et al. [9]
propose a permutation invariant structure prediction model.
Li et al. [19] construct a dynamic graph to address multi
tasks jointly. While Newell et al. [22] present an associa-
tive embedding technique [23] for predicting graphs from
pixels. Yang et al. [38] propose a Graph R-CNN by utiliz-
ing graph convolutional network [12] for structure embed-
ding. Li et al. [18] present a Factorizable Net to capture
subgraph-based representations. Unlike previous work, our
proposed model focuses on discovering semantic relations
through jointly embedding linguistic knowledge and visual
representations simultaneously.

Visual Relationship Detection. Early efforts in visual
relationship detection [2, 5, 29, 32] tend to adopt a joint
model regarding the relation triplet as a unique class. The
visual embedding-based approaches [21, 36, 42, 45, 50]
place objects in a low-dimensional relation space and in-
tegrates extra knowledge. However, these works can not
learn graph structural representation, which denotes the po-
sitional and logical relationships between objects in the im-
age. Plummer et al. [26] combine different cues with learn-
ing weights for grounded phrase. Liang et al. [20] adopt
variation-structured reinforcement learning to sequentially
discover object relationships. Dai et al.. [4] exploit the
statistical dependencies between objects and their relation-
ships. Recently, various studies [10, 13, 17, 25, 39, 41, 46,
47, 48] propose relationship proposal networks by employ-
ing pair-wise regions for fully or weakly supervised visual
relation detection. However, most of them are designed for
detecting relationship one-by-one, which is inappropriate
for describing the structure of the whole scene. Our pro-
posed graph self-attention based model aims at embedding
a joint graph representation to describe all relationships, and
applying it for scene graph generation.

3. Proposed Approach

3.1. Overview

Problem Deﬁnition: We deﬁne the scene graph of an
image I as G, which describes the category of each en-
tity and semantic inter-object relationships. A set of entity
bounding boxes as B = {b1, ..., bn}, bi ∈ R4 and their cor-
responding class label set O = {o1, ..., on}, oi ∈ C, where
C is object categories set. The set of binary relationships
between objects are referred to as R = {r1, ..., rm}. Each
relationship rk ∈ R is a triplet in a <subject-predictive-
object> format, where a subject node (bi, oi) ∈ B × O,
a relationship label lij ∈ R and an object node (bj, oj) ∈

3958

Figure 2. Overview of the proposed Attentive Relational Network. Our model mainly consists of four parts: (1) Object Detection Mod-
ule: capturing the visual feature and the location of each entity bounding box with their pair-wise relation bounding boxes. Then a softmax
function is employed to obtain initial classiﬁcation scores for each entity and relation; (2) Semantic Transformation Module: producing the
semantic embedded representations by transforming label word embeddings and visual features into a common semantic space; (3) Graph
Self-Attention Module: leveraging a self-attention mechanism to embed entities via constructing an adjacency matrix based on the space
position of nodes; (4) Relation Inference Module: creating the joint global graph representation and predicting entity and relationship labels
as ﬁnal scene graph result.

B × O. R is the set of all predicates1.

3.2. Object Detection Module

Graph Inference: Each Scene graph comprises of a col-
lection of bounding boxes B, entity labels O and relation
labels R. The possibility of inferring a scene graph from an
image can be formulated as the following:

P r(G|I) = P r(B|I)P r(O|B, I)P r(R|B, O, I).

(1)

The formulation can be regarded as the factorization with-
out independence assumptions. P r(B|I) can be inferred by
the object detection module in our model described in 3.2,
while P r(O|B, I) and P r(R|B, O, I) can be inferred by
the rest of modules proposed in our model.

Figure 2 presents the overview of our proposed Attentive
Relational Network, which contains four modules, namely
object detection module, semantic transformation module,
graph self-attention module and relation inference module.
Our model aims at producing a joint global graph represen-
tation for the image, which contains the semantic relation
translated representation learned in semantic transforma-
tion module, and the whole entity embedded representation
captured in graph self-attention module. Finally, we com-
bine the learned global graph representation and each en-
tity/relation feature for reasoning in relation inference mod-
ule. Next we will respectively introduce the four proposed
modules in detail.

1We also adding extra ‘bg’ referred to ‘background’, denoting there is

no relationship or edge between objects.

We employ Faster R-CNN [31] as our object detector.
Then a set of predictable entity proposals B = {b1, ..., bn}
from each input image I, including their locations and ap-
pearance features, are obtained. In order to represent the
contextual information for visual relation, we generate an
union bounding box to cover object pairs with a small mar-
gin. Two types of features can be adopted for describing en-
tities and relations, i.e. the appearance feature and the spa-
tial feature (the coordinates of the bounding box). Finally,
we utilize the softmax function to recognize the category
of each entity and relation, and achieve their corresponding
classiﬁcation conﬁdence scores as the initial input to the fol-
lowing modules.

3.3. Semantic Transformation Module

Inspired by Translation Embedding (TransE) [3, 45] and
visual-semantic embedding [6], we introduce a semantic
transformation module to effectively represent <subject-
predicate-object> in the semantic domain. As depicted in
Figure 3, the proposed module leverages both visual fea-
tures and textual word features to learn the semantic rela-
tionship between pair-wise entities. It then explicitly maps
them into a common relation space. For any relation, we
deﬁne vs, vp and vo to represent the word embedding vec-
tors of category labels for subject, predicate and object. To
generate speciﬁc word embedding vectors for subject, pred-
icate and object, label scores obtained from Object Detec-

3959

Figure 3.
Illustration of Semantic Transformation Mod-
ule. (Top): Mapping visual feature and word embedding to a
common semantic space, and inferring their relationship in the
relation space. (Bottom): An example of relation translation.
Concatenating the visual features of entities and relation (i.e. fi,
fj and fij ) and their corresponding label embedding features (i.e.
‘boy’, ‘riding’ and ‘skateboard’: vs, vp and vo), and translating
them based on <subject-predicate-object> template via learned
weight matrices (i.e. W1, W2 and W3).

tion Module and word embedding of all labels are com-
bined with element-wise multiplication. In computational
linguistics, it is known that a valid semantic relation can be
expressed as the following [24]:

vs + vp ≈ vo,

(2)

Similarly, we assume such a semantic relation exists among
the corresponding visual features:

fi + fij ≈ fj,

(3)

where fi, fj and fij are deﬁned as the visual representations
of entity bi, bj and their relation rij , respectively.

It is worth noting that the visual feature and word embed-
ding should be projected into a common space. Hence, we
adopt a linear model with three learnable weights to jointly
approximate Eq. (2) and Eq. (3). L2 loss is used to guide
the learning process:

Lsemantic = kW3 ·[fj, vo]−(W1 ·[fi, vs]+W2 ·[fij, vp])k2
2,
(4)
where W1, W2 and W3 refer to the weights respectively,
and [·] denotes the concatenation operation. These learned
weight matrices can be regarded as the semantic knowledge
in relation space.

Then we need to map the visual features of detected enti-
ties (i.e. nodes) and relations (i.e. edges) with such linguistic
knowledge into a common semantic domain. The semantic
transformed representation of relation fij in the scene graph

Figure 4. Illustration of Graph Self-Attention Module for each sin-
gle node. The output feature of the i-th node can be calculated
based on its neighboring nodes’ features fj , fk, fm and fn with
their corresponding pair-wise attention weight α. Different color
arrows refer to independent attention computations as multi-head
attention (e.g. k=3 in this ﬁgure). The aggregated attentive feature
of node i is denoted as f

i via concatenation operation.

′

can be denoted as Θ(fij):

Θ(fij) = [(W1 · [fi, vs]), (W2 · [fij, vp]), (W3 · [fj, vo])],
(5)
where [·] denotes concatenation operation. Then we obtain
the embedded representation of each relation in an image.

3.4. Graph Self Attention Module

The attention mechanism maps the input to a weighted
representation over the values. Especially, self-attention has
been demonstrated to be effective in computing representa-
tions of a single sequence [12, 34, 35]. To compute a rela-
tional representation of a singe node sequence, we introduce
a graph self-attention module that takes both node represen-
tations and their neighborhood features into consideration.
By adopting the self-attention mechanism, each node’s hid-
den state can be extracted by attending over its neighbors
and simultaneously preserve the structural relationship.

1, f ′

2, ..., f ′

As shown in Figure 4, we deﬁne a collection of in-
put node (entity) features Fnode = {f1, f2, ..., fN }, fi ∈
RM , and their corresponding output features F ′
node =
{f ′
, where N , M and M ′ are the
number of nodes, input feature dimension and output fea-
ture dimension respectively. The attention coefﬁcients eij
can be learned to denote the importance of node j to node
i:

i ∈ RM ′

N }, f ′

eij = Λ(U · fi, U · fj),

(6)

where Λ denotes attention weight vector implemented with
a single feed-forward layer. U ∈ RM ′×M refers to learn-
able parameter weight.

We compute the eij for each neighboring node j ∈ Ni,
where Ni denotes the neighboring set of node i. Then we

3960

normalize the coefﬁcients across all neighboring nodes by
the softmax function, for effective comparison with differ-
ent nodes:

αij = softmaxj(eij) =

exp(eij)

Pk∈Ni exp(eik)

.

(7)

Therefore the coefﬁcients computed can be formulated as:

αij =

exp(φ(ΛT [U · fi, U · fj]))

Pk∈Ni exp(φ(ΛT [U · fi, U · fk]))

,

(8)

where φ and [·] represent Leaky ReLU nonlinear activa-
tion and concatenation operation. Final node representa-
tion is then obtained by applying the attention weights on
all the neighboring node features. Inspired by [34], we em-
ploy multi-head attention to capture different aspect rela-
tionships from neighboring nodes. The overall output of the
i-th node is a concatenated feature through K independent
attention heads, denoted as Φ(fi):

Φ(fi) = ConcatK

k=1σ( X

αk
ijU kfj),

(9)

j∈Ni

where αk
ij are normalized attention coefﬁcients by the k-th
attention mechanism, σ refers to nonlinear function, and U k
is the input linear transformation’s weight matrix2.

Setting of Adjacent Matrix: In order to compute adja-
cent matrices, we design four strategies to determine node
neighbors based on spacial clues. Concretely, given two
bounding boxes bi and bj as two nodes,
their normal-
ized coordinates of locations can be denoted as (xi, yi)
and (xj, yj), and their distance can be denoted as dij =
p(xj − xi)2 + (yj − yi)2. Then four neighbor classiﬁca-
tion settings are: (1) Inside Neighbor: if bi completely in-
cludes bj ; (2) Cover Neighbor: if bi is fully covered by bj ;
(3) Overlap Neighbor: if the IoU between bi and bj is larger
than 0.5; (4) Relative Neighbor: if the ratio between the rel-
ative distance dij and the diagonal length of the whole im-
ages is less than 0.5.

3.5. Relation Inference Module

After obtaining the whole relation embedded represen-
tation and entity embedded representation based on Eq. (5)
and Eq. (9) respectively, we can construct a global scene
graph representation denoted as Ω(G):

Ω(G) =

n

X

i=1

Φ(f ′

i ),

where

i = [fi, X
f ′

Θ(fij)],

j6=i

(10)

2In our experiments, we set k=8 following [34].

where n refers to the number of entities in the image, and
P and [·] denote element-wise sum and concatenation op-
eration. Then we perform recognition of entity and relation
with three layers MLP as the following:

o′
i = MLP([fi, Ω(G)]),
l′
ij = MLP([fij, Ω(G)]),

(11)

where o′ and l′ refer to the predicted label of entity and re-
lation, respectively. We adopt two cross-entropy loss func-
tions in this module, and deﬁne o and l as the ground truth
label for entity and relation, respectively:

Lentity = − X

o′
i log(oi),

i

Lrelation = − X

X

l′
ij log(lij).

i

j6=i

(12)

In summary, the joint objective loss function in our Atten-
tive Relational Network can be formulated as follows:

L = λ1Lentity +λ2Lrelation+λ3Lsemantic+kWk2

2, (13)

where λ1, λ2 and λ3 denote hyper-parameters to tune the
function, and W refers to all learned weights in our model.

4. Experimental Results

To validate our proposed model, extensive experiments

are conducted on the public Visual Genome Dataset [14].

4.1. Experimental Settings

Visual Genome (VG) [14] includes 108,077 images an-
notated with bounding boxes, entities and relationships.
There are 75,729 unique object categories, and 40,480
unique relationship predicates in total. Considering the
effect of long-tail distribution, we choose the most fre-
quent 150 object categories and 50 predicates for evalu-
ation [22, 37, 44]. For a fair comparison with previous
works, we follow the experimental setting in [37], and split
the dataset into 70K/5K/32K as train/validation/test sets.

Metrics: Following [1, 21], we adopt the image-wise
Recall@100 and Recall@50 as our evaluation metrics.
Recall@X is used to compute the fraction of occurring times
when the correct relationship is predicted in the top x con-
ﬁdent predictions. The rank strategy is based on conﬁdence
scores of objects and predicates. While, we do not choose
mAP as a metric, because we can not exhaustively annotate
all possible relationships, and some true relationships may
be missing, as discussed in [21]. Besides, we also report
per-type Recall@5 of classifying individual predicate.

Task Settings: In this work, our goal is to infer the scene
graph of an image given the conﬁdence scores of entities
and relations, while the object detection is not our main ob-
jective. Therefore, we conduct two sub-tasks of scene graph

3961

Table 1. Comparison results of our model and existing state-of-the-art methods on constrained scene graph classiﬁcation (SGCls) and
predicate classiﬁcation (PredCls) on Visual Genome (VG) [14] test set. Ours w/o ST+GSA, Ours w/ GSA, Ours w/ ST and Ours-Full
denote our baseline model, our model only with Graph Self-Attention Module, our model only with Semantic Transformation Module and
our full model, respectively. † means the results obtained from corresponding papers. Results based on our implementation is marked by
∗. The best performances are in bold.

Dataset Model

SGCls

PredCls

Recall@50 Recall@100 Recall@50 Recall@100

VG

LP [21]
Message Passing [37]
Graph R-CNN [38]
Neural Motif [44]
GPI [9]

ST-GSA-nosemanticloss-sum
ST-GSA-nosemanticloss-multiply
ST-GSA-nosemanticloss-concat
ST-GSA-sum
ST-GSA-multiply
ST-GSA-nowordembed
ST-GSA-singlehead

Ours w/o ST+GSA
Ours w/ GSA
Ours w/ ST
Ours-Full

Ours-Full-unconstrained

11.8
21.7
29.6
35.8
36.5

36.6
34.0
36.2
36.9
36.6
37.3
37.9

34.6
37.2
37.3
38.2

41.4

14.1
24.4
31.6
36.5
38.8

38.8
36.8
38.4
39.1
38.4
39.8
40.1

35.3
39.4
40.1
40.4

46.0

27.9
44.8
54.2

35.0
53.0
59.1

55.8∗/65.2†
56.3∗/65.1†

58.3∗/67.1†
60.7∗/66.9†

56.4
53.5
55.4
56.6
56.2
55.7
56.3

54.3
54.8
55.2
56.6

61.6

60.3
59.7
59.9
61.1
60.7
60.6
60.9

57.6
59.9
60.9
61.3

68.9

generation to evaluate our proposed method following [37,
9]. (1)Scene Graph Classiﬁcation (SGCls): Given ground
truth bounding boxes of entities, the goal is to predict the
category of all entities and relations in an image. This task
needs to correctly detect the triplet of <subject-predicate-
object>. (2)Predicate Classiﬁcation (PredCls): Given a
set of ground truth entity bounding boxes with their corre-
sponding localization and categories, the goal is to predict
all relations between entities. In all of our experiments, we
perform graph-constrained evaluation, which means the re-
turned triplets must be consistent with a scene graph.
In
addition, we report the results in unconstrained setting.

Compared Methods: We compare our proposed ap-
proach with the following methods on VG: Language
Prior (LP) [21], Iterative Message Passing (IMP) [37], Neu-
ral Motif [44], Graph R-CNN [38], GPI [9]. In all experi-
ments, the parameter settings of the above-mentioned meth-
ods are adopted from the corresponding papers. Note that
some of previous methods use slightly different pre-training
procedures or data split or extra supervisions. For a fair
comparison, we re-train Nerual Motif and GPI with their
released codes for evaluation, and ensure all the methods
are based on the same backbone.

4.2. Implementation Details

We implement our model based on TensorFlow [7]
framework on a single NVIDIA 1080 Ti GPU. Similar to
prior work in scene graph generation [19, 37], we adopt
Faster R-CNN (with ImageNet pretrained VGG16) [31]

as backbone in our object detection module.
Follow-
ing [19, 37, 44], we adopt two-stage training, where the
object detection module is pre-trained for capturing la-
bel category possibility as our high-level feature. Further-
more, the semantic transformation module is implemented
as three 300-size layers for semantic projection, and one
fully-connected (FC) layers for feature embedding that out-
put a vector of size 500, and the word vectors were learned
from the text data of Visual Genome with Glove [24]; the
graph self-attention module is implemented by one FC layer
that outputs a vector of size 500, and we set k = 8 in Eq. (9)
as multi-head attention; the Relation Inference Module is
implemented as three FC layers of size 500 and outputs an
entity probability vector of size 150 and relation probabil-
ity vector of size 51 corresponding to the semantic labels
in the datasets. We perform an end-to-end training by em-
ploying Adam as the optimizer with initial learning rate of
1 × 10−4, and the exponential decay rate for the 1st and
2nd moment estimates are set as 0.9 and 0.999, respec-
tively. We adopt a mini-batch training with batch size 20.
The hyper-parameters in our joint loss function Eq. (12) are
set as λ1 : λ2 : λ3 = 4 : 1 : 1.

4.3. Quantitative Comparisons

As depicted in Table 1, we compare the performances
of our model with the state-of-the-art methods on Visual
Genome. We can see that our model outperforms all pre-
vious methods on the task of SGCls. Our full model
“Ours-Full” achieves 38.2% and 40.4% w.r.t Recall@50 and

3962

Table 2. Predicate classiﬁcation recall of our full model on the test
set of Visual Genome. Top 20 most frequent types are shown. The
evaluation metric is recall@5.

predicate

ours

predicate

on
has
of
wearing
in
near
with
behind
holding
wears

sitting on
98.54
between
98.18
96.17
under
riding
99.46
in front of
90.85
93.41
standing on
88.20 walking on
88.72
91.44
95.90

at
attached to
belonging to

ours

80.89
78.62
66.17
93.01
66.29
77.84
90.05
73.19
84.01
81.62

Recall@100, which surpass the strong baseline method GPI
by about 2% in terms of both metrics. It indicates the su-
perior capability of our model in capturing relations be-
tween entity pairs. Moreover, our full model also gener-
ates better performance in terms of PredCls, demonstrating
our model’s ability in recognizing relationship accurately.
Noting that the PredCls task is simply trying to detect pred-
icate that requires less structural information. While our
proposed semantic transformation model and graph self-
attention module perform the best in jointly learning the
graph structure. Compared to other similar graph-based
approach, e.g. Iterative Message Passing (IMP) [37] and
Graph R-CNN [38], our model can capture each node’s
representation by attending on the neighboring nodes to in-
corporate more context information and preserve the struc-
tural relationship in the image. These advantages make our
model superior to [37] and [38]. In addition, Table 2 illus-
trates per-type predicate recall performances of our mod-
els on the Visual Genome test set. We ﬁnd that our model
achieves high Recall@5 of over 0.85 in most of the frequent
predicates, as well as some less frequent ones that are harder
to learn, e.g. ‘walking on’ and ‘riding’. The reason is that
our framework is able to overcome the uneven relationship
distribution by better modeling contextual information and
diverse graph representations.

4.4. Ablation Study

In this subsection, we perform ablation studies to better

examine the effectiveness of the introduced two modules.

Graph Self-Attention Module: As shown in Table 1,
the graph self-attention module (“Ours w/ GSA”) brings a
large improvement compared to our baseline model (“Ours
w/o ST+GSA”). Moreover, our model with only graph self-
attention module (“Ours w/ GSA”) outperforms Neural Mo-
tif and Graph R-CNN by 2% and 8%, respectively. The im-
provement is mainly brought by the attentive features gen-
erated from weighted neighbour embedding, which helps
each node to focus on neighbor node features according to
context relations. The overall module is thus able to cap-
ture more meaningful context across the entire graph and

Figure 5. An example of Graph Self-Attention Module. The left
illustrates the test image with object detection results. The top
right shows the attention weights from other entities to the entity
‘man’, and the bottom right depicts the ground truth scene graph.

Figure 6. An example of Semantic Transformation Module. The
left is a sample image with its entity bounding boxes visualized.
The right is a PCA visualization of entity and relation features in
three dimensional space on Scene Graph Classiﬁcation. The red
dots represent detected labels for objects, predicates and subjects.

enhance the scene graph generation.
In addition, we ex-
ploit the effectiveness of our proposed multi-head atten-
tion mechanism in the module. As shown in the middle
part of Table 1, ours model with multi-head obtains slightly
better performance than ours with single-head in terms of
SGCls and PredCls, suggesting the multi-head can better
capture useful information. Figure 5 illustrates an exam-
ple of graph self-attention helping to generate the scene
graph. Our model assigns higher attention weights on ‘ski’
to ‘man’ (0.667) and ‘snow’ to ‘man’ (0.154) than ‘moun-
tain’ to ‘man’ (0.099), denoting the module learns to attend
on more signiﬁcant neighbor entities (e.g. ‘ski’ and ‘snow’).
The ground truth scene graph demonstrates the detected re-
lationships match the ground truth.

Semantic Transformation Module: As shown in Ta-
ble 1, our model with only semantic transformation mod-
ule (“Ours w/ ST”) outperforms all state-of-the-art results
and other variants of our model, i.e. “Ours w/o ST+GSA”
and “Ours w/ GSA”. This indicates the importance of
the proposed semantic transformation module in generat-
ing better scene graphs. Furthermore, we examine the
proposed semantic transformation loss function Lsemantic
and different approaches of feature fusion. We intro-
duce three variants with no semantic loss for feature fu-
sion, i.e. concatenate (“ST-GSA-nosemanticloss-concat”),
sum up (“ST-GSA-nosemanticloss-sum”) and element-wise
multiply (“ST-GSA-nosemanticloss-multiply”). Moreover,

3963

Figure 7. Qualitative results on our proposed Attentive Relational Network. Green and brown bounding boxes are correct and wrong
predictions respectively (As for brown labels, our predictions are outside the brackets, while ground truths are inside the brackets). In
scene graphs, green and brown cuboids are correct and wrong relation predictions respectively. The dotted lines denote the ground truth
relations mistakenly classiﬁed by our model. Only predicted boxes that overlap with the ground truth are shown.

we have examined other three variants with semantic
loss, i.e. sum up (“ST-GSA-sum”), element-wise multi-
ply (“ST-GSA-multiply”), visual feature only (“ST-GSA-
nowordembed”). As shown in Table 1, concatenating
projected features through our semantic transformation
achieves the best performance, suggesting our loss func-
tion, incorporating word embedding and concatenation op-
eration is effective and necessary. By examining the PCA
visualization in a 3D space illustrated in Figure 6, we dis-
cover semantic afﬁnities among the entity type and relation
embedding of our module. Meanwhile, we notice apparent
clusters of object nodes, predicate nodes and subject nodes
in three dimension. Moreover, we ﬁnd that the existing vi-
sual relationship can be translated into a common seman-
tic space (denoted as orange circle in Figure 6), where the
entity and relation nodes are connected in an approximate
linearity, e.g. <train-has-window>, <track-for-train> and
<man-near-train>. It demonstrates that our proposed mod-
ule can learn semantic knowledge to transform visual fea-
ture and word embedding into relation space which beneﬁts
the scene graph generation tasks.

4.5. Qualitative Results

To qualitatively verify the constructed scene graph and
visual relations learned by our proposed model, Figure 7
illustrates a number of visualization examples for scene
graph generation on the Visual Genome dataset. The results
demonstrate that our model is able to semantically predict
most of visual relations in images correctly. As an example,
all of visual relationships in the scene graph are correctly
detected in Figure 7 (a), which has a complex structure and
several different types of objects. Moreover, our model is
able to resolve the ambiguity in the object-subject direc-
tion. For instance, <ear-of-man> and <man-wearing-tie>
are predicted correctly by our model in Figure 7 (b).
In
addition, we observe that our model can predict predicates

more accurately than the ground truth annotations and make
more reasonable correct predictions, e.g. in Figure 7 (d)
and (f) our model outputs <elephant-has-leg> and <man-
wearing-shirt>, while the ground truth are <elephant-on-
leg> and <man-has-shirt> that are not inappropriate for
the situation. However, there are still some failure cases in
our model. First, certain mistakes stem from predicate am-
biguity, e.g. our model mislead in predicting <bottle-above-
counter> and <wire-hanging from-desk> by <bottle-on-
counter> and <wire-on-desk> in Figure 7 (f) and (e). Sec-
ond, some mistakes are caused by the failure of the detec-
tor. For example, our model fails to detect any relation be-
tween ‘food’ and ‘man’ in Figure 7 (f), and some entities
are detected inaccurately, e.g. ‘door’ and ‘stand’ are mis-
led by ‘screen’ and ‘cabinet’ in Figure 7 (b), respectively.
Advanced object detection model will be beneﬁcial for im-
proving the performance.

5. Conclusion

In this paper, we present a novel Attentive Relational
Network for scene graph generation. We introduce a se-
mantic transformation module that projects visual features
and linguistic knowledge into a common space, and a
graph self-attention module for joint graph representation
embedding. Extensive experiments are conducted on the
Visual Genome Dataset and our method outperforms the
state-of-the-art methods on scene graph generation, which
demonstrates the effectiveness of our model.

Acknowledgement. This work was partly supported by the National Nat-
ural Science Foundation of China (No. 61573045) and the Foundation for
Innovative Research Groups through the National Natural Science Foun-
dation of China (No. 61421003). We also would like to thank the support
by NSF (Awards No.1813709, No.1704309 and No.1722847). Mengshi Qi
acknowledges the ﬁnancial support from the China Scholarship Council.

3964

References

[1] Bogdan Alexe, Thomas Deselaers, and Vittorio Ferrari. Measuring
the objectness of image windows. TPAMI, 34(11):2189–2202, 2012.
[2] Yuval Atzmon, Jonathan Berant, Vahid Kezami, Amir Globerson,
and Gal Chechik. Learning to generalize to new compositions in
image understanding. arXiv preprint arXiv:1608.07639, 2016.

[3] Antoine Bordes, Nicolas Usunier, Alberto Garcia-Duran, Jason We-
ston, and Oksana Yakhnenko. Translating embeddings for modeling
multi-relational data. In NeurlPS, 2013.

[4] Bo Dai, Yuqi Zhang, and Dahua Lin. Detecting visual relationships

with deep relational networks. In CVPR. IEEE, 2017.

[5] Ali Farhadi, Mohsen Hejrati, Mohammad Amin Sadeghi, Peter
Young, Cyrus Rashtchian, Julia Hockenmaier, and David Forsyth.
Every picture tells a story: Generating sentences from images.
In
ECCV. Springer, 2010.

[6] Andrea Frome, Greg S Corrado, Jon Shlens, Samy Bengio, Jeff
Dean, Tomas Mikolov, et al. Devise: A deep visual-semantic em-
bedding model. In NeurlPS, 2013.

[7] Sanjay Surendranath Girija. Tensorﬂow: Large-scale machine learn-

ing on heterogeneous distributed systems. 2016.
[8] Ross Girshick. Fast r-cnn. In ICCV. IEEE, 2015.
[9] Roei Herzig, Moshiko Raboh, Gal Chechik, Jonathan Berant, and
Amir Globerson. Mapping images to scene graphs with permutation-
invariant structured prediction. In NeurlPS, 2018.

[10] Seong Jae Hwang, Sathya N Ravi, Zirui Tao, Hyunwoo J Kim,
Maxwell D Collins, and Vikas Singh. Tensorize, factorize and regu-
larize: Robust visual relationship learning.

[11] Justin Johnson, Ranjay Krishna, Michael Stark, Li-Jia Li, David
Shamma, Michael Bernstein, and Li Fei-Fei. Image retrieval using
scene graphs. In CVPR. IEEE, 2015.

[12] Thomas N Kipf and Max Welling. Semi-supervised classiﬁcation

with graph convolutional networks. In ICLR, 2017.

[13] Ranjay Krishna, Ines Chami, Michael Bernstein, and Li Fei-Fei. Re-

ferring relationships. In CVPR. IEEE, 2018.

[14] Ranjay Krishna, Yuke Zhu, Oliver Groth, Justin Johnson, Kenji
Hata, Joshua Kravitz, Stephanie Chen, Yannis Kalantidis, Li-Jia Li,
David A Shamma, et al. Visual genome: Connecting language
and vision using crowdsourced dense image annotations.
IJCV,
123(1):32–73, 2017.

[15] Svetlana Lazebnik, Cordelia Schmid, and Jean Ponce. Beyond bags
of features: Spatial pyramid matching for recognizing natural scene
categories. In CVPR. IEEE, 2006.

[16] Xiangyang Li and Shuqiang Jiang. Know more say less: Image cap-

tioning based on scene graphs. TMM, 2019.

[17] Yikang Li, Wanli Ouyang, and Xiaogang Wang. Vip-cnn: A visual
phrase reasoning convolutional neural network for visual relationship
detection. In CVPR. IEEE, 2017.

[18] Yikang Li, Wanli Ouyang, Bolei Zhou, Jianping Shi, Chao Zhang,
and Xiaogang Wang. Factorizable net: an efﬁcient subgraph-based
framework for scene graph generation. In ECCV. Springer, 2018.

[19] Yikang Li, Wanli Ouyang, Bolei Zhou, Kun Wang, and Xiaogang
Wang. Scene graph generation from objects, phrases and region cap-
tions. In ICCV. IEEE, 2017.

[20] Xiaodan Liang, Lisa Lee, and Eric P Xing. Deep variation-structured
reinforcement learning for visual relationship and attribute detection.
In CVPR. IEEE, 2017.

[21] Cewu Lu, Ranjay Krishna, Michael Bernstein, and Li Fei-Fei. Vi-
sual relationship detection with language priors. In ECCV. Springer,
2016.

[22] Alejandro Newell and Jia Deng. Pixels to graphs by associative em-

bedding. In NeurlPS, 2017.

[24] Jeffrey Pennington, Richard Socher, and Christopher Manning.

Glove: Global vectors for word representation. In EMNLP, 2014.

[25] Julia Peyre, Ivan Laptev, Cordelia Schmid, and Josef Sivic. Weakly-

supervised learning of visual relations. In ICCV. IEEE, 2017.

[26] Bryan A Plummer, Arun Mallya, Christopher M Cervantes, Julia
Hockenmaier, and Svetlana Lazebnik. Phrase localization and visual
relationship detection with comprehensive image-language cues. In
CVPR. IEEE, 2017.

[27] Mengshi Qi, Jie Qin, Annan Li, Yunhong Wang, Jiebo Luo, and
Luc Van Gool. stagnet: An attentive semantic rnn for group activity
recognition. In ECCV. Springer, 2018.

[28] Mengshi Qi, Yunhong Wang, and Annan Li. Online cross-modal
scene retrieval by binary representation and semantic graph. In MM.
ACM, 2017.

[29] Vignesh Ramanathan, Congcong Li, Jia Deng, Wei Han, Zhen Li,
Kunlong Gu, Yang Song, Samy Bengio, Charles Rosenberg, and Li
Fei-Fei. Learning semantic relationships for better action retrieval in
images. In CVPR. IEEE, 2015.

[30] Joseph Redmon, Santosh Divvala, Ross Girshick, and Ali Farhadi.
You only look once: Uniﬁed, real-time object detection. In CVPR.
IEEE, 2016.

[31] Shaoqing Ren, Kaiming He, Ross Girshick, and Jian Sun. Faster
r-cnn: Towards real-time object detection with region proposal net-
works. In NeurlPS, 2015.

[32] Mohammad Amin Sadeghi and Ali Farhadi. Recognition using visual

phrases. In CVPR. IEEE, 2011.

[33] Damien Teney, Lingqiao Liu, and Anton van den Hengel. Graph-
structured representations for visual question answering. In CVPR.
IEEE, 2017.

[34] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion
Jones, Aidan N Gomez, Łukasz Kaiser, and Illia Polosukhin. Atten-
tion is all you need. In NeurlPS, 2017.

[35] Petar Velickovic, Guillem Cucurull, Arantxa Casanova, Adriana
Romero, Pietro Lio, and Yoshua Bengio. Graph attention networks.
In ICLR, 2018.

[36] Sanghyun Woo, Dahun Kim, Donghyeon Cho, and In So Kweon.

Linknet: Relational embedding for scene graph. In NeurlPS, 2018.

[37] Danfei Xu, Yuke Zhu, Christopher B Choy, and Li Fei-Fei. Scene
In CVPR. IEEE,

graph generation by iterative message passing.
2017.

[38] Jianwei Yang, Jiasen Lu, Stefan Lee, Dhruv Batra, and Devi Parikh.

Graph r-cnn for scene graph generation. In ECCV. Springer, 2018.

[39] Xu Yang, Hanwang Zhang, and Jianfei Cai. Shufﬂe-then-assemble:
In ECCV.

learning object-agnostic visual relationship features.
Springer, 2018.

[40] Ting Yao, Yingwei Pan, Yehao Li, and Tao Mei. Exploring visual

relationship for image captioning. In ECCV. Springer, 2018.

[41] Guojun Yin, Lu Sheng, Bin Liu, Nenghai Yu, Xiaogang Wang, Jing
Shao, and Chen Change Loy. Zoom-net: Mining deep feature inter-
actions for visual relationship recognition. In ECCV. Springer, 2018.
[42] Ruichi Yu, Ang Li, Vlad I Morariu, and Larry S Davis. Visual re-
lationship detection with internal and external linguistic knowledge
distillation. In ICCV. IEEE, 2017.

[43] Yuan Yuan, Xiaodan Liang, Xiaolong Wang, Dit-Yan Yeung, and
Abhinav Gupta. Temporal dynamic graph lstm for action-driven
video object detection. In ICCV. IEEE, 2017.

[44] Rowan Zellers, Mark Yatskar, Sam Thomson, and Yejin Choi. Neural
motifs: Scene graph parsing with global context. In CVPR. IEEE,
2018.

[45] Hanwang Zhang, Zawlin Kyaw, Shih-Fu Chang, and Tat-Seng Chua.
Visual translation embedding network for visual relation detection.
In CVPR. IEEE, 2017.

[23] Alejandro Newell, Zhiao Huang, and Jia Deng. Associative em-
In

bedding: End-to-end learning for joint detection and grouping.
NeurlPS, 2017.

[46] Hanwang Zhang, Zawlin Kyaw, Jinyang Yu, and Shih-Fu Chang.
Ppr-fcn: weakly supervised visual relation detection via parallel pair-
wise r-fcn. In ICCV. IEEE, 2017.

3965

[47] Hanwang Zhang, Yulei Niu, and Shih-Fu Chang. Grounding refer-
ring expressions in images by variational context. In CVPR. IEEE,
2018.

[48] Ji Zhang, Mohamed Elhoseiny, Scott Cohen, Walter Chang, and
Ahmed Elgammal. Relationship proposal networks. In CVPR. IEEE,
2017.

[49] Bolei Zhou, Agata Lapedriza, Jianxiong Xiao, Antonio Torralba, and
Aude Oliva. Learning deep features for scene recognition using
places database. In NeurlPS, 2014.

[50] Bohan Zhuang, Lingqiao Liu, Chunhua Shen, and Ian Reid. Towards
context-aware interaction recognition for visual relationship detec-
tion. In ICCV. IEEE, 2017.

3966

