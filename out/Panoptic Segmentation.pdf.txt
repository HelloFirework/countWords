Panoptic Segmentation

Alexander Kirillov1

,

2 Kaiming He1 Ross Girshick1 Carsten Rother2

Piotr Doll´ar1

1Facebook AI Research (FAIR)

2HCI/IWR, Heidelberg University, Germany

Abstract

We propose and study a task we name panoptic segmen-
tation (PS). Panoptic segmentation uniﬁes the typically dis-
tinct tasks of semantic segmentation (assign a class label
to each pixel) and instance segmentation (detect and seg-
ment each object instance). The proposed task requires
generating a coherent scene segmentation that is rich and
complete, an important step toward real-world vision sys-
tems. While early work in computer vision addressed re-
lated image/scene parsing tasks, these are not currently
popular, possibly due to lack of appropriate metrics or as-
sociated recognition challenges. To address this, we pro-
pose a novel panoptic quality (PQ) metric that captures
performance for all classes (stuff and things) in an inter-
pretable and uniﬁed manner. Using the proposed metric,
we perform a rigorous study of both human and machine
performance for PS on three existing datasets, revealing in-
teresting insights about the task. The aim of our work is
to revive the interest of the community in a more uniﬁed
view of image segmentation. For more analysis and up-to-
date results, please check the arXiv version of the paper:
https://arxiv.org/abs/1801.00868.

1. Introduction

In the early days of computer vision, things – countable
objects such as people, animals, tools – received the dom-
inant share of attention. Questioning the wisdom of this
trend, Adelson [1] elevated the importance of studying sys-
tems that recognize stuff – amorphous regions of similar
texture or material such as grass, sky, road. This dichotomy
between stuff and things persists to this day, reﬂected in
both the division of visual recognition tasks and in the spe-
cialized algorithms developed for stuff and thing tasks.

Studying stuff is most commonly formulated as a task
known as semantic segmentation, see Figure 1b. As stuff
is amorphous and uncountable, this task is deﬁned as sim-
ply assigning a class label to each pixel in an image (note
that semantic segmentation treats thing classes as stuff).
In contrast, studying things is typically formulated as the
task of object detection or instance segmentation, where the

(a) image

(b) semantic segmentation

(c) instance segmentation

(d) panoptic segmentation

Figure 1: For a given (a) image, we show ground truth for: (b)
semantic segmentation (per-pixel class labels), (c) instance seg-
mentation (per-object mask and class label), and (d) the proposed
panoptic segmentation task (per-pixel class+instance labels). The
PS task: (1) encompasses both stuff and thing classes, (2) uses a
simple but general format, and (3) introduces a uniform evaluation
metric for all classes. Panoptic segmentation generalizes both se-
mantic and instance segmentation and we expect the uniﬁed task
will present novel challenges and enable innovative new methods.

goal is to detect each object and delineate it with a bound-
ing box or segmentation mask, respectively, see Figure 1c.
While seemingly related, the datasets, details, and metrics
for these two visual recognition tasks vary substantially.

The schism between semantic and instance segmentation
has led to a parallel rift in the methods for these tasks. Stuff
classiﬁers are usually built on fully convolutional nets [30]
with dilations [51, 5] while object detectors often use object
proposals [15] and are region-based [37, 14]. Overall algo-
rithmic progress on these tasks has been incredible in the
past decade, yet, something important may be overlooked
by focussing on these tasks in isolation.

A natural question emerges: Can there be a reconcilia-
tion between stuff and things? And what is the most effec-
tive design of a uniﬁed vision system that generates rich and
coherent scene segmentations? These questions are particu-
larly important given their relevance in real-world applica-
tions, such as autonomous driving or augmented reality.

9404

Interestingly, while semantic and instance segmentation
dominate current work, in the pre-deep learning era there
was interest in the joint task described using various names
such as scene parsing [42], image parsing [43], or holistic
scene understanding [50]. Despite its practical relevance,
this general direction is not currently popular, perhaps due
to lack of appropriate metrics or recognition challenges.

In our work we aim to revive this direction. We propose
a task that: (1) encompasses both stuff and thing classes, (2)
uses a simple but general output format, and (3) introduces
a uniform evaluation metric. To clearly disambiguate with
previous work, we refer to the resulting task as panoptic
segmentation (PS). The deﬁnition of ‘panoptic’ is “includ-
ing everything visible in one view”, in our context panoptic
refers to a uniﬁed, global view of segmentation.

The task format we adopt for panoptic segmentation is
simple: each pixel of an image must be assigned a semantic
label and an instance id. Pixels with the same label and id
belong to the same object; for stuff labels the instance id is
ignored. See Figure 1d for a visualization. This format has
been adopted previously, especially by methods that pro-
duce non-overlapping instance segmentations [18, 28, 2].
We adopt it for our joint task that includes stuff and things.
A fundamental aspect of panoptic segmentation is the
task metric used for evaluation. While numerous existing
metrics are popular for either semantic or instance segmen-
tation, these metrics are best suited either for stuff or things,
respectively, but not both. We believe that the use of disjoint
metrics is one of the primary reasons the community gen-
erally studies stuff and thing segmentation in isolation. To
address this, we introduce the panoptic quality (PQ) metric
in §4. PQ is simple and informative and most importantly
can be used to measure the performance for both stuff and
things in a uniform manner. Our hope is that the proposed
joint metric will aid in the broader adoption of the joint task.
The panoptic segmentation task encompasses both se-
mantic and instance segmentation but introduces new al-
gorithmic challenges. Unlike semantic segmentation, it re-
quires differentiating individual object instances; this poses
a challenge for fully convolutional nets. Unlike instance
segmentation, object segments must be non-overlapping;
this presents a challenge for region-based methods that op-
erate on each object independently. Generating coherent
image segmentations that resolve inconsistencies between
stuff and things is an important step toward real-world uses.
As both the ground truth and algorithm format for PS
must take on the same form, we can perform a detailed
study of human consistency on panoptic segmentation. This
allows us to understand the PQ metric in more detail, in-
cluding detailed breakdowns of recognition vs. segmenta-
tion and stuff vs. things performance. Moreover, measuring
human PQ helps ground our understanding of machine per-
formance. This is important as it will allow us to monitor

performance saturations on various datasets for PS.

Finally we perform an initial study of machine perfor-
mance for PS. To do so, we deﬁne a simple and likely sub-
optimal heuristic that combines the output of two indepen-
dent systems for semantic and instance segmentation via
a series of post-processing steps that merges their outputs
(in essence, a sophisticated form of non-maximum suppres-
sion). Our heuristic establishes a baseline for PS and gives
us insights into the main algorithmic challenges it presents.
We study both human and machine performance on
three popular segmentation datasets that have both stuff
and things annotations. This includes the Cityscapes [6],
ADE20k [54], and Mapillary Vistas [35] datasets. For
each of these datasets, we obtained results of state-of-the-
art methods directly from the challenge organizers. In the
future we will extend our analysis to COCO [25] on which
stuff is being annotated [4]. Together our results on these
datasets form a solid foundation for the study of both hu-
man and machine performance on panoptic segmentation.

Both COCO [25] and Mapillary Vistas [35] featured the
panoptic segmentation task as one of the tracks in their
recognition challenges at ECCV 2018. We hope that having
PS featured alongside the instance and semantic segmenta-
tion tracks on these popular recognition datasets will help
lead to a broader adoption of the proposed joint task.

2. Related Work

Novel datasets and tasks have played a key role through-
out the history of computer vision. They help catalyze
progress and enable breakthroughs in our ﬁeld, and just
as importantly, they help us measure and recognize the
progress our community is making. For example, ImageNet
[38] helped drive the recent popularization of deep learning
techniques for visual recognition [20] and exempliﬁes the
potential transformational power that datasets and tasks can
have. Our goals for introducing the panoptic segmentation
task are similar: to challenge our community, to drive re-
search in novel directions, and to enable both expected and
unexpected innovation. We review related tasks next.
Object detection tasks. Early work on face detection
using ad-hoc datasets (e.g., [44, 46]) helped popularize
bounding-box object detection. Later, pedestrian detection
datasets [8] helped drive progress in the ﬁeld. The PAS-
CAL VOC dataset [9] upgraded the task to a more diverse
set of general object classes on more challenging images.
More recently, the COCO dataset [25] pushed detection to-
wards the task of instance segmentation. By framing this
task and providing a high-quality dataset, COCO helped de-
ﬁne a new and exciting research direction and led to many
recent breakthroughs in instance segmentation [36, 24, 14].
Our general goals for panoptic segmentation are similar.
Semantic segmentation tasks. Semantic segmentation
datasets have a rich history [39, 26, 9] and helped drive

9405

key innovations (e.g., fully convolutional nets [30] were de-
veloped using [26, 9]). These datasets contain both stuff
and thing classes, but don’t distinguish individual object in-
stances. Recently the ﬁeld has seen numerous new segmen-
tation datasets including Cityscapes [6], ADE20k [54], and
Mapillary Vistas [35]. These datasets actually support both
semantic and instance segmentation, and each has opted to
have a separate track for the two tasks. Importantly, they
contain all of the information necessary for PS. In other
words, the panoptic segmentation task can be bootstrapped
on these datasets without any new data collection.

Multitask learning. With the success of deep learning for
many visual recognition tasks, there has been substantial in-
terest in multitask learning approaches that have broad com-
petence and can solve multiple diverse vision problems in a
single framework [19, 32, 34]. E.g., UberNet [19] solves
multiple low to high-level visual tasks, including object de-
tection and semantic segmentation, using a single network.
While there is signiﬁcant interest in this area, we emphasize
that panoptic segmentation is not a multitask problem but
rather a single, uniﬁed view of image segmentation. Specif-
ically, the multitask setting allows for independent and po-
tentially inconsistent outputs for stuff and things, while PS
requires a single coherent scene segmentation.

Joint segmentation tasks.
In the pre-deep learning era,
there was substantial interest in generating coherent scene
interpretations. The seminal work on image parsing [43]
proposed a general bayesian framework to jointly model
segmentation, detection, and recognition. Later, approaches
based on graphical models studied consistent stuff and thing
segmentation [50, 41, 42, 40]. While these methods shared
a common motivation, there was no agreed upon task deﬁ-
nition, and different output formats and varying evaluation
metrics were used, including separate metrics for evaluating
results on stuff and thing classes. In recent years this direc-
tion has become less popular, perhaps for these reasons.

In our work we aim to revive this general direction, but in
contrast to earlier work, we focus on the task itself. Specif-
ically, as discussed, PS: (1) addresses both stuff and thing
classes, (2) uses a simple format, and (3) introduces a uni-
form metric for both stuff and things. Previous work on
joint segmentation uses varying formats and disjoint met-
rics for evaluating stuff and things. Methods that generate
non-overlapping instance segmentations [18, 3, 28, 2] use
the same format as PS, but these methods typically only ad-
dress thing classes. By addressing both stuff and things,
using a simple format, and introducing a uniform metric,
we hope to encourage broader adoption of the joint task.

Amodal segmentation task.
In [55] objects are annotated
amodally: the full extent of each region is marked, not just
the visible. Our work focuses on segmentation of all visible
regions, but an extension of panoptic segmentation to the
amodal setting is an interesting direction for future work.

3. Panoptic Segmentation Format

Task format. The format for panoptic segmentation is
simple to deﬁne. Given a predetermined set of L semantic
classes encoded by L := {0, . . . , L − 1}, the task requires
a panoptic segmentation algorithm to map each pixel i of
an image to a pair (li, zi) ∈ L × N, where li represents
the semantic class of pixel i and zi represents its instance
id. The zi’s group pixels of the same class into distinct seg-
ments. Ground truth annotations are encoded identically.
Ambiguous or out-of-class pixels can be assigned a special
void label; i.e., not all pixels must have a semantic label.

Stuff and thing labels. The semantic label set consists
of subsets LSt and LTh, such that L = LSt ∪ LTh and
LSt ∩ LTh = ∅. These subsets correspond to stuff and thing
labels, respectively. When a pixel is labeled with li ∈ LSt,
its corresponding instance id zi is irrelevant. That is, for
stuff classes all pixels belong to the same instance (e.g., the
same sky). Otherwise, all pixels with the same (li, zi) as-
signment, where li ∈ LTh, belong to the same instance (e.g.,
the same car), and conversely, all pixels belonging to a sin-
gle instance must have the same (li, zi). The selection of
which classes are stuff vs. things is a design choice left to
the creator of the dataset, just as in previous datasets.

Relationship to semantic segmentation. The PS task
format is a strict generalization of the format for semantic
segmentation. Indeed, both tasks require each pixel in an
image to be assigned a semantic label. If the ground truth
does not specify instances, or all classes are stuff, then the
task formats are identical (although the task metrics differ).
In addition, inclusion of thing classes, which may have mul-
tiple instances per image, differentiates the tasks.

Relationship to instance segmentation. The instance
segmentation task requires a method to segment each ob-
ject instance in an image. However, it allows overlapping
segments, whereas the panoptic segmentation task permits
only one semantic label and one instance id to be assigned
to each pixel. Hence, for PS, no overlaps are possible by
construction. In the next section we show that this differ-
ence plays an important role in performance evaluation.

Conﬁdence scores. Like semantic segmentation, but un-
like instance segmentation, we do not require conﬁdence
scores associated with each segment for PS. This makes the
panoptic task symmetric with respect to humans and ma-
chines: both must generate the same type of image anno-
tation. It also makes evaluating human consistency for PS
simple. This is in contrast to instance segmentation, which
is not easily amenable to such a study as human annotators
do not provide explicit conﬁdence scores (though a single
precision/recall point may be measured). We note that con-
ﬁdence scores give downstream systems more information,
which can be useful, so it may still be desirable to have a
PS algorithm generate conﬁdence scores in certain settings.

9406

4. Panoptic Segmentation Metric

sky

In this section we introduce a new metric for panoptic
segmentation. We begin by noting that existing metrics
are specialized for either semantic or instance segmentation
and cannot be used to evaluate the joint task involving both
stuff and thing classes. Previous work on joint segmenta-
tion sidestepped this issue by evaluating stuff and thing per-
formance using independent metrics (e.g. [50, 41, 42, 40]).
However, this introduces challenges in algorithm develop-
ment, makes comparisons more difﬁcult, and hinders com-
munication. We hope that introducing a uniﬁed metric for
stuff and things will encourage the study of the uniﬁed task.
Before going into further details, we start by identifying

the following desiderata for a suitable metric for PS:

Completeness. The metric should treat stuff and thing

classes in a uniform way, capturing all aspects of the task.

Interpretability. We seek a metric with identiﬁable
meaning that facilitates communication and understanding.
Simplicity. In addition, the metric should be simple to
deﬁne and implement. This improves transparency and al-
lows for easy reimplementation. Related to this, the metric
should be efﬁcient to compute to enable rapid evaluation.

Guided by these principles, we propose a new panoptic
quality (PQ) metric. PQ measures the quality of a predicted
panoptic segmentation relative to the ground truth.
It in-
volves two steps: (1) segment matching and (2) PQ compu-
tation given the matches. We describe each step next then
return to a comparison to existing metrics.

4.1. Segment Matching

We specify that a predicted segment and a ground truth
segment can match only if their intersection over union
(IoU) is strictly greater than 0.5. This requirement, together
with the non-overlapping property of a panoptic segmenta-
tion, gives a unique matching: there can be at most one pre-
dicted segment matched with each ground truth segment.

Theorem 1. Given a predicted and ground truth panoptic
segmentation of an image, each ground truth segment can
have at most one corresponding predicted segment with IoU
strictly greater than 0.5 and vice verse.

Proof. Let g be a ground truth segment and p1 and p2 be
two predicted segments. By deﬁnition, p1 ∩ p2 = ∅ (they
do not overlap). Since |pi ∪ g| ≥ |g|, we get the following:

IoU(pi, g) =

|pi ∩ g|
|pi ∪ g|

≤

|pi ∩ g|

|g|

for i ∈ {1, 2} .

Summing over i, and since |p1 ∩ g| + |p2 ∩ g| ≤ |g| due to
the fact that p1 ∩ p2 = ∅, we get:

IoU(p1, g) + IoU(p2, g) ≤

|p1 ∩ g| + |p2 ∩ g|

|g|

≤ 1 .

person

person

person

sky

dog

person

person

person

grass

grass
grass

Ground Truth

Prediction

Person — TP: {         ,       }; FN: {   }; FP: {  }

Figure 2: Toy illustration of ground truth and predicted panoptic
segmentations of an image. Pairs of segments of the same color
have IoU larger than 0.5 and are therefore matched. We show how
the segments for the person class are partitioned into true positives
TP , false negatives FN , and false positives FP .

Therefore, if IoU(p1, g) > 0.5, then IoU(p2, g) has to be
smaller than 0.5. Reversing the role of p and g can be used
to prove that only one ground truth segment can have IoU
with a predicted segment strictly greater than 0.5.

The requirement that matches must have IoU greater
than 0.5, which in turn yields the unique matching theorem,
achieves two of our desired properties. First, it is simple
and efﬁcient as correspondences are unique and trivial to
obtain. Second, it is interpretable and easy to understand
(and does not require solving a complex matching problem
as is commonly the case for these types of metrics [13, 49]).
Note that due to the uniqueness property, for IoU > 0.5,
any reasonable matching strategy (including greedy and op-
timal) will yield an identical matching. For smaller IoU
other matching techniques would be required; however, in
the experiments we will show that lower thresholds are un-
necessary as matches with IoU ≤ 0.5 are rare in practice.

4.2. PQ Computation

We calculate PQ for each class independently and aver-
age over classes. This makes PQ insensitive to class im-
balance. For each class, the unique matching splits the
predicted and ground truth segments into three sets:
true
positives (TP ), false positives (FP ), and false negatives
(FN ), representing matched pairs of segments, unmatched
predicted segments, and unmatched ground truth segments,
respectively. An example is illustrated in Figure 2. Given
these three sets, PQ is deﬁned as:

PQ =

P(p,g)∈TP IoU(p, g)

|TP | + 1

2 |FP | + 1

2 |FN |

.

(1)

1

|TP| P(p,g)∈TP IoU(p, g)
PQ is intuitive after inspection:
is simply the average IoU of matched segments, while
2 |FP | + 1
1
2 |FN | is added to the denominator to penalize
segments without matches. Note that all segments receive
equal importance regardless of their area. Furthermore, if
we multiply and divide PQ by the size of the TP set, then

9407

PQ can be seen as the multiplication of a segmentation qual-
ity (SQ) term and a recognition quality (RQ) term:

PQ =

P(p,g)∈TP IoU(p, g)

|TP |
{z

}
|
segmentation quality (SQ)

×

|TP |
2 |FP | + 1

|TP | + 1
|

{z

recognition quality (RQ)

2 |FN |
}

.

(2)

Written this way, RQ is the familiar F1 score [45] widely
used for quality estimation in detection settings [33]. SQ
is simply the average IoU of matched segments. We ﬁnd
the decomposition of PQ = SQ × RQ to provide insight for
analysis. We note, however, that the two values are not inde-
pendent since SQ is measured only over matched segments.
Our deﬁnition of PQ achieves our desiderata. It measures
performance of all classes in a uniform way using a simple
and interpretable formula. We conclude by discussing how
we handle void regions and groups of instances [25].

Void labels. There are two sources of void labels in the
ground truth: (a) out of class pixels and (b) ambiguous or
unknown pixels. As often we cannot differentiate these two
cases, we don’t evaluate predictions for void pixels. Speciﬁ-
cally: (1) during matching, all pixels in a predicted segment
that are labeled as void in the ground truth are removed from
the prediction and do not affect IoU computation, and (2)
after matching, unmatched predicted segments that contain
a fraction of void pixels over the matching threshold are re-
moved and do not count as false positives. Finally, outputs
may also contain void pixels; these do not affect evaluation.
Group labels. A common annotation practice [6, 25] is
to use a group label instead of instance ids for adjacent in-
stances of the same semantic class if accurate delineation
of each instance is difﬁcult. For computing PQ: (1) during
matching, group regions are not used, and (2) after match-
ing, unmatched predicted segments that contain a fraction
of pixels from a group of the same class over the matching
threshold are removed and do not count as false positives.

4.3. Comparison to Existing Metrics

We conclude by comparing PQ to existing metrics for

semantic and instance segmentation.
Semantic segmentation metrics. Common metrics for
semantic segmentation include pixel accuracy, mean accu-
racy, and IoU [30]. These metrics are computed based only
on pixel outputs/labels and completely ignore object-level
labels. For example, IoU is the ratio between correctly pre-
dicted pixels and total number of pixels in either the predic-
tion or ground truth for each class. As these metrics ignore
instance labels, they are not well suited for evaluating thing
classes. Finally, please note that IoU for semantic segmen-
tation is distinct from our segmentation quality (SQ), which
is computed as the average IoU over matched segments.
Instance segmentation metrics. The standard metric for
instance segmentation is Average Precision (AP) [25, 13].
AP requires each object segment to have a conﬁdence score

to estimate a precision/recall curve. Note that while conﬁ-
dence scores are quite natural for object detection, they are
not used for semantic segmentation. Hence, AP cannot be
used for measuring the output of semantic segmentation, or
likewise of PS (see also the discussion of conﬁdences in §3).
Panoptic quality. PQ treats all classes (stuff and things)
in a uniform way. We note that while decomposing PQ
into SQ and RQ is helpful with interpreting results, PQ is
not a combination of semantic and instance segmentation
metrics. Rather, SQ and RQ are computed for every class
(stuff and things), and measure segmentation and recogni-
tion quality, respectively. PQ thus uniﬁes evaluation over all
classes. We support this claim with rigorous experimental
evaluation of PQ in §7, including comparisons to IoU and
AP for semantic and instance segmentation, respectively.

5. Panoptic Segmentation Datasets

To our knowledge only three public datasets have both
dense semantic and instance segmentation annotations:
Cityscapes [6], ADE20k [54], and Mapillary Vistas [35].
We use all three datasets for panoptic segmentation. In ad-
dition, in the future we will extend our analysis to COCO
[25] on which stuff has been recently annotated [4]1.

Cityscapes [6] has 5000 images (2975 train, 500 val, and
1525 test) of ego-centric driving scenarios in urban settings.
It has dense pixel annotations (97% coverage) of 19 classes
among which 8 have instance-level segmentations.

ADE20k [54] has over 25k images (20k train, 2k val,
3k test) that are densely annotated with an open-dictionary
label set. For the 2017 Places Challenge2, 100 thing and 50
stuff classes that cover 89% of all pixels are selected. We
use this closed vocabulary in our study.

Mapillary Vistas [35] has 25k street-view images (18k
train, 2k val, 5k test) in a wide range of resolutions. The
‘research edition’ of the dataset is densely annotated (98%
pixel coverage) with 28 stuff and 37 thing classes.

6. Human Consistency Study

One advantage of panoptic segmentation is that it en-
ables measuring human annotation consistency. Aside from
this being interesting as an end in itself, human consistency
studies allow us to understand the task in detail, including
details of our proposed metric and breakdowns of human
consistency along various axes. This gives us insight into
intrinsic challenges posed by the task without biasing our
analysis by algorithmic choices. Furthermore, human stud-
ies help ground machine performance (discussed in §7) and
allow us to calibrate our understanding of the task.

1COCO instance segmentations contain overlaps. We collected depth
ordering for all pairs of overlapping instances in COCO to resolve these
overlaps: http://cocodataset.org/#panoptic-2018.

2http://placeschallenge.csail.mit.edu

9408

floor

rug ✔  

building

tram ✔  

Figure 3: Segmentation ﬂaws. Images are zoomed and cropped.
Top row (Vistas image): both annotators identify the object as
a car, however, one splits the car into two cars. Bottom row
(Cityscapes image): the segmentation is genuinely ambiguous.

Figure 4: Classiﬁcation ﬂaws. Images are zoomed and cropped.
Top row (ADE20k image): simple misclassiﬁcation. Bottom row
(Cityscapes image): the scene is extremely difﬁcult, tram is the
correct class for the segment. Many errors are difﬁcult to resolve.

Cityscapes 69.7 71.3
ADE20k
67.1 70.3
57.5 62.6
Vistas

PQ PQSt PQTh
67.4
65.9
53.4

SQ SQSt SQTh RQ RQSt RQTh
80.2
84.2 84.4
76.4
85.8 85.5
79.5 81.6
67.7

83.9
85.9
77.9

82.1
78.0
71.4

83.4
82.4
76.0

Cityscapes 35.1 62.3 84.8 67.8 81.0 89.9 51.5
49.9 69.4 79.0 78.0 84.0 87.8 64.2
ADE20k
Vistas
35.6 47.7 69.4 70.1 76.6 83.1 51.5

PQS PQM PQL SQS SQM SQL RQS RQM RQL
94.1
89.8
82.6

76.5
82.5
62.3

Table 1: Human consistency for stuff vs. things. Panoptic, seg-
mentation, and recognition quality (PQ, SQ, RQ) averaged over
classes (PQ=SQ×RQ per class) are reported as percentages. Per-
haps surprisingly, we ﬁnd that human consistency on each dataset
is relatively similar for both stuff and things.

Table 2: Human consistency vs. scale, for small (S), medium (M)
and large (L) objects. Scale plays a large role in determining hu-
man consistency for panoptic segmentation. On large objects both
SQ and RQ are above 80 on all datasets, while for small objects
RQ drops precipitously. SQ for small objects is quite reasonable.

Human annotations. To enable human consistency anal-
ysis, dataset creators graciously supplied us with 30 doubly
annotated images for Cityscapes, 64 for ADE20k, and 46
for Vistas. For Cityscapes and Vistas, the images are an-
notated independently by different annotators. ADE20k is
annotated by a single well-trained annotator who labeled
the same set of images with a gap of six months. To mea-
sure panoptic quality (PQ) for human annotators, we treat
one annotation for each image as ground truth and the other
as the prediction. Note that the PQ is symmetric w.r.t. the
ground truth and prediction, so order is unimportant.

Human consistency. First, Table 1 shows human con-
sistency on each dataset, along with the decomposition of
PQ into segmentation quality (SQ) and recognition qual-
ity (RQ). As expected, humans are not perfect at this task,
which is consistent with studies of annotation quality from
[6, 54, 35]. Visualizations of human segmentation and clas-
siﬁcation errors are shown in Figures 3 and 4, respectively.

We note that Table 1 establishes a measure of annotator
agreement on each dataset, not an upper bound on human
consistency. We further emphasize that numbers are not
comparable across datasets and should not be used to assess
dataset quality. The number of classes, percent of annotated
pixels, and scene complexity vary across datasets, each of
which signiﬁcantly impacts annotation difﬁculty.

Stuff vs. things. PS requires segmentation of both stuff
and things. In Table 1 we also show PQSt and PQTh which
is the PQ averaged over stuff classes and thing classes, re-
spectively. For Cityscapes and ADE20k human consistency
for stuff and things are close, on Vistas the gap is a bit larger.
Overall, this implies stuff and things have similar difﬁculty,
although thing classes are somewhat harder. We refer to the
arXiv version of the paper for further analysis of the metric.
Small vs. large objects. To analyze how PQ varies with
object size we partition the datasets into small (S), medium
(M), and large (L) objects by considering the smallest 25%,
middle 50%, and largest 25% of objects in each dataset,
respectively. In Table 2, we see that for large objects hu-
man consistency for all datasets is quite good. For small
objects, RQ drops signiﬁcantly implying human annotators
often have a hard time ﬁnding small objects. However, if a
small object is found, it is segmented relatively well.

7. Machine Performance Baselines

We now present simple machine baselines for panoptic
segmentation. We are interested in three questions: (1) How
do heuristic combinations of top-performing instance and
semantic segmentation systems perform on panoptic seg-
mentation? (2) How does PQ compare to existing metrics
like AP and IoU? (3) How do the machine results compare
to the human results that we presented previously?

9409

Cityscapes

Mask R-CNN+COCO [14] 36.4
Mask R-CNN [14]
31.5

AP APNO PQTh SQTh RQTh
67.8
63.0

79.4
78.7

33.1
28.0

54.0
49.6

ADE20k

Megvii [31]
G-RMI [10]

AP APNO PQTh SQTh RQTh
49.6
30.1
43.2
24.6

81.6
79.3

24.8
20.6

41.1
35.3

Cityscapes

PSPNet multi-scale [53]
PSPNet single-scale [53]

ADE20k

CASIA IVA JD [12]
G-RMI [11]

IoU

80.6
79.6

IoU

32.3
30.6

PQSt
66.6
65.2

PQSt
27.4
19.3

SQSt
82.2
81.6

SQSt
61.9
58.7

RQSt
79.3
78.0

RQSt
33.7
24.3

Table 3: Machine results on instance segmentation (stuff classes
ignored). Non-overlapping predictions are obtained using the pro-
posed heuristic. APNO is AP of the non-overlapping predictions.
As expected, removing overlaps harms AP as detectors beneﬁt
from predicting multiple overlapping hypotheses. Methods with
better AP also have better APNO and likewise improved PQ.

Table 4: Machine results on semantic segmentation (thing
classes ignored). Methods with better mean IoU also show better
PQ results. Note that G-RMI has quite low PQ. We found this is
because it hallucinates many small patches of classes not present
in an image. While this only slightly affects IoU which counts
pixel errors it severely degrades PQ which counts instance errors.

Algorithms and data. We want to understand panoptic
segmentation in terms of existing well-established methods.
Therefore, we create a basic PS system by applying reason-
able heuristics (described shortly) to the output of existing
top instance and semantic segmentation systems.

We obtained algorithm output for three datasets. For
Cityscapes, we use the val set output generated by the cur-
rent leading algorithms (PSPNet [53] and Mask R-CNN
[14] for semantic and instance segmentation, respectively).
For ADE20k, we received output for the winners of both
the semantic [12, 11] and instance [31, 10] segmentation
tracks on a 1k subset of test images from the 2017 Places
Challenge. For Vistas, which is used for the LSUN’17 Seg-
mentation Challenge, the organizers provide us with 1k test
images and results from the winning entries for the instance
and semantic segmentation tracks [29, 52].

Using this data, we start by analyzing PQ for the instance
and semantic segmentation tasks separately, and then exam-
ine the full panoptic segmentation task. Note that our ‘base-
lines’ are very powerful and that simpler baselines may be
more reasonable for fair comparison in papers on PS.

Instance segmentation.
Instance segmentation algo-
rithms produce overlapping segments. To measure PQ, we
must ﬁrst resolve these overlaps. To do so we develop a sim-
ple non-maximum suppression (NMS)-like procedure. We
ﬁrst sort the predicted segments by their conﬁdence scores
and remove instances with low scores. Then, we iterate over
sorted instances, starting from the most conﬁdent. For each
instance we ﬁrst remove pixels which have been assigned to
previous segments, then, if a sufﬁcient fraction of the seg-
ment remains, we accept the non-overlapping portion, oth-
erwise we discard the entire segment. All thresholds are se-
lected by grid search to optimize PQ. Results on Cityscapes
and ADE20k are shown in Table 3 (Vistas is omitted as it
only had one entry to the 2017 instance challenge). Most
importantly, AP and PQ track closely, and we expect im-
provements in a detector’s AP will also improve its PQ.
Semantic segmentation. Semantic segmentations have
no overlapping segments by design, and therefore we can

directly compute PQ. In Table 4 we compare mean IoU,
a standard metric for this task, to PQ. For Cityscapes, the
PQ gap between methods corresponds to the IoU gap. For
ADE20k, the gap is much larger. This is because whereas
IoU counts correctly predicted pixel, PQ operates at the
level of instances. See the Table 4 caption for details.
Panoptic segmentation. To produce algorithm outputs
for PS, we start from the non-overlapping instance seg-
ments from the NMS-like procedure described previously.
Then, we combine those segments with semantic segmenta-
tion results by resolving any overlap between thing and stuff
classes in favor of the thing class (i.e., a pixel with a thing
and stuff label is assigned the thing label and its instance
id). This heuristic is imperfect but sufﬁcient as a baseline.

Table 5 compares PQSt and PQTh computed on the com-
bined (‘panoptic’) results to the performance achieved from
the separate predictions discussed above. For these results
we use the winning entries from each respective competi-
tion for both the instance and semantic tasks. Since overlaps
are resolved in favor of things, PQTh is constant while PQSt
is slightly lower for the panoptic predictions. Visualizations
of panoptic outputs are shown in Figure 5.
Human vs. machine panoptic segmentation. To com-
pare human vs. machine PQ, we use the machine panoptic
predictions described above. For human results, we use the
dual-annotated images described in §6 and use bootstrap-
ping to obtain conﬁdence intervals since these image sets
are small. These comparisons are imperfect as they use dif-
ferent test images and are averaged over different classes
(some classes without matches in the dual-annotated tests
sets are omitted), but they can still give some useful signal.
We present the comparison in Table 6. For SQ, ma-
chines trail humans only slightly. On the other hand, ma-
chine RQ is dramatically lower than human RQ, especially
on ADE20k and Vistas. This implies that recognition, i.e.,
classiﬁcation, is the main challenge for current methods.
Overall, there is a signiﬁcant gap between human and ma-
chine performance. We hope that this gap will inspire future
research for the proposed panoptic segmentation task.

9410

e
g
a
m

i

h
t
u
r
t
d
n
u
o
r
g

n
o
i
t
c
i
d
e
r
p

Figure 5: Panoptic segmentation results on Cityscapes (left two) and ADE20k (right three). Predictions are based on the merged outputs
of state-of-the-art instance and semantic segmentation algorithms (see Tables 3 and 4). Colors for matched segments (IoU>0.5) match
(crosshatch pattern indicates unmatched regions and black indicates unlabeled regions). Best viewed in color and with zoom.

Cityscapes

machine-separate
machine-panoptic

ADE20k

machine-separate
machine-panoptic

Vistas

machine-separate
machine-panoptic

PQ

n/a
61.2

PQ

n/a
35.6

PQ

n/a
38.3

PQSt
66.6
66.4

PQSt
27.4
24.5

PQSt
43.7
41.8

PQTh
54.0
54.0

PQTh
41.1
41.1

PQTh
35.7
35.7

Cityscapes

human
machine

ADE20k

human
machine

Vistas

human
machine

PQ
69.6 +2.5
61.2

−2.7

PQ
67.6 +2.0
35.6

−2.0

PQ
57.7 +1.9
38.3

−2.0

SQ
84.1 +0.8
80.9

−0.8

SQ
85.7 +0.6
74.4

−0.6

SQ
79.7 +0.8
73.6

−0.7

RQ
82.0 +2.7
74.4

−2.9

RQ
78.6 +2.1
43.2

−2.1

RQ
71.6 +2.2
47.7

−2.3

PQSt
71.2 +2.3
66.4

−2.5

PQSt
71.0 +3.7
24.5

−3.2

PQSt
62.7 +2.8
41.8

−2.8

PQTh
67.4 +4.6
54.0

−4.9

PQTh
66.4 +2.3
41.1

−2.4

PQTh
53.6 +2.7
35.7

−2.8

Table 5: Panoptic vs. independent predictions. The ‘machine-
separate’ rows show PQ of semantic and instance segmentation
methods computed independently (see also Tables 3 and 4). For
‘machine-panoptic’, we merge the non-overlapping thing and stuff
predictions obtained from state-of-the-art methods into a true
panoptic segmentation of the image. Due to the merging heuristic
used, PQTh stays the same while PQSt is slightly degraded.

Table 6: Human vs. machine performance. On each of the con-
sidered datasets human consistency is much higher than machine
performance (approximate comparison, see text for details). This
is especially true for RQ, while SQ is closer. The gap is largest on
ADE20k and smallest on Cityscapes. Note that as only a small set
of human annotations is available, we use bootstrapping and show
the the 5th and 95th percentiles error ranges for human results.

8. Future of Panoptic Segmentation

Our goal is to drive research in novel directions by invit-
ing the community to explore the new panoptic segmenta-
tion task. We believe that the proposed task can lead to
expected and unexpected innovations. We conclude by dis-
cussing some of these possibilities and our future plans.

Motivated by simplicity, the PS ‘algorithm’ in this paper
is based on the heuristic combination of outputs from top-
performing instance and semantic segmentation systems.
This approach is a basic ﬁrst step, but we expect more inter-
esting algorithms to be introduced. Speciﬁcally, we hope to
see PS drive innovation in at least two areas: (1) Deeply in-
tegrated end-to-end models that simultaneously address the
dual stuff-and-thing nature of PS. A number of instance seg-
mentation approaches including [28, 2, 3, 18] are designed

to produce non-overlapping instance predictions and could
serve as the foundation of such a system. (2) Since a PS
cannot have overlapping segments, some form of higher-
level ‘reasoning’ may be beneﬁcial, for example, based on
extending learnable NMS [7, 16] to PS. We hope that the
panoptic segmentation task will invigorate research in these
areas leading to exciting new breakthroughs in vision.

Finally we note that the panoptic segmentation task was
featured as a challenge track by both the COCO [25] and
Mapillary Vistas [35] recognition challenges and that the
proposed task has already begun to gain traction in the com-
munity (e.g. [23, 47, 48, 27, 22, 21, 17] address PS).

Acknowledgements: This work was partially funded by the Euro-
pean Research Council (ERC) under the European Unions Horizon
2020 research and innovation programme (gr. #647769).

9411

References

[1] Edward H Adelson. On seeing stuff: the perception of mate-
rials by humans and machines. In Human Vision and Elec-
tronic Imaging, 2001. 1

[2] Anurag Arnab and Philip HS Torr.

segmentation with a dynamically instantiated network.
CVPR, 2017. 2, 3, 8

Pixelwise instance
In

[3] Min Bai and Raquel Urtasun. Deep watershed transform for

instance segmentation. In CVPR, 2017. 3, 8

[4] Holger Caesar, Jasper Uijlings, and Vittorio Ferrari. COCO-
Stuff: Thing and stuff classes in context. In CVPR, 2018. 2,
5

[5] Liang-Chieh Chen, George Papandreou, Iasonas Kokkinos,
Kevin Murphy, and Alan L Yuille. DeepLab: Semantic im-
age segmentation with deep convolutional nets, atrous con-
volution, and fully connected CRFs. PAMI, 2018. 1

[6] Marius Cordts, Mohamed Omran, Sebastian Ramos, Timo
Rehfeld, Markus Enzweiler, Rodrigo Benenson, Uwe
Franke, Stefan Roth, and Bernt Schiele. The cityscapes
dataset for semantic urban scene understanding. In CVPR,
2016. 2, 3, 5, 6

[7] Chaitanya Desai, Deva Ramanan, and Charless C Fowlkes.
Discriminative models for multi-class object layout. IJCV,
2011. 8

[8] P. Doll´ar, C. Wojek, B. Schiele, and P. Perona. Pedestrian
detection: An evaluation of the state of the art. PAMI, 2012.
2

[9] Mark Everingham, SM Ali Eslami, Luc Van Gool, Christo-
pher KI Williams, John Winn, and Andrew Zisserman. The
PASCAL visual object classes challenge: A retrospective.
IJCV, 2015. 2, 3

[10] Alireza Fathi, Nori Kanazawa, and Kevin Murphy. Places
challenge 2017: instance segmentation, G-RMI team. 2017.
7

[11] Alireza Fathi, Kai Yang, and Kevin Murphy. Places chal-

lenge 2017: scene parsing, G-RMI team. 2017. 7

[12] Jun Fu, Jing Liu, Longteng Guo, Haijie Tian, Fei Liu, Han-
qing Lu, Yong Li, Yongjun Bao, and Weipeng Yan. Places
challenge 2017: scene parsing, CASIA IVA JD team. 2017.
7

[13] Bharath Hariharan, Pablo Arbel´aez, Ross Girshick, and Ji-
tendra Malik. Simultaneous detection and segmentation. In
ECCV, 2014. 4, 5

[14] Kaiming He, Georgia Gkioxari, Piotr Doll´ar, and Ross Gir-

shick. Mask R-CNN. In ICCV, 2017. 1, 2, 7

[15] J. Hosang, R. Benenson, P. Doll´ar, and B. Schiele. What

makes for effective detection proposals? PAMI, 2015. 1

[16] J Hosang, R Benenson, and B Schiele. Learning non-

maximum suppression. PAMI, 2017. 8

[19] Iasonas Kokkinos. UberNet: Training a universal convolu-
tional neural network for low-, mid-, and high-level vision
using diverse datasets and limited memory. In CVPR, 2017.
3

[20] Alex Krizhevsky, Ilya Sutskever, and Geoff Hinton.

Im-
ageNet classiﬁcation with deep convolutional neural net-
works. In NIPS, 2012. 2

[21] Jie Li, Allan Raventos, Arjun Bhargava, Takaaki Tagawa,
and Adrien Gaidon. Learning to fuse things and stuff.
arXiv:1812.01192, 2018. 8

[22] Qizhu Li, Anurag Arnab, and Philip HS Torr. Weakly-and

semi-supervised panoptic segmentation. In ECCV, 2018. 8

[23] Yanwei Li, Xinze Chen, Zheng Zhu, Lingxi Xie, Guan
Attention-
segmentation.

Huang, Dalong Du, and Xingang Wang.
guided
network
arXiv:1812.03904, 2018. 8

panoptic

uniﬁed

for

[24] Yi Li, Haozhi Qi, Jifeng Dai, Xiangyang Ji, and Yichen Wei.
Fully convolutional instance-aware semantic segmentation.
In CVPR, 2017. 2

[25] Tsung-Yi Lin, Michael Maire, Serge Belongie, James Hays,
Pietro Perona, Deva Ramanan, Piotr Doll´ar, and C Lawrence
Zitnick. Microsoft COCO: Common objects in context. In
ECCV, 2014. 2, 5, 8

[26] Ce Liu, Jenny Yuen, and Antonio Torralba. SIFT ﬂow:
Dense correspondence across scenes and its applications.
PAMI, 2011. 2, 3

[27] Huanyu Liu, Chao Peng, Changqian Yu, Jingbo Wang, Xu
Liu, Gang Yu, and Wei Jiang. An end-to-end network for
panoptic segmentation. arXiv:1903.05027, 2019. 8

[28] Shu Liu, Jiaya Jia, Sanja Fidler, and Raquel Urtasun. SGN:
Sequential grouping networks for instance segmentation. In
CVPR, 2017. 2, 3, 8

[29] Shi Liu, Lu Qi, Haifang Qin, Jianping Shi, and Jiaya
Jia. LSUN’17: insatnce segmentation task, UCenter winner
team. 2017. 7

[30] Jonathan Long, Evan Shelhamer, and Trevor Darrell. Fully
In

convolutional networks for semantic segmentation.
CVPR, 2015. 1, 3, 5

[31] Ruixuan Luo, Borui Jiang, Tete Xiao, Chao Peng, Yuning
Jiang, Zeming Li, Xiangyu Zhang, Gang Yu, Yadong Mu,
and Jian Sun. Places challenge 2017: instance segmentation,
Megvii (Face++) team. 2017. 7

[32] Jitendra Malik, Pablo Arbel´aez, Jo˜ao Carreira, Katerina
Fragkiadaki, Ross Girshick, Georgia Gkioxari, Saurabh
Gupta, Bharath Hariharan, Abhishek Kar, and Shubham Tul-
siani. The three R’s of computer vision: Recognition, recon-
struction and reorganization. PRL, 2016. 3

[33] David R Martin, Charless C Fowlkes, and Jitendra Ma-
lik. Learning to detect natural image boundaries using local
brightness, color, and texture cues. PAMI, 2004. 5

[17] Alexander Kirillov, Ross Girshick, Kaiming He, and Piotr
Doll´ar. Panoptic feature pyramid networks. In CVPR, 2019.
8

[34] Ishan Misra, Abhinav Shrivastava, Abhinav Gupta, and Mar-
tial Hebert. Cross-stitch networks for multi-task learning. In
CVPR, 2016. 3

[18] Alexander Kirillov, Evgeny Levinkov, Bjoern Andres, Bog-
InstanceCut: from

dan Savchynskyy, and Carsten Rother.
edges to instances with multicut. In CVPR, 2017. 2, 3, 8

[35] Gerhard Neuhold, Tobias Ollmann, Samuel Rota Bul`o, and
Peter Kontschieder. The mapillary vistas dataset for semantic
understanding of street scenes. In CVPR, 2017. 2, 3, 5, 6, 8

9412

[36] Pedro O Pinheiro, Ronan Collobert, and Piotr Doll´ar. Learn-

ing to segment object candidates. In NIPS, 2015. 2

[37] Shaoqing Ren, Kaiming He, Ross Girshick, and Jian Sun.
Faster R-CNN: Towards real-time object detection with re-
gion proposal networks. In NIPS, 2015. 1

[38] Olga Russakovsky, Jia Deng, Hao Su, Jonathan Krause, San-
jeev Satheesh, Sean Ma, Zhiheng Huang, Andrej Karpathy,
Aditya Khosla, Michael Bernstein, Alexander C. Berg, and
Li Fei-Fei. ImageNet Large Scale Visual Recognition Chal-
lenge. IJCV, 2015. 2

[39] Jamie Shotton, John Winn, Carsten Rother, and Antonio Cri-
minisi. Textonboost: Joint appearance, shape and context
modeling for multi-class object recog. and segm. In ECCV,
2006. 2

[40] Min Sun, B. Kim, Pushmeet Kohli, and Silvio Savarese. Re-
lating things and stuff via object property interactions. PAMI,
2014. 3, 4

[41] Joseph Tighe and Svetlana Lazebnik. Finding things: Image
parsing with regions and per-exemplar detectors. In CVPR,
2013. 3, 4

[42] Joseph Tighe, Marc Niethammer, and Svetlana Lazebnik.
Scene parsing with object instances and occlusion ordering.
In CVPR, 2014. 2, 3, 4

[43] Zhuowen Tu, Xiangrong Chen, Alan L Yuille, and Song-
Image parsing: Unifying segmentation, detec-

Chun Zhu.
tion, and recognition. IJCV, 2005. 2, 3

[44] R. Vaillant, C. Monrocq, and Y. LeCun. Original approach
for the localisation of objects in images. IEE Proc. on Vision,
Image, and Signal Processing, 1994. 2

[45] CJ Van Rijsbergen. Information retrieval. London: Butter-

worths, 1979. 5

[46] Paul Viola and Michael Jones. Rapid object detection using

a boosted cascade of simple features. In CVPR, 2001. 2

[47] Yuwen Xiong, Renjie Liao, Hengshuang Zhao, Rui Hu, Min
Bai, Ersin Yumer, and Raquel Urtasun. UPSNet: A uniﬁed
panoptic segmentation network. arXiv:1901.03784, 2019. 8
[48] Tien-Ju Yang, Maxwell D Collins, Yukun Zhu, Jyh-Jing
Hwang, Ting Liu, Xiao Zhang, Vivienne Sze, George Pa-
pandreou, and Liang-Chieh Chen. DeeperLab: Single-shot
image parser. arXiv:1902.05093, 2019. 8

[49] Yi Yang, Sam Hallman, Deva Ramanan, and Charless C
Fowlkes. Layered object models for image segmentation.
PAMI, 2012. 4

[50] Jian Yao, Sanja Fidler, and Raquel Urtasun. Describing the
scene as a whole: Joint object detection, scene classiﬁcation
and semantic segmentation. In CVPR, 2012. 2, 3, 4

[51] Fisher Yu and Vladlen Koltun. Multi-scale context aggrega-

tion by dilated convolutions. In ICLR, 2016. 1

[52] Yi Zhang, Hengshuang Zhao, and Jianping Shi. LSUN’17:

semantic segmentation task, PSPNet winner team. 2017. 7

[53] Hengshuang Zhao, Jianping Shi, Xiaojuan Qi, Xiaogang
In

Wang, and Jiaya Jia. Pyramid scene parsing network.
CVPR, 2017. 7

[54] Bolei Zhou, Hang Zhao, Xavier Puig, Sanja Fidler, Adela
Scene parsing through

Barriuso, and Antonio Torralba.
ADE20K dataset. In CVPR, 2017. 2, 3, 5, 6

[55] Yan Zhu, Yuandong Tian, Dimitris Mexatas, and Piotr

Doll´ar. Semantic amodal segmentation. In CVPR, 2017. 3

9413

