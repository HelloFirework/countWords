Geometry-Aware Symmetric Domain Adaptation for Monocular Depth

Estimation

Shanshan Zhao1

Huan Fu1

Mingming Gong2,3

Dacheng Tao1

1UBTECH Sydney AI Center, School of Computer Science, FEIT,

University of Sydney, Darlington, NSW 2008, Australia

2Department of Biomedical Informatics, University of Pittsburgh

3Department of Philosophy, Carnegie Mellon University

{szha4333@uni., hufu6371@uni., dacheng.tao@}sydney.edu.au

mig73@pitt.edu

Abstract

Supervised depth estimation has achieved high accuracy
due to the advanced deep network architectures. Since the
groundtruth depth labels are hard to obtain, recent meth-
ods try to learn depth estimation networks in an unsuper-
vised way by exploring unsupervised cues, which are effec-
tive but less reliable than true labels. An emerging way
to resolve this dilemma is to transfer knowledge from syn-
thetic images with ground truth depth via domain adapta-
tion techniques. However, these approaches overlook spe-
ciﬁc geometric structure of the natural images in the tar-
get domain (i.e., real data), which is important for high-
performing depth prediction. Motivated by the observation,
we propose a geometry-aware symmetric domain adapta-
tion framework (GASDA) to explore the labels in the syn-
thetic data and epipolar geometry in the real data joint-
ly. Moreover, by training two image style translators and
depth estimators symmetrically in an end-to-end network,
our model achieves better image style transfer and gen-
erates high-quality depth maps. The experimental results
demonstrate the effectiveness of our proposed method and
comparable performance against the state-of-the-art. Code
will be publicly available at: https://github.com/
sshan-zhao/GASDA.

1. Introduction

Monocular depth estimation [44, 45, 9, 28] has been an
active research area in the ﬁeld of computer vision. Recent
years have witnessed the great strides in this task, especial-
ly after deep convolutional neural networks (DCNNs) were
exploited to estimate depth from a single image successful-
ly [9]. Until now, there have been lots of follow-up work-
s [35, 30, 8, 31, 54, 51, 10] improving or extending this
work. However, since the proposed deep models are trained

Real Image

Synthetic Image

Real2Syn Image

Syn2Real Image

Ground Truth

GASDA

Figure 1: Estimated Depth by GASDA. Top to bottom: input re-
al image in the target domain (KITTI dataset [38]) and synthetic
image for training (vKITTI dataset [11]), intermediate generated
images in our approach, ground truth depth map and estimated
depth map using proposed GASDA.

in a fully supervised fashion, they require a large amount of
data with ground truth depth, which is expensive to acquire
in practice. To address this issue, unsupervised monocular
depth estimation has been proposed [16, 57, 14, 53], using
geometry-based cues and without the need of image-depth
pairs during training. Unfortunately, this kind of method
tends to be vulnerable to illumination change, occlusion and
blurring and so on. Compared to real-world data, synthet-
ic data is much easier to obtain the depth map. As a re-
sult, some works propose to exploit synthetic data for visual
tasks [29, 37, 7]. However, due to domain shift from syn-
thetic to real, the model trained on synthetic data often fails
to perform well on real data. To deal with this issue, domain
adaptation techniques are utilized to reduce the discrepancy
between datasets/domains 1 [2, 5, 37].

1We will use domain and dataset interchangeably for the same meaning

in most cases.

9788

Existing works [2, 26, 59] using synthetic data via do-
main adaptation have achieved impressive performance for
monocular depth estimation. These approaches typically
perform domain adaptation either based on synthetic-to-
realistic translation or inversely. However, due to the lack of
paired images, the image translation function usually intro-
duces undesirable distortions in addition to the style change.
The distorted image structures signiﬁcantly degrade the per-
formance of successive depth prediction. Fortunately, the
unsupervised cues in the real images, for example, stereo
pairs, produces additional constraints on the possible depth
predictions. Therefore, it is essential to simultaneously ex-
plore both synthetic and real images and the corresponding
depth cues for generating higher-quality depth maps.

Motivated by the above analysis, we propose a
Geometry-Aware Symmetric Domain Adaptation Net-
work (GASDA) for unsupervised monocular depth estima-
tion. This framework consists of two main parts, namely
symmetric style translation and monocular depth estima-
tion.
Inspired by CycleGAN [61], our GASDA employs
both synthetic-to-realistic and realistic-to-synthetic transla-
tions coupled with a geometry consistency loss based on the
epipolar geomery of the real stereo images. Our network is
learned by groundtruth labels from the synthetic domain as
well as the epipolar geometry of the real domain. Addition-
ally, the learning process in the real and synthetic domains
can be regularized by enforcing consistency on the depth
predictions. By training the style translation and depth pre-
diction networks in an end-to-end fashion, our model is able
to translate images without distorting the geometric and se-
mantic content, and thus achieves better depth prediction
performance. Our contributions can be summarized as fol-
lows:

• We propose an end-to-end domain adaptation frame-
work for monocular depth estimation. The model
can generate high-quality results for both image style
translation and depth estimation.

• We show that training the monocular depth estimator
using ground truth depth in the synthetic domain cou-
pled with the epipolar geometry in the real domain can
boost the performance.

• We demonstrate the effectiveness of our method on
KITTI dataset [38] and the generalization performance
on Make3D dataset [45].

2. Related Work

Monocular Depth Estimation has been intensively s-
tudied over the past decade due to its crucial role in 3D
scene understanding. Typical approaches sought the solu-
tion by exploiting probabilistic graphical models (e.g., M-
RFs) [45, 44, 33], and non-parametric techniques [36, 24,

34]. However, these methods showed some limitations in
performance and efﬁciency because of the employment of
hand-crafted features and the low inference speed.

Recent studies demonstrated that high-performing depth
estimators can be obtained relying on deep convolutional
neural networks (DCNNs) [9, 35, 22, 55, 41, 40, 3, 30, 42,
4]. Eigen et al. [9] developed the ﬁrst end-to-end deep mod-
el for depth estimation, which consists of a coarse-scale net-
work and a ﬁne-scale network. To exploit the relationships
among image features, Liu et al. [35] proposed to integrate
continuous CRFs with DCNNs at super-pixel level. While
previous works considered depth estimation as a regression
task, Fu et al. [10] solved depth estimation in the discrete
paradigm by proposing an ordinal regression loss to encour-
age the ordinal competition among depth values.

A weakness of supervised depth estimation is the heavy
requirement of annotated training images. To mitigate the
issue, several notable attempts have investigated depth esti-
mation in an unsupervised manner by means of stereo cor-
respondence. Xie et al. [53] proposed the Deep3D net-
work for 2D-to-3D conversion by minimizing the pixel-
wise reconstruction error. This work motivated the develop-
ment of subsequent unsupervised depth estimation network-
s [14, 16, 56, 60]. In speciﬁc, Garg et al. [14] showed that
unsupervised depth estimation could be recast as an image
reconstruction problem according to the epipolar geometry.
Following Garg et al. [14], several later works improved the
structure by exploiting left-right consistency [16], learning
depth in a semi-supervised way [27], and introducing tem-
poral photometric constraints [57].

Domain Adaptation [39] aims to address the problem
that the model trained on one dataset fails to generalize to
another due to dataset bias [49]. In this community, previ-
ous works either learn the domain-invariant representation-
s on a feature space [12, 13, 37, 1, 19, 18, 32] or learn
a mapping between the source and target domains at fea-
ture or pixel level [43, 47, 17, 58]. For example, Long et
al. [37] aligned feature distribution across the source and
target domains by minimizing a Maximum Mean Discrep-
ancy (MMD) [21]. Tzeng et al. [50] proposed to minimize
MMD and the classiﬁcation error jointly in a DCNN frame-
work. Sun et al. [47] proposed to match the mean and co-
variance of the two domain’s deep features using the Corre-
lation Alignment (CORAL) loss [46].

Coming to domain adaptation for depth estimation, At-
apour et al. [2] developed a two-stage framework. In specif-
ic, they ﬁrst learned a translator to stylize the natural images
so as to make them indistinguishable with the synthetic im-
ages, and then trained a depth estimation network using the
original synthetic images in a supervised manner. Kundu et
al. [26] proposed a content congruent regularization method
to tackle the model collapse issue caused by domain adap-
tation in high dimensional feature space. Recently, Zheng

9789

S

MDE

D

S

F

MDE

D

S

S2T

F

MDE

D

S

S2T

MDE

D

AL

AL

AL

AL

AL

AL

T

T2S

T

F

T

F

D

MDE

T2S

T

Basic

AdaDepth [26]

T2Net [59]

GASDA

Figure 2: Different frameworks for monocular depth estimation using domain adaptation. Left to right: approach proposed in [26], [59]
and this work respectively. S, T, F, S2T (T2S) and D represent the synthetic data, real data, extracted feature, generated data, and estimated
depth. AL and MDE mean adversarial loss and monocular depth estimation, respectively. Compared with existing methods, our approach
utilizes real stereo data and takes into account synthetic-to-real as well as real-to-synthetic during translation.

et al. [59] developed an end-to-end adaptation network, i.e.
T2Net, where the translation network and the depth estima-
tion network are optimized jointly so that they can improve
each other. However, these works overlooked the geomet-
ric structure of the natural images from the target domain,
which has been demonstrated signiﬁcant for depth estima-
tion [16, 14]. Motivated by the observation, we propose
a novel geometry-aware symmetric domain adaptation net-
work, i.e., GASDA, by exploiting the epipolar geometry of
the stereo images. The differences between GASDA and
previous depth adaptation approaches [26, 59] are shown in
Figure 2.

3. Method

3.1. Method Overview

set of N synthetic

Given a
s, yi
s)}N

image-depth pairs
{(xi
i=1 (i.e., source domain Xs), our goal here is to
learn a monocular depth estimation model which can ac-
curately predict depth for natural images contained in Xt
(i.e., target domain).
It is difﬁcult to guarantee the mod-
el generalize well to the real data [2, 59] due to the do-
main shift. We thus provide a remedy by exploiting the
epipolar geometry between stereo images and developing
a geometry-aware symmetric domain adaptation network
(GASDA). Our GASDA consists of two main parts like ex-
isting works, including the style transfer network and the
monocular depth estimation network.

Speciﬁcally, unlike [2, 59, 26], we consider both
synthetic-to-real [59] and real-to-synthetic translations [2,
26]. As a result, we can train two depth estimators Fs and
Ft on the original synthetic data (Xs) and the generated re-
alistic data (Gs2t(Xs)) using the generator Gs2t in super-
vised manners, respectively. These two models are comple-
mentary, since Fs has clean training set Xs but dirty test set
Gt2s(Xt) generated by the generator Gt2s with noises, such
as distortion and blurs, caused by unsatisﬁed translation,
and vise verse for Ft. Nevertheless, because the depth infor-
mation is rather relevant to speciﬁc scene geometry which
might be different between source and target domains, the
models trained on Xs or Gs2t(Xs) still could fail to perform
well on Gt2s(Xt) or Xt. To provide a solution, we exploit

tl , xi

tl and xi

the epipolar geometry of real stereo pairs {(xi
tr )}M
i=1
(xi
tr represent the left and right image respectively2)
during training to encourage Ft and Fs to capture the rele-
vant geometric structure of target/real data. In addition, we
introduce an additional depth consistency loss to enforce the
predictions from Ft and Fs are consistent in local regions.
The overall framework of GASDA is illustrated in Figure 3.
For simplicity, we will omit the superscript i in most cases.

3.2. GASDA

Bidirectional Style Transfer Loss Our goal here is to learn
the bidirectional translators Gs2t and Gt2s to bridge the gap
between the source domain (synthetic) Xs and the target
domain (real) Xt. Speciﬁcally, taking Gs2t as an exam-
ple, we expect the Gs2t(xs) to be indistinguishable from
real images in Xt. We thus employ a discriminator Dt, and
train Gs2t and Dt in an adversarial fashion by performing
a minimax game following [20]. The adversarial losses are
expressed as:

Lgan(Gs2t, Dt, Xt, Xs) =Ext∼Xt [Dt(xt) − 1]+

Exs∼Xs [Dt(Gs2t(xs))],
Lgan(Gt2s, Ds, Xt, Xs) =Exs∼Xs [Ds(xs) − 1]+
Ext∼Xt [Ds(Gt2s(xt))].

(1)

Unluckily, the vanilla GANs suffer from mode collapse.
To provide a remedy and ensure the input images and the
output images paired up in a meaningful way, we utilize
the cycle-consistency loss [61]. Speciﬁcally, when feed-
ing an image xs to Gs2t and Gt2s orderly,
the output
should be a reconstruction of xs, and vice versa for xt, i.e.
Gt2s(Gs2t(xs)) ≈ xs and Gs2t(Gt2s(xt)) ≈ xt. The cycle
consistency loss has the form as:

Lcyc(Gt2s, Gs2t) = Exs∼Xs [||Gt2s(Gs2t(xs)) − xs||1]
+ Ext∼Xt [||Gs2t(Gt2s(xt)) − xt||1].

(2)
Apart from the adversarial loss and cycle consistency
loss, we also employ an identity mapping loss [48] to en-
courage the generators to preserve geometric content. The

2We will omit the subscript l of tl for the left image in most cases.

9790

Predicted 

Depth

L1
Loss

𝐹𝑠
𝐹𝑠

Synthetic Image

GAN 
Loss

𝐷𝑠

Real2Syn Image

Ground Truth

𝐺𝑠2𝑡
𝐺𝑡2𝑠

Syn2Real Image

𝐷𝑡

Left Real Image

Geometry 
Consistency

L1
Loss

GAN 
Loss

𝐹𝑡
𝐹𝑡

Geometry 
Consistency

Predicted 

Depth

Warped Image

Right Real Image

Warped Image

Depth 

Consistency

Figure 3: The proposed framework in this paper. It consists of two main parts: image style translation and monocular depth estimation.
i) Style translation network, incorporating two generators (i.e., Gs2t and Gt2s) and two discriminators (i.e., Dt and Ds), is based on
CycleGAN [61]. ii) Monocular depth estimation network contains two complementary sub-networks (i.e., Fs and Ft). We omit the side
outputs, for brevity. More details can be found in Section 3, Section 4.1.

identity mapping loss is given by:

losses. The full depth estimation loss is expressed as:

Lidt(Gt2s, Gs2t, Xs, Xt) = Exs∼Xs [||Gt2s(xs) − xs||1]
+ Ext∼Xt [||Gs2t(xt) − xt||1].
(3)
The full objective for the bidirectional style transfer is as

follow:

Ltrans(Gt2s, Gs2t, Dt, Ds) = Lgan(Gs2t, Dt, Xt, Xs)
+ Lgan(Gt2s, Ds, Xt, Xs)
+ λ1Lcyc(Gt2s, Gs2t)
+ λ2Lidt(Gt2s, Gs2t, Xt, Xs)
(4)

where λ1 and λ2 are the trade-off parameters.
Depth Estimation Loss We can now render the synthet-
ic images to the “style” of the target domain (KITTI), and
then capture a new dataset Xs2t = Gs2t(Xs). We train a
depth estimation network Ft on Xs2t in a supervised man-
ner using the provided ground truth depth in the synthetic
domain Xs. Here, we minimize the ℓ1 distance between the
predicted depth ˜yts and ground truth depth ys:

Ltde(Ft, Gs2t) = ||ys − ˜yts||.

(5)

In addition to Ft, we also train a complementary depth

estimator Fs on Xs directly with the ℓ1 loss:

Lsde(Fs) = ||ys − ˜yss||

(6)

where ˜yss = Fs(xs) is the output of Fs. Both the Fs and
Ft are important backbones to alleviate the issue of geome-
try and semantic inconsistency coupled with the subsequent

Lde(Ft, Fs, Gs2t) = Lsde(Fs) + Ltde(Ft, Gs2t).

(7)

Geometry Consistency Loss Combining the components
above, we have already formulated a naive depth adver-
sarial adaptation framework. However, the Gs2t and Gt2s
are usually imperfect, which would make the predictions
˜yst = Fs(Gt2s(xt)) and ˜ytt = Ft(xt) unsatisﬁed. Be-
sides, previous depth adaptation approaches overlook the
speciﬁc physical geometric structure which may vary from
scenes/datasets. Our main objective is to accurately esti-
mate depth for real scenes, so we consider the geometric
structure of the target data in the training phase. To this end,
we present a geometric constraint on Ft and Fs by exploit-
ing the epipolar geometry of real stereo images and unsu-
pervised cues. Speciﬁcally, we generate an inverse warped
image from the right image using the predicted depth, to re-
construct the left. We thus combine an ℓ1 with single scale
SSIM [52] term as the geometry consistency loss to align
the stereo images:

Ltgc(Ft) = η

1 − SSIM (xt, x

′

tt)

2

+ µ||xt − x

′

tt||,

Lsgc(Fs, Gt2s) = η

1 − SSIM (xt, x

′

st)

2

+ µ||xt − x

′

st||,

Lgc(Ft, Fs, Gt2s) = Ltgc(Ft) + Lsgc(Fs, Gt2s)

(8)
where Lgc represents the full geometry consistency loss,
Ltgc and Lsgc denote the geometry consistency loss of Ft

9791

12Σ

Prediction 

෤𝑦𝑠𝑡

𝐺𝑠2𝑡
𝐺𝑠2𝑡
𝐺𝑡2𝑠
𝐺𝑡2𝑠

𝐹𝑡
𝐹𝑡
𝐹𝑠
𝐹𝑠

ℒ𝑡𝑟𝑎𝑛𝑠
ℒ𝑡𝑟𝑎𝑛𝑠

backward

ℒ𝑑𝑒ℒ𝑔𝑐ℒ𝑑𝑠ℒ𝑑𝑐
ℒ𝑑𝑒ℒ𝑔𝑐ℒ𝑑𝑠ℒ𝑑𝑐

𝐺𝑠2𝑡
𝐺𝑠2𝑡
𝐺𝑡2𝑠
𝐺𝑡2𝑠

𝐹𝑡
𝐹𝑡
𝐹𝑠
𝐹𝑠

backward

ℒ𝑑𝑒ℒ𝑔𝑐ℒ𝑑𝑠ℒ𝑑𝑐
ℒ𝑑𝑒ℒ𝑔𝑐ℒ𝑑𝑠ℒ𝑑𝑐

𝐹𝑡
𝐺𝑡2𝑠
𝐺𝑡2𝑠

Prediction 

෤𝑦𝑡𝑡
𝐹𝑠
𝐹𝑠

′

Figure 4: Inference Phase (Section 3.3).

′

tt (x

st) is the inverse warp of xtr us-
and Fs respectively. x
ing bilinear sampling [23] based on the estimated depth map
ytt (yst), the baseline distance between the cameras and the
camera focal length [16]. In our experiments, η is set to be
0.85, and µ is 0.15.
Depth Smoothness Loss To encourage depths to be con-
sistent in local homogeneous regions, we exploit an edge-
aware depth smoothness loss:

Lds(Ft, Fs, Gt2s) = e−∇xt ||∇˜ytt|| + e−∇xt ||∇˜yst|| (9)

where ∇ is the ﬁrst derivative along spatial directions. We
only apply the smoothness loss to Xt and Xt2s (real data),
since Xs and Xs2t (synthetic data) have full supervision.
Depth Consistency Loss We ﬁnd that the predictions for
xt, i.e., Ft(xt) and Fs(Gt2s(xt)), show inconsistency in
many regions, which is in contrast to our intuition. One
of the possible reason is that Gt2s might fail to translate xt
with details. To enforce such coherence, we introduce an ℓ1
depth consistency loss with respect to ˜ytt and ˜yst as follows:

Ldc(Ft, Fs, Gt2s) = ||˜ytt − ˜yst||.

(10)

Full Objective Our ﬁnal loss function has the form as:

L(Gs2t, Gt2s, Dt, Ds, Ft, Fs)

= Ltrans(Gs2t, Gt2s, Dt, Ds) + γ1Lde(Ft, Fs, Gs2t)
+ γ2Lgc(Ft, Fs, Gt2s) + γ3Ldc(Ft, Fs, Gt2s)
+ γ4Lds(Ft, Fs, Gt2s)

(11)
where γn(n ∈ {1, 2, 3, 4}) are trade-off factors. We opti-
mize this objective function in an end-to-end deep network.

3.3. Inference

In the inference phase, we aim to predict the depth map
for a given image in real domain (e.g. KITTI dataset [38])
using the resultant models. In fact, there are two paths ac-
quiring predicted depth maps: xt → Ft(xt) → ˜ytt and
xt → Gt2s(xt) → xt2s → Fs(xt2s) → ˜yst, as shown in
Figure 4, and the ﬁnal prediction is the average of ˜ytt and
˜yst:

˜yt =

1
2

(˜ytt + ˜yst).

(12)

Updating Gs2t and Gt2s

Updating Ft and Fs

Figure 6: Iteratively updating stage. We learn our model by iter-
atively updating image style translators and depth estimators, i.e.,
freezing the module with dashed box while updating the one with
solidline box. See main text for details. We omit Dt and Ds for
brevity.

Input Image

Ground Truth

GASDA

Figure 8: Qualitative results on Make3D dataset [45]. Left to right:
input image, ground truth depth, and our result.

4. Experiments

In this section, we ﬁrst present the details about our net-
work architecture and the learning strategy. Then, we per-
form GASDA on one of the largest dataset in the context
of autonomous driving, i.e., KITTI dataset [38]. We also
demonstrate the generalization capabilities of our model to
other real-world scenes contained in Make3D [45]. Finally,
we conduct various ablations to analyze GASDA.

4.1. Implementation Details

Network Architecture Our proposed framework consists
of six sub-networks, which can be divided into three group-
s: Gs2t and Gt2s for image style translation, Dt and Ds for
discrimination, Ft and Fs for monocular depth estimation.
The networks in each group share the identical network ar-
chitecture but are with different parameters. Speciﬁcally,
we employ generators (Gs2t and Gt2s) and discriminators
(Ds and Dt) provided by CycleGAN [61]. For monocular
depth estimators Ft and Fs, we utilize the standard encoder-
decoder structures with skip-connections and side outputs
as [59].
Datasets The target domain is KITTI [38], which is a real-
world computer vision benchmark consisting of 42, 382 rec-
tiﬁed stereo pairs in the resolution about 375 × 1242. In
our experiments, the ground truth depth maps provided by
KITTI are only for evaluation purpose. The source domain
is Virtual KITTI (vKITTI) [11], which contains 50 photo-
realistic synthetic videos with 21, 260 image-depth pairs of

9792

Method

Supervised

Dataset

Cap

Error Metrics (lower, better)

Accuracy Metrics (higher, better)

Abs Rel

Sq Rel

RMSE

RMSE log

δ < 1.25

δ < 1.252

δ < 1.253

Eigen et al. [9]
Liu et al. [35]
Zhou et al. [60]
Zhou et al. [60]

Kuznietsov et al. [27]

Godard et al. [16]

All synthetic(baseline1)

All real(baseline2)
Kundu et al. [26]
Kundu et al. [26]

GASDA

Kuznietsov et al. [27]

Garg et al. [14]

Godard et al. [16]

All synthetic(baseline1)

All real(baseline2)
Kundu et al. [26]
Kundu et al. [26]
Zheng et al. [59]

GASDA

Yes
Yes
No
No
Semi
No
No
No
No
Semi
No

Yes
No
No
No
No
No
Semi
No
No

K
K
K

K+CS

K
K
S
K

K+S(DA)
K+S(DA)
K+S(DA)

K
K
K
S
K

K+S(DA)
K+S(DA)
K+S(DA)
K+S(DA)

80m
80m
80m
80m
80m
80m
80m
80m
80m
80m
80m

50m
50m
50m
50m
50m
50m
50m
50m
50m

0.203
0.202
0.208
0.198
0.113
0.148
0.253
0.158
0.214
0.167
0.149

0.117
0.169
0.140
0.244
0.151
0.203
0.162
0.168
0.143

1.548
1.614
1.768
1.836
0.741
1.344
2.303
1.151
1.932
1.257
1.003

0.597
1.080
0.976
1.771
0.856
1.734
1.041
1.199
0.756

6.307
6.523
6.856
6.565
4.621
5.927
6.953
5.285
7.157
5.578
4.995

3.531
5.104
4.471
5.354
4.043
6.251
4.344
4.674
3.846

0.282
0.275
0.283
0.275
0.189
0.247
0.328
0.238
0.295
0.237
0.227

0.183
0.273
0.232
0.313
0.227
0.284
0.225
0.243
0.217

0.702
0.678
0.678
0.718
0.862
0.803
0.635
0.811
0.665
0.771
0.824

0.861
0.740
0.818
0.647
0.824
0.687
0.784
0.772
0.836

0.890
0.895
0.885
0.901
0.960
0.922
0.856
0.934
0.882
0.922
0.941

0.964
0.904
0.931
0.866
0.940
0.899
0.930
0.912
0.946

0.958
0.965
0.957
0.960
0.986
0.964
0.937
0.970
0.950
0.971
0.973

0.989
0.962
0.969
0.943
0.973
0.958
0.974
0.966
0.976

Table 1: Results on KITTI dataset using the test split suggested in [9]. For the training data, K represents KITTI dataset, CS is CityScapes
dataset [6], and S is vKITTI dataset. Methods, which apply domain adaptation techniques, are marked by the gray.

Input Image

Ground Truth

Eigen et.al. [9]

Zheng et.al. [59]

GASDA

Figure 5: Qualitative comparison of our results against methods proposed by Eigen et al. [9] and Zheng et al. [59] on KITTI. Ground truth
has been interpolated for visualization. To facilitate comparison, we mask out the top regions, where ground truth depth is not available.
Our approach preserves more details and yields high-quality depth maps.

size 375 × 1242. Additionally, in order to study the gen-
eralization performance of our approach, we also apply the
trained model to Make3D dataset [45]. Since Make3D does
not offer stereo images, we directly evaluate our model on
the test split without training or further ﬁne-tuning.

Training Details We implement GASDA in PyTorch. We
train our model in a two-stage manner, i.e., a warming
up stage and end-to-end iteratively updating stage. In the
warming up stage, we ﬁrst optimize the style transfer net-
works for 10 epochs with the momentum of β1 = 0.5, β2 =
0.999, and the initial learning rate of α = 0.0002 using the
ADAM solver [25]. Then we train Ft on {Xt, Gs2t(Xs)},
and Fs on {Xs, Gt2s(Xt)} for around 20 epochs by setting
β1 = 0.9, β2 = 0.999, and α = 0.0001. To make style
translators generate high-quality images, so as to improve
the subsequent depth estimators, we ﬁne-tune the network
in an end-to-end iteratively updating fashion as shown in
Figure 6. In speciﬁc, we optimize Gs2t and Gt2s with the
supervision of Ft and Fs for m epochs, and then train Fs
and Ft for n epochs. We set m = 3 and n = 7 in our exper-
iments, and repeat this process until the network converges

(around 40 epochs). In this stage, we employ the same mo-
mentum and solver as the ﬁrst stage with the learning rates
of 2e − 6 and 1e − 5 for the two respectively. The trade-off
factors are set to λ1 = 10, λ2 = 30, γ1 = 50, γ2 = 50
and γ3 = 50 and γ4 = 0.5. In the training phase, we down-
sample all the images to 192×640, and increase the training
set size using some common data augmentation strategies,
including random horizontal ﬂipping, rotation with the de-
grees of [−5◦, 5◦], and brightness adjustment.

4.2. KITTI Dataset

We test our models on the 697 images extracted from 29
scenes, and use all the 23, 488 images contained in other 32
scenes for training (22, 600) and validation (888) [9, 16].
To make a comparison with previous works, we evaluate
our results in the regions with the ground truth depth less
than 80m or 50m using standard error and accuracy metric-
s [16, 59]. Note that, the maximum depth value in vKITTI
is 655.35m instead of 80m in KITTI, but unlike [59], we do
not clip the depth maps of vKITTI to 80m during training.
In Table 1, we report the benchmark scores on the Eigen s-

9793

Method

Supervised

Dataset

Error Metrics (lower, better)

Abs Rel

Sq Rel

RMSE RMSE log

Accuracy Metrics (higher, better)

δ < 1.25

δ < 1.252

δ < 1.253

Godard et al. [16]
Godard et al. [16]
Atapour et al. [2]

GASDA

No
No
No
No

K

K+CS

K+S∗(DA)
K+S(DA)

0.124
0.104
0.101
0.106

1.388
1.070
1.048
0.987

6.125
5.417
5.308
5.215

0.217
0.188
0.184
0.176

0.841
0.875
0.903
0.885

0.936
0.956
0.988
0.963

0.975
0.983
0.992
0.986

Table 2: Results on 200 training images of KITTI stereo 2015 benchmark [15]. S∗ is captured from GTA5, and more similar to real data
than vKITTI. Our approach yields lower errors than state-of-the-art approaches, and achieve competitive accuracy compared with [2].

Real Image

CycleGAN [61]

GASDA

Synthetic Image

CycleGAN [61]

GASDA

Figure 7: Qualitative image style translation results of our approach and CycleGAN [61]. Left: real-to-synthetic translation; Right:
synthetic-to-real translation. Our method can preserve geometric and semantic content better for both synthetic-to-real translation and the
inverse one. Note that, the translation result is a by-product of GASDA. The improvement is marked by the yellow box.

Method

Trained∗

Karsch et al. [24]
Laina et al. [30]
Kundu et al. [26]
Godard et al. [16]
Kundu et al. [26]
Atapour et al. [2]

GASDA

Yes
Yes
Yes
No
No
No
No

Error Metrics (lower, better)
RMSE
Abs Rel

Sq Rel

0.398
0.198
0.452
0.505
0.647
0.423
0.403

4.723
1.665
5.71

10.172
12.341
9.343
6.709

7.801
5.461
9.559
10.936
11.567
9.002
10.424

Table 4: Results on 134 test images of Make3D [45]. Trained∗ in-
dicates whether the model is trained on Make3D or not. Errors are
computed for depths less than 70m in a central image crop [16]. It
can be observed that our approach is comparable with those trained
on Make3D.

plit [9] where the training sets are only KITTI and vKITTI.
GASDA obtains a convincible improvement over previous
state-of-the-art methods. Speciﬁcally, we make the com-
parisons with two baselines, i.e., All synthetic (baseline1,
trained on labeled synthetic data) and All real (baseline2,
trained on real stereo pairs), and the latest domain adapta-
tion methods [59, 26] and (semi-)supervised/unsupervised
methods [9, 35, 27, 14, 16, 60]. The signiﬁcant improve-
ments in all the metrics demonstrate the superiority of our
method. Note that, GASDA yields higher scores than [26]
which employs additional ground truth depth maps for nat-
ural images contained in KITTI. GASDA cannot outper-
form [2] in the Eigen split. The main reason is that the
synthetic images employed in [2] are captured from GTA5
3, and the domain shift between GTA5 and KITTI is not
that signiﬁcant than the one between vKITTI and KITTI.

3https://github.com/aitorzip/DeepGTAV.

In addition, the training set size in [2] is about three times
than ours. However, GASDA performs competitively on the
ofﬁcial KITTI stereo 2015 dataset and Make3D compared
with [2], as reported in Table 2 and Table 4. Apart from
quantitative results, we also show some example outputs in
Figure 5. Our approach preserves more details, and is able
to recover depth information of small objects, such as the
distant cars and rails, and generate clear boundaries.

4.3. Make3D Dataset

To discuss the generalization capabilities of GASDA, we
evaluate our approach on Make3D dataset [45] quantitative-
ly and qualitatively. We do not train or further ﬁne-tune our
model using the images provide by Make3D. As shown in
Table 4 and Figure 8, although the domain shift between
Make3D and KITTI is large, our model still performs well.
Compared with state-of-the-art models [26, 24, 30] trained
on Make3D in a supervised manner and others using do-
main adaptation [26, 2], GASDA obtains impressive per-
formance.

4.4. Ablation Study

Here, we conduct a series of ablations to analyze our ap-
proach. Quantitative results are shown in Table 3, and some
sampled results for style transfer are shown in Figure 7.
Domain Adaptation We ﬁrst demonstrate the effectiveness
of domain adaptation by comparing two simple models, i.e.
SYN (Fs trained on Xs) and SYN2REAL (Ft trained on
Gs2t(Xs)). As shown in Table 3, SYN cannot capture sat-
isﬁed scores on KITTI due to the domain shift. After the
translation, the domain shift is reduced which means that
the synthetic data distribution is relative closer to real data

9794

Method

Error Metrics (lower, better)

Abs Rel

Sq Rel

RMSE RMSE log

Accuracy Metrics (higher, better)

δ < 1.25

δ < 1.252

δ < 1.253

SYN

SYN2REAL

SYN2REAL-E2E

REAL

SYN-GC

SYN2REAL-GC

SYN2REAL-GC-E2E

REAL2SYN-SYN-GC-E2E

GASDA-w/oDC

GASDA-Ft
GASDA-Fs

GASDA

Domain Adaptation

2.303
2.094
1.969

6.953
6.530
6.377

0.328
0.294
0.284

Geometry Consistency

1.151
1.123
1.112
1.130

5.285
5.255
5.213
5.227

0.238
0.235
0.233
0.231

Symmetric Domain Adaptation

1.226
1.098
1.014
1.087
1.003

5.412
5.136
5.041
5.157
4.995

0.240
0.230
0.228
0.235
0.227

0.253
0.229
0.220

0.158
0.156
0.153
0.152

0.160
0.151
0.150
0.156
0.149

0.635
0.691
0.703

0.811
0.814
0.819
0.821

0.806
0.822
0.824
0.813
0.824

0.856
0.886
0.895

0.934
0.937
0.938
0.939

0.933
0.940
0.941
0.936
0.941

0.937
0.951
0.956

0.970
0.971
0.972
0.972

0.969
0.972
0.973
0.971
0.973

Table 3: Quantitative results for ablation study on KITTI dataset using the test split suggested in [9]. SYN, REAL, REAL2SYN, and
SYN2REAL represent the model trained on Xs, Xt, Gt2s(Xt), and Gs2t(Xs); E2E represents the end-to-end training; GC and DC denote
the geometry consistency and depth consistency, respectively; GASDA-Ft (Fs) represents the output of Ft (Fs) in GASDA.

distribution. Thus, SYN2REAL is able to generalize bet-
ter to real images. Further, we train the style translators
(Gs2t and Gt2s) and the depth estimation network (Ft) in
an end-to-end fashion (SYN2REAL-E2E), which guides to
a further improvement as compared to SYN2REAL. As a
conclusion, the depth estimation network can improve the
style transfer by providing a pixel-wise semantic constraint
to the translation networks. Moreover, we can also observe
the improvement in Figure 7 by comparing the translation
results of original CycleGAN [61] with ours.
Geometry Consistency We then study the signiﬁcance
of the geometric constraint coming from stereo images
based on the epipolar geometry.
In speciﬁc, we employ
the stereo images provided by KITTI when optimizing Ft
in SYN2REAL-E2E. We enforce the geometry consisten-
cy between the stereo images as a constraint as stated
in Eq. 8. The model SYN2REAL-GC-E2E outperforms
SYN2REAL-E2E by a large margin, which demonstrates
that the geometry consistency constraint can signiﬁcant-
ly improve standard domain adaptation frameworks. On
the other hand, the comparisons among SYN2REAL-GC,
SYN-GC (trained on real data and synthetic data without
domain adaptation) and REAL (Ft trained on real stereo
images without extra data) can show the signiﬁcance of syn-
thetic data with ground truth depth and domain adaptation.
Symmetric Domain Adaptation In contrast to previous
works, we expect to fully take advantage of the bidirec-
tional style translators Gs2t and Gt2s. Thus, we learn
REAL2SYN-SYN-GC-E2E whose network architecture is
symmetrical to the aforementioned SYN2REAL-GC-E2E.
We jointly optimized the two coupled with a depth con-

sistency loss. As shown in Table 3, GASDA is superior
than GASDA-w/oDC which demonstrates the effectiveness
of the depth consistency loss. In addition, the comparison-
s (GASDA-Ft v.s. SYN2ERAL-GC-E2E and GASDA-Fs
v.s. REAL2SYN-GC-E2E) show that the two can beneﬁt
each other in the jointly training.

5. Conclusion

In this paper, we present an unsupervised monocu-
lar depth estimation framework GASDA, which trains the
monocular depth estimation model using the labelled syn-
thetic data coupled with the epipolar geometry of real stereo
data in a uniﬁed and symmetric deep learning network. Our
main motivation is learning a depth estimation model from
synthetic image-depth pairs in a supervised fashion, and at
the same time taking into account the speciﬁc scene geome-
try information of the target data. Moreover, to alleviate the
issues caused by domain shift, we reduce the domain dis-
crepancy using the bidirectional image style transfer. Final-
ly, we implement image translation and depth estimation in
an end-to-end network so that then can improve each other.
Experiments on KITTI and Make3D datasets show GAS-
DA is able to generate desirable results quantitatively and
qualitatively, and generalize well to unseen datasets.

6. Acknowledgement

This research was supported by Australian Research
Council Projects FL-170100117, DP-180103424 and IH-
180100002.

9795

References

[1] Hana Ajakan, Pascal Germain, Hugo Larochelle, Franc¸ois
Laviolette, and Mario Marchand. Domain-adversarial neural
networks. arXiv preprint arXiv:1412.4446, 2014.

[2] Amir Atapour-Abarghouei and Toby P Breckon. Real-time
monocular depth estimation using synthetic data with do-
main adaptation via image style transfer.
In Proceedings
of the IEEE Conference on Computer Vision and Pattern
Recognition, volume 18, page 1, 2018.

[3] Yuanzhouhan Cao, Zifeng Wu, and Chunhua Shen. Esti-
mating depth from monocular images as classiﬁcation using
deep fully convolutional residual networks. arXiv preprint
arXiv:1605.02305, 2016.

[4] Weifeng Chen, Zhao Fu, Dawei Yang, and Jia Deng. Single-
image depth perception in the wild. In Advances in Neural
Information Processing Systems, pages 730–738, 2016.

[5] Yuhua Chen, Wen Li, Christos Sakaridis, Dengxin Dai, and
Luc Van Gool. Domain adaptive faster r-cnn for object de-
tection in the wild. In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, pages 3339–
3348, 2018.

[6] Marius Cordts, Mohamed Omran, Sebastian Ramos, Tim-
o Rehfeld, Markus Enzweiler, Rodrigo Benenson, Uwe
Franke, Stefan Roth, and Bernt Schiele. The cityscapes
dataset for semantic urban scene understanding. In Proceed-
ings of the IEEE conference on computer vision and pattern
recognition, pages 3213–3223, 2016.

[7] Alexey Dosovitskiy, Philipp Fischer, Eddy Ilg, Philip Hauss-
er, Caner Hazirbas, Vladimir Golkov, Patrick Van Der S-
magt, Daniel Cremers, and Thomas Brox. Flownet: Learning
optical ﬂow with convolutional networks.
In Proceedings
of the IEEE International Conference on Computer Vision,
pages 2758–2766, 2015.

[8] David Eigen and Rob Fergus. Predicting depth, surface nor-
mals and semantic labels with a common multi-scale con-
volutional architecture.
In Proceedings of the IEEE Inter-
national Conference on Computer Vision, pages 2650–2658,
2015.

[9] David Eigen, Christian Puhrsch, and Rob Fergus. Depth map
prediction from a single image using a multi-scale deep net-
work. In Advances in neural information processing systems,
pages 2366–2374, 2014.

[10] Huan Fu, Mingming Gong, Chaohui Wang, Kayhan Bat-
manghelich, and Dacheng Tao. Deep ordinal regression net-
work for monocular depth estimation. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 2002–2011, 2018.

[11] Adrien Gaidon, Qiao Wang, Yohann Cabon, and Eleonora
Vig. Virtual worlds as proxy for multi-object tracking anal-
ysis.
In Proceedings of the IEEE conference on computer
vision and pattern recognition, pages 4340–4349, 2016.

[12] Yaroslav Ganin and Victor S. Lempitsky. Unsupervised do-

main adaptation by backpropagation. In ICML, 2015.

[13] Yaroslav Ganin, Evgeniya Ustinova, Hana Ajakan, Pas-
cal Germain, Hugo Larochelle, Franc¸ois Laviolette, Mario
Marchand, and Victor Lempitsky. Domain-adversarial train-

ing of neural networks. The Journal of Machine Learning
Research, 17(1):2096–2030, 2016.

[14] Ravi Garg, Vijay Kumar BG, Gustavo Carneiro, and Ian Rei-
d. Unsupervised cnn for single view depth estimation: Ge-
ometry to the rescue. In European Conference on Computer
Vision, pages 740–756. Springer, 2016.

[15] Andreas Geiger, Philip Lenz, and Raquel Urtasun. Are we
ready for autonomous driving? the kitti vision benchmark
suite. In Computer Vision and Pattern Recognition (CVPR),
2012 IEEE Conference on, pages 3354–3361. IEEE, 2012.

[16] Cl´ement Godard, Oisin Mac Aodha, and Gabriel J Bros-
tow. Unsupervised monocular depth estimation with left-
right consistency. In CVPR, volume 2, page 7, 2017.

[17] Boqing Gong, Yuan Shi, Fei Sha, and Kristen Grauman.
Geodesic ﬂow kernel for unsupervised domain adaptation.
In Computer Vision and Pattern Recognition (CVPR), 2012
IEEE Conference on, pages 2066–2073. IEEE, 2012.

[18] Mingming Gong, Kun Zhang, Biwei Huang, Clark Glymour,
Dacheng Tao, and Kayhan Batmanghelich. Causal gen-
erative domain adaptation networks. arXiv preprint arX-
iv:1804.04333, 2018.

[19] Mingming Gong, Kun Zhang, Tongliang Liu, Dacheng Tao,
Clark Glymour, and Bernhard Sch¨olkopf. Domain adapta-
tion with conditional transferable components. In Interna-
tional conference on machine learning, pages 2839–2848,
2016.

[20] Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing X-
u, David Warde-Farley, Sherjil Ozair, Aaron Courville, and
Yoshua Bengio. Generative adversarial nets.
In Advances
in neural information processing systems, pages 2672–2680,
2014.

[21] Arthur Gretton, Karsten M Borgwardt, Malte J Rasch, Bern-
hard Sch¨olkopf, and Alexander Smola. A kernel two-sample
test. Journal of Machine Learning Research, 13(Mar):723–
773, 2012.

[22] Lei He, Guanghui Wang, and Zhanyi Hu. Learning depth
from single images with deep neural network embedding fo-
cal length. IEEE Transactions on Image Processing, 2018.

[23] Max Jaderberg, Karen Simonyan, Andrew Zisserman, et al.
Spatial transformer networks. In Advances in neural infor-
mation processing systems, pages 2017–2025, 2015.

[24] Kevin Karsch, Ce Liu, and Sing Bing Kang. Depth transfer:
Depth extraction from video using non-parametric sampling.
IEEE transactions on pattern analysis and machine intelli-
gence, 36(11):2144–2158, 2014.

[25] Diederik P Kingma and Jimmy Lei Ba. Adam: Amethod
In Proc. 3rd Int. Conf. Learn.

for stochastic optimization.
Representations, 2014.

[26] Jogendra Nath Kundu, Phani Krishna Uppala, Anuj Pahuja,
and R Venkatesh Babu. Adadepth: Unsupervised content
congruent adaptation for depth estimation. arXiv preprint
arXiv:1803.01599, 2018.

[27] Yevhen Kuznietsov, J¨org St¨uckler, and Bastian Leibe. Semi-
supervised deep learning for monocular depth map predic-
tion. In Proc. of the IEEE Conference on Computer Vision
and Pattern Recognition, pages 6647–6655, 2017.

9796

[28] Lubor Ladicky, Jianbo Shi, and Marc Pollefeys. Pulling
things out of perspective. In Proceedings of the IEEE Con-
ference on Computer Vision and Pattern Recognition, pages
89–96, 2014.

[29] Wei-Sheng Lai, Jia-Bin Huang, and Ming-Hsuan Yang.
Semi-supervised learning for optical ﬂow with generative ad-
versarial networks. In Advances in Neural Information Pro-
cessing Systems, pages 354–364, 2017.

[30] Iro Laina, Christian Rupprecht, Vasileios Belagiannis, Fed-
erico Tombari, and Nassir Navab. Deeper depth prediction
with fully convolutional residual networks.
In 3D Vision
(3DV), 2016 Fourth International Conference on, pages 239–
248. IEEE, 2016.

[31] Bo Li, Chunhua Shen, Yuchao Dai, Anton Van Den Hen-
gel, and Mingyi He. Depth and surface normal estimation
from monocular images using regression on deep features
and hierarchical crfs. In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, pages 1119–
1127, 2015.

[32] Ya Li, Xinmei Tian, Mingming Gong, Yajing Liu, Tongliang
Liu, Kun Zhang, and Dacheng Tao. Deep domain gener-
alization via conditional invariant adversarial networks. In
Proceedings of the European Conference on Computer Vi-
sion (ECCV), pages 624–639, 2018.

[33] Beyang Liu, Stephen Gould, and Daphne Koller. Single
image depth estimation from predicted semantic labels. In
Computer Vision and Pattern Recognition (CVPR), 2010
IEEE Conference on, pages 1253–1260. IEEE, 2010.

[34] Ce Liu, Jenny Yuen, and Antonio Torralba. Sift ﬂow: Dense
correspondence across scenes and its applications.
IEEE
transactions on pattern analysis and machine intelligence,
33(5):978–994, 2011.

[35] Fayao Liu, Chunhua Shen, Guosheng Lin, and Ian D Reid.
Learning depth from single monocular images using deep
convolutional neural ﬁelds. IEEE Trans. Pattern Anal. Mach.
Intell., 38(10):2024–2039, 2016.

[36] Miaomiao Liu, Mathieu Salzmann, and Xuming He.
Discrete-continuous depth estimation from a single image.
In Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, pages 716–723, 2014.

[37] Mingsheng Long, Guiguang Ding, Jianmin Wang, Jiaguang
Sun, Yuchen Guo, and Philip S Yu. Transfer sparse cod-
ing for robust image representation. In Proceedings of the
IEEE conference on computer vision and pattern recogni-
tion, pages 407–414, 2013.

[38] Moritz Menze and Andreas Geiger. Object scene ﬂow for au-
tonomous vehicles. In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, pages 3061–
3070, 2015.

[39] Sinno Jialin Pan, Qiang Yang, et al. A survey on transfer
learning. IEEE Transactions on knowledge and data engi-
neering, 22(10):1345–1359, 2010.

[40] Xiaojuan Qi, Renjie Liao, Zhengzhe Liu, Raquel Urtasun,
and Jiaya Jia. Geonet: Geometric neural network for joint
depth and surface normal estimation. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 283–291, 2018.

[41] Vamshi Krishna Repala and Shiv Ram Dubey. Dual cnn
models for unsupervised monocular depth estimation. arXiv
preprint arXiv:1804.06324, 2018.

[42] Anirban Roy and Sinisa Todorovic. Monocular depth esti-
mation using neural regression forest. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 5506–5514, 2016.

[43] Kate Saenko, Brian Kulis, Mario Fritz, and Trevor Darrel-
l. Adapting visual category models to new domains.
In
European conference on computer vision, pages 213–226.
Springer, 2010.

[44] Ashutosh Saxena, Sung H Chung, and Andrew Y Ng. Learn-
ing depth from single monocular images.
In Advances in
neural information processing systems, pages 1161–1168,
2006.

[45] Ashutosh Saxena, Min Sun, and Andrew Y Ng. Make3d:
Learning 3d scene structure from a single still image. IEEE
transactions on pattern analysis and machine intelligence,
31(5):824–840, 2009.

[46] Baochen Sun, Jiashi Feng, and Kate Saenko. Return of frus-
tratingly easy domain adaptation. In AAAI, volume 6, page 8,
2016.

[47] Baochen Sun and Kate Saenko. Deep coral: Correlation
alignment for deep domain adaptation.
In European Con-
ference on Computer Vision, pages 443–450. Springer, 2016.
[48] Yaniv Taigman, Adam Polyak, and Lior Wolf. Unsuper-
vised cross-domain image generation. arXiv preprint arX-
iv:1611.02200, 2016.

[49] Antonio Torralba and Alexei A Efros. Unbiased look at
dataset bias.
In Computer Vision and Pattern Recogni-
tion (CVPR), 2011 IEEE Conference on, pages 1521–1528.
IEEE, 2011.

[50] Eric Tzeng, Judy Hoffman, Ning Zhang, Kate Saenko, and
Trevor Darrell. Deep domain confusion: Maximizing for
domain invariance. arXiv preprint arXiv:1412.3474, 2014.

[51] Peng Wang, Xiaohui Shen, Zhe Lin, Scott Cohen, Brian
Price, and Alan L Yuille. Towards uniﬁed depth and seman-
tic prediction from a single image.
In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 2800–2809, 2015.

[52] Zhou Wang, Alan C Bovik, Hamid R Sheikh, and Eero P Si-
moncelli. Image quality assessment: from error visibility to
structural similarity. IEEE transactions on image processing,
13(4):600–612, 2004.

[53] Junyuan Xie, Ross Girshick, and Ali Farhadi. Deep3d: Fully
automatic 2d-to-3d video conversion with deep convolution-
al neural networks. In European Conference on Computer
Vision, pages 842–857. Springer, 2016.

[54] Dan Xu, Elisa Ricci, Wanli Ouyang, Xiaogang Wang, and
Nicu Sebe. Multi-scale continuous crfs as sequential deep
networks for monocular depth estimation. In Proceedings of
CVPR, volume 1, 2017.

[55] Dan Xu, Wei Wang, Hao Tang, Hong Liu, Nicu Sebe, and
Elisa Ricci. Structured attention guided convolutional neural
ﬁelds for monocular depth estimation. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 3917–3925, 2018.

9797

[56] Zhichao Yin and Jianping Shi. Geonet: Unsupervised learn-
ing of dense depth, optical ﬂow and camera pose. In Pro-
ceedings of the IEEE Conference on Computer Vision and
Pattern Recognition (CVPR), volume 2, 2018.

[57] Huangying Zhan, Ravi Garg, Chamara Saroj Weeraseker-
a, Kejie Li, Harsh Agarwal, and Ian Reid. Unsupervised
learning of monocular depth estimation and visual odome-
try with deep feature reconstruction. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 340–349, 2018.

[58] Kun Zhang, Bernhard Sch¨olkopf, Krikamol Muandet, and
Zhikun Wang. Domain adaptation under target and condi-
tional shift. In International Conference on Machine Learn-
ing, pages 819–827, 2013.

[59] Chuanxia Zheng, Tat-Jen Cham, and Jianfei Cai. T2net:
Synthetic-to-realistic translation for solving single-image
depth estimation tasks. In Proceedings of the European Con-
ference on Computer Vision (ECCV), pages 767–783, 2018.
[60] Tinghui Zhou, Matthew Brown, Noah Snavely, and David G
Lowe. Unsupervised learning of depth and ego-motion from
video. In CVPR, volume 2, page 7, 2017.

[61] Jun-Yan Zhu, Taesung Park, Phillip Isola, and Alexei A
Efros. Unpaired image-to-image translation using cycle-
consistent adversarial networkss.
In Computer Vision (IC-
CV), 2017 IEEE International Conference on, 2017.

9798

