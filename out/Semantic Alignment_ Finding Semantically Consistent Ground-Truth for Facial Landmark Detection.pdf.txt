Semantic Alignment: Finding Semantically Consistent Ground-truth for Facial

Landmark Detection

Zhiwei Liu1,2 ∗, Xiangyu Zhu1∗, Guosheng Hu4,5, Haiyun Guo1, Ming Tang1,3, Zhen Lei1, Neil M. Robertson5,4 and Jinqiao Wang1,3

1National Lab of Pattern Recognition, Institute of Automation, CAS, Beijing 100190, China 2University of Chinese
Academy of Sciences 3Visionﬁnity Inc., ObjectEye Inc., Universal AI Inc. 4AnyVision 5Queens University Belfast

1{zhiwei.liu, xiangyu.zhu, haiyun.guo, tangm, zlei, jqwang}@nlpr.ia.ac.cn

4

huguosheng100@gmail.com

5

N.Robertson@qub.ac.uk

Abstract

Recently, deep learning based facial landmark detec-
tion has achieved great success. Despite this, we notice
that the semantic ambiguity greatly degrades the detection
performance. Speciﬁcally, the semantic ambiguity means
that some landmarks (e.g.
those evenly distributed along
the face contour) do not have clear and accurate deﬁnition,
causing inconsistent annotations by annotators. According-
ly, these inconsistent annotations, which are usually provid-
ed by public databases, commonly work as the ground-truth
to supervise network training, leading to the degraded ac-
curacy. To our knowledge, little research has investigated
this problem. In this paper, we propose a novel probabilis-
tic model which introduces a latent variable, i.e. the ‘real’
ground-truth which is semantically consistent, to optimize.
This framework couples two parts (1) training landmark
detection CNN and (2) searching the ‘real’ ground-truth.
These two parts are alternatively optimized: the searched
‘real’ ground-truth supervises the CNN training; and the
trained CNN assists the searching of ‘real’ ground-truth.
In addition, to recover the unconﬁdently predicted land-
marks due to occlusion and low quality, we propose a glob-
al heatmap correction unit (GHCU) to correct outliers by
considering the global face shape as a constraint. Exten-
sive experiments on both image-based (300W and AFLW)
and video-based (300-VW) databases demonstrate that our
method effectively improves the landmark detection accura-
cy and achieves the state of the art performance.

1. Introduction

Deep learning methods [25, 33, 36, 15, 7, 28, 10, 9] have
achieved great success on landmark detection and other face
analysis tasks due to the strong modeling capacity. Despite
this success, precise and credible landmark detection stil-

∗equal contribution.

Semantic moving

Non semantic moving

Figure 1. The landmark updates in training after the model is
roughly converged. Due to ‘semantic ambiguity’, we can see that
many optimization directions, which are random guided by ran-
dom annotation noises along with the contour and ‘non semantic’.
The others move to the semantically accurate positions. Red and
green dots denote the predicted and annotation landmarks, respec-
tively.

l has many challenges, one of which is the degraded per-
formance caused by ‘semantic ambiguity’. This ambigui-
ty results from the lack of clear deﬁnition on those weak
semantic landmarks on the contours (e.g.
those on face
contour and nose bridge).
In comparison, strong seman-
tic landmarks on the corners (e.g. eye corner) suffer less
from such ambiguity. The ‘semantic ambiguity’ can make
human annotators confused about the positions of weak se-
mantic points, and it is inevitable for annotators to introduce
random noises during annotating. The inconsistent and im-
precise annotations can mislead CNN training and cause
degraded performance. Speciﬁcally, when the deep mod-
el roughly converges to the ground-truth provided by public
databases, the network training is misguided by random an-
notation noises caused by ‘semantic ambiguity’, shown in
Fig. 1. Clearly these noises can make the network training
trapped into local minima, leading to degraded results.

In this paper, we propose a novel Semantic Alignment
method which reduces the ‘semantic ambiguity’ intrinsical-

3467

ly. We assume that there exist ‘real’ ground-truths which
are semantically consistent and more accurate than human
annotations provided by databases. We model the ‘real’
ground-truth as a latent variable to optimize, and the opti-
mized ‘real’ ground-truth then supervises the landmark de-
tection network training. Accordingly, we propose a prob-
abilistic model which can simultaneously search the ‘real’
ground-truth and train the landmark detection network in
an end-to-end way.
In this probabilistic model, the prior
model is to constrain the latent variable to be close to the
observations of the ‘real’ ground truth, one of which is the
human annotation. The likelihood model is to reduce the
Pearson Chi-square distance between the expected and the
predicted distributions of ‘real’ ground-truth. The heatmap
generated by the hourglass architecture [19] represents the
conﬁdence of each pixel and this conﬁdence distribution is
used to model the predicted distribution of likelihood. A-
part from the proposed probabilistic framework, we further
propose a global heatmap correction unit (GHCU) which
maintains the global face shape constraint and recovers the
unconﬁdently predicted landmarks caused by challenging
factors such as occlusions and low resolution of images. We
conduct experiments on 300W [23], AFLW [11] and 300-
VW [24, 26, 3] databases and achieve the state of the art
performance.

2. Related work

In recent years, convolutional neural networks (CNN)
achieves very impressive results on face alignment task.
Sun et al [25] proposes to cascade several DCNN to pre-
dict the shape stage by stage. Zhang et al [32] proposes a
single CNN and jointly optimizes facial landmark detection
together with facial attribute recognition, further enhancing
the speed and performance. The methods above use shallow
CNN models to directly regress facial landmarks, which are
difﬁcult to cope the complex task with dense landmarks and
large pose variations.

To further improve the performance, many popular se-
mantic segmentation and human pose estimation frame-
works are used for face alignment [31, 5, 2, 16]. For each
landmark, they predict a heatmap which contains the prob-
ability of the corresponding landmark. Yang et al.
[31]
uses a two parts network, i.e., a supervised transformation
to normalize faces and a stacked hourglass network [19] to
get prediction heatmaps. Most recently, JMFA [5] and FAN
[2] also achieve the state of the art accuracy by leveraging
stacked hourglass network. However, these methods do not
consider the ‘semantic ambiguity’ problem which potential-
ly degrades the detection performance.

Two recent works, LAB [28] and SBR [6], are related
to this ‘semantic ambiguity’ problem. By introducing more
information than pixel intensity only, they implicitly alle-
viate the impact of the annotation noises and improve the

performance. LAB [28] trains a facial boundary heatmap
estimator and incorporates it into the main landmark regres-
sion network. LAB uses the well-deﬁned facial boundaries
which provide the facial geometric structure to reduce the
ambiguities, leading to improved performance. However,
LAB is computational expensive. SBR [6] proposes a reg-
istration loss which uses the coherency of optical ﬂow from
adjacent frames as its supervision. The additional informa-
tion from local feature can mitigate the impact of random
noises. However, the optical ﬂow is not always credible in
unconstrained environment and SBR trains their model on
the testing video before the test, limiting its applications.
To summarize, LAB and SBR do not intrinsically address
the problem of ‘semantic ambiguity’ because the degraded
accuracy is actually derived from the inaccurate labels (hu-
man annotations provided by databases).
In this work, we
solve the ‘semantic ambiguity’ problem in a more intrinsic
way. Speciﬁcally, we propose a probabilistic model which
can simultaneously search the ‘real’ ground-truth without
semantic ambiguity and train a hourglass landmark detector
without using additional information.

3. Semantic ambiguity

The semantic ambiguity indicates that some landmarks
do not have clear and accurate deﬁnition. In this work, we
ﬁnd the semantic ambiguity can happen on any facial points,
but mainly on those weak semantic facial points. For ex-
ample, the landmarks are deﬁned to evenly distribute along
the face contour without any clear deﬁnition of the exact
positions. This ambiguity can potentially affect: (1) the ac-
curacy of the annotations and (2) the convergence of deep
model training. For (1), when annotating a database, anno-
tators can introduce random errors to generate inconsistent
ground-truths on those weak semantic points due to the lack
of clear deﬁnitions. For (2), the inconsistent ground-truths
generate inconsistent gradients for back-propagation, lead-
ing to the difﬁculty of model convergence. In this section,
we qualitatively analyze the inﬂuence of semantic ambigu-
ity on landmark detection.

Before this analysis, we brieﬂy introduce our heatmap-
based landmark detection network. Speciﬁcally, we use
a four stage Hourglass (HGs)
It can generate the
heatmap which provides the probability of the correspond-
ing landmark located at every pixel, and this probability can
facilitate our analysis of semantic ambiguity.

[19].

Firstly, we ﬁnd CNN provides a candidate region rather
than a conﬁrmed position for a weak semantic point.
In
Fig. 2 (a), we can see that the heatmap of a strong semantic
point is nearly Gaussian, while the 3D heatmap of a weak
semantic point has a ‘ﬂat hat’, meaning that the conﬁdences
in that area are very similar. Since the position with the
highest conﬁdence is chosen as the output. The landmark
detector tends to output an unexpected random position on

3468

(a) The difference between the heatmap of the eye corner (strong se-
mantic) points and the eye contour (weak semantic) points. Col 2 and
3 represent 2D and 3D heatmaps respectively. In the 3D Gaussian, the
x, y axes are image coordinates and z axis is the prediction conﬁdence.
We can see the 3D heatmap of a weak semantic point has a ‘ﬂat hat’.

(b) The predictions from a series of checkpoints after convergence.
When the model has roughly converged, we continue training and
achieve the predictions from different iterations. Red and green dots
denote the predicted and annotation landmarks, respectively. We can
see the predicted landmarks from different checkpoints ﬂuctuate in the
neighborhood area of the annotated position (green dots).

Figure 2. The effect of semantic ambiguity

the ‘ﬂat hat’.

Secondly, we analyze the ‘semantic ambiguity’ by vi-
sualizing how the model is optimized after convergence.
When the network has roughly converged, we continue
training the network and save a series of checkpoints. In
Fig. 2 (b), the eyebrow landmarks, from different check-
points ﬂuctuate along with the edge of eyebrow, which al-
ways generates considerable loss to optimize. However,
this loss is ineffectual since the predicted points from dif-
ferent checkpoints also ﬂuctuate in the neighborhood area
of the annotated position (green dots in Fig. 2 (b)). It can be
concluded that the loss caused by random annotation noises
dominate the back-propagated gradients after roughly con-
vergence, making the network training trapped into local
minima.

4. Semantically consistent alignment

In this section, we detail our methodology. In Section
4.1, we model the landmark detection problem using a prob-
abilistic model. To deal with the semantic ambiguity caused
by human annotation noise, we introduce a latent variable
ˆy which represents the ‘real’ ground-truth. Then we mod-
el the prior model and likelihood in Section 4.2 and 4.3,

respectively. Section 4.4 proposes an alternative optimiza-
tion strategy to search ˆy and train the landmark detector. To
recover the unconﬁdently predicted landmarks due to occlu-
sion and low quality, we propose a global heatmap correc-
tion unit (GHCU) in Section 4.5, which reﬁnes the predic-
tions by considering the global face shape as a constraint,
leading to a more robust model.

4.1. A probabilistic model of landmark prediction

In the probabilistic view, training a CNN-based land-
mark detector can be formulated as a likelihood maximiza-
tion problem:

max
W

L(W) = P (o|x; W),

(1)

where o ∈ R2N is the coordinates of the observation of
landmarks (e.g. the human annotations). N is the number
of landmarks, x is the input image and W is the CNN pa-
rameters. Under the probabilistic view of Eq. (1), one pixel
value on the heatmap works as the conﬁdence of one partic-
ular landmark at that pixel. Therefore, the whole heatmap
works as the probability distribution over the image.

As analyzed in Section 3, the annotations provided by
public databases are usually not fully credible due to the ‘se-
mantic ambiguity’. As a result, the annotations, in particu-
lar those of weak semantic landmarks, contain random nois-
es and are inconsistent among faces. In this work, we as-
sume that there exists a ‘real’ ground-truth without seman-
tic ambiguity and can better supervise the network training.
To achieve this, we introduce a latent variable ˆy as the ‘real’
ground-truth which is optimized during learning. Thus, Eq.
(1) can be reformulated as:

max
ˆy,W

L(ˆy, W) = P (o, ˆy|x; W)

= P (o|ˆy)P (ˆy|x; W),

(2)

where o is the observation of ˆy, for example, the annota-
tion can be seen as an observation of ˆy from human anno-
tator. P (o|ˆy) is a prior of ˆy given the observation o and
P (ˆy|x; W) is the likelihood.

4.2. Prior model of ‘real’ ground truth

To optimize Eq. (2), an accurate prior model is impor-
tant to regularize ˆy and reduce searching space. We assume
that the kth landmark ˆyk is close to the ok, which is the
observation of ˆy. Thus, this prior is modeled as Gaussian
similarity over all {ok, ˆyk} pairs:

P (o|ˆy) ∝ Y

k

exp(cid:16) −

= exp(cid:16) − X

k

kok − ˆykk2

2σ2

1

kok − ˆykk2

2σ2

1

(cid:17)

(cid:17),

(3)

3469

Template 

2

L

Likelihood 

Weighted

sum 

P

Prior 

O

Output 

Figure 3. The search of ‘real’ ground-truth ˆy. Yellow and red box-
es represent the searching space N deﬁned in Eq. (7) and the re-
gion corresponding to one candidate ˆy, respectively. The weight-
ed sum of likelihood and prior is computed as Eq. (8). The search
target is to ﬁnd a position ˆy with the maximum output.

where σ1 can control the sensitivity to misalignment. To ex-
plain ok, we should know in advance that our whole frame-
work is iteratively optimized detailed in Section 4.4. ok is
initialized as the human annotation in the iteration, and will
be updated by better observation with iterations.

4.3. Network likelihood model

We now discuss the likelihood P (ˆy|x; W) of Eq. (2).
The point-wise joint probability can be represented by the
conﬁdence map, which can be modelled by the heatmap of
the deep model. Note that our hourglass architecture learns
to predict heatmap consisting of a 2D Gaussian centered on
the ground-truth ˆyk. Thus, for any position y, the more the
heatmap region around y follows a standard Gaussian, the
more the pixel at y is likely to be ˆyk. Therefore, the like-
lihood can be modeled as the distribution distance between
the predicted heatmap (predicted distribution) and the stan-
dard Gaussian region (expected distribution). In this work,
we use Pearson Chi-square test to evaluate the distance of
these two distributions:

χ2(y|x; W) = X

i

(Ei − Φi(y|x; W))2

Ei

(4)

where E is a standard Gaussian heatmap (distribution),
which is a template representing the ideal response; i is the
pixel index; Φ is a cropped patch (of the same size as Gaus-
sian template) from the predicted heatmap centered on y.
Finally, the joint probability can also be modeled as a prod-
uct of Gaussian similarities maximized over all landmarks:

P (ˆy|x; W) = exp(cid:16) − X

k

χ2

k(ˆy|x; W)

2σ2

2

(cid:17)

(5)

where k is the landmark index, σ2 is the bandwidth of like-
lihood.

P

To keep the likelihood credible, we ﬁrst train a network
with the human annotations. Then in the likelihood, we can
consider the trained network as a super annotator to guide
the searching of the real ground-truth. It results from the
fact that a well trained network is able to capture the statis-
tical law of annotation noise from the whole training set, so
that it can generate predictions with better semantic consis-
tency.

4.4. Optimization

Combining Eq.

(2), (3) and (5) and taking log of the

likelihood, we have:

log L(ˆy, W) = X

k

(cid:16) −

kok − ˆykk2

2σ2

1

−

χ2(ˆy|x; W)

2σ2

2

(cid:17) (6)

Reduce Searching Space To optimize the latent semanti-
cally consistent ‘real’ landmark ˆyk, the prior Eq. (3) indi-
cates that the latent ‘real’ landmark is close to the observed
landmark ok.
Therefore, we reduce the search space of
ˆyk to a small patch centered on ok. Then, the optimization
problem of Eq. (6) can be re-written as:

min
ˆy,W

− log L(ˆy, W)

s.t. ˆyk ∈ N (ok)

(7)

where N (ok) represents a region centered on ok.

Alternative Optimization To optimize Eq. (7), an alter-
native optimization strategy is applied.
In each iteration,
ˆy is ﬁrstly searched with the network parameter W ﬁxed.
Then ˆy is ﬁxed and W is updated (landmark prediction net-
work training) under the supervision of newly searched ˆy.
Step 1: When W is ﬁxed, to search the latent variable ˆy,
the optimization becomes a constrained discrete optimiza-
tion problem for each landmark:

min

ˆyk (cid:16) kok − ˆykk2

2σ2

1

+

χ2(ˆyk|x; W)

2σ2

2

(cid:17)

(8)

where all the variables are known except ˆyk. We search ˆyk
by going through all the pixels in N (ok) (a neighborhood
area of ok as shown in Fig. 3) and the one with minimal
loss in Eq. (8) is the solution. Since the searching space
N (ok) is very small, i.e. 17 × 17 in this work for 256×256
heatmap, the optimization is very efﬁcient.

Note that in the prior part of Eq. (8), ok is the obser-
vation of ˆyk: In the 1st iteration, ok is set to the human
annotations which are the observation of human annotators;
From the 2nd iteration, ok is set to ˆyk
t−1 (where t is the it-
eration). Note that ˆyk
t−1 is the estimated ‘real’ ground-truth

3470

Figure 4. Gradual convergence (one image represents one iteration) from the observation o (i.e. ˆy of the last iteration, green dots) to the
estimate of real ground-truth ˆy (red dots). For last image, the optimization converges because red and green dots are completely overlapped.

Table 1. GHCU Architecture (N is the number of the landmarks)

 Output heatmap

 (including failed points)         
 Output heatmap

 (including failed points)         

GHCU         

GHCU         

Final results  

(failed points corrected)       
Final results  

(failed points corrected)       

(a) The use of GHCU for correcting some failed points.

GHCU         

GHCU         

(b) Correcting challenging points with GHCU on 300-VW.

Figure 5. Global Heatmap Correction Unit (GHCU)

from the last iteration. With the iterations, ˆyk
t is converging
to the ‘real’ ground-truth because both the current observa-
tion ok (i.e. ˆyk
t−1) and CNN prediction iteratively become
more credible.

Step 2: When ˆy is ﬁxed, the optimization becomes:

W X
min

k

χ2(ˆyk|x; W)

2σ2

2

(9)

The optimization becomes a typical network training pro-
cess under the supervision of ˆy. Here ˆy is set to the es-
timate of the latent ‘real’ ground-truth obtained in Step 1.
Figure 4 shows an example of the gradual convergence from
the observation o (ˆy of the last iteration) to the estimate of
real ground-truth ˆy. The optimization of ˆy in our semantic
alignment can easily converge to a stable position, which
does not have hard convergence problem like the traditional
landmark training as shown in Fig. 2b.

4.5. Global heatmap correction unit

Traditional heatmap based methods predict each land-
mark as an individual task without considering global face
shape. The prediction might fail when the model ﬁts im-
ages of low-quality and occlusion as shown in Fig. 5b. The
outliers such as occlusions destroy the face shape and sig-
niﬁcantly reduce overall performance.

Layers
Conv1
Conv2
Conv3
Conv4
Conv5
Conv6
FC1
FC2

Output size
128×128

64×64
32×32
16×16

8×8
4×4

-
-

GHCU

[5×5, 64], stride 2
[3×3, 64], stride 2
[3×3, 32], stride 2
[3×3, 32], stride 2
[3×3, 16], stride 2
[3×3, 16], stride 2

256
2N

Existing methods like local feature based CLM [4] and
deep learning based LGCN [16] apply a 2D shape PCA as
their post-processing step to remove the outliers. Howev-
er, PCA based method is weak to model out-of-plane ro-
tation and very slow (about 0.8 fps in LGCN [16]).
In
this work, we propose a Global Heatmap Correction U-
nit (GHCU) to recover the outliers efﬁciently. We view
the predicted heatmaps as input and directly regress the
searched/optimized ˆy through a light weight CNN as shown
in Tab. 1. The GHCU implicitly learns the whole face shape
constraint from the training data and always gives facial-
shape landmarks, as shown in Fig. 5. Our experiments
demonstrate the GHCU completes ﬁtting with the speed 8
times faster than PCA on the same hardware platform and
achieves higher accuracy than PCA.

5. Experiments

Datesets. We conduct evaluation on three challenging
datasets including image based 300W [23], AFLW [11],
and video based 300-VW [24, 26, 3].

300W [23] is a collection of LFPW [1], HELEN [13],
AFW [21] and XM2VTS [17], which has 68 landmarks.
The training set contains 3148 training samples, 689 test-
ing samples which are further divided into the common and
challenging subsets.

AFLW [11] is a very challenging dataset which has a
wide range of pose variations in yaw (−90◦ to 90◦).
In
this work, we follow the AFLW-Full protocol [35] which
ignores two landmarks of ears and use the remaining 19
landmarks.

300-VW [24, 26, 3] is a large dataset for video-based
face alignment, which consists of 114 videos in various

3471

conditions. Following [24], we utilized all images from
300W and 50 sequences for training and the remaining 64
sequences for testing. The test set consists of three cate-
gories: well-lit, mild unconstrained and challenging.

Evaluation metric. To compare with existing popular
methods, we conduct different evaluation metrics on differ-
ent datasets. For 300W dataset, We follow the protocol in
[22] and use Normalized mean errors (NME) which nor-
malizes the error by the inter-pupil distance. For AFLW,
we follow [34] to use face size as the normalizing factor.
For 300-VW dataset, we employed the standard normalized
root mean squared error (RMSE)
[24] which normalizes
the error by the outer eye corner distance.

Implementation Details.

In our experiments, all the
training and testing images are cropped and resized to
256×256 according to the provided bounding boxes. To
perform data augmentation, we randomly sample the an-
gle of rotation and the bounding box scale from Gaussian
distribution. We use a four-stage stacked hourglass net-
work [19] as our backbone which is trained by the opti-
mizer RMSprop. As described in Section 4, our algorith-
m comprises two parts: network training and real ground-
truth searching, which are alternatively optimized. Specif-
ically, at each epoch, we ﬁrst search the real ground-truth
ˆy and then use ˆy to supervise the network training. When
training the roughly converged model with human annota-
tions, the initial learning rate is 2.5 × 10−4 which is de-
cayed to 2.5 × 10−6 after 120 epochs. When training with
Semantic Alignment from the beginning of the aforemen-
tioned roughly converged model, the initial learning rate is
2.5 × 10−6 and is divided by 5, 2 and 2 at epoch 30, 60
and 90 respectively. During semantic alignment, we search
the latent variable ˆy from a 17×17 region centered at the
current observation point o, and we crop a no larger than
25×25 patch from the predicted heatmap around curren-
t position for Pearson Chi-square test in Eq. (4). We set
batch size to 10 for network training. For GHCU, the net-
work architecture is shown in Tab. 1. All our models are
trained with PyTorch [20] on 2 Titan X GPUs.

5.1. Comparison experiment

300W. We compare our approach against the state-of-
the-art methods on 300W in Tab. 2. The baseline (HGs
in Tab. 2) uses the hourglass architecture with human an-
notations, which is actually the traditional landmark detec-
tor training. From Tab. 2, we can see that HGs with our
Semantic Alignment (HGs + SA) greatly outperform hour-
glass (HGs) only, 4.37% vs 5.04% in terms of NME on Full
set, showing the great effectiveness of our Semantic Align-
ment (SA). HGs+SA+GHC only slightly outperforms the
HGs+SA because the images of 300W are of high resolu-
tion, while GHCU works particularly well for images of
low resolution and occlusions veriﬁed in the following e-
valuations. Following [7] and [31] which normalize the

Table 2. Comparisons with state of the art on 300W dataset. The
error (NME) is normalized by the inter-pupil distance.

subset

Method
SDM [30]
CFSS [34]
TCDCN [32]
LBF [22]
3DDFA (CVPR16) [37]
3DDFA + SDM
RAR (ECCV16) [29]
TR-DRN (CVPR17) [15]
Wing (CVPR18) [7]
LAB (CVPR18) [28]
SBR (CVPR18) [6]
PCD-CNN (CVPR18) [12]
DCFE (ECCV18) [27]
HGs
HGs + SA
HGs + SA + GHCU
HGs + Norm
HGs + SA + Norm
HGs + SA + Norm + GHCU

Com.

Challenge

Full

5.60
4.73
4.80
4.95
6.15
5.53
4.12
4.36
3.27
3.42
3.28
3.67
3.83
4.43
3.75
3.74
3.95
3.46
3.45

15.40
9.98
8.60
11.98
10.59
9.56
8.35
7.56
7.18
6.98
7.58
7.62
7.54
7.56
6.90
6.87
6.51
6.38
6.38

7.52
5.76
5.54
6.32
7.01
6.31
4.94
4.99
4.04
4.12
4.10
4.44
4.55
5.04
4.37
4.35
4.45
4.03
4.02

in-plane-rotation by training a preprocessing network, we
conduct this normalization (HGs+SA+GHCU+Norm) and
achieve state of the art performance on Challenge set and
Full set: 6.38% and 4.02%.
In particular, on Challenge
set, we signiﬁcantly outperform the state of the art method:
6.38% (HGs+SA+GHCU+Norm) vs 6.98% (LAB), mean-
ing that our method is particularly effective on challenging
scenarios.

AFLW. Compared with 300W dataset with 68 points
AFLW has only 19 points, most of which are strong seman-
tic landmarks (corner points). Since our SA is particularly
effective on weak semantic points, we conduct experiments
on AFLW to verify whether SA generalizes well to the point
set, most of which are strong semantic points. For fair com-
parison, we do not compare methods using additional out-
side training data, e.g. LAB [28] used additional boundary
information from outside database. As shown in Tab. 3,
HGs+SA outperforms HGs, 1.62% vs 1.95%. It means that
even though corner points are easily to be recognized, there
is still random error in annotation, which can be correct-
ed by SA. It is also observed that HGs+SA+GHCU works
better than HGs+SA.

300-VW. Unlike the image-based databases 300W and
AFLW, 300-VW is video-based database, which is more
challenging because the frame is of low resolution and with
strong occlusions. The subset Category 3 is the most chal-
lenging one. From Tab. 4, we can see that HGs + SA great-
ly outperforms HGs in each of these three test sets. Fur-
thermore, compared with HGs + SA, HGs + SA + GHCU
reduce the error rate (RMSE) by 18% on Category 3 test
set, meaning that GHCU is very effective for video-based
challenges such as low resolution and occlusions because
GHCU considers the global face shape as constraint, being
robust to such challenging factors.

3472

Table 3. Comparison with state of the art on AFLW dataset. The
error (NME) is normalized by the face bounding box size.

achieve the best result.

AFLW-Full (%)

Table 6. The effects of template size on 300W and AFLW test sets.

template size
300W Full(%)
AFLW Full (%)

1

4.76
1.89

7

4.72
1.80

11
4.61
1.72

15
4.53
1.62

19
4.37
1.66

25
4.43
1.70

Analysis of the training of semantic alignment. To
verify the effectiveness of Semantic Alignment, we train a
baseline network using hourglass under the supervision of
human annotation to converge. Use this roughly converged
baseline, we continue training using 3 strategies as shown
in Fig. 6 and 7: baseline, SA w/o update (always using hu-
man annotation as the observation, see Eq. (6)) and SA (the
observation is iteratively updated). Fig. 6 and 7 visualize
the changes of training loss and NME on test set against
the training epochs, respectively. We can see that the base-
line curve in Fig. 6 and 7 do not decrease because of the
‘semantic ambiguity’. By introducing SA, the training loss
and test NME steadily drop. Obviously, SA reduces the ran-
dom optimizing directions and helps the roughly converged
network to further improve the detection accuracy.

We also evaluate the condition that uses semantic align-
ment without updating the observation o (‘SA w/o update’
in Fig. 6 and 7). It means o is always set to the human an-
notations. We can see that the curve of ‘SA w/o update’ can
be further optimized but quickly trapped into local optima,
leading to worse performance than SA. We assume that the
immutable observation o reduces the capacity of searching
‘real’ ground-truth ˆy.

Method
LBF [22]
CFSS [34]
CCL (CVPR16) [35]
TSR (CVPR17) [15]
DCFE (ECCV18) [27]
SBR (CVPR18) [6]
DSRN (CVPR18) [18]
Wing (CVPR18) [7]
HGs
HGs + SA
HGs + SA + GHCU

4.25
3.92
2.72
2.17
2.17
2.14
1.86
1.65
1.95
1.62
1.60

Table 4. Comparison with state of the art on 300-VW dataset. The
error (RMSE) is normalized by the inter-ocular distance.

Method
SDM [30]
CFSS [34]
TCDCN [33]
TSTN [14]
DSRN (CVPR18) [18]
HGs
HGs + SA
HGs + SA + GHCU

Category 1

Category 2

Category 3

7.41
7.68
7.66
5.36
5.33
4.32
4.06
3.85

6.18
6.42
6.77
4.51
4.92
3.83
3.58
3.46

13.67
14.98
12.84
8.85
9.91
9.19
7.51

5.2. Self evaluations

2/σ2

Balance of prior and likelihood As shown in Eq. (6),
the ‘real’ ground-truth is optimized using two parts: pri-
or and likelihood, where σ1 and σ2 determine the impor-
tance of these two parts. Thus, we can use one parameter
σ2
1 to estimate this importance weighting. We evalu-
ate different values of σ2
1 in Tab. 5. Clearly, the perfor-
mance of σ2
1 = 0 (removing Semantic Alignment and
using human annotations only) is worst, showing the im-
portance of the proposed Semantic Alignment. We ﬁnd that
σ2
1 = 0.1 achieves the best performance, meaning that
the model relies much more (10 times) on prior than likeli-
hood to achieve the best trade-off.

2/σ2

2/σ2

2/σ2

Table 5. The effect of the ratio σ2
2/σ2
σ2
NME (%)

0.01
4.79

0.05
4.40

4.99

0

1

0.1
4.37

2/σ2

1 in Eq. (8) on 300W.

0.3
4.46

0.5
4.54

1

4.68

Template size. As discussed in the Section 3, for a po-
sition y, the similarity between the heatmap region around
it and standard Gaussian template is closely related to the
detection conﬁdence. Therefore, the size of the Gaussian
template, which is used to measure the network conﬁdence
in Eq.
(5), can affect the ﬁnal results. Table 6 reports
the results under different template sizes using the model
HGs+SA. Too small size (size=1) means that the heatmap
value is directly used to model the likelihood instead of Chi-
square test. Not surprisingly, the performance with size=1
is not promising. Large size (size=25) introduces more use-
less information, degrading the performance. In our experi-
ment, we ﬁnd size=15 for AFLW and size=19 for 300W can

Figure 6. Training loss of the baseline, Semantic Alignment with-
out updating observation (SA w/o update) and Semantic Align-
ment (SA). The training starts at a roughly converged model
(trained using human annotations only) using 300W training set.

The update of Semantic Alignment. Under Semantic
Alignment framework, all the training labels are updated
after each epoch. To explore the effects of the number of
epochs on model convergence, we train different models by
stopping semantic alignment at different epochs. In Fig 8, it
is observed that the ﬁnal performance keeps improving with

3473

024681012Epoch4681012Loss (1e-3)baselineSA w/o updateSATable 7. The comparison of the labels searched by our Semantic
Alignment (SA) and human annotations (HA) on 300w-full set

Method
NME (%)

HGs (HA) HGs (SA)

Reg (HA)

Reg (SA)

5.04

4.37

5.49

5.12

heatmap based methods, like CLM [4] and most recently L-
GCN [16]. We apply the powerful PCA reﬁnement method
in LGCN and compare it with our GHCU. We evaluate on
300-VW where the occlusion and low-quality are partic-
ularly challenging. As shown in Tab. 8, our CNN based
GHCU outperforms PCA based method in terms of both
accuracy and efﬁciency.

Table 8. The comparison of GHCU with traditional PCA-based
reﬁnement on 300-VW database.

Method
Baseline
PCA [16]
GHCU

Category 1

Category 2

Category 3

CPU Time (ms)

4.06
3.99
3.85

3.58
3.26
3.46

9.19
7.69
7.51

-

1219
149

Ablation study. To verify the effectiveness of different
components in our framework, we conduct this ablation s-
tudy on 300-VW. For a fair comparison, all the experiments
use the same parameter settings. As shown in Tab. 9, Se-
mantic alignment can consistently improve the performance
on all subset sets, demonstrating the strong generalization
capacity of SA. GHCU is more effective on the challenge
data set (Category 3): 8.15% vs 9.91%; Combining SA and
GHCU works better than single of them, showing the com-
plementary of these two mechanisms.

Table 9. Effectiveness of SA and GHCU tested on 300-VW.

Semantic Alignment (SA)
GHCU
Category 1
Category 2
Category 3

X

X

3.85
3.46
7.51

X

4.06
3.58
9.19

X

4.03
3.66
8.15

4.32
3.83
9.91

6. Conclusion

In this paper, we ﬁrst analyze the semantic ambiguity of
facial landmarks and show that the potential random noises
of landmark annotations can degrade the performance con-
siderably. To address this issue, we propose a a novel la-
tent variable optimization strategy to ﬁnd the semantically
consistent annotations and alleviate random noises during
training stage. Extensive experiments demonstrated that our
method effectively improves the landmark detection accura-
cy on different data sets.

7. Acknowledgments

This work is supported by the Natural Science Founda-
tion of China (Grant No. 61772527, 61806200, 61876178,
61806196).

3474

Figure 7. NME of the baseline, Semantic Alignment without
updating observation (SA w/o update) and Semantic Alignmen-
t (SA). The training starts at a roughly converged model (trained
using human annotations only) on 300W full test set.

the times of semantic alignment, which demonstrates that
the improvement is highly positive related to the quality of
the learned ˆy. From our experiment, 10 epochs of semantic
alignment are enough for our data sets.

Figure 8. NME vs Semantic Alignment update epochs on 300W
full test set

Quality of the searched ‘real’ ground-truth. One im-
portant assumption of this work is that there exist ‘real’
ground-truths which are better than the human annotations.
To verify this, we train two networks which are supervised
by the human annotations provided by public database and
the searched ‘real’ ground-truth, respectively. These two
detectors are a Hourglass model (HGs) and a ResNet [8] re-
gression model as [7]. As shown in Tab. 7, we can see that
on both models the ‘real’ ground-truth (SA) outperforms
the human annotations (HA). Clearly, our learned labels are
better than the human annotations, verifying our assumption
that the semantic alignment can ﬁnd the semantic consistent
ground-truths.

Global heatmap correction unit. The 2D shape PCA
can well keep the face constraint and can be conducted
as a post-processing step to enhance the performance of

024681012Epoch4.44.54.64.74.84.95.05.15.2Test NME (%)baselineSA w/o updateSA0246810Epoch4.44.54.64.74.84.95.0Test NME (%)References

[1] P. N. Belhumeur, D. W. Jacobs, D. J. Kriegman, and N. Ku-
mar. Localizing parts of faces using a consensus of exem-
plars.
In Computer Vision and Pattern Recognition, pages
545–552, 2011.

[2] Adrian Bulat and Georgios Tzimiropoulos. How far are we
from solving the 2d & 3d face alignment problem?(and a
dataset of 230,000 3d facial landmarks).
In International
Conference on Computer Vision, volume 1, page 4, 2017.

[3] Grigoris G Chrysos, Epameinondas Antonakos, Stefanos
Zafeiriou, and Patrick Snape. Ofﬂine deformable face track-
ing in arbitrary videos.
In Proceedings of the IEEE Inter-
national Conference on Computer Vision Workshops, pages
1–9, 2015.

[4] David Cristinacce and Tim Cootes. Automatic feature local-
isation with constrained local models. Pattern Recognition,
41(10):3054–3067, 2008.

[5] Jiankang Deng, George Trigeorgis, Yuxiang Zhou, and Ste-
fanos Zafeiriou. Joint multi-view face alignment in the wild.
2017.

[6] Xuanyi Dong, Shoou-I Yu, Xinshuo Weng, Shih-En Wei, Yi
Yang, and Yaser Sheikh. Supervision-by-registration: An un-
supervised approach to improve the precision of facial land-
mark detectors. In Proceedings of the IEEE Conference on
Computer Vision and Pattern Recognition, pages 360–368,
2018.

[7] Zhen-Hua Feng, Josef Kittler, Muhammad Awais, Patrik Hu-
ber, and Xiao-Jun Wu. Wing loss for robust facial land-
mark localisation with convolutional neural networks. arXiv
preprint arXiv:1711.06753, 2017.

[8] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun.
Deep residual learning for image recognition. In Proceed-
ings of the IEEE conference on computer vision and pattern
recognition, pages 770–778, 2016.

[9] Guosheng Hu, Xiaojiang Peng, Yongxin Yang, Timothy M
Hospedales, and Jakob Verbeek. Frankenstein: Learning
deep face representations using small data. IEEE Transac-
tions on Image Processing, 27(1):293–303, 2018.

[10] Guosheng Hu, Yongxin Yang, Dong Yi, Josef Kittler,
William Christmas, Stan Z Li, and Timothy Hospedales.
When face recognition meets with deep learning: an eval-
uation of convolutional neural networks for face recognition.
In Proceedings of the IEEE international conference on com-
puter vision workshops, pages 142–150, 2015.

[11] Martin Koestinger, Paul Wohlhart, Peter M Roth, and Horst
Bischof. Annotated facial landmarks in the wild: A large-
scale, real-world database for facial landmark localization.
In Computer Vision Workshops (ICCV Workshops), 2011
IEEE International Conference on, pages 2144–2151. IEEE,
2011.

[12] Amit Kumar and Rama Chellappa. Disentangling 3d pose in
a dendritic cnn for unconstrained 2d face alignment. In Pro-
ceedings of the IEEE Conference on Computer Vision and
Pattern Recognition, pages 430–439, 2018.

[13] Vuong Le, Jonathan Brandt, Zhe Lin, Lubomir Bourdev, and
Thomas S. Huang. Interactive facial feature localization. In

European Conference on Computer Vision, pages 679–692,
2012.

[14] Hao Liu, Jiwen Lu, Jianjiang Feng, and Jie Zhou. Two-
stream transformer networks for video-based face alignment.
IEEE Transactions on Pattern Analysis & Machine Intelli-
gence, (1):1–1, 2017.

[15] Jiang-Jing Lv, Xiaohu Shao, Junliang Xing, Cheng Cheng,
Xi Zhou, et al. A deep regression architecture with two-
stage re-initialization for high performance facial landmark
detection. In CVPR, volume 1, page 4, 2017.

[16] Daniel Merget, Matthias Rock, and Gerhard Rigoll. Robust
facial landmark detection via a fully-convolutional local-
global context network.
In Proceedings of the IEEE Con-
ference on Computer Vision and Pattern Recognition, pages
781–790, 2018.

[17] K. Messer, J. Matas, J. Kittler, and K. Jonsson. Xm2vts:
the extended m2vts database. In Proc. Second Internation-
al Conference on Audio- and Video-Based Biometric Person
Authentication, pages 72–77, 2000.

[18] Xin Miao, Xiantong Zhen, Xianglong Liu, Cheng Deng, Vas-
silis Athitsos, and Heng Huang. Direct shape regression net-
works for end-to-end face alignment. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 5040–5049, 2018.

[19] Alejandro Newell, Kaiyu Yang, and Jia Deng. Stacked hour-
glass networks for human pose estimation. In European Con-
ference on Computer Vision, pages 483–499. Springer, 2016.
[20] Adam Paszke, Sam Gross, Soumith Chintala, Gregory
Chanan, Edward Yang, Zachary DeVito, Zeming Lin, Al-
ban Desmaison, Luca Antiga, and Adam Lerer. Automatic
differentiation in pytorch. 2017.

[21] Deva Ramanan. Face detection, pose estimation, and land-
mark localization in the wild. In IEEE Conference on Com-
puter Vision and Pattern Recognition, pages 2879–2886,
2012.

[22] Shaoqing Ren, Xudong Cao, Yichen Wei, and Jian Sun. Face
alignment via regressing local binary features. IEEE Trans-
actions on Image Processing, 25(3):1233–1245, 2016.

[23] Christos Sagonas, Georgios Tzimiropoulos, Stefanos
Zafeiriou, and Maja Pantic. A semi-automatic methodology
for facial landmark annotation.
In Computer Vision and
Pattern Recognition Workshops, pages 896–903, 2013.

[24] Jie Shen, Stefanos Zafeiriou, Grigoris G Chrysos, Jean Kos-
saiﬁ, Georgios Tzimiropoulos, and Maja Pantic. The ﬁrst
facial landmark tracking in-the-wild challenge: Benchmark
and results. In Proceedings of the IEEE International Con-
ference on Computer Vision Workshops, pages 50–58, 2015.
[25] Yi Sun, Xiaogang Wang, and Xiaoou Tang. Deep convolu-
tional network cascade for facial point detection. In Comput-
er Vision and Pattern Recognition, pages 3476–3483, 2013.
[26] Georgios Tzimiropoulos. Project-out cascaded regression
with an application to face alignment. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 3659–3667, 2015.

[27] Roberto Valle and M Jos´e. A deeply-initialized coarse-to-
ﬁne ensemble of regression trees for face alignment. In Pro-
ceedings of the European Conference on Computer Vision
(ECCV), pages 585–601, 2018.

3475

[28] Wayne Wu, Chen Qian, Shuo Yang, Quan Wang, Yici Cai,
and Qiang Zhou. Look at boundary: A boundary-aware face
alignment algorithm. In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, pages 2129–
2138, 2018.

[29] Shengtao Xiao, Jiashi Feng, Junliang Xing, Hanjiang Lai,
Shuicheng Yan, and Ashraf Kassim. Robust facial land-
mark detection via recurrent attentive-reﬁnement networks.
In European conference on computer vision, pages 57–72.
Springer, 2016.

[30] Xuehan Xiong and Fernando De La Torre. Supervised de-
scent method and its applications to face alignment. In Com-
puter Vision and Pattern Recognition, pages 532–539, 2013.
[31] Jing Yang, Qingshan Liu, and Kaihua Zhang. Stacked hour-
glass network for robust facial landmark localisation.
In
IEEE Conference on Computer Vision and Pattern Recog-
nition Workshops, pages 2025–2033, 2017.

[32] Zhanpeng Zhang, Ping Luo, Change Loy Chen, and Xiaoou
Tang. Facial landmark detection by deep multi-task learning.
In European Conference on Computer Vision, pages 94–108,
2014.

[33] Zhanpeng Zhang, Ping Luo, Chen Change Loy, and Xiaoou
Tang. Learning deep representation for face alignment with
auxiliary attributes. IEEE transactions on pattern analysis
and machine intelligence, 38(5):918–930, 2016.

[34] Shizhan Zhu, Cheng Li, Chen Change Loy, and Xiaoou
Tang. Face alignment by coarse-to-ﬁne shape searching. In
Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, pages 4998–5006, 2015.

[35] Shizhan Zhu, Cheng Li, Chen-Change Loy, and Xiaoou
Tang. Unconstrained face alignment via cascaded compo-
sitional learning.
In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, pages 3409–
3417, 2016.

[36] Xiangyu Zhu, Zhen Lei, Stan Z Li, et al. Face alignment in
full pose range: A 3d total solution. IEEE Transactions on
Pattern Analysis and Machine Intelligence, 2017.

[37] Xiangyu Zhu, Zhen Lei, Xiaoming Liu, Hailin Shi, and S-
tan Z. Li. Face alignment across large poses: A 3d solution.
In IEEE Conference on Computer Vision and Pattern Recog-
nition, pages 146–155, 2016.

3476

