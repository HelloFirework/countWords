Learning to Explain with Complemental Examples

Atsushi Kanehira1 and Tatsuya Harada2,3

1Preferred Networks, 2The University of Tokyo, 3RIKEN

Abstract

!" !"#$%&%’( )&*+,-+."#

-,#""!.!-#&!%$

)*+,#$#&!%$

This paper addresses the generation of explanations with
visual examples. Given an input sample, we build a sys-
tem that not only classiﬁes it to a speciﬁc category, but also
outputs linguistic explanations and a set of visual examples
that render the decision interpretable. Focusing especially
on the complementarity of the multimodal information, i.e.,
linguistic and visual examples, we attempt to achieve it by
maximizing the interaction information, which provides a
natural deﬁnition of complementarity from an information
theoretical viewpoint. We propose a novel framework to
generate complemental explanations, on which the joint dis-
tribution of the variables to explain, and those to be ex-
plained is parameterized by three different neural networks:
predictor, linguistic explainer, and example selector. Expla-
nation models are trained collaboratively to maximize the
interaction information to ensure the generated explanation
are complemental to each other for the target. The results
of experiments conducted on several datasets demonstrate
the effectiveness of the proposed method.

1. Introduction

When we explain something to others, we often provide
supporting examples. This is primarily because examples
enable a concrete understanding of abstract explanations.
With regard to machines, which are often required to justify
their decision, do examples also help explanations?

This paper addresses the generation of visual explana-
tions with visual examples. More speciﬁcally, given an in-
put sample, we build a system that not only classiﬁes it to
a speciﬁc category but also outputs linguistic explanations
and a set of examples that render the decision interpretable.
An example output is shown in Fig. 1.

The ﬁrst question to be raised toward this problem would
be “How do examples help explanations?”, or equiva-
lently, “Why are examples required for explanations?”

This work is done at the University of Tokyo.

/)-#0")

0%(12+’&’#2

%324&,+5

#"

/

$%&’#"

#$(

6#%$,#*2+’&’#2

#"

%32#"7

#$(

/

$%&’#"

/

/

/

&%(18%3-%+2"96&,(,-%’(

"9,$6&":4,3"72"96&,(,-%’(

Figure 1: Our system not only classiﬁes a given sample to
a speciﬁc category (in the red dotted box), but also outputs
linguistic explanations and a set of examples (in the blue
dotted box).

To answer these questions, we consider the characteristics
of two types of explanations pertaining to this work: lin-
guistic explanation, and example-based explanation.

• Using language, one can transmit

information efﬁ-
ciently by converting an event to a shared concept be-
tween humans. Inherently, the conversion process is in-
vertible; thus, the whole event can not necessarily be
represented by language alone.

• Using examples, one can transmit information more
concretely than language can, as the saying, “a picture
is worth a thousand words.” However, the way of the
interpretation for the given examples is not determined
uniquely. Thus, using examples alone is inappropriate
for the explanation.

These explanations with different characteristics can be ex-
pected to complement each other, that is, from a lexicon,
a thing that contributes extra features to something else in
such a way as to improve or emphasize its quality [1].

The next important questions here are as follows: “How
can the complementarity be achieved?” and “Which ex-
planation is complemental, and which is not?”.

We answer the former question from the information

18603

theoretical viewpoint, that is, interaction-information [20]
maximization. Interaction-information is one of the gener-
alizations of mutual information deﬁned on more than three
random variables, and provides the natural deﬁnition of the
complementarity: The increase of dependency of two vari-
ables when the third variable is conditioned.

We propose a novel framework in this work to build a
system that generates complemental explanations. First,
we introduce a linguistic explainer and an example selec-
tor parameterized by different neural networks, in addition
to the predictor that is the target of the explanation. These
two auxiliary models are responsible for generating expla-
nations with linguistic and examples, respectively, and they
are simultaneously trained to maximize the interaction in-
formation between variables of explanations and the output
of the predictor in a post-hoc manner. Because the direct
optimization of interaction-information with regard to the
selector is intractable owing to the number of combination
of examples, we maximize the variational lower bound in-
stead. One more additional classiﬁer, referred to as rea-
soner, appears in the computation of the lower bound. Tak-
ing linguistics and example-based explanations as inputs,
the reasoner attempts to predict the output of the predic-
tor. To enable the optimization of the selector with back-
propagation, we utilized a reparameterization trick that re-
places the sampling process of the examples with a differ-
entiable function.

Under our framework, where complementarity is deﬁned
by information theory, we can understand better the comple-
mental explanation related to the latter question. It can be
mentioned that complemental examples for a linguistic ex-
planation are a discriminative set of examples, by which one
can reason to the correct conclusion with the given linguis-
tic explanations, but cannot be achieved with different pos-
sible explanations. Complemental linguistic explanations
to examples are also considered to be explanations that can
construct such a set of examples. More details will be dis-
cussed in the subsequent section.

We conducted experiments on several datasets and

demonstrated the effectiveness of the proposed method.

The contributions of this work are as follows:

• Propose a novel visual explanation task using linguistic

and set of examples,

• Propose a novel framework for achieving complemen-

tarity on multimodal explanations.

• Demonstrate the effectiveness of the proposed method

by quantitative and qualitative experiments.
The remainder of this paper is organized as follows. In
Section 2, we discuss the related work of the visual expla-
nation task. Further, we explain the proposed framework
to achieve complemental explanations in Section 3 and de-
scribe and discuss the experiments that we performed on it
in Section 4. Finally, we conclude our paper in Section 5.

2. Related Work

The visual cognitive ability of a machine has improved
signiﬁcantly primarily because of the recent development in
deep-learning techniques. Owing to its high complexity, the
decision process is inherently a black-box; therefore, many
researchers have attempted to make a machine explain the
reason for the decision to verify its trustability.

The primary stream is visualizing where the classiﬁer
weighs for its prediction by assigning an importance to each
element in the input space, by propagating the prediction to
the input space [24, 3, 29, 23, 30, 8, 31], or by learning
the instance-wise importance of elements [4, 5, 15] with an
auxiliary model. As a different stream, some works trained
the generative model that outputs explanations with natu-
ral language [12, 21] in a post-hoc manner. Although most
studies are focused on single modality, our work exploits
multimodal information for explanations.

Prototype selection [25, 7, 13, 16, 25, 10] or machine
teaching [18] can be considered as example-based expla-
nations. The essential idea of these methods is to extract
representative and discriminative (parts of) examples.
In
other words, they attempt to obtain examples that represent
p(x|c), which is the distribution of sample x conditioned
on the category c. Our work is different in that we attempt
to explain the black-box posterior distribution p(c|x) such
as that represented by deep CNN. Moreover, we utilized
the linguistic information as well because the interpreta-
tion toward example-based explanation is not determined
uniquely.

Few works have treated multimodality for explanation
[21, 2], which is visual and linguistic. Although they pro-
vided visual information by referring to a part of the target
samples, we explore the method to utilize other examples
for explanation.

3. Method

The goal of this study is to build a model that generates
linguistic and example-based explanations, which are com-
plemental to each other.
In this section, we describe the
proposed framework. First, in subsection 3.1, we formu-
late our novel task with the notation used throughout this
paper. Subsequently, the objective function to be optimized
is illustrated in subsection 3.2. From subsection 3.3 to 3.6,
we explain the details of the actual optimization process.
The proposed method is discussed qualitatively in subsec-
tion 3.7. Finally, its relation with other explanation methods
is mentioned in subsection 3.8.

3.1. Problem formulation

We denote by x and y the sample and the category that
are the target for explanations where y is a one-hot vec-
tor. s is a vector representing a discrete attribute, whose

8604

x

CNN

g
n

i
l

o
o
p

predictor

explainer

selector

y

s

D

X = {x1 ,

x2 , ...,

xN }

reference data

freezed model

trainable model

Figure 2: The pipeline of our explanation system. It holds
two auxiliary models, which are responsible for generating
explanations with linguistics and examples, respectively. In
addition, it contains a reasoner that predicts the output of
the predictor from the given explanations as described in
subsection 3.3.

every index corresponds to the type of attribute (e.g., dim1
→ color, dim2 → shape..), and the value of the vector cor-
responds to the value of attributes (e.g., 1 → red, 2 → blue
..). Attribute values are also treated as one-hot vector on im-
plementation. We assume that the attributes are assigned to
all the samples used for training the explanation model. In
this study, we utilize one attribute as an element of linguis-
tic explanation. More speciﬁcally, linguistic explanation s
contains only one non-zero value (i.e., ||s||0 = 1), and the
corresponding type-value is outputted (e.g., “because color
is red.”). To explicitly distinguish the variable representing
linguistic explanation from one representing attributes as-
signed to the samples, we denote the former by s and the
latter by ˆs. The set of candidate examples used for explana-
tion is represented by X = {(xi, ˆsi, yi)}N
i=1, and its subset
D ⊂ X , |D| = k is used as an element of the example-

based explanation. We assume (cid:0)N

of combinations D, is sufﬁciently large. Our system gener-
ates multiple elements (s1, D1), (s2, D2), . . . , (sM , DM ),
and construct a explanation by simply applying them to the
template as in Fig. 1.

k(cid:1), and that the number

We built a model not only categorizing the input x to
a speciﬁc class y, but also providing an explanation with
linguistics and example-based explanations s and D. We
decomposed a joint distribution p(y, s, D|x) to three prob-
abilistic models: predictor, explainer, selector, all of which
were parameterized by different neural networks:

p(y, s, D|x) = p(y|x)
predictor

p(s|x, y)
explainer

p(D|x, y, s)

(1)

selector

predictor p(y|x) is the target model of the explanation,
which categorizes sample x to y. Particularly, we study
the model pretrained for the classiﬁcation task. Throughout
this paper, the weight of the predictor is frozen, and the
remaining two auxiliary models, namely, explainer and
selector, are trained to explain the output of the predictor.

loss

ˆy

reasoner

explainer p(s|x, y) is the probability of linguistic
explanation s being selected given target sample x and
class y. We limit ||s||0 = 1, and the dimension and the
value corresponding to the non-zero element is used as an
explanation.

selector p(D|x, y, s) is the probability of example-based
explanation D being selected out of all candidate examples
given x, y, and s as inputs.

3.2. Objective function

We illustrate the objective function optimized for train-
ing the explanation models in this subsection. As stated
earlier, linguistic explanation s and example-based expla-
nation D are expected to be complemental to each other.
Intuitively, one type of explanation should contain the in-
formation for the target y, that is different from what the
other explanation contains.

Hence, we leverage the interaction information [20] as
an objective function.
Interaction-information is a gener-
alization of the mutual information deﬁned on more than
three random variables, and it measures how the depen-
dency of two variable increases when the third variable
is conditioned, which provides a natural deﬁnition toward
complementarity.

From the deﬁnition,

the interaction information of
y, s, D conditioned on the input x is written as the differ-
ence of two mutual information:

I(y, s, D|x) = I(y, s|x, D) − I(y, s|x)

(2)

where

I(y, s|x, D)

=Zx Xy,s,D
p(x)
Xy,s,D

= E

p(y, s, D, x)log

p(y, s|x, D)

p(s|x, D)p(y|x, D)

dx,

p(s, D|x, y)p(y|x)log

(A)

p(s|x, y, D)

p(s|x, D) 


(3)

and similarly,

I(y, s|x)

= E

p(x)"Xy,s

p(y, s|x)log

p(s|x, y)

Py p(s|x, y)p(y|x)#

(B)

(4)

Intuitively, it measures how much linguistic explanation
s becomes useful information to identify a category y when
given a set of example-based explanation D.

The direct estimation of (3) is difﬁcult, as calculating the
expectation over all possible D is intractable. We handle

8605

explainer

selector

Gij = Gumbel(0, 1)
i = {1, 2, ..., k}

j = {1, 2, ..., N }

x

!
"
"

f
c

! f
c

f
c

y

ˆs

s
o
f
t

m
a
x

p
(
s
|
x

,

y
)

x

y

s

!
"
"

f
c

Gij

!

s
o
f
t

m
a
x

G
u
m
b
e

l

Ci

m
a
x

i

D

f
c

!

f
c

f
c

!"#$ N

f
c

reasoner

s

x

ˆs1 , ˆs2 , ..., ˆsk

x1 ,

x2 , ...,

xk

y1 , y2 , ..., yk

α
(
s
,
ˆs

i
)

g(x, s)

!

f
c

! f
c

f
c

f
c

f
c

f
c

!
"
"

!
"
"

%&’&#()(’*+&’(+*,&’(!

d
o
t

s
o
f
t

m
a
x

w1, w2, ..., wk

"

s
u
m

y1 , y2 , ..., yk

q
(
y
x

|

,
s
,

D

)

function (with parameter)

function (without  parameter)

variable

probability

!"" pre-trained CNN

Figure 3: Structures of three neural networks representing three probabilistic models. As described in subsection 3.4, the net-
work of the selector predict the parameter of categorical distribution unlike the other two models for the ease of optimization.

this problem by (a) introducing the variational lower bound
and (b) leveraging reparameterization trick similar to [4],
which are described in subsections 3.3 and 3.4, respectively.

3.3. Maximizing variational bound

In this subsection, we consider the variational lower
bound of (A) in (3). From the deﬁnition of the KL diver-
gence, p log p ≥ p log q is applied for any distribution p
and q. Using this relation, (A) inside the expectation in (3)
can be lower-bounded as follows:

(A) ≥ Xy,s,D

p(s, D|x, y)p(y|x)log

q(s|x, y, D)

p(s|x, D)

(5)

q(s|x, y, D) can be any distribution provided that it is nor-
malized, and the expectation of the KL divergence between
q(s|x, y, D) and true distribution p(s|x, y, D) is the dif-
ference between (A) and the lower bound. Similar to the
method in [9], we used the following

q(s|x, y, D) =

q(s, y|x, D)
q(y|x, D)

=

q(y|x, s, D)p(s|x, D)

Ps′ q(y|x, s′, D)p(s′|x, D)

and substituted it to (5). When considering parameteriz-
ing as in (1), it is computationally difﬁcult to calculate
p(s|x, D). Considering the sampling order, we approximate
it to p(s|x, y) instead for simplicity. The ﬁrst term of the
objective function used for optimization is as follows:

(5) ≈ E

p(y,s,D|x)(cid:20)log

q(y|x, s, D)

p(s|x,y)[q(y|x, s, D)](cid:21) .

E

(6)

q(y|x, s, D) is hereafter referred to as a reasoner, which
is expected to reason the category of input given a pair of
explanation for it.

of D. In this situation, the difﬁculty of optimization with re-
gard to the network parameter still exists. As it involves the
expectation over the distribution to be optimized, sampling
process disables calculating the gradient of parameters, ren-
dering it impossible to apply back-propagation.

We resort on the reparameterization trick to overcome
this issue, which replaces the non-differential sampling pro-
cess to the deterministic estimation of the distribution pa-
rameter, followed by adding random noise. In particular,
the Gumbel-softmax [19, 14] function is utilized similar to
[4], which approximates a random variable represented as
a one-hot vector sampled from a categorical distribution to
a vector using continuous values. Speciﬁcally, we estimate
the parameter of categorical distribution p ∈ RN satisfying
i=1 pi = 1 by the network where N = |X | is the candi-
date set of examples. An N -dimensional vector C, which is
a continuous approximation of the categorical one-hot vec-
tor, is sampled by applying softmax to the estimated param-
eter after taking logarithm and adding a noise G sampled
from the Gumbel distribution as follows:

PN

C[i] =

exp{(log pi + Gi)/τ }
j=1 exp{(log pj + Gj)/τ }

PN

where

(7)

Gi = −log(−log ui), ui ∼ Uniform(0, 1),

(8)

and τ is the temperature of softmax controlling the hardness
of the approximation to the discrete vector. To sample k-hot
vector representing example-based explanation D, concrete
vector C is independently sampled k times, and element-
wise maximum is taken to C1, C2, . . . , Ck to construct a
vector corresponding to D.

,

3.4. Continuous relaxation of subset sampling

3.5. Structure of networks

The abovementioned (6) is required to be optimized
stochastically with sampling to avoid calculating the sum-
mation over the enormous number of possible combinations

We parameterize three probabilistic distributions, ex-
plainer, selector, and reasoner with different neural net-
works. We elucidate their detailed structures.

8606

Explainer p(s|x, y) is represented by a neural network
that predicts the probability of each type (dimension) of
attribute is selected. The model is constituted using three
fully-connected layers as in left of Fig. 2. Taking the tar-
get sample x and the category label y as inputs, the model
projects them to the common-space and element-wise sum-
mation is applied. After one more projection, they are nor-
malized by the the softmax function. The output dimension
of the network f (x, y) is the same as that of the attribute
vector, and each dimension indicates the probability that
each type of attribute is selected as an explanation. When
training, the attribute ˆs assigned to the sample is used as
the value. Formally, for all i-th dimension of the linguistic
explanation vector,

p(s|x, y) =(f (x, y)[i]

0

if s[i] = ˆs[i]
otherwise

For inference, the value that maximizes the output of the
reasoner (described later) for the class to be explained is
selected.

Selector p(D|x, y, s) takes the linguistic explanation s in
addition to x and y as inputs; their element-wise summation
is calculated after projecting them to the common-space. As
stated in the previous subsection, we leverage reparameter-
ization trick to render the optimization tractable owing to
the enormous number of the combination D. The network
estimates the parameter p of categorical distribution. When
sampling from a distribution, noise variables that are inde-
pendently generated k times are added to the parameter, and
the element-wise maximum is computed after the Gumbel
softmax is applied.

Reasoner q(y|x, s, D) infers the category to which the
sample x belongs, given a pair of generated explanation (s,
D). We design it by modifying the matching network [26],
which is a standard example-based classiﬁcation model.
The prediction of the reasoner must be based on the given
explanations. Such reasoning process is realized by consid-
ering (1) consistency to the linguistic explanation s, and (2)
similarity to the target sample x, for each example in D.

Based on a certain reason, the reasoner decides whether
each example deserves consideration, and predicts the cate-
gory exploiting only selected examples. The weight of each
referred sample xi is determined by the visual and semantic
similarity to the target x. More formally,

q(y|x, s, D) = X(xi,ˆsi,yi)∈D
q(¯y|x, s, D) = 1 − X(xi,ˆsi,yi)∈D

α(s, ˆsi) w(x, s, xi, ˆsi) yi

(9)

α(s, ˆsi) w(x, s, xi, ˆsi) (10)

where

w(x, s, xi, ˆsi) =

exp(g(x, s)⊤g(xi, ˆsi))

exp(g(x, s)⊤g(xi, ˆsi))

(11)

P(xi,ˆsi,yi)∈D

α indicates the function to verify the coincidence of the lin-
guistic explanation and the attribute assigned to each sam-

ple. In our setting, we set as α(s, ˆs) = Pi[[s[i] = ˆs[i]]]

where [[·]] is an indicator function of 1 if the condition
inside bracket are satisﬁed, otherwise 0. Note α(s, ˆs) ∈
{0, 1} as ||s||0 = 1. w measures the weight of each re-
ferred sample used for prediction. The probability of the
sample being assigned to each class is determined to utilize
the samples in D, which match to the linguistic explanation
as in (9). An additional “unknown” category ¯y is introduced
for convenience, indicating the inability to predict from the
input explanations. The remaining weight is assigned to
the probability of the “unknown” class, as in (10). In (11),
g(x, s) is the feature embedding implemented by the neural
network as in the right-most in Fig. 3, and the similarity is
computed by the dot product in that space following nor-
malization by the softmax function.

While the reasoner attempts to make a decision based on the
given explanations, the other two models are trained collab-
oratively to generate explanations such that the reasoner can
reach the appropriate conclusion.

3.6. Training and Inference

We parameterize the joint distribution as in (1), and the
lower bound of the objective (2) calculated by (4) and (6)
is optimized with regard to the parameters of the neural
network models representing p(s|x, y), p(D|x, y, s), and
q(y|x, s, D). Assuming that the calculation of the expec-
tation over s is feasible, although that over D is not, we
optimized the model of the selector by sampling, and that
of the explainer was optimized directly.

The processing ﬂow in each iteration is as follows:
1. x is sampled randomly from the training dataset,
2. y is sampled randomly from the predictor p(y|x),
3. p(s|x, y) is computed for possible s,
4. D is sampled randomly from the selector p(D|x, y, s)

for each s,

5. For each sampled (x, y, s, D), the objective is calcu-
lated by (6) and (4), and the gradient of it w.r.t the
weights of all parametric models are computed.

6. All weights are updated by stochastic gradient decent

(SGD).
The inference is performed by sequentially sampling
variables from the distributions given input x. When gen-
erating linguistic explanations, M identical attribute type is
selected whose output value of the predictor is the largest,
where M is the number of attribute-examples pairs. used
for explanation. For estimating the attribute value, the one

8607

)*%#+$),/0,!%#),1$%!!,%!,,,x

)*%#+$),"-,D1

’%&.)’,!%#+$),,,x

)*%#+$),/0,2"00)&)-’,1$%!!,%!,,,x

dataset

acc (predictor)

acc (reasoner)

consistency

AADB
CUB

0.647
0.694

0.646
0.434

0.738
0.598

!

"

#

"
$

%

&
"
’

(

!

"

#

"
$

%

&

’

"

!

!

"

#

"
$

%

&

s1

!"#$%&’$(")*+*$"%,"$-.

s2

!"/%01")*+*$"%,"2+’)3

Figure 4: Intuitive understanding of complemental expla-
nations. The reasoner predicts the target sample x (writ-
ten as gray circles) by referring other samples based on the
similarity space (orange and blue) corresponding to each
linguistic explanation s1, s2. Considering two pairs of pos-
sible explanations (s1, D1) and (s2, D2), the expected D1
(written as green circle) is the one by which the reasoner
can reach the correct conclusion with s1; however, this can-
not be achieved with s2.

that most explains the prediction the best will be selected.
In other words, s1, s2, ... having the same attribute type, the
value maximizing q(y|x, s, D) is outputted after the corre-
sponding D1, D2, ... are sampled from the selector.

3.7. Which explanation is complemental?

By analyzing the proposed method, it provides an intu-
itive understanding of complemental explanations, from the
viewpoint of maximizing interaction information.

To understand which set D is preferred, we consider (6)
where D relates. Inside the expectation in this equation, the
numerator is the output of the reasoner, and the denomina-
tor is that averaged over s′. Given x, y, and s, the situa-
tion where the ratio becomes large is when the reasoner can
reach the correct conclusion y for given linguistic explana-
tion s with D but it can not when D is used with other s′. In
other words, an example-based explanation is complemen-
tal to its linguistic counterpart when it is a discriminative
set of examples for not only the target but also the linguistic
explanation.

The concept of “a set is discriminative” is clearly differ-
ent from “single example is discriminative” in our frame-
work. This can be understood intuitively by Fig. 4. A rea-
soner contains a different similarity space for each linguistic
explanation s. Here, we consider two possible explanations
s1, s2, and D1 which is the counterpart of s1. In this situ-
ation, the desired D for linguistic explanation s is that the
correct class is predicted for the given s, but a wrong one
is predicted for different s′. Therefore, the set should con-
tain both of the same/different classes from the predicted

Table 1: The accuracy of identifying the target category of
the predictor (target) and reasoner (explain), and the consis-
tency between them.

one. As shown, a naive method of example selection, such
as one selecting only one nearest sample from the target, is
not appropriate for selecting a complemental explanation.

Considering s, it relates to both terms in (2). For (6), the
same claim as that mentioned above can be applied: a com-
plemental linguistic explanation s for examples D is one
where a speciﬁc set D can be derived, instead of another see
D′. As for (4), it can be regarded as a regularizer to avoid
weighing excessively on the attribute that can identify the
target class without considering examples for selectings.

3.8. Relationship with other methods

The existing works for visual explanation explanations
(e.g., [12]) trains the classiﬁer as well as the explanation
generator to guarantee that the generated explanations are
discriminative for the target class.
In this work, we also
train the auxiliary classiﬁer (i.e., reasoner) similar to the
existing methods; however, it naturally appears in the con-
text of interaction information (mutual information) maxi-
mization. Conversely, we found that such an intuitive idea
in these works is justiﬁed from the information theoreti-
cal viewpoint. Similarly, our method shares the idea with
methods for generating referring expression (e.g.,[28]) in
that they utilize auxiliary models.

4. Experiment

We conducted experiments to verify that the proposed
method can generate the appropriate explanation. Given
a target sample x, our system generates a prediction y
from the predictor, and explanations (s1, D1), (s2, D2), ...,
(sM , DM ) from explanation models. We evaluated the pro-
posed method by quantifying the properties that the gener-
ated explanation should satisfy: (a) ﬁdelity and (b) comple-
mentarity. Related to (a), we consider two types of ﬁdelity
as follows. (a1) The target value y to be explained should
be obtained from the explanations. Moreover, (a2) The out-
putted linguistic explanation s should be correct. In addi-
tion, as for (b), we would like to assess whether the output
explanations (s, D) are complemental to each other. In the
following subsections, we describe the evaluation method
as well as discussing the obtained results after elucidating
the setting of the experiments in subsection 4.1.

4.1. Experimental setting

Dataset In our experiments, we utilized Caltech-UCSD
Birds-200-2011 Dataset (CUB) [27] and Aesthetics with

8608

dataset

baseline (random)

baseline (predict)

ours

ours

w/o x w/o y w/o s

AADB
CUB

0.200
0.125

0.572
0.428

0.582
0.436

accuracy

consistency

0.646
0.738

0.627
0.689

0.569
0.600

0.613
0.620

Table 2: The accuracy of identifying the attribute value of
our model and that of baselines: selecting attribute value
randomly (random), and predicting attributes by the percep-
tron (predict).

Attributes Database (AADB) [17], both of which hold at-
tributes assigned for all contained images. CUB is a stan-
dard dataset for ﬁne-grained image recognition, and it con-
tains 11,788 images in total and 200 categories of bird
species. It contains 27 types of attributes, such as “wing
pattern” or “throat color.” AADB is a dataset created for
the automatic image aesthetics rating.
It contains 10,000
images in total and the aesthetic score in [-1.0, 1.0] is as-
signed for each image. We treat the binary classiﬁcation
by regarding images having non-negative scores as samples
of the positive class, and remaining samples as the nega-
tive class. Attributes are also assigned as the continuous
values in [-1.0, 1.0], and we discretized them according to
the range that it belongs to: [-1.0, -0.4), [-0.4, -0.2), [-0.2,
0.2), [0.2, 0.4), or [0.4, 1.0].
It contains eleven types of
attributes, including “color harmony” and “symmetry.” Un-
like the standard split, we utilized 60% of the test set for
CUB, and 30% of the train set for AADB as the candidates
of examples X .

Although CUB dataset is for the ﬁne-grained task, where
the inner-class variance of the appearance is considered
small, that of AADB is large owing to the subjective na-
ture of the task. We selected these two datasets to assess the
inﬂuence of the variation of the samples within the class.

Detailed setting To prepare a predictor, we ﬁne-tuned
a deep residual network [11] having 18 layers for each
dataset, which is pre-trained on ImageNet dataset [6]. The
optimization was performed with SGD. The learning rate,
weight decay, momentum, and batch size were set to 0.01,
10−4, 0.9, and 64, respectively. When training explana-
tion models, all networks were optimized with SGD with-
out momentum with learning rate 10−3, weight decay 10−3,
and batch size 64 for AADB and 20 for CUB. We set k, the
number of examples used for explanations, to 10 in all ex-
periments.

Empirically, we found that

the linguistic explainer
p(s|x, y) tended to assign a high probability (almost 1) on
only one type of attribute, and small probability (almost
0) to the others. To avoid it, we added an extra entropy

term H(s|x, y) =Ps −p(s|x, y) log p(s|x, y) to the max-

imized objective function as our goal is to generate multiple
outputs. The implementation was performed on the Pytorch
framework [22].

ours

w/o x w/o y w/o s

accuracy

consistency

0.434
0.598

0.354
0.492

0.02
0.02

0.153
0.201

Table 3: The ablation study for the accuracy of identify-
ing the target category on AADB dataset (above) and CUB
dataset (below).

4.2. Fidelity

One important factor of the explanation model is the ﬁ-
delity to the target to be explained. We conducted an ex-
periment to investigate whether the target can be obtained
from its explanation.
Interestingly, our framework holds
two types of paths to the decision. One is the target pre-
dictor p(y|x) to be explained. The other is the route via
explanations interpretable for humans, i.e., y → s, D → y′
through the explainer p(s|x, y), selector p(D|x, y, s), and
reasoner q(y′|x, s, D). We evaluated the ﬁdelity to the
model by the consistency between the interpretable deci-
sions from the latter process and that from the target pre-
dictor. In the Table. 1, we reports the consistency as well
as the mean accuracy of each models. As shown, the ex-
planation model (written as reasoner) achieved the similar
performance as the target model (written as predictor), and
considerably high consistency on both datasets.

We also conducted the ablation study to clarify the inﬂu-
ence of three variables x, y, s on the quality of explanations.
We measured the accuracy in the same manner as above ex-
cept that we dropped one variable by replacing the vector
ﬁlled by 0 when generating explanations. The results in Ta-
ble 3 exhibits that our models put the most importance on
the category label out of three. These results are reasonable
because it contains information for which the explanation
should be discriminative.

The other important aspect for the ﬁdelity in our task is
the correctness of the linguistic explanation. In particular,
the attribute value (e.g., “red” or “blue” for attribute type
“color”) is also estimated during the inference. We evalu-
ated the validity by comparing the predicted attributes with
that of grand-truth on the test set. The attribute value that
explains the output of the predictor y the best will be se-
lected as written in subsection 3.6. As baselines, we em-
ployed the three layers perceptron with a hidden layer of
512 dimensions (predict). It was separately trained for each
type of attribute with SGD. Moreover, we also report the
performance when the attribute is randomly selected (ran-
dom). We measured the accuracy and the results are shown
in the Table 2. As shown, our method, which generates lin-
guistic explanations through selecting examples, can pre-
dict it as accurate as the direct estimation, and the accuracy
is much better than the random selection.

8609

Figure 5: The mean accuracy of identifying the linguistic
explanation from the examples on AADB (left) and CUB
(right) dataset. The y-axis and x-axis indicates the accuracy
and the number of generated explnations.

4.3. Complementarity

To quantify the complementarity of explanations, we in-
vestigate how the example-based explanation D renders the
linguistic explanation s identiﬁable. Speciﬁcally, utilizing
the reasoner q(y|x, s, D), which is trained to reason the tar-
get from the explanation, we conﬁrmed whether it can rea-
son to the correct conclusion only from the generated ex-
planation pair as discussed in subsection 3.7. For generated
pairs of explanations (s1, D1), (s2, D2), ..., (sM , DM ) of
which attribute type is identical, we computed the output of
the reasoner as qij = q(y|si, Dj) (1 ≤ i, j ≤ M ) for y
obtained from the predictor. Selecting the index having the
maximum value for all j as i⋆ = arg maxi qij , we veriﬁed
i⋆ = j. The mean accuracy is compared with a baseline that
outputs the same examples for all si and results are shown
in Fig. 5. The x-axis of the ﬁgure indicates the number of
the generated explanations (i.e., M).

On both datasets, the accuracy of our model is better than
the baseline. Furthermore, as shown in Fig. 6, we observe
that the diagonal element has a high value on the confu-
sion matrix. These results demonstrate the ability of our
method to generate complemental explanations. The differ-
ence in the performance between the proposed method and
baseline on AADB is lower than on CUB. We conjecture
that one reason is the difference between appearance and at-
tributes. AADB dataset contains highly-semantic attributes
(e.g., “color harmony”) compared with those in CUB (e.g.,
“color” or “shape”). Such the semantic gap may hinder to
construct the discriminative set which renders the attribute
identiﬁable.

4.4. Output example

An output of our system on CUB dataset when the num-
ber of explanations is two is shown in Fig. 7. In this ex-
ample, the combination of linguistic and example-based ex-
planation seems compatible, where it will not make sense

Figure 6: The confusion matrix of identifying the attribute
type from the examples on AADB (left) and CUB (right)
dataset.

EIHA@??=@A@9@FA?AH

’()%*&(

KFFAHJ=E?H

EI>KA

%&$

!"#$%&$

JDH=J?H

EIMDEJA

%&$

!"#$%&$

Figure 7: Example output of our system on CUB dataset.

if these pairs are switched. For instance, the below linguis-
tic explanation “throat color is white” may not be a good
explanation for the above examples.

Although not the primary scope in this work, the pro-
posed task may be extended to machine teaching task,
where the machine teaches to human by showing examples
iteratively.

5. Conclusion

In this work, we performed a novel task, that is, generat-
ing visual explanations with linguistic and visual examples
that are complemental to each other. We proposed to pa-
rameterize the joint probability of variables to explain, and
to be explained by the three neural networks. To explic-
itly treat the complementarity, auxiliary models responsible
for the explanations were trained simultaneously to maxi-
mize the approximated lower bound of the interaction in-
formation. We empirically demonstrated the effectiveness
of the method by the experiments conducted on the two vi-
sual recognition datasets.

6. Acknowledgement

This work was partially supported by JST CREST Grant
Number JPMJCR1403, Japan, and partially supported by
the Ministry of Education, Culture, Sports, Science and
Technology (MEXT) as ”Seminal Issue on Post-K Com-
puter.” Authors would like to thank Hiroharu Kato, Toshi-
hiko Matsuura for helpful discussions.

8610

246810# of explanations (M)0.00.10.20.30.40.50.6accuracyAADBbaselineours2468101214161820222426# of explanations (M)0.00.20.40.60.81.0accuracyCUBbaselineoursAADBCUB[20] W. McGill. Multivariate information transmission. Transac-
tions of the IRE Professional Group on Information Theory,
4(4):93–111, 1954. 2, 3

[21] D. H. Park, L. A. Hendricks, Z. Akata, A. Rohrbach,
B. Schiele, T. Darrell, and M. Rohrbach. Multimodal expla-
nations: Justifying decisions and pointing to the evidence. In
CVPR, 2018. 2

[22] A. Paszke, S. Gross, S. Chintala, G. Chanan, E. Yang, Z. De-
Vito, Z. Lin, A. Desmaison, L. Antiga, and A. Lerer. Auto-
matic differentiation in pytorch. 2017. 7

[23] R. R. Selvaraju, M. Cogswell, A. Das, R. Vedantam,
D. Parikh, and D. Batra. Grad-cam: Visual explanations from
deep networks via gradient-based localization.
In ICCV,
2017. 2

[24] K. Simonyan, A. Vedaldi, and A. Zisserman. Deep inside
convolutional networks: Visualising image classiﬁcation
models and saliency maps. arXiv preprint arXiv:1312.6034,
2013. 2

[25] S. Singh, A. Gupta, and A. A. Efros. Unsupervised discovery

of mid-level discriminative patches. In ECCV. 2012. 2

[26] O. Vinyals, C. Blundell, T. Lillicrap, D. Wierstra, et al.
In NIPS, 2016.

Matching networks for one shot learning.
5

[27] C. Wah, S. Branson, P. Welinder, P. Perona, and S. Belongie.
The Caltech-UCSD Birds-200-2011 Dataset. Technical re-
port, 2011. 6

[28] L. Yu, H. Tan, M. Bansal, and T. L. Berg. A joint speaker-
listener-reinforcer model for referring expressions. In CVPR,
2017. 6

[29] J. Zhang, Z. Lin, J. Brandt, X. Shen, and S. Sclaroff. Top-
In ECCV,

down neural attention by excitation backprop.
2016. 2

[30] B. Zhou, A. Khosla, A. Lapedriza, A. Oliva, and A. Tor-
ralba. Learning deep features for discriminative localization.
In CVPR, 2016. 2

[31] B. Zhou, Y. Sun, D. Bau, and A. Torralba. Interpretable basis

decomposition for visual explanation. In ECCV, 2018. 2

References

[1] Oxford living dictionaries. Oxford University Press. com-
plement https://en.oxforddictionaries.com/
definition/complement. 1

[2] L. Anne Hendricks, R. Hu, T. Darrell, and Z. Akata. Ground-

ing visual explanations. In ECCV, 2018. 2

[3] S. Bach, A. Binder, G. Montavon, F. Klauschen, K.-R.
M¨uller, and W. Samek. On pixel-wise explanations for non-
linear classiﬁer decisions by layer-wise relevance propaga-
tion. PloS one, 10(7):e0130140, 2015. 2

[4] J. Chen, L. Song, M. J. Wainwright, and M. I. Jordan.
Learning to explain: An information-theoretic perspective on
model interpretation. In ICML, 2018. 2, 4

[5] P. Dabkowski and Y. Gal. Real time image saliency for black

box classiﬁers. In NIPS, 2017. 2

[6] J. Deng, W. Dong, R. Socher, L.-J. Li, K. Li, and L. Fei-
Fei. Imagenet: A large-scale hierarchical image database. In
CVPR, 2009. 7

[7] C. Doersch, S. Singh, A. Gupta, J. Sivic, and A. Efros. What
makes paris look like paris? ACM Transactions on Graphics,
31(4), 2012. 2

[8] R. C. Fong and A. Vedaldi.

Interpretable explanations of

black boxes by meaningful perturbation. In ICCV, 2017. 2

[9] S. Gao, G. Ver Steeg, and A. Galstyan. Variational infor-
mation maximization for feature selection. In NIPS, 2016.
4

[10] Y. Goyal, T. Khot, D. Summers-Stay, D. Batra, and
D. Parikh. Making the v in vqa matter: Elevating the role of
image understanding in visual question answering. In CVPR,
2017. 2

[11] K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learning

for image recognition. In CVPR, 2016. 7

[12] L. A. Hendricks, Z. Akata, M. Rohrbach, J. Donahue,
B. Schiele, and T. Darrell. Generating visual explanations.
In ECCV, 2016. 2, 6

[13] A. Jain, A. Gupta, M. Rodriguez, and L. S. Davis. Represent-
ing videos using mid-level discriminative patches. In CVPR,
2013. 2

[14] E. Jang, S. Gu, and B. Poole. Categorical reparameterization
arXiv preprint arXiv:1611.01144,

with gumbel-softmax.
2016. 4

[15] A. Kanehira, K. Takemoto, S. Inayoshi, and T. Harada.
Multimodal explanations by predicting counterfactuality in
videos. In CVPR, 2019. 2

[16] A. Kanehira, L. Van Gool, Y. Ushiku, and T. Harada.

Viewpoint-aware video summarization. In CVPR, 2018. 2

[17] S. Kong, X. Shen, Z. Lin, R. Mech, and C. Fowlkes. Photo
aesthetics ranking network with attributes and content adap-
tation. In ECCV, 2016. 7

[18] O. Mac Aodha, S. Su, Y. Chen, P. Perona, and Y. Yue. Teach-
ing categories to human learners with visual explanations. In
CVPR, 2018. 2

[19] C. J. Maddison, A. Mnih, and Y. W. Teh. The concrete dis-
tribution: A continuous relaxation of discrete random vari-
ables. arXiv preprint arXiv:1611.00712, 2016. 4

8611

