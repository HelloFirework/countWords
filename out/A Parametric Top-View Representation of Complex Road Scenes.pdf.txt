A Parametric Top-View Representation of Complex Road Scenes

Ziyan Wang1* Buyu Liu2
1Carnegie Mellon University

Abstract

Samuel Schulter2 Manmohan Chandraker2
2NEC Laboratories America

3UC San Diego

3

,

In this paper, we address the problem of inferring the
layout of complex road scenes given a single camera as in-
put. To achieve that, we ﬁrst propose a novel parameterized
model of road layouts in a top-view representation, which is
not only intuitive for human visualization but also provides
an interpretable interface for higher-level decision making.
Moreover, the design of our top-view scene model allows
for efﬁcient sampling and thus generation of large-scale
simulated data, which we leverage to train a deep neural
network to infer our scene model’s parameters. Speciﬁcally,
our proposed training procedure uses supervised domain-
adaptation techniques to incorporate both simulated as well
as manually annotated data. Finally, we design a Condi-
tional Random Field (CRF) that enforces coherent predic-
tions for a single frame and encourages temporal smooth-
ness among video frames. Experiments on two public data
sets show that: (1) Our parametric top-view model is repre-
sentative enough to describe complex road scenes; (2) The
proposed method outperforms baselines trained on manually-
annotated or simulated data only, thus getting the best of
both; (3) Our CRF is able to generate temporally smoothed
while semantically meaningful results.

1. Introduction

Understanding complex layouts of the 3D world is a cru-
cial ability for applications like robot navigation, driver as-
sistance systems or autonomous driving. Recent success
in deep learning-based perception systems enables pixel-
accurate semantic segmentation [3, 4, 33] and (monocular)
depth estimation [9, 15, 32] in the perspective view of the
scene. Other works like [10, 23, 25] go further and rea-
son about occlusions and build better representations for
3D scene understanding. The representation in these works,
however, is typically non-parametric, i.e., it provides a se-
mantic label for a 2D/3D point of the scene, which makes
higher-level reasoning hard for downstream applications.

In this work, we focus on understanding driving scenarios
and propose a rich parameterized model describing com-

*Work done during an internship at NEC Laboratories America.

Figure 1: Our goal is to infer the layout of complex driving
scenes from a single camera. Given a perspective image (top
left) that captures a 3D scene, we predict a rich and inter-
pretable scene description (bottom right), which represents
the scene in an occlusion-reasoned semantic top-view.

plex road layouts in a top-view representation (Fig. 1 and
Sec. 3.1). The parameters of our model describe important
scene attributes like the number and width of lanes, and the
existence of, and distance to various types of intersections,
crosswalks and sidewalks. An explicit model of such pa-
rameters is beneﬁcial for higher-level modeling and decision
making as it provides a tangible interface to the real world.
In contrast to prior art [7, 14, 17, 23, 24, 25], our proposed
scene model is richer, fully parameterized and can be in-
ferred from a single camera input with a combination of
deep neural networks and a graphical model.

However, training deep neural networks requires large
amounts of training data. Although annotating the scene
attributes of our model for real RGB images is possible, it
is also costly to do at a large-scale and, more importantly,
extremely difﬁcult for certain scene attributes. While the
existence of a crosswalk is a binary attribute and is easy
to annotate, annotating the exact width of a side road re-
quires the knowledge of scene geometry, which is hard when
only given a perspective RGB image. We thus propose to
leverage simulated data. However, in contrast to rendering
photo-realistic RGB images, which is a difﬁcult and time-

10325

consuming task [20, 21], we propose a scene model that
allows for efﬁcient sampling and render semantic top-view
representations that obviate expensive illumination modeling
or occlusion reasoning.

Given simulated data with accurate and complete anno-
tations, as well as real images with potentially noisy and
incomplete annotations, we propose a hybrid training pro-
cedure leveraging both sources of information. Speciﬁcally,
our neural network design involves (i) a feature extractor that
aims to leverage information from both domains, simulated
and real semantic top-views from [23] (see Fig. 4), and (ii)
a domain-agnostic classiﬁer of scene parameters. At test
time, we convert a perspective RGB image into a semantic
top-view representation using [23] and predict our scene
model’s parameters. Given the individual scene parameter
predictions, we further design a graphical model (Sec. 3.4)
that captures dependencies among scene attributes in single
images and enforces temporal consistency across a sequence
of frames. We validate our idea on two public driving data
sets, KITTI [8] and NuScenes [18] (Sec. 4). The results
demonstrate the effectiveness of the top-view representation,
the hybrid training procedure with real and simulated data,
and the importance of the graphical model for coherent and
consistent outputs. To summarize, our key contributions are:

• A novel parametric and interpretable model of com-

plex driving scenes in a top-view representation.

• A neural network that (i) predicts the parameters from
a single camera and (ii) is designed to enable a hybrid
training approach from both real and synthetic data.
• A graphical model that ensures coherent and temporally

consistent scene description outputs.

• New annotations of our scene attributes for the KITTI [8]

and NuScenes [18] data sets1.

2. Related Work

3D scene understanding is an important task in computer
vision with many applications for robot navigation [11], self-
driving [7, 14], augmented reality [1] or real estate [16, 27].

Scene understanding: Explicit modeling of the scene is
frequently done for indoor applications where strong pri-
ors about the layout of rooms can be leveraged [1, 16, 26].
Non-parametric approaches are more common for outdoor
scenarios because the layout is typically more complex and
harder to capture in a coherent model, with occlusion reason-
ing often being a primary focus. Due to the natural ability
to reﬂect orders, layered representations [10, 29, 31] have
been utilized in scene understanding to reason about ge-
ometry and semantics in occluded areas. However, such
intermediate representations are not desired for applications
where distance information is required. A top-view repre-
sentation [23, 25], in contrast, is a more detailed description

1http://www.nec-labs.com/~mas/BEV

for 3D scene understanding. Our work follows such a top-
view representation and aims to infer a parametric model of
complex outdoor driving scenes from a single input image.
A few parametric models have been proposed for out-
door environments too. Seff and Xiao [24] present a neural
network that directly predicts scene attributes from a single
RGB image. Although those attributes are automatically ac-
quired from OpenStreetMaps [19], they are not rich enough
to fully describe complex road scenes, e.g. curved road with
side-roads. A richer model that is capable of handling com-
plex intersections with trafﬁc participants is proposed by
Geiger et al. [7]. To this end, they propose to utilize multiple
modalities such as vehicle tracklets, vanishing points and
scene ﬂow. Different from their work, we focus more on
scene layouts and propose in Sec. 3.1 a richer model in that
aspect, including multiple lanes, crosswalks and sidewalks.
Moreover, our base framework is able to infer model pa-
rameters with a single perspective image as input. A more
recent work [14] proposes to infer a graph representation
of the road, including lanes and lane markings, from partial
segmentations of an image. Unlike our method that aims to
handle complex road scenarios, [14] focuses only on straight
roads. Máttyus et al. [17] propose an interesting parametric
model of roads with the goal of augmenting existing map
data with richer semantics. Again, this model only handles
straight roads and requires input from both perspective and
aerial images. Perhaps [23] is the closest work to ours. In
contrast to it, we propose a fully-parametric model that is
capable of reconstructing complex road layouts.
Learning from simulated data: Besides the scene model
itself, one key contribution of our work is the training pro-
cedure that leverages simulated data, where we also utilize
tools from domain adaptation [6, 30]. While most recent
advances in this area focus on bridging domain gaps between
synthetic and real RGB images [20, 21], we beneﬁt from the
semantic top-view representation within which our model
is deﬁned. This representation allows efﬁcient modeling
and sampling of a variety of road layouts, while avoiding
the difﬁculty of photo-realistic renderings, to signiﬁcantly
reduce the domain gap between simulated and real data.

3. Our Framework

The goal of this work is to extract interpretable attributes
of the layout of complex road scenes from a single cam-
era. Sec. 3.1 presents our ﬁrst contribution, a parameterized
and rich model of road scenes describing attributes like the
topology of the road, the number of lanes or distances to
scene elements. The design of our scene model allows efﬁ-
cient sampling and, consequently, enables the generation of
large-scale simulated data with accurate and complete anno-
tations. At the same time, manual annotation of such scene
attributes for real images is costly and, more importantly,
even infeasible for some attributes, see Sec. 3.2. The second

10326

Figure 2: Our scene model consists of several parameters that capture a variety of complex driving scenes. (Left) We illustrate
the model and highlight important parameters (A-I), which are grouped into three categories (middle): Lanes, to describe the
layout of a single road; Topology, to model various road topologies; Walkable, describing scene elements for pedestrians. Our
model is deﬁned as a directed acyclic graph enabling efﬁcient sampling and is represented in the top-view, making rendering
easy. These properties turn our model into a simulator of semantic top-views. (Right) We show rendered examples for each of
the above groups. A complete list of scene parameters and the corresponding graphical model is given in the supplementary.

contribution of our work, described in Sec. 3.3, is a deep
learning framework that leverages training data from both
domains, real and simulation, to infer the parameters of our
proposed scene model. Finally, our third contribution is a
conditional random ﬁeld (CRF) that enforces coherence be-
tween related parameters of our scene model and encourages
temporal smoothness for video inputs, see Sec. 3.4.

set of parameters Θ is grouped into different types and we
count M b = 14 binary variables Θb, M m = 2 multi-class
variables Θm and M c = 22 continuous variables Θc. The
supplemental material contains a complete list of our model
parameters. Note that the ability to work with a simple
simulator means we can easily extend our scene model with
further parameters and relationships.

3.1. Scene Model

Our model describes road scenes in a semantic top-view
representation and we assume the camera to be at the bottom
center in every frame. This allows us to position all elements
relative to the camera. On a higher level, we differentiate
between the “main road”, which is where the camera is, and
eventual “side roads”. All roads consist of at least one lane
and intersections are a composition of multiple roads. Fig. 2
gives an overview of our proposed model.

Deﬁning two side roads (one on the left and one on the
right of the main road) along with distances to each one of
them gives us the ﬂexibility to model both 3-way and 4-way
intersections. An additional attribute determines if the main
road ends after the intersection, which yields T-intersections.
The main road is deﬁned by a set of lanes, one- or two-
way trafﬁc, delimiters and sidewalks. We also deﬁne up
to six lanes on the left and right side of the camera, which
occupies the ego-lane. We allow different lane widths to
model special lanes like turn- or bike-lanes. Next to the outer
most lanes, optional delimiters of a certain width separate
the road from the optional sidewalk. At intersections, we
also model the existence of crosswalks at all four potential
sides. For side roads, we only model their width. Our ﬁnal

3.2. Supervision from Real and Simulated Data

Inferring our model’s parameters from an RGB image
requires abundant training data. Seff and Xiao [24] leverage
OpenStreetMaps [19] to gather ground truth for an RGB
image. While this can be done automatically given the GPS
coordinates, the set of attributes retrievable is limited and
can be noisy. Instead, we leverage a combination of manual
annotation and simulation for training.

Real data: Annotating real images with attributes corre-
sponding to our deﬁned parameters can be done efﬁciently
only when suitable tools are used. This is particularly true
for sequential data because many attributes stay constant
over a long period of time. The supplemental material con-
tains details on our annotation tool and process. We have
collected a data set Dr = {xr, Θr}N r
i=1 of N r samples of
semantic top-views xr and corresponding scene attributes
Θr. The semantic top-views xr ∈ RH×W ×C , with spatial
dimensions H × W , contain C semantic categories ("road",
"sidewalk", "lane boundaries" and "crosswalks") and are
computed by applying the framework of [23]. However, sev-
eral problems arise with real data. First, ground truth depth is
required at a reasonable density for each RGB image to ask
humans to reliably estimate distances to scene elements like

10327

Figure 3: Overview of our proposed framework: At train-time, our framework makes use of both manual annotation for
real data (blue) and automated annotation for simulated data (red), see Sec. 3.2. The feature extractors g convert semantic
top views from either domain into a common representation which is input to h. An adversarial loss (orange) encourages
a domain-agnostic output of g. At test-time, an RGB image in the perspective view is ﬁrst transformed into a semantic
top-view [23], which is then used by our proposed neural network (see Sec. 3.3), h ◦ g, to infer our scene model (see Sec. 3.1).
The graphical model deﬁned in Sec. 3.4 ensures a coherent ﬁnal output.

intersections or crosswalks. Second, there is always a limit
on how much diverse data can be annotated cost-efﬁciently.
Third, and most importantly, not all desired scene attributes
are easy or even possible to annotate at a large-scale, even if
depth information is available. For these reasons, we explore
simulation as another source of supervision.

Simulated data: Our proposed scene model deﬁned in
Sec. 3.1 can act as a simulator to generate training data with
complete and accurate annotation. First, by treating each
attribute as a random variable with a certain hand-deﬁned
(conditional) probability distribution and relating them in a
directed acyclic graph, we can use ancestral sampling [2]
to efﬁciently sample a diverse set of scene parameters Θs.
Second, we render the scene deﬁned by the parameters Θs
into a semantic top-view xs with the same dimensions as
xr. It is important to highlight that rendering is easy, com-
pared to photo-realistic rendering of perspective RGB im-
ages [20, 21], because our model (i) works in the top-view
where occlusion reasoning is not required and (ii) is deﬁned
in semantic space making illumination or photo-realism ob-
solete. We generate a data set Ds = {xs, Θs}N s
i=1 of N s sim-
ulated semantic top-views xs and corresponding Θs. Fig. 2
(right) gives a few examples of rendered top-views.

3.3. Training and Inferring the Scene Model

We propose a deep learning framework that maps a se-
mantic top-view x into the scene model parameters Θ. Fig. 3
provides a conceptual illustration. To leverage both sources
of supervision (real and simulated data) during training, we
deﬁne this mapping as

Θ = f (x) = (h ◦ g)(x) ,

(1)

where ◦ deﬁnes a function composition and h and g are
neural networks, with weights γh and γg respectively, that
we want to train. The architecture of g is a 6-layer con-
volutional neural network (CNN) that converts a semantic
top-view x ∈ RH×W ×C into a 1-dimensional feature vector
fx ∈ RD. Then, the function h is deﬁned as a multi-layer
perceptron (MLP) predicting the scene attributes Θ given
fx. Speciﬁcally, h is implemented as a multi-task network
with three separate predictions ηb, ηm and ηc for each of the
parameter groups Θb, Θm and Θc of the scene model.

Our objective is that h ◦ g works well on real data, while
we want to leverage the rich and large set of annotations from
simulated data during training. The intuition behind our de-
sign is to have a uniﬁed g that maps semantic top-views x
of different domains into a common feature representation,
usable by a domain-agnostic classiﬁer h. To realize this intu-
ition, we deﬁne supervised loss functions on both real and
simulated data and leverage domain adaptation techniques
to minimize the domain gap between the output of g given
top-views from different domains.
Loss functions on scene attribute annotation: Given
data sets Dr and Ds of real and simulated data, we deﬁne

Lsup = λr · Lr

sup + λs · Ls

sup

(2)

as supervised loss. The scalars λr and λs weigh the impor-
tance between real and simulated data and

L{r,s}

sup =

N {r,s}
X

i=1

BCE(Θ{r,s}

b,i

, η{r,s}
b,i )

+ CE(Θ{r,s}
+ ℓ1(Θ{r,s}

m,i , η{r,s}
m,i )
, η{r,s}
c,i ) ,

c,i

(3)

10328

3.4. CRF for Coherent Scene Understanding

We now introduce our graphical model for predicting
consistent layouts of road scenes. We ﬁrst present our CRF
for single frames and then extend it to the temporal domain.

Single image CRF: Let us ﬁrst denote the elements of
scene attributes and corresponding predictions as Θ[·] and
η[·], where we use indices i ∈ {1, ..., M b}, p ∈ {1, ..., M m}
and m ∈ {1, ..., M c} for binary, multi-class and continuous
variables, respectively. We then formulate scene understand-
ing as the energy minimization problem

E(Θ|x) =Eb(Θb) + Em(Θm) + Ec(Θc)
+ Es(Θb, Θm) + Eq(Θb, Θc)
+ Eh(Θb, Θm, Θc) ,

(5)

where E∗ denotes energy potentials for the associated scene
attribute variables (Θb, Θm and Θc). We will describe the
details for each of those potentials in the following.

For binary variables Θb, our potential function Eb con-

sists of two terms,

Eb(Θb) = X

φb(Θb[i]) + X

ψb(Θb[i], Θb[j]) .

(6)

i

i6=j

The unary term φb(·) speciﬁes the cost of assigning a label
to Θi
b and is deﬁned as − log Pb(Θb[i]), where Pb(Θb[i]) =
ηb[i] is the probabilistic output of our neural network h. The
pairwise term ψb(·, ·) deﬁnes the cost of assigning Θb[i]
and Θb[j] to i-th and j-th variable as ψb(Θb[i], Θb[j]) =
− log Mb(Θb[i], Θb[j]), where Mb is the co-occurrence ma-
trix and Mb(Θb[i], Θb[j]) is the corresponding probabil-
ity. For multi-class variables, our potential is deﬁned as
Em(Θm) = Pp φm(Θm[p]), where φm(·) = − log Pm(·)
and Pm(Θm[p]) = ηm[p]. Similarly, we deﬁne the potential
for continuous variables as Ec(Θc) = Pm φc(Θc[m]) with
φc(Θc[m]) being the negative log-likelihood of ηc[m].

For a coherent prediction, we further introduce the po-
tentials Es, Eq and Eh to model correlations among scene
attributes. Es and Eq enforce hard constraints between cer-
tain binary variables and multi-class or continuous variables,
respectively. They convey the idea that, for instance, the
number of lanes of a side-road is consistent with the actual
existence of that side-road. We denote the set of pre-deﬁned
pairs between Θb and Θm as S = {(i, p)} and between Θb
and Θc as Q = {(i, m)}. Potential Es is then deﬁned as

Es(Θb, Θm) = X

∞ × ✶[Θb[i] 6= Θm[p]] ,

(7)

(i,p)∈S

where ✶[ ∗ ] is the indicator function. Potential Eq is deﬁned
likewise but using the set Q and variables Θc. In both cases,
we give a high penalty to scenarios where two types of
predictions are inconsistent.

10329

Figure 4: Unpaired examples of simulated semantic top-
views (top) and real ones from [23] (bottom).

where (B)CE is the (binary) cross-entropy loss and {Θ, η}·,i
denotes the i-th sample in the data set. For regression, we
discretize continuous variables into K bins by convolving a
dirac delta function centered at Θc with a Gaussian of ﬁxed
variance, which enables easier multi-modal predictions and
is useful for the graphical model deﬁned in Sec. 3.4. We
ignore scene attributes without manual annotation for Lr
sup.
Bridging the domain gap: Since our goal is to leverage
simulated data during the training process, our network de-
sign needs to account for the inherent domain gap. We thus
deﬁne separate feature extraction networks gr and gs with
shared weights γg that take as input semantic top-views from
either domain, i.e., xr or xs, and compute respective features
fxr and fxs . We then explicitly encourage a domain-agnostic
feature representation by employing an adversarial loss func-
tion Ladv [6]. We use an MLP d(fx) with parameters γd
as discriminator, that takes the feature representations from
either domain, i.e., fxr or fxs , as input and makes a binary
prediction into "real" or "fake". As in standard generative
adversarial networks, d has the goal to discriminate between
the two domains, while the rest of the model aims to confuse
the discriminator by providing inputs fxr,s indistinguishable
in the underlying distribution, i.e., a domain-agnostic repre-
sentation of the semantic top-view maps xr,s. Fig. 4 shows
unpaired examples of simulated and real top-views to illus-
trate the domain gap. Note that we chose domain adaptation
on the feature-level over our initial attempt on the pixel-level
with a modiﬁed version of [35] due to a simpler design and
higher accuracy. However, we refer to the supplementary
for a discussion of our pixel-level approach, which provides
insights into the role of domain adaptation and further visu-
alizations on overcoming the domain gap.

Optimization: We use ADAM [13] to estimate the param-
eters of our neural network model by solving:

max

γd

min
γg ,γh

Lsup + λadvLadv.

(4)

Figure 3 provides an overview of our framework.

Finally, the potential Eh of our energy deﬁned in Eq. (5)
models higher-order relations between Θb, Θm and Θc. The
potential takes the form

Eh(Θb, Θm, Θc) = X

∞×fc(Θb[i], Θm[p], Θc[m]) , (8)

c∈C

where c = (i, p, m) and fc(·, ·, ·) is a table where conﬂicting
predictions are set to 1. The supplementary gives a complete
deﬁnition of C which contains the relations between scene
attributes and the constraints we enforce on them.

Temporal CRF: Given videos as input, we propose to
extend our CRF to encourage temporally consistent and
meaningful outputs. We extend the energy function from
Eq. (5) by two terms that enforce temporal consistency of
binary and multi-class variables and smoothness for contin-
uous variables. Due to space limitations, we refer to the
supplementary for details of our formulation.

Learning and inference on CRF: We use QPBO [22] for
inference in both CRF models. Since ground truth is not
available for all frames, we do not introduce per-potential
weights. However, our CRF is amenable to piece-wise [28]
or joint learning [5, 34] if ground-truth is provided.

4. Experiments

To evaluate the quality of our scene understanding ap-
proach we conduct several experiments and analyze the im-
portance of different aspects of our model. Since we do
have manually-annotated ground truth, we can quantify our
results and compare with several baselines that demonstrate
the impact of two key contributions: the use of top-view
maps and simulated data for training. We also put an em-
phasis on qualitative results in this work for two reasons:
First, not all attributes of our model are actually contained
in the manually-annotated ground truth and can thus not be
quantiﬁed but only qualitatively veriﬁed. Second, there is
obviously no prior art showing results on this novel set of
ground truth data, which makes the analysis of qualitative
results even more important.

Datasets: Since our focus is on driving scenes and our ap-
proach requires semantic segmentation and depth annotation,
we choose to work with the KITTI [8] and the newly released
NuScenes [18]2 data sets. Although both data sets provide
laser-scanned data for depth ground truth, note that depth su-
pervision can also come from stereo images [9]. Also, since
NuScenes [18] does not provide semantic segmentation, we
reuse the segmentation model from KITTI. For both data
sets, we manually annotate a subset of the images with our
scene attributes. Annotators see the RGB image as well as
the depth ground truth and provide labels for 22 attributes

2At the time of conducting experiments, we only had access to the

pre-release of the data set.

of our model. We refer to the supplementary for details on
the annotation process. In total, we acquired around 17000
annotations for KITTI [8] and 3000 for NuScenes [18].
Evaluation metrics: Since the output space of our predic-
tion is complex and consists of a mixture of discrete and
continuous variables, which require different handling, we
use multiple different metrics for evaluation.

For binary variables (like the existence of side roads)
and for multi-class variables (like the number of lanes), we
measure accuracy as Accu.-Bi = 1
k=1[pk = Θbk] and
Accu.-Mc = 1
k=1[pk = Θmk]. For regression variables
we use the mean squard error (MSE).

14 P14

2 P2

Besides these standard metrics, we also propose another
metric that combines all predicted variables and outputs into
a single number. We take the predicted parameters and ren-
der the scene accordingly. For the corresponding image,
we take the ground truth parameters (augmented with pre-
dicted values for variables without ground truth annotation)
and render the scene, which assigns each pixel a semantic
category. For evaluation, we can now use Intersection-over-
Union (IoU), a standard measure in semantic segmentation.
While being a very challenging metric in this setup, it implic-
itly weighs the attributes by their impact on the area of the
top-view. For instance, predicting the number of lanes incor-
rectly by one has a bigger impact than getting the distance
to a sideroad wrong by one meter.

4.1. Single Image Evaluation

Our main experiments are conducted with a single image
as input. In the next section, we separately evaluate the
impact of temporal modeling as described in Sec. 3.4.
Baselines: Since we propose a scene model of roads with
new attributes and corresponding ground truth annotation,
there exist no previously reported numbers. We thus choose
appropriate baselines that are either variations of our model
or relevant prior works extended to our scene model:

• Manual-GT-RGB (M-RGB): A classiﬁcation CNN
(ResNet-101 [12]) trained on the manually-annotated
ground truth. Seff and Xiao [24] have the same setup
except that we use a network with more parameters and
train for all attributes simultaneously in a multi-task setup.
• Manual-GT-RGB+Depth (M-RGB+D): Same as M-
RGB but with the additional task of monocular depth
prediction (as in our perception model). The intuition
is that this additional supervision aids predicting certain
scene attributes, e.g., distances to side roads, and renders
a more fair comparison point to our model.

• Manual-GT-BEV (M-BEV): Instead of using the per-
spective RGB image as input, this baseline uses the output
of [23], which is a semantic map in the top-view, also re-
ferred to as bird’s eye view (BEV). We train the function f
with the manually annotated ground truth. Thus, M-BEV
can be seen as an extension of [23] to our scene model.

10330

Figure 5: Illustrations of all the models we compare in the quantitative evaluation in Tab. 1.

Method

Accu.-Bi. ↑ Accu.-Mc. ↑ MSE ↓

IOU ↑ Accu.-Bi. ↑ Accu.-Mc. ↑ MSE ↓

IOU ↑

KITTI [8]

NuScenes [18]

M-RGB [24]
M-RGB [24]+D
M-BEV [23]
M-BEV [23] +GM
S-BEV
S-BEV+DA
S-BEV+DA+GM
H-BEV
H-BEV+DE
H-BEV+DA
H-BEV+DA+GM

.811
.799
.820
.831
.694
.818
.847
.816
.830
.845
.849

.778
.798
.777
.792
.371
.677
.683
.756
.776
.792
.805

.230
.146
.141
.136
.249
.222
.230
.152
.158
.108
.098

.317
.342
.345
.350
.239
.314
.320
.342
.381
.398
.371

.846
.899
.852
.852
.790
.753
.723
.783
.854
.856
.855

.604
.634
.601
.601
.366
.568
.568
.569
.626
.545
.626

.080
.021
.022
.036
.162
.103
.081
.039
.042
.028
.033

.316
.335
.269
.338
.155
.171
.160
.345
.423
.346
.450

Table 1: Main results on road scene layout estimation on both data sets KITTI [8] and NuScenes [18].

• Simulation-BEV (S-BEV): This baseline uses the same
architecture as M-BEV but is trained only in simulation.
• Simulation-BEV+DomainAdapt (S-BEV+DA): Same
as S-BEV, but with additional domain adaptation loss
as proposed in our model.

We denote our approach proposed in Sec. 3, according to
the nomenclature above, as Hybrid-BEV+DomainAdapt
(H-BEV+DA) and further explore two variants of it. First,
H-BEV does not employ the discriminator d but still trains
from both domains. Second, H-BEV+DE also avoids the
discriminator but uses a separate set of weights γr
g and γs
g
for the feature extraction network g. The intuition is that
the supervised losses from both domains and the separate
domain-speciﬁc encoding (thus, "+DE") already provide
enough capacity and information to the model to ﬁnd a
domain-agnostic representation of the data. Please refer to
Fig. 5 for an overview of the different models we compare.
For the best models among each group (M-, S- and H-), we
report numbers with the graphical model (+GM).

Quantitative results: Tab. 1 summarizes our main results
for both data sets and we can draw several conclusions. First,
when comparing the groups of methods by supervision type,
i.e., manual (M), simulation (S) and hybrid (H), we can
clearly observe the beneﬁt of hybrid methods leveraging both
domains. Second, within the group of manual annotation, we
can see that adding depth supervision to the approach of [24]
signiﬁcantly improves results, particularly for continuous
variables. Predicting the scene attributes directly from the
top-view representation of [23] is slightly better than M-

Method
S-BEV+DA
M-BEV [23]
H-BEV+DA
+GM

KITTI [8]

NuScenes [18]

seman.↓

temp.↓

seman.↓

temp.↓

2.82
2.65
5.59
1.77

5.32
3.99
6.01
1.93

1.08
1.09
1.08
0.11

2.09
1.27
1.05
0.42

Table 2: Main results on consistency measurements.

RGB+D on KITTI and worse on NuScenes, but has the
crucial advantage that augmentation with simulated data in
the top-view becomes possible, as illustrated with all hybrid
variants. Third, within the group of simulated data, using
domain adaptation techniques (S-BEV+DA) has a signiﬁcant
beneﬁt. We want to highlight the competitive overall results
of S-BEV+DA, which is an unsupervised domain adaptation
approach requiring no manual annotation. Forth, also for
hybrid methods, explicitly addressing the domain gap (H-
BEV+DE and H-BEV+DA) enables higher accuracy. Finally,
all models improve with our graphical model put on top.

Qualitative results: We show several qualitative results
in Fig. 6 and Fig. 7 and again highlight their importance to
demonstrate the practicality of our approach qualitatively.
We can see from the examples that our model successfully
describes a diverse set of road scenes.

4.2. Evaluating consistency of our model

We now analyze the impact of the graphical model on
the consistency of our predictions, for which we deﬁne the
following metrics:

10331

Figure 6: Qualitative results of H-BEV+DA+GM on individual frames from KITTI. Each example shows perspective RGB,
ground truth and predicted semantic top-view, respectively. Our representation is rich enough to cover various road layouts
and handles complex scenarios, e.g., rotation, existence of crosswalks, sidewalks, side-roads and curved roads.

Figure 7: Qualitative results comparing H-BEV+DA and H-BEV+DA+GM in consecutive frames of two example sequences
of the KITTI validation set. In each column, we have visualized the perspective RGB image, prediction from H-BEV+DA and
that of H-BEV+DA+GM from left to right. Each row shows a sequence of three frames. We can observe more consistent
predictions, e.g., width of side-road and delimiter width, with the help of the temporal CRF.

• Semantic consistency: we measure the conﬂicts in at-
tribute predictions w.r.t. their semantic meanings. Speciﬁ-
cally, we count a conﬂict if predicted attributes are not fea-
sible in our scene model. The average number of conﬂicts
is reported as our semantic consistency measurement.

• Temporal consistency: for each attribute prediction among
a video sequence, we measure the number of changes in
the prediction. We report the average number of predic-
tion changes as the temporal consistency. The lower the
number is, the more stable prediction we would obtain.
Note that consistency itself cannot replace the accuracy
since a prediction can also be consistently wrong.

As for the temporal consistency, we visualize qualitative
results of consecutive frames in two validation sequences
from KITTI in Fig. 7. The graphical model successfully
enforces temporal smoothness, especially for number of
lanes, delimiter width and the width of side-roads.

Finally, we show in Tab. 2 quantitative results for the
temporal consistency metrics deﬁned above on both KITTI
and NuScenes data sets. We compare representative models
from each group of different forms of supervision (M-, S-
and H-) with the output of the graphical model applied on H-
BEV+DA. We can clearly observe a signiﬁcant improvement
in consistency for both data sets. Together with the superior
results in Tab. 1, this clearly demonstrates the beneﬁts of the

proposed graphical model for our application.

5. Conclusion

In this work, we present a scene understanding framework
for complex road scenarios. Our key contributions are: (1)
A parameterized and interpretable model of the scene that
is deﬁned in the top-view and enables efﬁcient sampling
of diverse scenes. The semantic top-view representation
makes rendering easy (compared to photo-realistic RGB
images in perspective view), which enables the generation of
large-scale simulated data. (2) A neural network design and
corresponding training scheme to leverage both simulated as
well as manually-annotated real data. (3) A graphical model
that ensures coherent predictions for a single frame input and
temporally smooth outputs for a video input. Our proposed
hybrid model (using both sources of data) outperforms its
counterparts that use only one source of supervision in an
empirical evaluation. This conﬁrms the beneﬁts of the top-
view representation, enabling simple generation of large-
scale simulated data and consequently our hybrid training.

Acknowledgements: We want to thank Kihyuk Sohn for
valuable discussions on domain adaptation and all anony-
mous reviewers for their comments.

10332

References

[1] Iro Armeni, Ozan Sener, Amir R. Zamir, Helen Jiang, Ioannis
Brilakis, Martin Fischer, and Silvio Savarese. 3D Semantic
Parsing of Large-Scale Indoor Spaces. In CVPR, 2016.

[2] Christopher M. Bishop. Pattern Recogntion and Machine

Learning. Springer, 2007.

[3] Samuel Rota Bulò, Lorenzo Porzi, and Peter Kontschieder. In-
Place Activated BatchNorm for Memory-Optimized Training
of DNNs. In CVPR, 2018.

[4] Liang-Chieh Chen, Yukun Zhu, George Papandreou, Florian
Schroff, and Hartwig Adam. Encoder-Decoder with Atrous
Separable Convolution for Semantic Image Segmentation. In
ECCV, 2018.

[5] Justin Domke. Learning graphical model parameters with
approximate marginal inference. PAMI, 35(10):2454–2467,
2013.

[6] Yaroslav Ganin, Evgeniya Ustinova, Hana Ajakan, Pascal
Germain, Hugo Larochelle, François Laviolette, Mario Marc-
hand, and Victor Lempitsky. Domain adversarial training of
neural networks. JMLR, 2016.

[7] Andreas Geiger, Martin Lauer, Christian Wojek, Christoph
Stiller, and Raquel Urtasun. 3D Trafﬁc Scene Understanding
from Movable Platforms. PAMI, 2014.

[8] Andreas Geiger, Philip Lenz, Christoph Stiller, and Raquel
Urtasun. Vision meets Robotics: The KITTI Dataset. Inter-
national Journal of Robotics Research (IJRR), 2013.

[9] Clément Godard, Oisin Mac Aodha, and Gabriel J. Brostow.
Unsupervised Monocular Depth Estimation with Left-Right
Consistency. In CVPR, 2017.

[10] Ruiqi Guo and Derek Hoiem. Beyond the line of sight: label-

ing the underlying surfaces. In ECCV, 2012.

[11] Saurabh Gupta, James Davidson, Sergey Levine, Rahul Suk-
thankar, and Jitendra Malik. Cognitive Mapping and Planning
for Visual Navigation. In CVPR, 2017.

[12] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun.
Deep Residual Learning for Image Recognition. In CVPR,
2016.

[13] Diederik P. Kingma and Jimmy Ba. Adam: A Method for

Stochastic Optimization. In ICLR, 2015.

[14] Lars Kunze, Tom Bruls, Tarlan Suleymanov, and Paul New-
man. Reading between the Lanes: Road Layout Reconstruc-
tion from Partially Segmented Scenes. In International Con-
ference on Intelligent Transportation Systems (ITSC), 2018.
[15] Iro Laina, Vasileios Belagiannis Christian Rupprecht, Fed-
erico Tombari, and Nassir Navab. Deeper Depth Prediction
with Fully Convolutional Residual Networks. In 3DV, 2016.
[16] Chenxi Liu, Alexander G. Schwing, Kaustav Kundu, Raquel
Urtasun, and Sanja Fidler. Rent3D: Floor-Plan Priors for
Monocular Layout Estimation. In CVPR, 2015.

[17] Gellért Máttyus, Shenlong Wang, Sanja Fidler, and Raquel
Urtasun. HD Maps: Fine-grained Road Segmentation by
Parsing Ground and Aerial Images. In CVPR, 2016.

[18] NuTonomy. The NuScenes data set. https://www.

nuscenes.org, 2018.

[19] OpenStreetMap

contributors.

Planet

trieved
//www.openstreetmap.org, 2017.

from https://planet.osm.org

.

dump

re-
https:

[20] Stephan R Richter, Zeeshan Hayder, and Vladlen Koltun.
Playing for Benchmarks. In ICCV, pages 2232–2241. IEEE,
2017.

[21] Stephan R Richter, Vibhav Vineet, Stefan Roth, and Vladlen
Koltun. Playing for Data: Ground Truth from Computer
Games. In ECCV, pages 102–118. Springer, 2016.

[22] Carsten Rother, Vladimir Kolmogorov, Victor Lempitsky, and
Martin Szummer. Optimizing binary MRFs via extended roof
duality. In CVPR. IEEE, 2007.

[23] Samuel Schulter, Menghua Zhai, Nathan Jacobs, and Man-
mohan Chandraker. Learning to Look around Objects for
Top-View Representations of Outdoor Scenes.
In ECCV,
2018.

[24] Ari Seff and Jianxiong Xiao. Learning from Maps: Visual
Common Sense for Autonomous Driving. arXiv:1611.08583,
2016.

[25] Sunando Sengupta, Paul Sturgess, `Lubor Ladický, and Philip
H. S. Torr. Automatic Dense Visual Semantic Mapping from
Street-Level Imagery. In IROS, 2012.

[26] Shuran Song, Fisher Yu, Andy Zeng, Angel X. Chang, Mano-
lis Savva, and Thomas Funkhouser. Semantic Scene Comple-
tion from a Single Depth Image. In CVPR, 2017.

[27] Shuran Song, Andy Zeng, Angel X. Chang, Manolis Savva,
Silvio Savarese, and Thomas Funkhouser. Im2Pano3D: Ex-
trapolating 360 Structure and Semantics Beyond the Field of
View. In CVPR, 2018.

[28] Charles Sutton and Andrew McCallum. Piecewise training

for undirected models. In UAI. AUAI Press, 2005.

[29] Joseph Tighe, Marc Niethammer, and Svetlana Lazebnik.
Scene Parsing with Object Instances and Occlusion Ordering.
In CVPR, June 2014.

[30] Yi-Hsuan Tsai, Wei-Chih Hung, Samuel Schulter, Kihyuk
Sohn, Ming-Hsuan Yang, and Manmohan Chandraker. Learn-
ing to Adapt Structured Output Space for Semantic Segmen-
tation. In CVPR, 2018.

[31] Shubham Tulsiani, Richard Tucker, and Noah Snavely. Layer-
structured 3D Scene Inference via View Synthesis. In ECCV,
2018.

[32] Dan Xu, Wei Wang, Hao Tang, Hong Liu, Nicu Sebe, and
Elisa Ricci. Structured Attention Guided Convolutional Neu-
ral Fields for Monocular Depth Estimation. In CVPR, 2018.
[33] Hengshuang Zhao, Jianping Shi, Xiaojuan Qi, Xiaogang
Wang, and Jiaya Jia. Pyramid Scene Parsing Network. In
CVPR, 2017.

[34] Shuai Zheng, Sadeep Jayasumana, Bernardino Romera-
Paredes, Vibhav Vineet, Zhizhong Su, Dalong Du, Chang
Huang, and Philip HS Torr. Conditional random ﬁelds as
recurrent neural networks. In ICCV, 2015.

[35] Jun-Yan Zhu, Taesung Park, Phillip Isola, and Alexei A Efros.
Unpaired image-to-image translation using cycle-consistent
adversarial networks. In ICCV, 2017.

10333

