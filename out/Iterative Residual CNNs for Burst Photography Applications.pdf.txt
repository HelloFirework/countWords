Iterative Residual CNNs for Burst Photography Applications

Filippos Kokkinos

Stamatios Lefkimmiatis

Skolkovo Institute of Science and Technology (Skoltech), Moscow, Russia

filippos.kokkinos@skoltech.ru

s.lefkimmiatis@skoltech.ru

Abstract

Modern inexpensive imaging sensors suffer from inher-
ent hardware constraints which often result in captured im-
ages of poor quality. Among the most common ways to deal
with such limitations is to rely on burst photography, which
nowadays acts as the backbone of all modern smartphone
imaging applications. In this work, we focus on the fact that
every frame of a burst sequence can be accurately described
by a forward (physical) model. This, in turn, allows us to
restore a single image of higher quality from a sequence
of low-quality images as the solution of an optimization
problem. Inspired by an extension of the gradient descent
method that can handle non-smooth functions, namely the
proximal gradient descent, and modern deep learning tech-
niques, we propose a convolutional iterative network with a
transparent architecture. Our network uses a burst of low-
quality image frames and is able to produce an output of
higher image quality recovering ﬁne details which are not
distinguishable in any of the original burst frames. We fo-
cus both on the burst photography pipeline as a whole, i.e.,
burst demosaicking and denoising, as well as on the tra-
ditional Gaussian denoising task. The developed method
demonstrates consistent state-of-the art performance across
the two tasks and as opposed to other recent deep learning
approaches does not have any inherent restrictions either to
the number of frames or their ordering.

1. Introduction

With more than one billion smartphones sold each year,
smartphone cameras have dominated the photography mar-
ket. However, to allow for small and versatile sensors, in-
evitably manufacturers of such cameras need to make sev-
eral compromises. As a result, the quality of images cap-
tured by smartphone cameras is signiﬁcantly inferior com-
pared to the quality of images acquired by sophisticated
hand-held cameras like DSLRs. The most common hard-
ware restrictions in smartphone cameras are the lack of
large aperture lens and the small sensors that consist of
fewer photodiodes. To overcome such inherent hardware
restrictions, the focus is thus shifted towards the software

of the camera, i.e., the Image Processing Pipeline (ISP).

The shortcomings of mobile photography can be mit-
igated by the use of burst photography, where a camera
ﬁrstly captures a burst of images, milliseconds apart, and
afterward fuses them in a sophisticated manner to produce a
higher-quality image. Therefore, burst photography allows
inexpensive hardware to overcome mechanical and physical
constraints and thus achieving higher imaging quality in the
expense of computation time. While ideally, we would like
each frame of the burst to capture precisely the same scene,
this is not possible due to camera motion (e.g. hand shake),
scene motion by dynamic moving objects and ﬁnally inefﬁ-
ciencies of Optical Image Stabilization (OIS) hardware that
may cause a slight drift even for completely static scenes.
Therefore, homography estimation and alignment usually
is necessary when processing frames of the same scene.

The idea of using a sequence of photographs to enhance
the image quality, is not new and it has been successfully
exploited in the past for the tasks of image debluring [1, 5],
denoising [29] and super-resolution [9]. Inspired from these
works, we design a restoration algorithm that involves a
neural network, to handle various tasks of burst photogra-
phy. First, we rely on a physical model for the observa-
tions of the burst, which in turn enables us to derive an opti-
mization scheme for restoration purposes. The optimization
scheme is combined with supervised learning of a neural
network with a transparent architecture, leading to an Itera-
tive Neural Network (INN). The developed framework ex-
hibits by design many desired properties, which competing
deep learning methods for burst photography do not neces-
sarily exhibit, namely a) inherent invariance to the ordering
of the frames, b) support of bursts of arbitrary size and c)
scalability to burst size.

2. Related work

2.1. Image Denoising

Single image denoising is a longstanding problem, and
it has progressed dramatically in recent decades, approach-
ing its believed performance limit [26]. The list of meth-
ods includes but not limited to Field-of-Experts [35], Non-
Local Means [4] and BM3D [6], with the latter being the de

5929

Input

Kokkinos [21]

HDR+ [12]

Ours

Figure 1: Demosaicking and denoising of a real low-light raw burst from the HDR+ dataset [12]. Our method achieves high
quality reconstruction even in cases of excessive noise in the sensor data.

facto method used till today. With the advent of deep learn-
ing, several learning-based methods have emerged during
the last few years that take advantage of neural networks in
order to push the reconstruction quality even further. Sys-
tems like DnCNN [41], NLNet [23] and MemNet [37] have
succeeded to set a new state-of-the art performance for the
image denoising task. Unfortunately, recent works empiri-
cally indicate that we are now close to the believed perfor-
mance limit for single image denoising task, since quanti-
tative performance improvements are no longer substantial
and do not fully justify the simultaneous disproportionate
increase of computational complexity.

Fortunately, burst denoising still allows the development
of methods that can achieve better reconstruction than sin-
gle image denoising. In fact, several multi-frame variants of
single-image denoising methods have been successfully de-
veloped. For example, VBM3D [22] and VBM4D [29] are
two known extensions of the BM3D framework that work
on videos and bursts of images, respectively. Furthermore,
techniques as in [43] were developed speciﬁcally for low re-
source photography applications and denoise an image us-
ing a burst sequence, in a fraction of the time required by
VBM4D and other variants. Finally, modern deep learning
approaches for burst denoising have recently emerged, such
as those in [11, 31], and provide insights for the success
of end-to-end methods by achieving superior reconstruction
quality.

2.2. Image Demosaicking

While the literature on multi-image demosaicking meth-
ods falls short, demosaicking as a standalone problem has
been studied for decades and for a complete survey we refer
to [40]. A very common approach is bilinear interpolation,
as well as, other variants of this method which are adaptive
to image edges [18, 30]. During the last years, the image

demosaicking task witnessed an incredible quantitative and
qualitative performance increase via the use of neural net-
work approaches like those in [10, 17] and most recently
in [21]. This performance increase holds true even under
the presence of noise perturbing the camera sensor readings.
Related to multi-frame photography, two well known
systems that support burst demosaicking are FlexISP [16]
and ProxImaL [15], which offer end-to-end formulations
and joint solution via efﬁcient optimization for many im-
age processing related problems. Finally, a very successful
commercial application on burst photography reconstruc-
tion is HDR+, introduced in [12], where a burst of frames
is utilized to alleviate shortcomings of smartphone cameras
such as low dynamic range and noise perturbations.

3. Problem formulation

To solve a variety of burst photography problems, we
rely on the following observation model for each frame yi
of a burst sequence of total size B,

yi = HSi(x) + ni, i = 1 . . . , B.

(1)

In Eq. (1), yi ∈ RN corresponds to the degraded version of
the afﬁnely transformed underlying image x ∈ RN , which
we aim to restore. While x and yi are two dimensional im-
ages, for the sake of mathematical derivations, we assume
that they have been raster scanned using a lexicographical
order, and they correspond to vectors of N dimensions. The
operator Si : RN −→ RN is responsible for the afﬁne trans-
formation of the coordinate system of x. Speciﬁcally, it
provides a mapping by interpolating values for each frame
i from the grid of the original image x. In our proposed
method, we restrict the afﬁne transformations to be rota-
tional and translation so as to be on par with realistic burst
photography applications. While in the above model it is

5930

assumed that the afﬁne transformation is known, in prac-
tice we can only estimate it from the observations yi by
setting one observation as a reference and aligning all other
observations to the reference. This reference frame is con-
sidered to be completely aligned to the underlying image x,
and their relationship is described as yref = Hx + nref .
Additionally, the underlying image x is further distorted by

sian distribution.

a linear operator H ∈ RN ×N , which describes a speciﬁc

restoration problem that we aim to solve. This formulation
is one of the most frequently used in the literature to model
a variety of restoration problems such as image inpaint-
ing, deconvolution, demosaicking, denoising, and super-
resolution. Each observation yi is also distorted by noise
ni ∼ N (0, σ2), which is assumed to follow an i.i.d Gaus-
Recovering x from the measurements yi belongs to the
broad class of inverse problems. For most practical prob-
lems, the operator H is typically singular, i.e., not invert-
ible. This fact, coupled with the presence of noise perturb-
ing the measurements and the afﬁne transformation leads to
an ill-posed problem where a unique solution does not ex-
ist. In general, such problems can be addressed following
a variational approach. Under this framework, a solution is
obtained by minimizing an objective function of the form:

x⋆ = arg min

x

1

2σ2B

B

X

i=1

|

kyi − HSi(x)k2
}

2

{z

f (x)

+r(x),

(2)

where the ﬁrst term corresponds to the data ﬁdelity term
that quantiﬁes the proximity of the solution to the observa-
tions and the second term corresponds to the regularizer of
the solution, which encodes any available prior knowledge
we might have about the underlying image. As it can be
seen from Eq. (2), the solution x⋆ must obey the observa-
tion model for each frame yi of the burst. While the above
variational formulation is general enough to accommodate
for a variety of different inverse problems, in Section 7 we
focus on two particular problems: 1) joint demosaicking
and denoising and 2) burst Gaussian denoising. In the ﬁrst
case, H becomes a binary diagonal matrix that corresponds
to the Color Filter Array (CFA) of the camera, while in the
second case H reduces to the identity operator.

As we mentioned earlier, the role of the regularizer is
to promote solutions that follow speciﬁc image proper-
ties and as a result its choice signiﬁcantly affects the end-
result of the restoration. Some typical choices for regular-
izing inverse problems is the Total Variation [36] and the
Tikhonov [38] functionals. While such regularizers have
been frequently used in the past in image processing and
computer vision applications, their efﬁcacy is limited. For
this reason, in this work, we follow a different path, and
we attempt to learn the regularizer implicitly from available
training data. Therefore, throughout this work, we do not

make any assumptions regarding the explicit form of the
regularizer. Rather, as we will explain later in detail, our
goal is to learn the effect of the regularizer to the solution
through the proximal map [32].

4. Proximal gradient descent

Efﬁciently solving Eq. (2) has been a longstanding prob-
lem, and as a result a variety of sophisticated optimization
methods have been proposed over the years. In our work,
we employ a relatively simple method that extends the clas-
sical gradient descent, namely the Proximal Gradient De-
scent (PGD) [32].
In particular, PGD is a generalization
of gradient descent that can deal with the optimization of
functions that are not fully differentiable but they can be
split into a differentiable and a non-differentiable part, i.e.
F (x) = s (x) + g (x). Then, according to PGD, the solu-
tion can be obtained in an iterative fashion as follows:

xt = proxγg(xt−1 − γ∇xs(xt−1)),

(3)

where γ is the step size and proxγg is the proximal operator,
related to the non-smooth part of the overall function, g(x),
and the step size γ. Typically, γ is adaptive and is computed
using a line-search algorithm. However, when s (·) is Lips-
chitz continuous it can be ﬁxed and set as γ = 1
L , where L is
the Lipschitz constant of ∇xs. In each iteration t, ﬁrst a gra-
dient descent step is performed for the smooth part s (x) of
the objective function, while in the sequel the non-smooth
term is handled via the proximal operator, whose action on
a vector v is deﬁned as:

proxγg(v) = arg min

z

1

2 kv − zk2

2 + γg(z).

(4)

From a signal processing perspective, the proximal map
corresponds to the regularized solution of a Gaussian de-
noising problem, where v is the noisy observation, g (·) is
the employed regularizer and γ the regularization parame-
ter. Based on the above and by inspecting Eq. (2), we ob-
serve that in our case the data ﬁdelity corresponds to the
smooth part while we further consider the regularizer as the
non-smooth part. We note, the most effective regularizers
in variational methods have been shown to be indeed non-
differentiable and, thus, our assumption is a reasonable one.
Referring to Eq. (2), the gradient of the data ﬁdelity term

can be easily computed as

1

B

X

i=1

σ2B

∇xSi(x)HT(−yi + HSi(x)).

∇xf (x) =
A useful observation is that the gradient of f (x) can be lin-
earized and therefore the time-consuming calculation of the
Jacobian of the afﬁne transform Si can be entirely avoided.
The base of this observation is that the mapping Si(x) cor-
responds to an interpolation, such as bilinear, on an image

(5)

5931

x with respect to a certain warping matrix. By calculat-
ing beforehand the new pixel locations, using the estimated
warping matrix, that we would like to interpolate from the
image x, the interpolation itself can be re-written as a lin-
ear operation Six. In this case, Si is a sparse matrix with
only a few of its columns being non-zero and which hold the
coefﬁcients for the weighted averaging of pixel intensities.
Therefore, under this approach it holds that Six = Si(x).
For example, in the case of bilinear interpolation only four
elements of each row of the matrix Si will be non-zero,
while in the case of nearest neighbor interpolation only one
element is non-zero and is equal to one.

Consequently, the gradient of the data ﬁdelity term can

be rewritten as

∇xf (x) =

1

σ2B

B

X

i=1

ST
i HT(−yi + HSix),

(6)

where ST
is the adjoint operator of Si. This adjoint oper-
i
ation amounts to interpolating an image x with the inverse
of the warping matrix. In our case, this matrix is always ex-
istent, since we have restricted our afﬁne transformations to
support only rotation and translation. Finally, by using the
gradient of the data ﬁdelity term of Eq. (6), in the proximal
gradient step described in Eq. (3), and by computing its
Lipschitz constant as L = 1
σ2 (the proof is provided in the
supplementary material), we end up with the following it-
erative optimization step for burst photography applications

xt = proxσ2r(xt−1+

1
B

B

X

i=1

i HT(yi − HSixt−1)). (7)
ST

In order to retrieve the solution of the minimization prob-
lem in Eq. (2) based on the above iterative scheme, the ap-
propriate form of r(x) must be ﬁrst speciﬁed. However,
this is far from a detrimental task. Apart from this, the con-
vergence to a solution usually requires a large number of
iterations, which implies a signiﬁcant computational cost.

To deal with these challenges, in this work we pursue
a different approach than conventional regularization meth-
ods. In particular, instead of selecting a speciﬁc regularizer
and deriving the solution via Eq. (7), we design a network
to learn the mapping between the proximal input and the de-
noised output. This strategy allows us to unroll K iterations
of the PGD method and use a suitable network to approxi-
mate the output of the proximal operator. It is important to
note that this approach does not carry any risk of leading to a
reconstruction of inferior quality. The reason is that in large
scale optimization techniques, even when the regularizer is
fully speciﬁed, typically the proximal map cannot be com-
puted in closed-form. In such cases [2, 25], it is roughly ap-
proximated via iterative schemes without this jeopardizing
the overall reconstruction quality.Another important point
we would like to highlight is that our approach, as opposed
to other related methods that use a network to replace the

proximal operator such as IRCNN [42], Plug and Play [39]
and RED [34], is completely parameter-free and, thus, no
manual tuning is required so that a good reconstruction is
produced.

5. Proposed Iterative Neural Network (INN)

5.1. Proximal Network

As described in Section 4, the proximal map can be in-
terpreted as the regularized solution of a Gaussian denoising
problem. Based on this observation, we can exploit the ca-
pabilities of neural networks and replace the iterative com-
putation of the proximal map with a CNN that takes as input
a noisy image and the standard deviation of the noise and
returns as output the denoised version of the input.

While there are many image denoising neural networks
such as the DnCNN [41] or MemNet[37] that we could use
to approximate the proximal map, in this work we employ
the ResDNet network described in [20], which was origi-
nally inspired by UDNet [24]. Similarly to DnCNN, Res-
DNet is a fully convolutional denoising network and can
handle a wide range of noise levels by using a single set of
parameters. It also has a residual architecture since instead
of estimating directly the denoised image, it ﬁrst estimates a
noise realization which is then subtracted from the noisy in-
put. The advantage of ResDNet over DnCNN is that it takes
as an additional input the standard deviation of the noise,
which is then used by the network to normalize the noise
estimate in order to ensure that it has the desired variance.
This feature is instrumental for the successful implemen-
tation of our overall scheme, as it allows us to have more
control over the output of the network.

In detail, the architecture of ResDNet consists of D
residual blocks with 2 convolutional layers each of 64 ﬁlters
and kernels with dimensionality 3 × 3. The residual blocks
precedes a convolutional layer applied on the input which
increases the number of channels from 3 to 64 using kernels
of size 5 × 5. The feature maps are eventually decreased to
3 from 64 via a convolutional layer with a kernel of support
5 × 5. In every step, the employed non-linearity, which is
applied after every convolutional layer, except the last one,
is the parametrized rectiﬁed linear unit (PReLU) [13]. The
end result of ResDNet is a noise realization estimate that is
subtracted from the distorted image. Before the subtraction
takes place, the noise realization is normalized so that its
variance matches the input variance. This is accomplished
with a trainable ℓ2-projection layer,

ΠC (y) = θy/ max(kyk2 , θ),

where θ = σ√N − 1. Overall, this denoising network is

relatively small since it contains approximately 380K pa-
rameters and it can be easily deployed in each iteration of
our INN without requiring excessive memory or computa-
tion time.

(8)

5932

Algorithm 1: Proposed Iterative Neural Network
for bust photography applications

Input: H: Degradation Operator, y{1...B}: input

burst, K: iterations, w ∈ RK : extrapolation
weights, σ: estimated noise, s ∈ RK :

projection parameters

x0 = 0;
Initialize x1 using yref ;
Estimate mappings S1...B;
for t ← 1 to K do

u = xt + wt(xt − xt−1);
z = 0;
for i ← 1 to B do
end

i HT(−yi + HSiu);
xt+1 = ProxNet(xt − z/B, σ, st);

z = z + ST

end

In order to emphasize that the employed denoising net-
work in our INN serves as a proximal map estimate and not
as a single image Gaussian denoiser, hereafter, we will refer
to it as ProxNet. Another reason for our naming convention
is that our overall approach is not tied to a speciﬁc proximal
network and in principle ResDNet can be replaced by an-
other network architecture that exhibits similar properties.

5.2. Iterative neural network

The proposed INN combines the PGD algorithm as dis-
cussed in Section 4 and the proximal network as an esti-
mator of the solution of Eq. (4). A straightforward way to
implement the INN is to use in every iteration a proximal
network that is governed by a different set of parameters.
However, the training of INN, in this case, becomes quickly
intractable, since the number of parameters increases lin-
early to the number of employed iterations. To deal with this
shortcoming, we instead use the same proximal network in
every iteration, and thus we keep the number of network pa-
rameters small, which in turn decreases the necessary train-
ing time and the memory footprint of the network.

In order to speed up the convergence of the optimiza-
tion scheme, we exploit two commonly used convergence
acceleration strategies. The ﬁrst one is the homotopy con-
tinuation strategy [27] where the standard deviation of the
noise is deliberately over-estimated in the ﬁrst iterations and
gradually is decreased until the accurate estimation of σ is
reached. The homotopy continuation scheme accelerates
the convergence of PGD algorithms as shown in [27] and
it can be easily integrated into our formulation via a modi-
ﬁcation of the projection layer by replacing θ with ˆθ = esθ.
In detail, we initialize the trainable parameter of the pro-

jection layer s ∈ RK with values spaced evenly on a log

scale from smax to smin and later on the vector s is further
ﬁnetuned on the training dataset via back-propagation.

The second acceleration strategy that we explore in-
volves the use of an extrapolation step similar to the one
introduced in [3]. Speciﬁcally, the outputs of two consecu-
tive iterations are combined in a weighted manner in order
to obtain the solution of the current iteration. In [3] the ex-

trapolation weights w ∈ RK are known apriori but in our
work, we learn them during the training of INN. We initial-
ize the extrapolation weights as wi = t−1
t+2 ,∀1 ≤ t ≤ K,
which matches the conﬁguration described in [32].
Algorithm 1 describes our overall strategy which com-
bines all the different components that we described, i.e.,
the PGD, the proximal network, the continuation, and ex-
trapolation strategies. As it can be seen from Algorithm 1,
our reconstruction approach has only a weak dependency on
the burst size, since this is only involved in the computation
of the gradients for each burst observation, which can be
done very efﬁciently. This feature makes our method very
efﬁcient since the proximal network is independent to the
bust size B, unlike other recent deep learning based meth-
ods [11, 1], which process each frame of the burst individu-
ally at ﬁrst and then jointly and therefore the computational
time increases linearly to B. Simultaneously, our proposed
approach supports by design bursts of arbitrary size with
only a minor computational overhead. We note that this is
not the case for the network in [31] which is constrained to
use bursts of 8 frames. In a different case, the entire network
needs to be trained from scratch. Finally, our proposed INN
is by deﬁnition permutation invariant similarly to [1].
In
particular, the ordering of the burst frames does not affect at
all the reconstruction result as long as the reference frame
remains the same.

6. Network Training

6.1. Synthetic training dataset

Since there are no publicly available burst photography
datasets suitable for training our network, we create training
pairs of ground-truth and input bursts using the Microsoft
Demosaicking Dataset (MSR) [19] for burst image demo-
saicking and the Waterloo Dataset [28] for burst Gaussian
denoising. In both cases, we modify the ground-truth image
by afﬁnely transforming it 8 times to create a burst with syn-
thetic misalignment and then the images are center cropped
to retain a patch of 128 × 128 pixel. We assume that the
reference frame is the last one and therefore it does not
undergo any transformation. The random afﬁne transfor-
mation should be close to realistic scenarios, and thus we
restrict the transformation to contain a translation in each
direction up to 10 pixels and rotation of up to 2 degrees.

For burst image demosaicking, we selected the MSR
dataset which is a small but well-known dataset for evalu-

5933

ating image demosaicking algorithms, as explained in [19].
The advantage of the MSR dataset is that all data are in
the linear color space where pixel measurements are pro-
portional to the number of counted photons, and no post-
processing steps have been performed (e.g., sharpening,
tone mapping) that will alter the image statistics. The
dataset consists of 200 images for training, 100 for valida-
tion and 200 images for testing purposes. For each ground-
truth image we generate the respective burst sequence, and
then we apply the Bayer pattern on each frame. We also ex-
plore the case of noise perturbing the camera measurements,
and therefore we add noise sampled from a heteroskedastic
Gaussian distribution with signal dependent standard devi-

ation ˆω ∼ N (ω, αω + β2), following the model presented
in [14]. The parameter α is related to the shot noise compo-
nent, which occurs from the stochastic nature of the photon
counting process and it is dependent on the true intensities
y, while the parameter β is linked to the signal independent
read noise component. Both noise parameters are sampled
uniformly from a speciﬁc range as discussed in [31], which
covers the noise levels of many widely used cameras. The
dataset is also augmented with random ﬂipping and color
jittering in order to ensure a plethora of lighting conditions.
For burst image denoising, we use the Waterloo dataset
which consists of 4,744 images. Using the described pro-
cedure, we retrieved the synthetically mis-aligned bursts of
8 frames and 500 of these bursts were kept separately to be
used for testing purposes. All frames were distorted with
additive Gaussian noise with standard deviation sampled
from [5, 25] with a step size equal to 2.5.

For all experiments, we estimate the warping matrix that
aligns every observation to the reference frame using the
Enhanced Correlation Coefﬁcient (ECC) [8]. Since the im-
ages are severely distorted by noise, we estimate the align-
ment on the Gaussian pyramid of the image and use the
warping matrix of coarse scales to initialize the ECC es-
timation of ﬁner levels in order to achieve robustness to the
noise perturbations. Bursts that failed to be aligned using
this method were dropped from the training set.

6.2. Implementation Details

For all experiments we choose the interpolation opera-
tion, involved in the afﬁne transformation of the observa-
tion model Eq. (1), to be bilinear due to its low computation
complexity and the adequate result that it provides. Using a
pre-trained proximal network our overall network is further
trained end-to-end to minimize the ℓ1 loss.

Due to the iterative nature of our framework, the net-
work parameters are updated using the Back-Propagation
Through Time (BPTT) algorithm, and more speciﬁcally we
adopt the Truncated BPTT framework presented in [33, 21].
While we unfold K instances of the network, we propagate
the gradients through smaller chunks of size k instead of

noisy

noise-free

linRGB sRGB linRGB sRGB

Bilinear

- single
- burst

Gharbi [10]

- single
- burst

Kokkinos [21]

- single
- burst

BM3D-CFA[7]

- single
- burst

Ours
Ours (oracle)

27.62
30.03

36.52
37.14

38.48
38.06

35.63
35.36

39.64
41.55

23.02
26.45

31.37
31.87

33.41
33.06

30.49
30.30

34.56
35.59

29.07
31.46

41.08
39.74

41.03
38.93

-
-

22.86
27.23

34.46
34.39

34.37
33.02

-
-

42.40
42.40

36.24
36.24

Table 1: PSNR performance of different methods in both
linear and sRGB spaces. Every method was tested on both
single image and burst scenario. In the case of BM3D-CFA,
demosaicking of the denoised images was performed using
the noisefree model of [21].

K, due to the inherent memory restrictions we face dur-
ing training. Every k iterations we update the parameters
based on the loss function and then proceed with unrolling
the next k iterations till the number of total iterations K is
reached. This modiﬁcation of the standard BPTT allows the
usage of larger batch sizes and a higher number of iterations
which leads to better performance, as shown in [21]. Fur-
thermore, we set for all experiments K = 10, k = 5 and
the optimization is carried via the AMSGRAD optimizer
where the training starts from an initial learning rate which
we decrease by a factor of 10 every 100 epochs. The spe-
ciﬁc hyper-parameters used for training of each model are
provided in the supplementary material.

7. Experiments

7.1. Image Demosaicking and Denoising

We evaluate our method on the test set of the burst MSR
dataset. In Table 1, we compare our INN with a bilinear
interpolation baseline, two recent demosaicking neural net-
works [10, 21], as well as with a denoising approach using
BM3D-CFA [7] followed by demosaicking using the noise-
free model of [21]. BM3D-CFA was also used to denoise
the raw data for the bilinear interpolation baseline in the
noisy scenario. In all comparisons, we consider both a sin-
gle image scenario and a burst variant where we apply the
respective method on each frame of the burst and then the
frames are aligned in order to be averaged. Our approach
yields substantially better quantitative results than compet-
ing methods in both noisy and noise-free scenario with per-

5934

formance gains ranging from 0.9 to 1.5 dB. To visually as-
sess the superiority of our approach, we further provide rep-
resentative results in Fig. 3.

In order to examine how the alignment of observations
affects the results, we have also considered the case where
our pre-trained network was fed with oracle warping matri-
ces. As it could be expected, the restoration performance
increases up to 1.9 dBs, which highlights the importance
of robust image alignment and indicates that we can expect
an increase in our network’s performance by employing a
better alignment method than the one we currently use.

7.2. Gaussian Image Denoising

We tested our method on the Gaussian denoising task
where most burst photography methods focus on. For com-
parisons, we used the methods of BM3D, VBM4D and Res-
DNet for single and burst scenarios. In the case of the burst
variant of ResDNet, the images were ﬁrst denoised using
ResDNet and then aligned using the method [8] before be-
ing averaged. For reasons of experimental completeness,
we would like to compare our method against the two most
recent deep learning approaches [11, 31], however, neither
one of the models or their respective testing sets are pub-
licly available yet. From the results presented in Table 2 and
Fig. 4, it is clear that our method achieves a state-of-the art
performance across every noise level. An interesting result
is that our INN, which uses ResDNet as a sub-component,
consistently outperforms the burst variant of ResDNet. This
is attributed to the principled way we designed our INN so
that it faithfully follows the forward model.

We also performed an ablation study on the importance
of burst size during training. Speciﬁcally, we trained 3
models using bursts of size 2, 4 and 8 and tested them on
sequences with burst sizes varying from 2 to 16, as pre-
sented in Fig. 2. The models that were trained with 4 and
8 frames are able to generalize well when they are provided
with more frames during inference since their performance
steadily increases. Nevertheless, there is a performance gap
between the models which indicates that the burst size for
which the network is originally trained for can affect the
performance. The model trained to handle bursts of only
two frames exhibits the same behaviour up to a certain num-
ber of frames but after that, its performance starts to de-
cline. Our ﬁndings contradict the conclusion of the authors
in [11] that deep learning models need to be trained with
many frames in order to generalize to longer sequences dur-
ing inference. In fact, our network variants trained for 4 and
8 bursts show a consistent performance improvement with
the increase of the burst sequence.

8. Limitations

Our method is capable of producing high-quality images
from a burst sequence with great success. However, the

Methods

noisy ref. frame

BM3D
VBM4D

ResDNet:

- single
- burst

Ours

σ=5
34.26
39.78
39.64

40.19
39.69

40.08

σ=10
28.37
35.86
35.67

σ=15
24.95
33.55
33.35

σ=20
22.55
31.86
31.67

σ=25
20.71
30.50
30.34

36.65
37.65

34.55
36.06

33.03
34.89

31.82
33.86

38.71

37.36

36.24

35.28

Table 2: Color image denoising comparisons for ﬁve dif-
ferent noise levels. The restoration quality is measured in
terms of average PSNR.

Figure 2: Generalization ability of our INN to different
burst sizes. Three models were trained with 2, 4 and 8
frames and tested on burst sequences from 2 to 16 frames.

main limitation of our network is the dependency it has to
the ECC estimation of the warping matrix, which in practice
can be rather inaccurate especially when there is a strong
presence of noise. When the estimated afﬁne transforma-
tion matrix is imprecise, our network inevitably will intro-
duce ghosting artifacts to the ﬁnal result Fig. 4 (more ex-
amples can be found in the supplementary material). In this
event, one possible solution, is to estimate the quality of the
transformation matrix via a consistency metric like the one
in [43] and crop out inconsistent areas from a frame.

9. Conclusions

In this work, we have proposed a novel iterative neu-
ral network architecture for burst photography applications.
Our derived network has been designed to respect the phys-
ical model of burst photography while its overall structure
is inspired by large-scale optimization techniques. By ex-
plicitly taking into account the special characteristics of the
problems under study, our network outperforms previous
state-of-the-art methods across various tasks, while being
invariant to the ordering of the frames and capable to gen-
eralize well to arbitrary burst sizes.

5935

2345678910111213141516Frames during inference3536373839PSNR (dB)2 Frames4 Frames8 FramesGround Truth

Input

Ours

HDR+ [12]

FlexISP [16]

Godard [11]

Gharbi [10]

Kokkinos [20]

Figure 3: Burst demosaicking results on a real and a synthetic burst from the FlexISP dataset [16] (results are best seen mag-
niﬁed on a computer screen). Our model successfully restores the missing colors of the underlying images while suppressing
noise. A PSNR comparison of the systems is provided in the supplementary material.

Ground Truth

Average

Ours

ResDNet

ResDNet Average

VBM4D [29]

Figure 4: Burst Gaussian denoising with σ = 25. Our method is able to effectively restore the images and retain ﬁne details,
as opposed to the rest of the methods that over-smooth high texture areas. Imprecise misalignment will cause methods to
introduce visual artifacts such as those in the last row. Results best seen magniﬁed on a computer screen.

5936

References

[1] Miika Aittala and Fredo Durand. Burst image deblurring
using permutation invariant convolutional neural networks.
In The European Conference on Computer Vision (ECCV),
September 2018.

[2] Amir Beck and Marc Teboulle. A fast iterative shrinkage-
thresholding algorithm for linear inverse problems. SIAM
journal on imaging sciences, 2(1):183–202, 2009.

[3] Amir Beck and Marc Teboulle. A fast Iterative Shrinkage-
Thresholding Algorithm for Linear Inverse Problems. SIAM
Journal on Imaging Sciences, 2(1):183–202, 2009.

[4] Antoni Buades, Bartomeu Coll, and J-M Morel. A non-local
algorithm for image denoising. In Computer Vision and Pat-
tern Recognition, 2005. CVPR 2005. IEEE Computer Society
Conference on, volume 2, pages 60–65. IEEE, 2005.

[5] Jian-Feng Cai, Hui Ji, Chaoqiang Liu, and Zuowei Shen.
Blind motion deblurring using multiple images. Journal of
Computational Physics, 228(14):5057 – 5071, 2009.

[6] Kostadin Dabov, Alessandro Foi, Vladimir Katkovnik, and
Karen Egiazarian. Image denoising by sparse 3-D transform-
domain collaborative ﬁltering. IEEE Transactions on image
processing, 16(8):2080–2095, 2007.

[7] A. Danielyan, M. Vehvilainen, A. Foi, V. Katkovnik, and K.
Egiazarian. Cross-color bm3d ﬁltering of noisy raw data. In
2009 International Workshop on Local and Non-Local Ap-
proximation in Image Processing, pages 125–129, Aug 2009.
[8] G. D. Evangelidis and E. Z. Psarakis. Parametric image
alignment using enhanced correlation coefﬁcient maximiza-
tion. IEEE Transactions on Pattern Analysis and Machine
Intelligence, 30(10):1858–1865, Oct 2008.

[9] S. Farsiu, M. D. Robinson, M. Elad, and P. Milanfar. Fast
and robust multiframe super resolution. IEEE Transactions
on Image Processing, 13(10):1327–1344, Oct 2004.

[10] Micha¨el Gharbi, Gaurav Chaurasia, Sylvain Paris, and Fr´edo
Durand. Deep Joint Demosaicking and Denoising. ACM
Trans. Graph., 35(6):191:1–191:12, Nov. 2016.

[11] Clement Godard, Kevin Matzen, and Matt Uyttendaele.
Deep burst denoising. In The European Conference on Com-
puter Vision (ECCV), September 2018.

[12] Samuel W. Hasinoff, Dillon Sharlet, Ryan Geiss, Andrew
Adams, Jonathan T. Barron, Florian Kainz, Jiawen Chen, and
Marc Levoy. Burst photography for high dynamic range and
low-light imaging on mobile cameras. ACM Transactions on
Graphics (Proc. SIGGRAPH Asia), 35(6), 2016.

[13] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun.
Delving deep into rectiﬁers: Surpassing human-level perfor-
mance on imagenet classiﬁcation. In The IEEE International
Conference on Computer Vision (ICCV), December 2015.

[14] G. E. Healey and R. Kondepudy. Radiometric ccd cam-
era calibration and noise estimation. IEEE Transactions on
Pattern Analysis and Machine Intelligence, 16(3):267–276,
March 1994.

[15] Felix Heide, Steven Diamond, Matthias Nießner, Jonathan
Ragan-Kelley, Wolfgang Heidrich, and Gordon Wetzstein.
Proximal: Efﬁcient image optimization using proximal al-
gorithms. ACM Transactions on Graphics (TOG), 35(4):84,
2016.

[16] Felix Heide, Markus Steinberger, Yun-Ta Tsai, Mushﬁqur
Rouf, Dawid Pajak, Dikpal Reddy, Orazio Gallo, Jing Liu,
Wolfgang Heidrich, Karen Egiazarian, et al. Flexisp: A ﬂex-
ible camera image processing framework. ACM Transactions
on Graphics (TOG), 33(6):231, 2014.

[17] Bernardo Henz, Eduardo S. L. Gastal, and Manuel M.
Oliveira. Deep joint design of color ﬁlter arrays and demo-
saicing. Computer Graphics Forum, 37(2):389–399, 2018.

[18] K. Hirakawa and T. W. Parks. Adaptive homogeneity-
directed demosaicing algorithm. IEEE Transactions on Im-
age Processing, 14(3):360–369, March 2005.

[19] D. Khashabi, S. Nowozin, J. Jancsary, and A. W. Fitzgibbon.
Joint Demosaicing and Denoising via Learned Nonparamet-
ric random ﬁelds. IEEE Transactions on Image Processing,
23(12):4968–4981, Dec 2014.

[20] Filippos Kokkinos and Stamatios Lefkimmiatis. Deep image
demosaicking using a cascade of convolutional residual de-
noising networks. In The European Conference on Computer
Vision (ECCV), September 2018.

[21] Filippos Kokkinos and Stamatios Lefkimmiatis.

Iterative
residual network for deep joint image demosaicking and de-
noising. arXiv preprint arXiv:1807.06403, 2018.

[22] D Kostadin, F Alessandro, and E KAREN. Video denoising
by sparse 3d transform-domain collaborative ﬁltering. In Eu-
ropean signal processing conference, volume 149. Tampere,
Finland, 2007.

[23] Stamatios Lefkimmiatis. Non-local color image denoising
with convolutional neural networks. In The IEEE Conference
on Computer Vision and Pattern Recognition (CVPR), July
2017.

[24] Stamatios Lefkimmiatis. Universal denoising networks :
In The
A Novel CNN Architecture for Image Denoising.
IEEE Conference on Computer Vision and Pattern Recogni-
tion (CVPR), June 2018.

[25] S. Lefkimmiatis, P. Ward, and M. Unser. Hessian Schatten-
norm regularization for linear inverse problems. IEEE Trans-
actions on Image processing, 22(5):1873–1888, 2013.

[26] Anat Levin and Boaz Nadler. Natural image denoising: Op-
timality and inherent bounds. In Computer Vision and Pat-
tern Recognition (CVPR), 2011 IEEE Conference on, pages
2833–2840. IEEE, 2011.

[27] Qihang Lin and Lin Xiao. An adaptive accelerated prox-
imal gradient method and its homotopy continuation for
sparse optimization. Computational Optimization and Ap-
plications, 60(3):633–674, Apr 2015.

[28] Kede Ma, Zhengfang Duanmu, Qingbo Wu, Zhou Wang,
Hongwei Yong, Hongliang Li, and Lei Zhang. Waterloo Ex-
ploration Database: New challenges for image quality as-
sessment models. IEEE Transactions on Image Processing,
26(2):1004–1016, Feb. 2017.

[29] Matteo Maggioni, Giacomo Boracchi, Alessandro Foi, and
Karen Egiazarian. Video denoising using separable 4d non-
local spatiotemporal transforms. In Image Processing: Algo-
rithms and Systems IX, volume 7870, page 787003. Interna-
tional Society for Optics and Photonics, 2011.

[30] D. Menon and G. Calvagno. Joint demosaicking and denois-
In 2009 16th IEEE Interna-

ingwith space-varying ﬁlters.

5937

tional Conference on Image Processing (ICIP), pages 477–
480, Nov 2009.

[31] Ben Mildenhall, Jonathan T Barron, Jiawen Chen, Dillon
Sharlet, Ren Ng, and Robert Carroll. Burst denoising with
kernel prediction networks. In Proceedings of the IEEE Con-
ference on Computer Vision and Pattern Recognition, pages
2502–2510, 2018.

[32] Neal Parikh, Stephen Boyd, et al. Proximal algorithms.
Foundations and Trends R(cid:13) in Optimization, 1(3):127–239,
2014.

[33] A. J. Robinson and Frank Fallside. The Utility Driven
Dynamic Error Propagation Network. Technical Report
CUED/F-INFENG/TR.1, Engineering Department, Cam-
bridge University, Cambridge, UK, 1987.

[34] Yaniv Romano, Michael Elad, and Peyman Milanfar. The
little engine that could: Regularization by denoising (RED).
SIAM Journal on Imaging Sciences, 10(4):1804–1844, 2017.
[35] Stefan Roth and Michael J Black. Fields of experts: A frame-
work for learning image priors. In Computer Vision and Pat-
tern Recognition, 2005. CVPR 2005. IEEE Computer Society
Conference on, volume 2, pages 860–867. IEEE, 2005.

[36] Leonid I Rudin, Stanley Osher, and Emad Fatemi. Nonlinear
total variation based noise removal algorithms. Physica D:
nonlinear phenomena, 60(1-4):259–268, 1992.

[37] Ying Tai, Jian Yang, Xiaoming Liu, and Chunyan Xu. Mem-
net: A persistent memory network for image restoration. In
Proceedings of International Conference on Computer Vi-
sion, 2017.

[38] A. N. Tikhonov. Solution of incorrectly formulated problems
and the regularization method. Soviet Math. Dokl., 4:1035–
1038, 1963.

[39] S. V. Venkatakrishnan, C. A. Bouman, and B. Wohlberg.
Plug-and-Play priors for model based reconstruction.
In
2013 IEEE Global Conference on Signal and Information
Processing, pages 945–948, Dec 2013.

[40] Lei Zhang Xin Li, Bahadir Gunturk. Image demosaicing: a
systematic survey. volume 6822, pages 6822 – 6822 – 15,
2008.

[41] K. Zhang, W. Zuo, Y. Chen, D. Meng, and L. Zhang. Beyond
a Gaussian Denoiser: Residual Learning of Deep CNN for
Image Denoising. IEEE Transactions on Image Processing,
26(7):3142–3155, July 2017.

[42] K. Zhang, W. Zuo, S. Gu, and L. Zhang. Learning Deep CNN
Denoiser Prior for Image Restoration. In 2017 IEEE Confer-
ence on Computer Vision and Pattern Recognition (CVPR),
pages 2808–2817, July 2017.

[43] Xiaoou Tang Matt Uyttendaele Ziwei Liu, Lu Yuan and Jian
Sun. Fast burst images denoising. ACM Transactions on
Graphics (TOG), 33(6), 2014.

5938

