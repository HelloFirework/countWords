Self-Supervised Learning of 3D Human Pose using Multi-view Geometry

Muhammed Kocabas ∗

Salih Karagoz ∗

Emre Akbas

Department of Computer Engineering, Middle East Technical University

{muhammed.kocabas,e234299,eakbas}@metu.edu.tr

Abstract

Training accurate 3D human pose estimators requires
large amount of 3D ground-truth data which is costly to
collect. Various weakly or self supervised pose estima-
tion methods have been proposed due to lack of 3D data.
Nevertheless, these methods, in addition to 2D ground-
truth poses, require either additional supervision in vari-
ous forms (e.g. unpaired 3D ground truth data, a small sub-
set of labels) or the camera parameters in multiview set-
tings. To address these problems, we present EpipolarPose,
a self-supervised learning method for 3D human pose es-
timation, which does not need any 3D ground-truth data
or camera extrinsics. During training, EpipolarPose es-
timates 2D poses from multi-view images, and then, uti-
lizes epipolar geometry to obtain a 3D pose and camera
geometry which are subsequently used to train a 3D pose
estimator. We demonstrate the effectiveness of our ap-
proach on standard benchmark datasets (i.e. Human3.6M
and MPI-INF-3DHP) where we set the new state-of-the-art
among weakly/self-supervised methods. Furthermore, we
propose a new performance measure Pose Structure Score
(PSS) which is a scale invariant, structure aware measure
to evaluate the structural plausibility of a pose with re-
spect to its ground truth. Code and pretrained models
are available at https://github.com/mkocabas/
EpipolarPose

1. Introduction

Human pose estimation in the wild is a challenging prob-
lem in computer vision. Although there are large-scale
datasets [2, 20] for two-dimensional (2D) pose estimation,
3D datasets [15, 23] are either limited to laboratory settings
or limited in size and diversity. Since collecting 3D hu-
man pose annotations in the wild is costly and 3D datasets
are limited, researchers have resorted to weakly or self su-
pervised approaches with the goal of obtaining an accurate
3D pose estimator by using minimal amount of additional

∗equal contribution

Figure 1. EpipolarPose uses 2D pose estimation and epipolar ge-
ometry to obtain 3D poses which are subsequently used to train a
3D pose estimator.

supervision on top of the existing 2D pose datasets. Vari-
ous methods have been developed to this end. These meth-
ods, in addition to ground-truth 2D poses, require either
additional supervision in various forms (such as unpaired
3D ground truth data[41], a small subset of labels [31]) or
(extrinsic) camera parameters in multiview settings [30].
To the best of our knowledge, there is only one method
[9] which can produce a 3D pose estimator by using only
2D ground-truth.
In this paper, we propose another such
method.

Our method, “EpiloparPose,” uses 2D pose estimation
and epipolar geometry to obtain 3D poses, which are sub-
sequently used to train a 3D pose estimator. EpipolarPose
works with an arbitrary number of cameras (must be at least
2) and it does not need any 3D supervision or the extrinsic
camera parameters, however, it can utilize them if provided.
On the Human3.6M [15] and MPI-INF-3DHP [23] datasets,

11077

2D Pose EstimationEpipolar GeometrySelf Supervision3D Pose  CNNwe set the new state-of-the-art in 3D pose estimation for
weakly/self-supervised methods.

Human pose estimation allows for subsequent higher
level reasoning, e.g. in autonomous systems (cars, industrial
robots) and activity recognition. In such tasks, structural er-
rors in pose might be more important than the localization
error measured by the traditional evaluation metrics such as
MPJPE (mean per joint position error) and PCK (percentage
of correct keypoints). These metrics treat each joint inde-
pendently, hence, fail to asses the whole pose as a structure.
Figure 4 shows that structurally very different poses yield
the same MPJPE with respect to a reference pose. To ad-
dress this issue, we propose a new performance measure,
called the Pose Structure Score (PSS), which is sensitive
to structural errors in pose. PSS computes a scale invariant
performance score with the capability to score the structural
plausibility of a pose with respect to its ground truth. Note
that PSS is not a loss function, it is a performance measure
that can be used along with MPJPE and PCK to account for
structural errors made by a pose estimator.

To compute PSS, we ﬁrst need to model the natural dis-
tribution of ground-truth poses. To this end, we use an un-
supervised clustering method. Let p be the predicted pose
for an image whose ground-truth is q. First, we ﬁnd which
cluster centers are closest to p and q. If both of them are
closest to (i.e. assigned to) the same cluster center, then the
pose structure score (PSS) of p is said to be 1, otherwise 0.

Contributions Our contributions are as follows:

• We present EpipolarPose, a method that can predict 3D
human pose from a single-image. For training, Epipo-
larPose does not require any 3D supervision nor cam-
era extrinsics. It creates its own 3D supervision by uti-
lizing epipolar geometry and 2D ground-truth poses.

• We set the new state-of-the-art among weakly/self-

supervised methods for 3D human pose estimation.

• We present Pose Structure Score (PSS), a new perfor-
mance measure for 3D human pose estimation to better
capture structural errors.

2. Related Work

Our method, EpipolarPose, is a single-view method dur-
ing inference; and a multi-view, self-supervised method
during training. Before discussing such methods in the lit-
erature, we ﬁrst brieﬂy review entirely single-view (during
both training and inference) and entirely multi-view meth-
ods for completeness.

Single-view methods
In many recent works, convolu-
tional neural networks (CNN) are used to estimate the co-
ordinates of the 3D joints directly from images [38, 39, 40,

35, 23]. Li and Chan [19] were the ﬁrst to show that deep
neural networks can achieve a reasonable accuracy in 3D
human pose estimation from a single image. They used two
deep regression networks and body part detection. Tekin et
al. [38] show that combining traditional CNNs for super-
vised learning with auto-encoders for structure learning can
yield good results. Contrary to common regression prac-
tice, Pavlakos et al. [29] were the ﬁrst to consider 3D human
pose estimation as a 3D keypoint localization problem in a
voxel space. Recently, “integral pose regression” proposed
by Sun et al. [36] combined volumetric heat maps with a
soft-argmax activation and obtained state-of-the-art results.
Additionally, there are two-stage approaches which de-
compose the 3D pose inference task into two indepen-
dent stages: estimating 2D poses, and lifting them into 3D
space [8, 24, 22, 11, 46, 8, 40, 23]. Most recent meth-
ods in this category use state-of-the-art 2D pose estimators
[7, 43, 25, 17] to obtain joint locations in the image plane.
Martinez et al. [22] use a simple deep neural network that
can estimate 3D pose given the estimated 2D pose com-
puted by a state-of-the-art 2D pose estimator. Pavlakos et
al. [28] proposed the idea of using ordinal depth relations
among joints to bypass the need for full 3D supervision.

Methods in this category require either full 3D supervi-
sion or extra supervision (e.g. ordinal depth) in addition to
full 3D supervision.

Multi-view methods Methods in this category require
multi-view input both during testing and training. Early
work [1, 5, 6, 3, 4] used 2D pose estimations obtained from
calibrated cameras to produce 3D pose by triangulation or
pictorial structures model. More recently, many researchers
[10] used deep neural networks to model multi-view input
with full 3D supervision.

Weakly/self-supervised methods Weak and self supervi-
sion based methods for human pose estimation have been
explored by many [9, 31, 41, 30] due to lack of 3D an-
notations. Pavlakos et al. [30] use a pictorial structures
model to obtain a global pose conﬁguration from the key-
point heatmaps of multi-view images. Nevertheless, their
method needs full camera calibration and a keypoint detec-
tor producing 2D heatmaps.

Rhodin et al. [31] utilize multi-view consistency con-
straints to supervise a network. They need a small amount
of 3D ground-truth data to avoid degenerate solutions where
poses collapse to a single location. Thus, lack of in-the-wild
3D ground-truth data is a limiting factor for this method
[31].

Recently introduced deep inverse graphics networks [18,
44] have been applied to the human pose estimation prob-
lem [41, 9]. Tung et al. [41] train a generative adversar-
ial network which has a 3D pose generator trained with

1078

3.1. Training

In the training pipeline of EpipolarPose (Figure 2), there
are two branches each starting with the same pose estima-
tion network (a ResNet followed by a deconvolution net-
work [36]). These networks were pre-trained on the MPII
Human Pose dataset (MPII) [2]. During training, only the
pose estimation network in the upper branch is trained; the
other one is kept frozen.

EpipolarPose can be trained using more than 2 cameras
but for the sake of simplicity, here we will describe the train-
ing pipeline for n = 2. For n = 2, each training exam-
ple contains only one image pair. Images Ii and Ii+1 are
fed into both the 3D (upper) branch and 2D (lower) branch
pose estimation networks to obtain volumetric heatmaps
ˆH, H ∈ Rw×h×d respectively, where w, h are the spatial
size after deconvolution, d is the depth resolution deﬁned
as a hyperparameter. After applying soft argmax activa-
tion function ϕ(·) we get 3D pose ˆV ∈ RJ×3 and 2D pose
U ∈ RJ×2 outputs where J is the number of body joints.
From a given volumetric heatmap, one can obtain both a 3D
pose (by applying softargmax to all 3 dimensions) and a 2D
pose (by applying softargmax to only x, y).

As an output of 2D pose branch, we want to obtain the
3D human pose V in the global coordinate frame. Let
the 2D coordinate of the jth joint in the ith image be
Ui,j = [xi,j, yi,j] and its 3D coordinate be [Xj, Yj, Zj], we
can describe the relation between them assuming a pinhole
image projection model




xi,j
yi,j
wi,j




= K [R|RT ]




Xj
Yj
Zj
1




, K = 


fx
0
0

0
fy
0

cx
cy
1



 , T = 



Tx
Ty
Tz


 ,

(1)
where wi,j is the depth of the jth joint in the ith camera’s
image with respect to the camera reference frame, K en-
codes the camera intrinsic parameters (e.g., focal length fx
and fy, principal point cx and xy), R and T are camera ex-
trinsic parameters of rotation and translation, respectively.
We omit camera distortion for simplicity.

When camera extrinsic parameters are not available,
which is usually the case in dynamic capture environments,
we can use body joints as calibration targets. We assume the
ﬁrst camera as the center of the coordinate system, which
means R of the ﬁrst camera is identity. For corresponding
joints in Ui and Ui+1, in the image plane, we ﬁnd the fun-
damental matrix F satisfying Ui,jF Ui+1,j = 0 for ∀j using
the RANSAC algorithm. From F , we calculate the essen-
tial matrix E by E = K T F K. By decomposing E with
SVD, we obtain 4 possible solutions to R. We decide on the
correct one by verifying possible pose hypotheses by doing
cheirality check. The cheirality check basically means that
the triangulated 3D points should have positive depth [26].
We omit the scale during training, since our model uses nor-

1079

Figure 2. Overall architecture of EpipolarPose during train-
ing. The orange-background part in the upper branch denotes the
inference pipeline. During training, EpipolarPose is multi-view:
a pair of images (Ii, Ii+1) simultaneously taken by two consecu-
tive cameras is fed into the CNN pose estimators. It is also self-
supervised: the 3D pose (V ) generated by the lower branch using
triangulation (i.e. epipolar geometry) is used as a training signal
for the CNN in the upper branch. During inference (the orange-
background part), EpipolarPose is a monocular method: it takes
a single image (Ii) as input and estimates the corresponding 3D
pose ( ˆVi). (ϕ: soft argmax function, T: triangulation, L: smooth
L1 loss.)

a reconstruction loss between projections of predicted 3D
poses and input 2D joints and a discriminator trained to dis-
tinguish predicted 3D pose from a set of ground truth 3D
poses. Following this work, Drover et al. [9] eliminated the
need for 3D ground-truth by modifying the discriminator to
recognize plausible 2D projections.

To the best of our knowledge, EpipolarPose and Drover
et al. ’s method are the only ones that do not require any 3D
supervision or camera extrinsics. While their method does
not utilize image features, EpipolarPose makes use of both
image features and epipolar geometry and produces much
more accurate results (4.3 mm less error than Drover et al.
’s method).

3. Models and Methods

The overall training pipeline of our proposed method,
EpipolarPose, is given in Figure 2. The orange-background
part shows the inference pipeline. For training of Epipolar-
Pose, the setup is assumed to be as follows. There are n
cameras (n ≥ 2 must hold) which simultaneously take the
picture of the person in the scene. The cameras are given id
numbers from 1 to n where consecutive cameras are close
to each other (i.e. they have small baseline). The cameras
produce images I1, I2, . . . In. Then, the set of consecutive
image pairs, {(Ii, Ii+1)|i = 1, 2, . . . , n−1}, form the train-
ing examples.

''''TLLmalized poses as ground truth.

Finally, to obtain a 3D pose V for corresponding syn-
chronized 2D images, we utilize triangulation (i.e. epipolar
geometry) as follows. For all joints in (Ii, Ii+1) that are not
occluded in either image, triangulate a 3D point [Xj, Yj, Zj]
using polynomial triangulation [12]. For settings including
more than 2 cameras, we calculate the vector-median to ﬁnd
the median 3D position.

To calculate the loss between 3D pose in camera frame
ˆV predicted by the upper (3D) branch, we project V onto
corresponding camera space, then minimize smoothL1 (V −
ˆV ) to train the 3D branch where

smoothL1 (x) =(0.5x2

|x| − 0.5

if |x| < 1

otherwise

(2)

Why do we need a frozen 2D pose estimator? In the
training pipeline of EpipolarPose, there are two branches
each of which is starting with a pose estimator. While the
estimator in the upper branch is trainable, the other one in
the lower branch is frozen. The job of the lower branch
estimator is to produce 2D poses. One might question the
necessity of the frozen estimator since we could obtain 2D
poses from the trainable upper branch as well. When we
tried to do so, our method produced degenerate solutions
where all keypoints collapse to a single location. In fact,
other multi-view methods faced the same problem [31, 37].
Rhodin et al. [31] solved this problem by using a small set
of ground-truth examples, however, obtaining such ground-
truth may not be feasible in most of the in the wild settings.
Another solution proposed recently [37] is to minimize an-
gular distance between estimated relative rotation ˆR (com-
puted via Procrustes alignment of the two sets of keypoints)
and the ground truth R. Nevertheless, it is hard to obtain
ground truth R in dynamic capture setups. To overcome
these shortcomings, we utilize a frozen 2D pose detector
during training time only.

3.2. Inference

Inference involves the orange-background part in Figure
2. The input is just a single image and the output is the
estimated 3D pose ˆV obtained by a soft-argmax activation,
ϕ(·), on 3D volumetric heatmap ˆHi.

3.3. Reﬁnement, an optional post training

In the literature there are several techniques [22, 11, 39]
to lift detected 2D keypoints into 3D joints. These meth-
ods are capable of learning generalized 2D→3D mapping
which can be obtained from motion capture (MoCap) data
by simulating random camera projections. Integrating a re-
ﬁnement unit (RU) to our self supervised model can further
improve the pose estimation accuracy. In this way, one can
train EpipolarPose on his/her own data which consists of

Figure 3. Overall inference pipeline with a reﬁnement unit which
is an optional stage to reﬁne the predictions of the model trained
with self supervision. The f function denotes the inference func-
tion (orange-background part in Figure 2) of EpipolarPose.

Figure 4. Left: reference poses from Human3.6M dataset. Mid-
dle: manually modiﬁed poses to obtain similar MPJPE with
poses on the right, yet structured differently from reference poses.
Right: poses obtained by adding random gaussian noise to each
body joint.

multiple view footages without any labels and integrate it
with RU to further improve the results. To make this possi-
ble, we modify the input layer of RU to accept noisy 3D de-
tections from EpipolarPose and make it learn a reﬁnement
strategy. (See Figure 3)

The overall RU architecture is inspired by [22, 11]. It
has 2 computation blocks which have certain linear layers
followed by Batch Normalization [14], Leaky ReLU [21]
activation and Dropout layers to map 3D noisy inputs to
more reliable 3D pose predictions. To facilitate information
ﬂow between layers, we add residual connections [13] and
apply intermediate loss to expedite the intermediate layers’
access to supervision.

3.4. Pose Structure Score

As we discussed in Section 1, traditional distance-based
evaluation metrics (such as MPJPE, PCK) treat each joint
independently, hence, fail to asses the whole pose as a struc-
ture. In Figure 4, we present example poses that have the

1080

RefinementunitfConvNetReference PoseModiﬁed Pose 134.01 mm34.01 mm52.94 mm54.78 mm35.35 mm53.03 mm53.04 mmMPJPE:MPJPE:MPJPE:MPJPE:Modiﬁed Pose 2same MPJPE but are structurally very different, with respect
to a reference pose.

We propose a new performance measure, called the Pose
Structure Score (PSS), which is sensitive to structural errors
in pose. PSS computes a scale invariant performance score
with the capability to assess the structural plausibility of a
pose with respect to its ground truth. Note that PSS is not
a loss function, it is a performance score that can be used
along with MPJPE and PCK to account for structural er-
rors made by the pose estimator. PSS is an indicator about
the deviation from the ground truth pose that has the poten-
tial to cause a wrong inference in a subsequent task requir-
ing semantically meaningful poses, e.g. action recognition,
human-robot interaction.

How to compute PSS? The computation of PSS requires
a reference distribution of ground-truth poses. Given a
ground-truth set composed of n poses qi, i ∈ {1, · · · , n},
we normalize each pose vector as ˆqi = qi
||qi|| . Then, we
compute k cluster centers µj, j ∈ {1, · · · , k} using k-
means clustering. Then, to compute the PSS of a predicted
pose p against its ground-truth pose q, we use

Figure 5. t-SNE graph of human poses after clustering. Here we
choose k = 10 for visualization purposes. Each color represents a
cluster.

PSS(p, q) = δ(cid:0)C(p), C(q)(cid:1) where

C(p) = arg min

||p − µk||2
2,

k

δ(i, j) =(1 i = j

0 i 6= j

(3)

(4)

The mPSS, mean-PSS, of a set of poses is the average
over their individual scores as computed in Eq. (3). Figure 5
shows the t-SNE [42] graph of poses and clusters. Figure 6
depicts the cluster centers which represent canonical poses.
In our experiments, we chose the number of pose clusters
as 50 and 100. We denoted the corresponding PSS results
with mPSS@50 and mPSS@100 expressions. Note that
mPSS gives the percentage of structurally correct poses,
therefore higher scores are better. To test the stability of
our clustering, we ran k-means 100 times each with random
initializations. Then, for each pair of runs, we established
pairwise correspondences between clusters. For each cor-
respondence, we computed intersection over union (IOU).
Average IOU over all pairings and correspondences turned
out to be 0.78. Additionally, the mPSS of different pose
estimation models vary ±0.1% when we use different k-
means outputs as reference. These analyses prove the sta-
bility of PSS.

Implementation details We use the Integral Pose [36] ar-
chitecture for both 2D and 3D branches with a ResNet-50
[13] backend.
Input image and output heatmap sizes are
256 × 256 and J × 64 × 64 × 64, respectively where J is

Figure 6. Cluster centers which represents the canonical poses in
Human3.6M (k = 50).

the number of joints. We initialize all models used in exper-
iments after training on the MPII [2].

During training, we use mini-batches of size 32, each
one containing Ii, Ii+1 image pairs. If more than two cam-
eras are available, we include the views from all cameras
in a mini-batch. We train the network for 140 epochs using
Adam optimizer [16] with a learning rate of 10−3 multiplied
with 0.1 at steps 90 and 120. Training data is augmented by
random rotations of ±30◦ and scaled by a factor between
0.8 and 1.2. Additionally, we utilize synthetic occlusions
[34] to make the network robust to occluded joints. For the
sake of simplicity, we run the 2D branch once to produce tri-
angulated 3D targets and train the 3D branch using cached
labels. We implemented the whole pipeline using PyTorch
[27].

1081

Table 1. Triangulation results on H36M. Effects of different 2D
keypoint sources on triangulation performance. GT 2D denotes the
usage of ground truth 2D labels. H36M 2D and MPII 2D shows
the pose estimation models trained on those datasets.

Methods

MPJPE NMPJPE PMPJPE mPSS@50 mPSS@100

Pavlakos et al. [30]
GT 2D
GT 2D (w/o R)
H36M 2D
MPII 2D

56.89
4.38
n/a

28.37
45.86

-

2.87
22.46
26.28
37.79

-

2.13
15.06
25.19
36.83

-

98.93
98.83
95.08
90.06

-

97.16
96.03
94.2
85.96

4. Experiments

Datasets. We ﬁrst conduct experiments on the Hu-
man3.6M (H36M) large scale 3D human pose estimation
benchmark [15].
It is one of the largest datasets for 3D
human pose estimation with 3.6 million images featuring
11 actors performing 15 daily activities, such as eating, sit-
ting, walking and taking a photo, from 4 camera views. We
mainly use this dataset for both quantitative and qualitative
evaluation.

We follow the standard protocol on H36M and use the
subjects 1, 5, 6, 7, 8 for training and the subjects 9, 11 for
evaluation. Evaluation is performed on every 64th frame of
the test set. We include average errors for each method.

To demonstrate further applicability of our method, we
use MPI-INF-3DHP (3DHP) [23] which is a recent dataset
that includes both indoor and outdoor scenes. We follow
the standard protocol: The ﬁve chest-height cameras and
the provided 17 joints (compatible with H36M) are used for
training. For evaluation, we use the ofﬁcial test set which
includes challenging outdoor scenes. We report the results
in terms of PCK and NPCK to be consistent with [31]. Note
that we do not utilize any kind of background augmentation
to boost the performance for outdoor test scenes.

Metrics. We evaluate pose accuracy in terms of MPJPE
(mean per joint position error), PMPJPE (procrustes aligned
mean per joint position error), PCK (percentage of correct
keypoints), and PSS at scales @50 and @100. To compare
our model with [31], we measured the normalized metrics
NMPJPE and NPCK, please refer to [31] for further details.
Note that PSS, by default, uses normalized poses during
evaluation. In the presented results “n/a” means “not appli-
cable” where it’s not possible to measure respective metric
with provided information, “-” means “not available”. For
instance, it’s not possible to measure MPJPE or PCK when
R, the camera rotation matrix, is not available. For some
of the previous methods with open source code, we indicate
their respective PSS scores. We hope, in the future, PSS
will be adapted as an additional performance measure, thus
more results will become available for complete compar-
isons.

4.1. Results

Can we rely on the labels from multi view images?

Table 1 summarizes triangulation results from different
2D keypoint sources on the H36M dataset. Note that we
use training subjects to obtain these results, since our goal
is to ﬁnd out the performance of triangulation on the train-
ing data. Overall, the quality of estimated keypoints is cru-
cial to attain better results. If we have the ground truth 2D
keypoints and camera geometry, triangulation gives 4.3 mm
error and 99% PSS which is near perfect. Lack of cam-
era geometry reduces the PMPJE and mPSS@50 by a small
amount of 13 mm and 1%, respectively. A pose detec-
tor trained on the 2D labels of H36M improves the MPII-
pretrained one up to 17 mm and 5%. Note that, it is ex-
pected to have slightly worse performance when evaluat-
ing the MPII-pretrained detector on the H36M validation
set. Data in H36M was captured with markers, and there-
fore, have high accuracy and consistency in 2D annotations
across subject and scenes; on the other hand, the annota-
tions in MPII were done by humans and some of the key-
points are localized differently. For instance, shoulders and
hips are closer to edges of the body in the MPII dataset.

Compared to Pavlakos et al. ’s [30] results, our triangu-
lation using an MPII-pretrained detector is 11mm better in
terms of MPJPE.

Comparison to State of the art

In Table 2, we present the results of our model with dif-
ferent supervision types in comparison with recent state-of-
the-art methods. We present the fully supervised (FS) ver-
sion of our model to provide a baseline. Our own imple-
mentation of “Integral Pose” architecture [36] produced a
slightly different result than reported. The difference be-
tween our result (52mm) and the reported one [36] (49mm)
can be attributed to the authors’ 2D-3D mixed training
which we refrained from doing in order to decouple 3D pose
estimation stage from 2D.

Our self supervised (SS) model performs quite well com-
pared to the recent fully 3D supervised methods [29, 32, 33,
40] which require abundant labeled data to learn. Obtaining
comparable results to state-of-the-art methods without us-
ing any 3D ground truth examples is a promising step for
such a nontrivial task.

Reﬁnement Unit (RU) which is an optional extension
to our SS network is helpful for achieving better results.
Adding RU further improves the performance of our SS
model by 20% . To measure the representation capacity of
the outputs from our SS model, we compare its result with
Martinez et al. ’s work [22]. Since the RU architecture is
identical to Martinez et al., we selected their model trained
with 2D keypoints from an MPII-pretrained pose detector
for a fair comparison. This results show that 3D depth in-

1082

Table 2. H36M results. Top: Comparison of results between our methods trained with different settings and the state-of-the-art fully
supervised methods. (FS: fully supervised, SS: self supervised) Bottom: Effect of adding reﬁnement unit (RU) over SS. (* uses the 2D
keypoints from an MPII pre trained model as input, hence is comparable to our SS+RU model.)

Methods

MPJPE NMPJPE PMPJPE mPSS@50 mPSS@100

Supervised training on all subjects of H36M

Nie et al. [45] (ICCV’17)
Sanzari et al. [33] (ECCV’16)
Tome et al. [40] (CVPR’17)
Rogez et al. [32] (CVPR’17)
Pavlakos et al. [29] (CVPR’17)
Rhodin et al. [31] (CVPR’18)
Martinez et al. [22] (ICCV’17)
Pavlakos et al. [28] (CVPR’18)
Sun et al. [36] (ECCV’18)
Ours FS
Ours SS
Ours SS (w/o R)

97.5
93.1
88.4
87.7
71.9
66.8
62.9
56.2
49.6
51.83
76.60

n/a

-
-
-
-
-

63.3

-
-
-

51.58
75.25
77.75

79.5

-
-

71.6

-

51.6
47.7

-

40.6
45.04
67.45
70.67

-
-

73.0

-

74.05

-

78.12
80.03

-

84.44
73.09
70.67

-
-

58.8

-

53.93

-

73.26
69.18

-

78.67
64.03
62.05

Integrating Reﬁnement Unit with SS trained network on H36M

Methods

MPJPE NMPJPE PMPJPE mPSS@50 mPSS@100

Martinez et al. [22] (ICCV’2017)*
Ours SS + RU

67.5
60.56

-

60.04

52.5
47.48

-

80.42

-

75.41

formation learned by our SS training method provides help-
ful cues to improve the performance of 2D-3D lifting ap-
proaches.

In Table 4 top, we show the FS training results on the
3DHP dataset as a baseline. We further use that information
to analyze the differences between FS and SS training.

Weakly/Self Supervised Methods

Table 3 outlines the performance of weakly/self super-
vised methods in the literature along with ours on the H36M
dataset. The top part includes the methods not requiring
paired 3D supervision. Since Tung et al. [41] use unpaired
3D ground truth labels that are easier to obtain, we place
them here. Our SS model (with or without R) outperforms
all previous methods [41, 30] by a large margin in MPJPE
metric. We observe a large difference (21mm) between
training with ground truth 2D triangulations and MPII-
pretrained ones. This gap indicates us that the 2D keypoint
estimation quality is crucial for better performance.

To better understand the source of performance gain in
ours and Rhodin et al., we can analyze the gap between the
models trained with full supervision (FS) and subject 1 of
H36M and 3DHP only (S1). In our method, the difference
between FS and S1 training is 12 and 9mm, while Rhodin
et al. ’s difference is 15 and 18mm for H36M and 3DHP,
respectively (lower is better). It shows us that our learning
strategy is better at closing the gap. Even though Rhodin
et al. uses S1 for training, our SS method outperforms it on
H36M dataset. In the case of S1 training, there is an explicit
improvement (14mm, 4mm for H36M and 3DHP) with our
approach. Also, SS training with our method on 3DHP has

comparable results to Rhodin et al. ’ S1.

Finally, the bottom part in Table 3 gives a fair compari-
son of our model against Drover et al. ’s since they report
results only with 14 joints. Our method yields 4mm less
error than their approach.

Figure 7. Qualitative results on H36M dataset. Provided 3D
poses are from different camera views for better visualization. Last
row depicts a failure case. (FS: fully supervised training, SS: self
supervised training)

1083

Ground TruthEpipolarPose       (FS)EpipolarPose       (SS)ImageTable 3. H36M weakly/self supervised results. Top: Methods that can be trained without 3D ground truth labels. (Tung et al. [41] uses
unpaired 3D supervision which is easier to get. 3DInterp denotes the results of [44] implemented by [41]. 2D GT denotes training with
triangulations obtained from ground truth 2D labels.) Middle: Methods requiring a small set of ground truth data. (S1 denotes using
ground truth labels of H36M subject #1 during training.) Bottom: Comparison to Drover et al. [9] that evaluated using 14 joints (14j)

Training without ground truth data

Methods

MPJPE NMPJPE PMPJPE mPSS@50 mPSS@100

Pavlakos et al. [30] (CVPR’2017)
Tung et al.- 3DInterp [41] (ICCV’2017)
Tung et al. [41] (ICCV’2017)
Ours SS
Ours SS (w/o R)
Ours SS (2D GT)

118.41

98.4
97.2
76.60

n/a

55.08

-
-
-

75.25
77.75
54.90

-
-
-

67.45
70.67
47.91

-
-
-

73.09
70.67
83.9

-
-
-

64.03
62.05
78.69

Training with only Subject 1 of H36M

Methods

MPJPE NMPJPE PMPJPE mPSS@50 mPSS@100

Rhodin et al. [31] S1
Rhodin et al. [31] S1 (w/o R)
Ours S1
Ours S1 (w/o R)

n/a
n/a

65.35

n/a

78.2
80.1
64.76
66.98

64.6
65.1
57.22
60.16

-
-

81.91
77.65

-
-

75.2
72.4

Methods

MPJPE NMPJPE PMPJPE mPSS@50 mPSS@100

Drover et al. [9](14j) (ECCVW’2018)
Ours SS (14j)

-

-

69.94

67.90

64.6
60.24

-
n/a

-
n/a

Evaluation using 14 joints

Table 4. 3DHP results. Top: Fully supervised training results. Middle: Self supervised learning using only subject 1. Bottom: Self
supervised training without any ground truth examples.

Methods

Mehta et al. [23]
Rhodin et al. [31] FS
Ours FS

Supervised training
MPJPE NMPJPE PCK NPCK mPSS@50 mPSS@100

-
n/a

108.99

-

101.5
106.38

72.5
n/a
77.5

-

78.8
78.1

-
-

-
-

87.15

82.21

Training with only Subject 1 of 3DHP

Methods

MPJPE NMPJPE PCK NPCK mPSS@50 mPSS@100

Rhodin et al. [31] S1
Rhodin et al. [31] S1 (w/o R)
Ours S1
Ours S1 (w/o R)

n/a
n/a
n/a
n/a

119.8
121.8
115.37
119.86

n/a
n/a
n/a
n/a

73.1
72.7
74.4
73.5

-
-

75.64
73.41

-
-

73.15
70.97

Training without ground truth data

Methods

Ours SS

MPJPE NMPJPE PCK NPCK mPSS@50 mPSS@100

126.79

125.65

64.7

71.9

70.94

67.58

5. Conclusion

In this work, we have shown that even without any 3D
ground truth data and the knowledge of camera extrin-
sics, multi view images can be leveraged to obtain self su-
pervision. At the core of our approach, there is Epipo-
larPose which can utilize 2D poses from multi-view im-
ages using epipolar geometry to self-supervise a 3D pose

estimator. EpipolarPose achieved state-of-the-art results
in Human3.6M and MPI-INF-3D-HP benchmarks among
weakly/self-supervised methods. In addition, we discussed
the weaknesses of localization based metrics i.e. MPJPE
and PCK for human pose estimation task and therefore pro-
posed a new performance measure Pose Structure Score
(PSS) to score the structural plausibility of a pose with re-
spect to its ground truth.

1084

References

[1] Sikandar Amin, Mykhaylo Andriluka, Marcus Rohrbach,
and Bernt Schiele. Multi-view pictorial structures for 3d hu-
man pose estimation. In British Machine Vision Conference,
2013. 2

[2] Mykhaylo Andriluka, Leonid Pishchulin, Peter Gehler, and
Bernt Schiele. 2D human pose estimation: New benchmark
and state of the art analysis. In IEEE Conference on Com-
puter Vision and Pattern Recognition, 2014. 1, 3, 5

[3] Vasileios Belagiannis, Sikandar Amin, Mykhaylo Andriluka,
Bernt Schiele, Nassir Navab, and Slobodan Ilic. 3D pictorial
structures for multiple human pose estimation. In IEEE Con-
ference on Computer Vision and Pattern Recognition, 2014.
2

[4] Vasileios Belagiannis, Sikandar Amin, Mykhaylo Andriluka,
Bernt Schiele, Nassir Navab, and Slobodan Ilic. 3D pictorial
structures revisited: Multiple human pose estimation. IEEE
Transaction on Pattern Analysis and Machine Intelligence,
2016. 2

[5] Martin Bergtholdt,

Jorg Kappes, Stefan Schmidt, and
Christoph Schnorr. A study of parts-based object class de-
tection using complete graphs. In International Journal of
Computer Vision, 2010. 2

[6] Magnus Burenius, Josephine Sullivan, and Stefan Carlsson.
3D pictorial structures for multiple view articulated pose es-
timation. In IEEE Conference on Computer Vision and Pat-
tern Recognition, 2013. 2

[7] Zhe Cao, Tomas Simon, Shih-En Wei, and Yaser Sheikh.
Realtime multi-person 2d pose estimation using part afﬁnity
ﬁelds. In IEEE Conference on Computer Vision and Pattern
Recognition, 2017. 2

[8] Ching-Hang Chen and Deva Ramanan. 3D human pose es-
timation = 2D pose estimation + matching.
In IEEE Con-
ference on Computer Vision and Pattern Recognition, 2017.
2

[9] Dylan Drover, Rohith MV, Ching-Hang Chen, Amit
Agrawal, Ambrish Tyagi, and Cong Phuoc Huynh. Can 3d
pose be learned from 2d projections alone? European Con-
ference on Computer Vision Workshops, 2018. 1, 2, 3, 8

Leonid

[10] Ahmed Elhayek, Edilson de Aguiar, Arjun Jain, Jonathan
Thompson,
Pishchulin, Micha Andriluka,
Christoph Bregler, Bernt Schiele, and Christian Theobalt.
MARCOnI—ConvNet-based MARker-less motion capture
in outdoor and indoor scenes. IEEE Transaction on Pattern
Analysis and Machine Intelligence, 2017. 2

[11] Hao-Shu Fang, Yuanlu Xu, Wenguan Wang, Xiaobai Liu,
and Song-Chun Zhu. Learning pose grammar to encode hu-
man body conﬁguration for 3D pose estimation. In Associa-
tion for the Advancement of Artiﬁcial Intelligence, 2018. 2,
4

[12] Richard I. Hartley and Peter Sturm. Triangulation. Computer

Vision and Image Understanding, 1997. 4

[14] Sergey Ioffe and Christian Szegedy. Batch normalization:
Accelerating deep network training by reducing internal co-
variate shift.
In Journal of Machine Learning Research,
2015. 4

[15] Catalin Ionescu, Dragos Papava, Vlad Olaru, and Cristian
Sminchisescu. Human3.6m: Large scale datasets and predic-
tive methods for 3D human sensing in natural environments.
In IEEE Transaction on Pattern Analysis and Machine Intel-
ligence, 2014. 1, 6

[16] Diederik P. Kingma and Jimmy Ba. Adam: A method
for stochastic optimization. In International Conference on
Learning Representations, 2015. 5

[17] Muhammed Kocabas, Salih Karagoz, and Emre Akbas. Mul-
tiposenet: Fast multi-person pose estimation using pose
residual network. In European Conference on Computer Vi-
sion, 2018. 2

[18] Tejas D Kulkarni, William F Whitney, Pushmeet Kohli, and
Josh Tenenbaum. Deep convolutional inverse graphics net-
work. In Advances in Neural Information Processing, 2015.
2

[19] Sijin Li and Antoni B. Chan. 3D human pose estimation from
monocular images with deep convolutional neural network.
In Asian Conference on Computer Vision, 2014. 2

[20] Tsung-Yi Lin, Michael Maire, Serge Belongie, James Hays,
Pietro Perona, Deva Ramanan, Piotr Doll´ar, and C. Lawrence
Zitnick. Microsoft COCO: Common objects in context. In
European Conference on Computer Vision, 2014. 1

[21] Andrew L. Maas, Awni Y. Hannun, and Andrew Y. Ng. Rec-
tiﬁer nonlinearities improve neural network acoustic models.
In International Conference on Machine Learning, 2013. 4
Javier Romero, and
James J. Little. A simple yet effective baseline for 3D human
pose estimation. In International Conference on Computer
Vision, 2017. 2, 4, 6, 7

[22] Julieta Martinez, Rayat Hossain,

[23] Dushyant Mehta, Helge Rhodin, Dan Casas, Pascal
Fua, Oleksandr Sotnychenko, Weipeng Xu, and Christian
Theobalt. Monocular 3D human pose estimation in the wild
using improve cnn supervision. In International Conference
on 3DVision, 2017. 1, 2, 6, 8

[24] F. Moreno-Noguer. 3D human pose estimation from a single
image via distance matrix regression. In IEEE Conference
on Computer Vision and Pattern Recognition, 2017. 2

[25] Alejandro Newell, Kaiyu Yang, and Jia Deng. Stacked hour-
glass networks for human pose estimation. In European Con-
ference on Computer Vision, 2016. 2

[26] D. Nister. An efﬁcient solution to the ﬁve-point relative pose
IEEE Transaction on Pattern Analysis and Ma-

problem.
chine Intelligence, 2004. 3

[27] Adam Paszke, Sam Gross, Soumith Chintala, Gregory
Chanan, Edward Yang, Zachary DeVito, Zeming Lin, Al-
ban Desmaison, Luca Antiga, and Adam Lerer. Automatic
differentiation in pytorch.
In International Conference on
Learning Representations, 2017. 5

[13] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun.
Deep residual learning for image recognition. In IEEE Con-
ference on Computer Vision and Pattern Recognition, 2016.
4, 5

[28] Georgios Pavlakos, Xiaowei Zhou, and Kostas Daniilidis.
Ordinal depth supervision for 3D human pose estimation. In
IEEE Conference on Computer Vision and Pattern Recogni-
tion, 2018. 2, 7

1085

[43] Shih-En Wei, Varun Ramakrishna, Takeo Kanade, and Yaser
Sheikh. Convolutional pose machines. In IEEE Conference
on Computer Vision and Pattern Recognition, 2016. 2

[44] Jiajun Wu, Tianfan Xue, Joseph J Lim, Yuandong Tian,
Joshua B Tenenbaum, Antonio Torralba, and William T
Freeman. Single image 3d interpreter network. In European
Conference on Computer Vision (ECCV), 2016. 2, 8

[45] Bruce Xiaohan Nie, Ping Wei, and Song-Chun Zhu. Monoc-
ular 3d human pose estimation by predicting depth on joints.
In International Conference on Computer Vision, 2017. 7

[46] Xiaowei Zhou, Menglong Zhu, Kosta Derpanis, and Kostas
Daniilidis. Sparseness meets deepness: 3D human pose esti-
mation from monocular video. In IEEE Conference on Com-
puter Vision and Pattern Recognition, 2016. 2

[29] Georgios Pavlakos, Xiaowei Zhou, Konstantinos G Derpa-
nis, and Kostas Daniilidis. Coarse-to-ﬁne volumetric predic-
tion for single-image 3D human pose. In IEEE Conference
on Computer Vision and Pattern Recognition, 2017. 2, 6, 7

[30] Georgios Pavlakos, Xiaowei Zhou, Konstantinos G Derpa-
nis, and Kostas Daniilidis. Harvesting multiple views for
marker-less 3d human pose annotations.
In IEEE Confer-
ence on Computer Vision and Pattern Recognition, 2017. 1,
2, 6, 7, 8

[31] Helge Rhodin, J¨org Sp¨orri, Isinsu Katircioglu, Victor Con-
stantin, Fr´ed´eric Meyer, Erich M¨uller, Mathieu Salzmann,
and Pascal Fua. Learning monocular 3d human pose estima-
tion from multi-view images. In IEEE Conference on Com-
puter Vision and Pattern Recognition, 2018. 1, 2, 4, 6, 7,
8

[32] Gregory Rogez, Philippe Weinzaepfel, and Cordelia Schmid.
Lcr-net: Localization-classiﬁcation-regression for human
pose. In IEEE Conference on Computer Vision and Pattern
Recognition, 2017. 6, 7

[33] Marta Sanzari, Valsamis Ntouskos, and Fiora Pirri. Bayesian
image based 3d pose estimation. In European Conference on
Computer Vision, 2016. 6, 7

[34] Istv´an S´ar´andi, Timm Linder, Kai O Arras, and Bastian
Leibe. How robust is 3d human pose estimation to occlu-
sion? In IROS Workshop - Robotic Co-workers 4.0, 2018.
5

[35] Xiao Sun, Jiaxiang Shang, Shuang Liang, and Yichen Wei.
Compositional human pose regression. In International Con-
ference on Computer Vision, 2017. 2

[36] Xiao Sun, Bin Xiao, Fangyin Wei, Shuang Liang, and Yichen
Wei. Integral human pose regression. In European Confer-
ence on Computer Vision, 2018. 2, 3, 5, 6, 7

[37] Supasorn Suwajanakorn, Noah Snavely, Jonathan Tompson,
and Mohammad Norouzi. Discovery of latent 3d keypoints
via end-to-end geometric reasoning. In Advances in Neural
Information Processing, 2018. 4

[38] Bugra Tekin, Isinsu Katircioglu, Mathieu Salzmann, Vincent
Lepetit, and Pascal Fua. Structured prediction of 3D human
pose with deep neural networks. In British Machine Vision
Conference, 2016. 2

[39] Bugra Tekin, Pablo Marquez-Neila, Mathieu Salzmann, and
Pascal Fua. Learning to fuse 2D and 3D image cues for
monocular body pose estimation.
In International Confer-
ence on Computer Vision, 2017. 2, 4

[40] Denis Tome, Chris Russell, and Lourdes Agapito. Lifting
from the deep: Convolutional 3D pose estimation from a
single image. In IEEE Conference on Computer Vision and
Pattern Recognition, 2017. 2, 6, 7

[41] Hsiao-Yu Fish Tung, Adam W Harley, William Seto, and
Katerina Fragkiadaki. Adversarial inverse graphics net-
works: Learning 2d-to-3d lifting and image-to-image trans-
lation from unpaired supervision. In International Confer-
ence on Computer Vision, 2017. 1, 2, 7, 8

[42] Laurens van der Maaten and Geoffrey Hinton. Visualizing
data using t-sne. In Journal of Machine Learning Research.
5

1086

