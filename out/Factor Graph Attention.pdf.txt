Factor Graph Attention

Idan Schwartz1, Seunghak Yu2,*, Tamir Hazan1, Alexander Schwing3

1Technion

2MIT CSAIL

3UIUC

idansc@cs.technion.ac.il, seunghak@csail.mit.edu, tamir.hazan@technion.ac.il, aschwing@illinois.edu

Abstract

Dialog is an effective way to exchange information, but
subtle details and nuances are extremely important. While
signiﬁcant progress has paved a path to address visual dia-
log with algorithms, details and nuances remain a challenge.
Attention mechanisms have demonstrated compelling results
to extract details in visual question answering and also pro-
vide a convincing framework for visual dialog due to their
interpretability and effectiveness. However, the many data
utilities that accompany visual dialog challenge existing at-
tention techniques. We address this issue and develop a
general attention mechanism for visual dialog which oper-
ates on any number of data utilities. To this end, we design
a factor graph based attention mechanism which combines
any number of utility representations. We illustrate the ap-
plicability of the proposed approach on the challenging and
recently introduced VisDial datasets, outperforming recent
state-of-the-art methods by 1.1% for VisDial0.9 and by 2%
for VisDial1.0 on MRR. Our ensemble model improved the
MRR score on VisDial1.0 by more than 6%.

1. Introduction

Dialog is an effective way for humans to exchange infor-
mation. Due to this effectiveness it is an important research
goal to develop artiﬁcial intelligence based agents for human-
computer conversation. However, when humans talk to each
other, subtle details and nuances are often very important.
This importance of subtle details and nuances makes devel-
opment of agents for visual dialog a challenging endeavor.
Recent efforts to facilitate human-computer conversation
about images focus on image captioning, visual question an-
swering, visual question generation and very recently also vi-
sual dialog. To this end, Das et al. [10] collected, curated and
provided to the general public an impressive dataset, which
allows to design virtual assistants that can converse. Differ-
ent from image captioning datasets, such as MSCOCO [29],
or visual question answering datasets, such as VQA [5], the
visual dialog dataset contains short dialogs about a scene
between two people. To direct the dialog, the dataset was
collected by showing a caption to the ﬁrst person (‘ques-
tioner’) which attempts to inquire more about the hidden
image. The second person (‘answerer’) could see both the

*Work conducted while the author was at Samsung Research.

Figure 1: Illustration of our factor graph attention. We show two
consecutive questions in a dialog. The image attention correlates
well with the question. Attention over history interactions allows
our model to attend to subtle nuances. The caption focuses on the
last word due to given potential priors. Attention over the answers
focuses on speciﬁc options. The attended options usually correlate
with the correct answer. Note: for readability, we chose to display
only the top-10 answers out of 100 possible ones.

image and its caption to provide answers to these questions.
Beyond releasing the Visual Dialog dataset, to ensure a fair
comparison, Das et al. [10] propose a particular task that can
be evaluated precisely. It asks the AI system to predict the
next answer given the image, the question, and a history of
question-answer pairs. A variety of discriminative and gen-
erative techniques have been discussed, ranging from deep
nets with Long-Short-Term-Memory (LSTM) units [18] to
more involved ones with memory nets [51] and hierarchical
LSTM architectures [45].

One of the successful techniques to improve visual ques-
tion answering is the attention mechanism [33]. Due to the
similarity of visual question answering and visual dialog,
we envision similar improvements to be realizable. In fact,
some approaches point in this direction and use a subset of
the available data utilities to direct question answering [32].
However, in visual dialog many more “data parts,” i.e., the
image, the question, the history and the caption are involved
and have been referred to as ‘modalities.’ To avoid confu-
sion with the original convention/sense of the word modality,
we coin the term “utilities” to refer to different parts of the
available data. Taking all utilities into account makes it
computationally and conceptually much more challenging
to develop an effective attention mechanism. While ignoring
utilities when computing attention is always an option, we
argue that subtle details and nuances can only be captured

12039

does cake have candles ?Q:how many kids ?A: 5Q: is this birthday party ?A: yesQ: any adults ?A: lady lighting candleQ: is this outdoors ?A: not very sureQ: is table round ?A: noQ: are kids wearing hats ?A: 0 of them wearing hatsHistoryImageAnswersQuestionCaptiona group of kids around a table with a cake .are kids wearing hats ?Q: how many kids ?A:5Q: is this birthday party?A: yesQ: any adults ?A: lady lighting candleQ: is this outdoors ?A: not very sureQ: is table round ?A: noHistoryImageAnswersQuestionCaptiona group of kids around a table with a cake .adequately if we focus on all available signals.

To address this issue we develop a general factor graph
based attention mechanism which combines representations
of any number of utilities. Inspired by graphical models,
we use a graph based formulation to represent the attention
framework, where nodes correspond to utilities and factors
model their interactions. A message passing like procedure
aggregates information from modalities which are connected
by edges in the graph.

We demonstrate the efﬁcacy of the proposed multi-utility
attention mechanism on the challenging and recently intro-
duced Visual Dialog dataset, realizing improvements up to
1.1% on MRR. Moreover, we examine our model behavior
using question generation proposed by [21]. Examples of
the computed attention for visual question answering are
illustrated in Fig. 1.

2. Related Work

In recent years various machine learning techniques
were developed to tackle cognitive-like multimodal tasks,
which involve both vision and language processing. Im-
age captioning [36, 56, 24, 50, 7, 4, 13] was an instru-
mental language+vision task, followed by visual question
answering [33, 42, 25, 34, 41, 5, 15, 59, 23, 3, 9, 14,
46, 55, 42, 54, 39, 40, 43] and visual question genera-
tion [41, 38, 22, 49, 28, 6].

Instrumental to cognitive tasks are attention models, that
enable interpretation of the machine’s cognition and often
improve performance. While attention mechanisms have
been applied to visual question answering [14, 33, 42, 26,
55, 58], few works have addressed visual dialog because
of the many different data utilities. Here, we develop an
attention mechanism for visual dialog, a cognitive task that
was created to imitate human-like decisions [10]. We build
a general attention mechanism that is capable of capturing
details. In the following we brieﬂy review visual question
answering and visual dialog, focusing on the use of attention.
Visual Question Answering (VQA): Visual question an-
swering is considered a simpliﬁed version of visual dialog
since it consists of a single interaction with a given image.
Some discriminative approaches include a pre-trained convo-
lutional neural network with question embedding to predict
the correct answer [47, 35]. Quickly, attention mechanisms
have emerged as a tool to augment the spatial attention of the
image. Yang et al. [57] created a multi-step reasoning system
via an attention model. Fukui et al. [14] and Kim et al. [25]
suggested an efﬁcient multi-modal pooling method before
applying attention using a compact outer product which was
later improved using the Hadamard product. Zhu et al. [58]
treated image attention as a structured prediction task over
regions, by ﬁrst generating attention beliefs via unary and
pairwise potentials, for which a probability distribution is
inferred via loopy belief propagation.

Alternatively, Lu et al. [33] suggested to produce Co-
Attention for the image and question separately, using a

hierarchical formulation. Schwartz et al. [42] later extended
this approach for the multiple-choice VQA variant, apply-
ing attention over image, question and answer via unary,
pairwise and ternary potentials.
Visual Dialog: D. Geman et al. [16] were among the ﬁrst
to generate dialogs over images. These early attempts used
only street scene images, and also restricted the conversation
to templated, binary questions. A discriminative and genera-
tive approach was later introduced by Das et al. [10], along
with the largest visual dialog dataset, VisDial. Concurrently,
GuessWhat, another visual dialog dataset was published [11].
GuessWhat is a goal driven dialog dataset for object identi-
ﬁcation, while VisDial focuses on human-like interactions.
For instance, in Fig. 1, the answer for the question “are kids
wearing hats?” is “0 of them wearing hats,” while a goal-
driven interaction will answer with a simple “no.” While
both types of dialogs are challenging, VisDial interactions
typically consider more subtle nuances. Another work by
Mostafazadeh et al. [37], focuses on conversation generation
around images, instead of the content visible in images.

The VisDial dataset is accompanied with three baselines.
A vanilla approach which encodes the image, dialog and
history separately and combines them subsequently (i.e., late
fusion). A more complex approach based on a memory net-
work [51], which maintains previous question and answer as
facts in a memory bank, and learns to retrieve the appropri-
ate fact. Lastly, a hierarchical encoding approach to capture
the history [45]. Seo et al. [44] propose a memory network
based on attention, which also addressed co-referential is-
sues. Later, Lu et al. [32, 33] combined a generative and
discriminative model to choose generated answers, and also
proposed history attention conditioned on the image using
hierarchical co-attention developed for visual question an-
swering. Wu et al. [53] apply attention over image, question
and history representation using a Generative Adversarial
Network (GAN) to create a more human-like response. Jain
et al. [21] developed a discriminative model that produces
a binary score for each possible answer by concatenating
representations of all utilities. While Jain et al. [21] also con-
sider all utilities for interaction prediction, our work differs
in important aspects: (1) we develop an attention mechanism
that weights different representations; (2) when predicting
an answer, we take information from other possible answers
into account. Recently, Kottur et al. [27] focused on visual
co-reference resolution for visual dialog. Their approach
relies on a weak supervision of a parser for reasoning [20],
and a co-referential solver [8]. While co-reference resolution
is not the focus of our work, we found our attention model
to exhibit some co-reference resolution abilities.

Among all attention-based techniques for Visual Dialog,
the most relevant to our approach is work by Wu et al. [53]
and Lu et al. [32]. Both generate Co-Attention over the
image, the question and the history representation in a hi-
erarchical fashion. Their hierarchical approach is based
on a sequential process, computing attention for one utility
ﬁrst and using the obtained result to generate attention for

2040

another utility subsequently. As the ordering is important,
their framework is not straightforward to extend to a general
multi-utility setting.

In contrast, we develop a general attention model for
any number of utilities. In the visual dialog setting, those
utilities are the question in the history (10 utilities), each
answer in the history (10 utilities), the caption (1 utility), the
image (1 utility) and the answer representation (1 utility).
To work with a total of 23 utilities, we constructed a general
attention framework that may be applied to any high-order
utility setting. With our general purpose attention model we
improve results and achieve state-of-the-art performance.

To demonstrate the generality of the approach, we also
follow Jain et al. [21] and evaluate the proposed approach on
choosing an appropriate question given the previous question
and answer. There too we obtain state-of-the-art results.
Attention in General: More generally, attention models
have been applied to graphical data structures. For example,
Graph Attention Networks use an MRF approach to embed
graph-structured data, e.g., protein-protein interactions [48].
Also, attention for non-structured tasks (e.g., chain, tree)
were discussed in the past [26]. These works differ from
ours in important aspects: they are used to embed a struc-
ture based model, e.g., a graph, and provide a probability
distribution across nodes of the graph. Instead, our model
provides attention for entities within each node of the graph,
e.g., the words of a question or the pixels in an image.

3. Factor Graph Attention

In the following we describe a general framework to
construct a multi-utility attention model using factor graphs.
The factor graph is deﬁned over utilities, which, in
the visual dialog setting, consists of an image I, an an-
swer A, a caption C, and a history of past interactions
. We subsume all utilities within the

(cid:0)HQt , HAt(cid:1)t∈{1,...,T }
set U = {I, A, C,(cid:0)HQt , HAt(cid:1)t∈{1,...,T }}. In our work we

have 23 utilities (10 history questions, 10 history answers,
the image, answer and caption). For notational convenience
and to demonstrate the generality of the formulation we also
refer to the set of utilities via U = {U1, . . . , U|U |}. Each
utility Ui ∈ U , for i ∈ {1, . . . , |U|} consists of basic entities,
e.g., a question is composed of a sequence of words and an
image is composed of spatially ordered regions.

Formally, the i-th utility Ui is a di × ni matrix which
consists of ni entities ˆui ∈ Ui, which are the di-dimensional
columns of the matrix. Each vector ˆui ∈ Ui is embedded in
its respective Euclidean space, i.e., ˆui ∈ Rdi , where di is the
embedding dimension of the i-th utility. We use the index
ui ∈ {1, . . . , ni} to refer to a speciﬁc column inside the
matrix Ui, i.e., we extract the ui-th column via ˆui = Ui,ui .
The |U| nodes in the factor graph each represent attention
distributions over their ni utility elements, which we call
beliefs. To infer the probability we take into account two
types of factors: 1) Local factors which capture information
within a utility, such as their entity representation and their

local interactions. 2) Joint factors which capture interactions
of any subset of utilities. Due to the high number of utilities,
in our attention model, we limit ourselves to pairwise factors.
Next we will explain our construction of local factors and
joint factors. Note, bias terms are omitted for readability.

3.1. Local factors

The local factors capture the local information in an em-
ployed utility Ui. Each utility contains entities, i.e., words
in a sentence or regions in an image. There are two types of
information within a utility Ui: Entity information, which is
extracted from an entity’s vector representation ˆui ∈ Ui and
Entity interactions, which capture dependencies between
two entities, such as two words in the same question or two
regions in the same image.
Entity information: This representation is obtained as the
result of an embedding model, such as a Long-Short-Term-
Memory (LSTM) net for sentences or a convolutional layer
for image regions. Each vector representation ˆui ∈ Ui has
the potential to focus the model’s attention to the entity
the vector is representing. The potential function ψi(ui) is
parametrized by the i-th utility’s parameters Vi and vi, and
is obtained via

ψi(ui) = v⊤

i relu(Vi ˆui).

Hereby, vi ∈ Rdi , Vi ∈ Rdi×di are trainable parameters.
Recall that the index ui ∈ {1, . . . , ni} refers to a speciﬁc
entity. During training we also apply a dropout operation
after the ﬁrst linear embedding (i.e., Vi ˆui).
Entity interactions: The factor dependency between two
elements is extracted from their vector representation. Given
two indices u1
i ∈ {1, . . . , ni}, we embed the two cor-
responding entity representation vectors ˆu1
i in the same
Euclidean space, and compute the factor dependency on both
entities using the dot product operation, i.e.,

i , ˆu2

i , u2

ψii(u1

i , u2

i ) =(cid:18) Li ˆu1

i
kLi ˆu1

i k(cid:19)⊤  Ri ˆu2

j
kRi ˆu2

i k! ,

where Li ∈ Rdi×di , Ri ∈ Rdi×di are trainable parameters,
governing the left and right arguments respectively.

3.2. Joint factors

Joint factors capture interactions between two elements
of different utilities, e.g., between a word in the question and
a region in the image. Similarly to entity interaction factors
within a utility, we use

ψij(ui, uj) =(cid:18) Lij ˆui

kLij ˆuik(cid:19)⊤(cid:18) Rji ˆuj

kRji ˆujk(cid:19) ,

where Lij ∈ Rdi×d, Rji ∈ Rdj ×d are trainable parameters.
For simplicity we let d = max{di, dj} be the maximum
dimension between the two utilities.

2041

5/18/2018

Untitled Diagram.xml

{

}a

...

{

}a

a

a

a

a

H

H

A

a

Q

1

I

C

:

1

t

. . .

. . .
. . .

d

d

d

Q

I

C

d

⋅ t

d

d

H

A

A

i

F
u
s
o
n
N
e
t

 

100 D
scores

Multi- 
class 
cross 
entropy
loss 

0
0
:
1
:
0

a

a

Q

a

a

{

}a

I

H

C

A

t

a

{

}H

 

a

{

}H

Q

A

t

t

Factor Graph Attention

i

1

...
...

CNN

 

i

n

I

q

1

 

q

n

Q

c

1

...
...

...
...

 c

n

c

{

{

}

}

h

Q

t

1

{

...
 
...

{

}

}

h

Q

 

{

{

}

}

h

t

A t

n

1

H

...
 
...

{

{

}

}

h

A t

n

h

 

a

1

 

a

100

...
...

LSTM

LSTM

LSTM

LSTM

LSTM

I

C

Q

{

}H

Q

t

 

{

}H

A

t

Image

Question

Caption

History at time t

A

 A

100

1

...
Answer
Options








Figure 2: Our state-of-the-art architecture for the Visual Dialog
task. Implementations details can be found in Sec. 4.

To avoid a situation where pairwise scores (e.g., image
and question) negatively bias another one (e.g., image and
caption), proper normalization is necessary. Since the pair-
wise interaction scores are generated during training, we
chose a batch normalization [31] operation which ﬁxes the
bias during training. Additionally, we applied an L2 normal-
ization on ui and uj to be of unit norm before the multipli-
cation, i.e., we use the cosine similarity.

3.3. Attention, messages and beliefs

For each utility Ui we infer the amount of attention that
should be given to each of its elements ˆui ∈ Ui. Motivated
by classical message-passing algorithms, we ﬁrst collect all
dependencies of a given utility element via

µj→i(ui) = Xuj ∈{1,...,nj }

Wij(ui, uj)ψij(ui, uj),

where Wij(ui, uj) ∈ R is a trainable parameter. We aggre-
gate these messages from all pairwise factor dependencies
and send them to a utility, in order to infer its attention belief.
The inferred attention belief

bi(ui) ∝ exp

 ˆwipi(ui) + wiψi(ui) +

|U |

Xj=1

wijµj→i(ui)
,

also uses local entity information.

Hereby wij, wi are scalar weights learned per utility.
These scalars reﬂect the importance of one utility with re-
spect to the others. For instance, for the image belief, we
ﬁnd by examining these weights that the question utility is
more important than the caption utility. This makes sense
since we want to look at relevant places for the question.
Moreover, pi is a prior potential for the i-th utility, and ˆwi
is a trainable parameter to calibrate the prior potential’s im-
portance. For instance, the question utility prior encourages
focus of its attention onto the last word in the question, a
common practice in LSTM networks. Using priors, we are
able to steer the desired belief for a utility, while still allow-
ing guidance of other utilities via pairwise interactions. We

Ψ

Q

Ψ

Q,Q

(Sec. 4.3)

(Sec. 4.2)

T

Ψ

,QH

Q

Ψ

Q,A

Q

Q

Ψ

Ψ

,H

H

A

Q

Q

Ψ

,AH

Ψ

Q

A,A

H

H

Q

Q

A

A

Ψ

,CH

Q

Ψ

Q,C

Ψ

H

Q

Ψ

,IH

Q

Ψ

Q,I

(Sec. 4.1)

Ψ

,H

H

Q

A

Ψ

A,C

Ψ

H

A

Ψ

,QH

A

Ψ

,AH

A

Ψ

,CH

Ψ

I ,A

Ψ

,H

H

A

A

H

A

H

A

A

C

C

Ψ

C

Ψ

C,C

Ψ

,IH

A

Ψ

C,I

I

I

Ψ

I ,I

Ψ

I

Figure 3: A graphical representation of our attention unit. Each
node represents an attention probability over the utilities’ entities.
To infer the probability we aggregate two types of messages: 1) A
joint factor message, constructed from interactions of entities from
different utilities, e.g., ΨQ,I . 2) A local factor: learned from the
entity representation, e.g., ΨQ, and the self entity interactions, e.g.,
ΨQ,Q. T is the number of history dialog interactions.

also experimented with priors that are updated after we infer
the attention through steps, but we didn’t ﬁnd it to improve
the results in our setup.

Once the attention belief bi(ui) is computed for each
entity representation ˆui ∈ Ui, we obtain the attended vector
of this utility as the average representation. This reduces the
utility representation to a single vector, which is dependent
on the other utilities via the belief bi(ui):

ai = Xui∈{1,...,ni}

7/8

bi(ui) · ˆui.

Note that ai is the attended representation of utility Ui.

4. Visual Dialog

We use visual dialog to demonstrate the generality of the
discussed attention mechanism because many utilities are
available. A general overview of the approach is illustrated in
Fig. 2. We detail next how the general factor graph attention
model is applied to visual dialog by describing (1) the utility
embeddings, (2) the attention module, and (3) the fusion of
attended representations for prediction.

4.1. Utilities and Embeddings

In the following, we describe the embeddings of the im-

age and textual utilities.
Image utility: To represent the image regions, we use a
conv net, pre-trained on ImageNet [12]. Taking the output
of the last convolutional layer we obtain a representation of

2042

7 × 7 × 512. Speciﬁcally, 7 × 7 is the spatial dimension
of the convolutional layer and 512 is the number of chan-
nels/features of the representation. Following our notation
in Sec. 3, the visual utility Ui has dimensions ni = 49 and
di = 512. To ﬁne-tune this representation to our task, we
feed it into another convolutional layer, with a 1 × 1 kernel,
followed by a ReLU activation and a dropout.
Textual utilities: Our textual utilities are the caption, the
question, the possible answers and the history interactions.
For each textual utility Ui we embed up to ni words. Sen-
tences with a shorter length are zero padded, while sentences
of longer length are truncated. The embedding starts with a
one-hot encoding representation of the word index, followed
by a linear transformation. The linear transformation embeds
the word index into the Euclidean space. This embedding
is identical for all textual utilities. Intuitively, usage of the
same embedding ensures a better consistency between the
textual utilities and we also found it to improve the results.
Each embedded representation for each textual utility is
fed into an LSTM layer, which yields a representation with
the appropriate embedding dimension. The caption utility
C and the question utility Q are generated by applying a
dedicated LSTM on the respective embedded representation.

using another LSTM model.

using the same LSTM model. We also embed all history

In contrast, we embed all history questions(cid:0)HQt(cid:1)t∈{1,...,T }
answers(cid:0)HAt(cid:1)t∈{1,...,T }

The answer utility subsumes nA possible answers and it
consists of the ﬁnal decision of the model in our visual dialog
system. Our answer utility uses the same LSTM to embed
each of the nA = 100 answers separately, the embedding of
each possible answer is the LSTM hidden state of the last
word in the answer.

4.2. Attention module

of past interactions (cid:0)HQt , HAt(cid:1)t∈{1,...,T }

The attention step infers the importance of each entity in
each utility, using our Factor Graph Attention (see Sec. 3),
and creates an attended representation. In the visual dialog
setting, for each answer generation step we use an image
I, a question Q, an answer A, a caption C, and a history
(see Fig. 3 for
an illustration). In the following we describe the special
treatment of the different entities as well as their respective
priors.
Group utilities and dependency-relaxation: Our factor
graph attention model may have a large number of trainable
parameters, as it grows quadratically with the number of util-
ities. To address this concern, we observe that we can group
, and

some utilities, e.g., the history answers(cid:0)HAt(cid:1)t∈{1,...,T }
the history questions (cid:0)HQt(cid:1)t∈{1,...,T }

. To take advantage
of the dependency between the group of utilities, we share
the factor weights across all the group utilities. For example,
for two utilities Ui1 , Ui2 ∈ HAt we enforce the parame-
ter sharing vi1 = vi2 , Vi1 = Vi2 , Li1 = Li2 , Ri1 = Ri2 ,
Li1,j = Li2,j and Rj,i1 = Rj,i2 . Not only did it contribute
to a reduced memory consumption, but we also observed

this grouping to improve the results. We attribute the im-
provement to better generalization of the factors.

The answer utility Ui encodes each of the possible ni
answers in a di-dimensional vector, using the LSTM hidden
state at the last word. Fig. 1 shows that the attention beliefs
correlate with the correct answer. Note that we didn’t attend
separately to each possible answer. Doing so would have
resulted in increased computational demand and we didn’t
ﬁnd improved model performance. We conjecture that due
the fact that the number of words within an answer is usually
small, a complete attention model on each and every word
of the answer does not seem to be necessary.
Priors: The prior potentials for the question and caption
utilities are important in practice. For both utilities we set
the prior to emphasize the last word by focusing the energy
onto the last hidden state index. We use a one hot vector
with the high bit set for the last hidden state index.

4.3. Fusion Step

The fusion step,

the

attended representations ai

outlined in Fig. 2 combines
from all utilities

{I, A, C,(cid:0)HQt , HAt(cid:1)t∈{1,...,T }} to ﬁnd the best an-

swer.
This is performed by creating a probability
distribution p(uA|I, Q, C, A, H) for each answer index
uA ∈ {1, . . . , nA}, where nA = 100 is the number of
possible answers.

(cid:0)HQt , HAt(cid:1)t∈{1,...,T }

We denote by aI ∈ RdI the attended image vector,
aA ∈ RdA the attended answer vector, and aC ∈ RdC
the attended caption vector. We construct the attended his-
tory vector aH ∈ RdI from the attended history utilities
. For this purpose, we start by con-
catenating the attended vector of each history question aQt
with the concurrent history answer aAt , and fuse them us-
ing a linear transformation with a bias term to obtain at,
which is a dt-dimensional vector. We then concatenate
the attended history vectors at for the entire dialog history
t ∈ {1, . . . , T }, which results in an attended history repre-
t=1 dt. We concate-
nate the image, question, caption and history attended repre-
sentations, which yields an attention representation a ∈ RL
of length L = dI + dQ + dC + dA + dH .

sentation aH ∈ RdH . Note that dH =PT

Next, we combine the image, question, caption and his-
tory attended representation a ∈ RL with the nA = 100
possible answers to compute a probability for each an-
swer. Let UA ∈ RnA×dA be the answer utility, with
N = nA = 100 answers, while each answer is embed-
ded in a dA-dimensional space. For each answer, we de-
note by ˆuA ∈ RdA its embedded vector. We concatenate
each answer embedding with the system attention (a, ˆuA)
to obtain a (L + dA)-dimensional vector and feed it into a
multi-layer perception with two layers of size (L + dA)/2
and (L + dA)/4 respectively. Between each layer we per-
form batch normalization followed by a ReLU activation.
We used a dropout layer before the last fully connected layer.
The obtained scores are turned into probabilities, for each

2043

Table 1: Performance of discriminative models on VisDial v0.9.
Higher is better for MRR and recall@k, while lower is better for
mean rank. (*) denotes use of external knowledge.

Model

MRR

R@1 R@5 R@10 Mean

Table 3: Performance of discriminative models on VisDial v1.0 test-
std. Higher is better for MRR and recall@k, while lower is better
for mean rank and NDCG. (*) denotes use of external knowledge.
R@5 R@10 Mean NDCG
Model

MRR R@1

LF [10]
HRE [10]
HREA [10]
MN [10]
HieCoAtt-QI [33]
AMEM [44]
HCIAE-NP-ATT [32]
SF-QIH-se-2 [21]
CorefNMN [27]*
CoAtt-GAN-w/ Rinte-TF [53]
CorefNMN (ResNet-152) [27]*
FGA (Ours)
Ensemble of 9 FGA (Ours)

0.5807 43.82 74.68
0.5846 44.67 74.50
0.5868 44.82 74.81
0.5965 45.55 76.22
0.5788 43.51 74.49
0.6160 47.74 78.04
0.6222 48.48 78.75
0.6242 48.55 78.96
0.636
50.24 79.81
0.6398 50.29 80.71
50.92 80.18
0.641
0.6525 51.43
82.08
0.6892 55.16 86.26

84.07
84.22
84.36
85.37
83.96
86.84
87.59
87.75
88.51
88.81
88.81
89.56
92.95

5.78
5.72
5.66
5.46
5.84
4.99
4.81
4.70
4.53
4.47
4.45
4.35
3.39

Table 2: Performance on the question generation task. Higher is
better for MRR and recall@k, while lower is better for mean rank.

Model
SF-QIH-se-2 [21]
FGA(Ours)

MRR
0.4060
0.4138

R@1
26.76
27.42

R@5 R@10 Mean
9.32
55.17
56.33
9.1

70.39
71.32

answer, using a softmax (·) operation, which yields the pos-
terior probability for each answer p(uA|I, Q, C, A, H). The
approach is trained using maximum likelihood.

5. Results

In the following we evaluate the proposed factor graph
attention (FGA) approach on the Visual dialog dataset, which
we brieﬂy describe ﬁrst. Our code is publicly available1.
Visual Dialog Dataset: We used VisDial v0.9 to train the
model. The dataset consists of approx. 120k images from
COCO [29]. Each image is annotated with a dialog of 10
questions and corresponding answers, for a total of approx.
1.2M dialog question-answer pairs. In the discriminative
setup, each question-answer pair is given 100 plausible possi-
ble answers, the model needs to choose from. We follow [10]
and split the data into 80k images for train, 40k for test and
3k for validation.
Experimental setup: We used a batch size of 64. We set
the word embedding dimension to dE = 128, and the utility
embeddings to dQ = 512 and dC = 128. For each ques-
tion or answer in the history we use dHQ i
= dHA i = 128.
For each possible answer we use da = 512. The lengths
are set equally for all textual utilities nQ = nC = na =
nHQ = nHA = 20. The VisDial history consists of T = 10
questions with their answers. For our image representation
we use the last conv layer of VGG having dimensions of
7 × 7 × 512. After ﬂattening the 2D spatial dimension,
nI = 49. The dropout parameter after the image embedding
is set to 0.5, the dropout parameter before the last fc layer is
set to 0.3.
Training: The total amount of trainable parameters in our
model is 17, 848, 416. We initialized all the weights in the
model using Kaiming normal initialization [17]. To train the
model we used a multi-class cross entropy loss, where each

1https://github.com/idansc/fga

LF [10]
HRE [10]
MN [10]
CorefNMN (ResNet-152) [27]*
NMN (ResNet-152) [20]*
FGA (Ours)
Ensemble of 5 FGA (Ours)

72.45
0.554 40.95
70.45
0.542 39.93
72.30
0.555 40.98
78.10
0.615 47.55
0.588 44.15
76.88
0.637 49.58 80.975
0.673 53.40
85.28

82.83
81.50
83.30
88.80
86.88
88.55
92.70

5.95
6.41
5.92
4.40
4.81
4.51
3.54

0.453
0.455
0.475
0.547
0.581
0.521
0.545

Table 4: Attention-related ablation analysis.

Model

No Attention
No BatchNorm
No Local-Interactions
No Local-Information
No Priors
FGA

MRR

0.6249
0.6301
0.6369
0.6425
0.6451
0.6525

R@1

48.67
49.23
50.17
50.12
50.57
51.43

R@5 R@10 Mean

78.95
79.65
79.92
81.49
81.37
82.08

87.73
88.32
88.33
89.34
89.00
89.56

4.69
4.55
4.55
4.37
4.47
4.35

Table 5: Utility-related ablation analysis.

Model

No Answer Utility
No History Attention
Answers Fine-attention
History No Fine-attention
FGA

MRR

0.6294
0.6449
0.6478
0.6494
0.6525

R@1

49.35
50.74
50.80
51.17
51.43

R@5 R@10 Mean

79.31
81.07
81.86
81.56
82.08

88.10
88.86
89.25
89.13
89.56

4.63
4.48
4.46
4.43
4.35

possible answer represents a class. We used Adam optimizer
with a learning rate of 10−3. We evaluate our performance
on the validation set after each epoch to determine when to
stop our training.

5.1. Quantitative Evaluation

1

1

i=1

ranki

|Q|P|Q|

Evaluation metrics: Evaluating dialog systems, or any
other generative tasks is challenging [30]. We follow [10]
and evaluate each individual response at each of the T = 10
rounds in a multiple-choice setup. The model is hence eval-
uated on retrieval metrics: Recall@k is the percentage of
questions where the human response was part of the top k
predicted answers. Mean rank is the average rank allotted
by a model to the human response, hence a lower score
is desired. Mean Reciprocal Rank (MRR) is deﬁned as
, where ranki is the rank of the human re-
sponse, and Q is the set of all questions. The perfect score,
i.e., MRR = 1 is achieved when the human response is con-
sistently ranked ﬁrst.
Visual question answering comparison: We ﬁrst compare
against a variety of baselines (see Tab. 1). Note that almost
all of the baselines (except LF, HRE and MN and SF-QIH-se-
2) use attention, i.e., attention is an important element in any
model. Note that our model uses the entire set of answers to
predict each answer’s score, i.e., we use p(ui|A, I, Q, C, H)
This is in contrast to SF-QIH-se-2, which doesn’t use atten-
tion and models p(ui| ˆui, I, Q, C, H). Notable as well, the
current state-of-the-art model, CoAtt-GAN [53], used the
largest amount of utilities to attend to, i.e., image, question
and history. Because CoAtt-GAN uses a hierarchical ap-
proach, the ability to further improve the reasoning system
is challenging and manual work. In contrast, our general

2044

are there any other
people besides the 2 ?

are there any animals ?

are any wearing glasses ?

can you see cars ?

are there any buildings ?

is there trees ?

A: yes
GT: yes

A: no
GT: no

A: no
GT: no

A: yes
GT: yes

A: yes
GT: yes

A: yes
GT: yes

how old does the
child appear to be ?
A: 5
GT: 10

what color is the bat ?

A: brown , black 
and white
GT:light brown

are there any other
people in the photo ?
A: no
GT: no

is there any grass visible ? what is the

A: yes
GT: yes

child 's expression ?
A: smile
GT: smile

what is the 
child wearing ?
A: shirt pants
GT: shirt pants

what color is the bus ?

A: black and white 
GT: white with tinted 
windows

are the bikes on the
street or sidewalk ?
A: the bikes are parked
on the side walkway
GT: the bikes are 
parked on the side 
walkway

what is the weather like ?

A: cloudy
GT: it looks sunny and 
warm

are there any 
other vehicles ?
A: no
GT: yes , there are a 
couple cars

can you see storefronts ? are there any street signs ?

A: yes , but i ca n't read 
any of their signs
GT: yes , but i ca n't
read any of their signs

A: yes but too far away 
to read
GT: yes but too far away 
to read

Figure 4: An illustration of question and image attention over a series of interactions for the same dialog. In addition we provide the ground
truth answer, i.e., GT, and our predicted answer, i.e., A.

attention mechanism allows to attend to the entire set of cues
in the dataset, letting the model automatically choose the
more relevant cues. We refer the readers to the appendix
for analysis of utility-importance via importance score. As
can be seen from Tab. 1, this results in a signiﬁcant im-
provement of performance, even when compared to the very
recently published baselines [21, 53, 27]. We also report an
ensemble of 9 models which differ only by the initial seed.
We emphasize that our approach only uses VGG16. Lastly,
some baselines report to use GloVe to initialize the word
embeddings, while we didn’t use any pre-trained embedding
weights.

Our attention model is very efﬁcient to train. Our state-
of-the-art score is achieved after only 4 epochs. Each epoch
takes approximately 2 hours on a standard machine with
an Nvidia Tesla M40 GPU. In contrast, CorefNMN [27],
has 100M parameters and takes 33 hours to train on a Titan
X. Both [32, 53] report that more than 25 epochs 101M
parameters and 50 hours were required for training.

Visual question generation comparison: To assess ques-
tion generation, [21] proposed to predict the next question
given the previous question and answer. Their introduced
question prediction dataset is based on VisDial v0.9, along
with a collected set of 100 question candidates.

We adapted to this task, by changing the input utilities to
the previous interaction (Q + A)t−1 instead of the current
question Qt. Our model also improves previous state-of-the-
art results (see Tab. 2).

Visual Dialog Challenge: Recently, VisDial v1.0 was re-
leased as part of the Visual Dialog challenge, where 123,287

images are used for training, 2,000 images for validation,
and 8,000 images for testing. For the test split each image
consists of only 1 interaction, at some point of time in the
dialog. Furthermore, an additional metric, normalized dis-
counted cumulative gain (NDCG), was introduced. NDCG
uses dense annotations, i.e., the entire set of candidate an-
swers is annotated as true or wrong. The metric penalizes
low ranking correct answers, addressing issues when the set
of answers contains more than one plausible result.

Our submission to the challenge signiﬁcantly improved
all metrics except for NDCG. We report our results in Tab. 3
on test-std, a 4,000 image split, the other 4,000 image split
was preserved for the challenge. While the challenge did
allow use of any external resources to improve the model, we
only changed our approach to use an ensemble of 5 trained
Factor Graph Attention models which were initialized ran-
domly. All other top teams used external data in form of
detection features on top of ResNet-152, inspired by Top-
Bottom attention [2]. These features are expensive to extract,
and use external detector information.

Our model used only the single ground truth answer to
train. Therefore it is expected that our model isn’t optimized
w.r.t. the NDCG metric. However, given the small subset of
densely annotated samples (2,000 out of the 123,287 train
images), it is hard to carefully analyze this result.

Ablation Study: We asses (1) design choices of our factor
graph attention; and (2) utility ablation focusing on history
and answer cues as they are a unique aspect of our work.
(1) In Tab. 4 we see that FGA improves the MRR of a
model without attention by 3% (0.6249 vs. 0.6653). This

2045

Figure 5: Illustration of history attention for 2 interactions. We
observe small nuances of history to be useful to answer questions,
and improve co-reference resolution.

ablation study shows that attention is crucial for VisDial.
Removing local-information drops MRR to 0.6425. When
omitting local-interactions, i.e., a score based on interactions
of embedding representations of a utility, the MRR drops
to 0.6369. BatchNorm over pairwise interactions is crucial.
Without BatchNorm MRR drops to 0.6301. Removing prior
information, e.g., a high prior potential for the last word
in the question is less crucial, dropping MRR to 0.6451.
(2) Our history attention attends separately to questions and
answers in the history. In contrast, classical methods [52, 44]
attend over history locations only. Based on Tab. 5, we note
that our ﬁne-grained history attention improves MRR from
0.6494 to 0.6525. Without the answers utility, performance
on MRR drops signiﬁcantly from 0.6525 to 0.6294. If we
attend to each word in the answers separately, i.e., ‘Answers
Fine-Attention,’ performance drops to 0.6478.
Other Datasets: When we replace the attention unit of other
methods with our FGA unit we observe improvements in
visual question answering (VQA) and audio-visual scene
aware dialog (AVSD) [5, 1]. For VQA v1.0 we increase
validation set accuracy from 57.0 to 57.3 (no tuning) by
replacing the alternating and parallel attention [33]. For
AVSD, we improve Hori et al. [19] which report a CIDEr
score of 0.733 to 0.806. We used FGA to attend to all video
cues as well as the question. This differs from Hori et al.
who mix the question representation with video-related cues
(e.g., I3D features, optical ﬂow and audio features), and
aggregate them to generate attention. Other components
remain the same. Our ﬂexible framework is instrumental for
this improvement.

5.2. Qualitative Evaluation

Attention is an important tool not only because it boosts
performance, but also because it yields a weak form of in-
terpretability. By illustrating the attention beliefs, we can
observe the reasoning process of the model. In Fig. 4 we
provide co-attention of image and question. The ﬁrst row
shows dialogs with yes/no questions. We observe the ques-
tion attention to focus on the indicative word, e.g., people,
animals, buildings, cars, etc., while the image attention per-
forms detection and attends to the relevant area of the image.
For the second row, again we observe plausible attention
behavior. An interesting failure-case: when asked about the
color of the bat, the ground-truth answer was “light brown,”

Figure 6: Illustration of 2 step interaction using visual question
generation and illustration of the involved modalities. The classiﬁer
receives the previous question and answer, to predict a new one.

while our model answered “brown, black and white” instead.
A possible explanation is related to the fact that the image
is in black and white. The last line shows that question-
answering type of task is always debatable. For the question
“what is the weather like?” the model answered “cloudy,”
while the ground truth is “it looks sunny and warm.” While
it does look sunny, the model attends to clouds and the model
answer likely isn’t entirely wrong.

Next, in Fig. 5, we show how attention is useful when
applied over each question in the history. In the ﬁrst row, for
the question “is this at a skateboarder park?”, the skateboard
related terms in the history are given more weight. Another
use case of attention is co-reference resolution. We highlight
those results in the second row: the word “they” in the second
question refers to people in the background, which remain
the focus of the attention model.

Lastly, in Fig. 6, we evaluate question generation and let
the model interact with the answer predictor. We show how
complete dialogs can be generated in a discriminative man-
ner. We ﬁrst observe that attention for question generation
is noisier. This seems intuitive because asking a question
requires a broader focus than answering. Nonetheless, visual
input is important. For the second row second image, “at
what angle is the man sitting?” the model attends mostly
to the man, and for the question “is it a laptop or desktop?”
image attention focuses on the laptop. Also, in both cases the
caption attention is useful. For instance, in the ﬁrst row, the
word “tie” is picked to generate two relevant questions. This
nicely illustrates how the proposed model adapts to tasks,
when the importance of different data cues changes.

6. Conclusion

We developed a general factor graph based attention
mechanism which can operate on any number of utilities.
We showed applicability of the proposed attention mecha-
nism on the recently introduced visual dialog dataset and
outperformed existing baselines by 1.1% on MRR.
Acknowledgments: This work is supported in part by NSF
under Grant No. 1718221, Samsung, and 3M.

2046

Q: how old is the skateboarder ?A: teensQ: what is the skateboarder 's gender ?A: maleQ: what is the skateboarder wearing ?A: tee shirt and jeans ,hat and glasses and sneakersQ:what is the skateboarder wearing ?Q:are the people watchingon chairs or the floor ?Q:can you see what game he is playing ?A:noQ:how many people are watching ?A:about 4Q:are the people watching on chairsor the floor ?A:on sofasQ:can you see what game he is playing?A:noQ:how many people are watching ?A:about 4Q:are they eating ?Q: how old is the skateboarder ?A: teensQ: what is the skateboarder 's gender ?A: maleQ:is this at a skateboard park ?Q:+Given:Predicted:is there any design on her tie ?what color is her tie ?A: purpleC: a woman in a tie and blue hair .H:Q: how old isthe woman ?A: less than 60Question optionsC: a woman in a tie and blue hair .Q: how old is the woman ?A: less than 60+Given:Predicted:what color is her tie ?Question optionsQ:+Given:Predicted:is it a laptop or desktop ?at what angle is the man sitting ?A: leaning over slightlyC: a man sitting at a desk on a laptop computer H:Q: can you see the ceiling ?A: noC: a man sitting at a desk on a laptop computer Q: can you see the ceiling ? A: no+Given:Predicted:at what angle is the man sitting ?Question optionsQuestion optionsReferences

[1] H. Alamri, V Cartillier, A. Das, J. Wang, J. Essa, D. Batra, D.
Parikh, A. Cherian, T. K. Marks, and C. Hori. Audio visual
scene-aware dialog (avsd) challenge at dstc7. arXiv preprint
arXiv:1806.00525, 2018. 8

[2] P. Anderson, X. He, C. Buehler, D. Teney, M. Johnson, S.
Gould, and L. Zhang. Bottom-up and top-down attention for
image captioning and visual question answering. In CVPR,
2018. 7

[3] J. Andreas, M. Rohrbach, T. Darrell, and D. Klein. Deep com-
positional question answering with neural module networks.
In CVPR, 2016. 2

[4] J. Aneja, A. Deshpande, and A. G. Schwing. Convolutional

Image Captioning. In Proc. CVPR, 2018. 2

[5] S. Antol, A. Agrawal, J. Lu, M. Mitchell, D. Batra, C. L.
Zitnick, and D. Parikh. VQA: Visual question answering. In
ICCV, 2015. 1, 2, 8

[6] H. Ben-Younes, R. Cadene, M. Cord, and N. Thome. Mutan:
Multimodal tucker fusion for visual question answering. In
ICCV, 2017. 2

[7] M. Chatterjee and A. G. Schwing. Diverse and Coherent
Paragraph Generation from Images. In Proc. ECCV, 2018. 2
[8] K. Clark and C. Manning. Deep reinforcement learning
for mention-ranking coreference models. arXiv preprint
arXiv:1609.08667, 2016. 2

[9] A. Das, H. Agrawal, C. L. Zitnick, D. Parikh, and D. Batra.
Human attention in visual question answering: Do humans
and deep networks look at the same regions? In EMNLP,
2016. 2

[10] A. Das, S. Kottur, K. Gupta, A. Singh, D. Yadav, J. M. Moura,
D. Parikh, and D. Batra. Visual Dialog. In CVPR, 2017. 1, 2,
6

[11] H. De Vries, F. Strub, S. Chandar, O. Pietquin, H. Larochelle,
and A. Courville. Guesswhat?! visual object discovery
through multi-modal dialogue. In CVPR, 2017. 2

[12] J. Deng, W. Dong, R. Socher, L.-J. Li, K. Li, and L. Fei-Fei.
ImageNet: A Large-Scale Hierarchical Image Database. In
CVPR, 2009. 4
[13] A. Deshpande,

and D. A. Forsyth.
age Captioning with Part-of-Speech Guidance.
https://arxiv.org/abs/1805.12589, 2018. 2

J. Aneja, L. Wang, A. G. Schwing,
Diverse and Controllable Im-
In

[14] A. Fukui, D. H. Park, D. Yang, A. Rohrbach, T. Darrell, and
M. Rohrbach. Multimodal compact bilinear pooling for visual
question answering and visual grounding. In EMNLP, 2016.
2

[15] H. Gao, J. Mao, J. Zhou, Z. Huang, L. Wang, and W. Xu.
Are you talking to a machine? Dataset and Methods for
Multilingual Image Question Answering. In NIPS, 2015. 2

[16] D. Geman, S. Geman, N. Hallonquist, and L. Younes. Visual
turing test for computer vision systems. Proceedings of the
National Academy of Sciences, 2015. 2

[17] K. He, X. Zhang, S. Ren, and J. Sun. Delving deep into
rectiﬁers: Surpassing human-level performance on imagenet
classiﬁcation. In CVPR, 2015. 6

[18] S. Hochreiter and J. Schmidhuber. Long short-term memory.

Neural Computation, 1997. 1

[19] C. Hori, H. Alamri, J. Wang, G. Winchern, T. Hori, A.
Cherian, T.K. Marks, V. Cartillier, R.G. Lopes, A. Das, I.

Essa, D. Batra, and D. Parikh. End-to-end audio visual scene-
aware dialog using multimodal attention-based video features.
arXiv, 2018. 8

[20] R. Hu, J. Andreas, M. Rohrbach, T. Darrell, and K. Saenko.
Learning to reason: End-to-end module networks for visual
question answering. CoRR, abs/1704.05526, 2017. 2, 6

[21] U. Jain, S. Lazebnik, and A. G. Schwing. Two can play this
game: Visual dialog with discriminative question generation
and answering. CVPR, 2018. 2, 3, 6, 7

[22] U. Jain∗, Z. Zhang∗, and A. G. Schwing. Creativity: Gener-
ating Diverse Questions using Variational Autoencoders. In
CVPR, 2017. ∗ equal contribution. 2

[23] J. Johnson, B. Hariharan, L. van der Maaten, L. Fei-Fei, C. L.
Zitnick, and R. Girshick. Clevr: A diagnostic dataset for
compositional language and elementary visual reasoning. In
CVPR, 2017. 2

[24] A. Karpathy and L. Fei-Fei. Deep visual-semantic alignments

for generating image descriptions. In CVPR, 2015. 2

[25] J. Kim, K. On, W. Lim, J. Kim, J. Ha, and B. Zhang.
Hadamard product for low-rank bilinear pooling. ICLR, 2016.
2

[26] Y. Kim, C. Denton, L. Hoang, and A. M. Rush. Structured
attention networks. arXiv preprint arXiv:1702.00887, 2017.
2, 3

[27] S. Kottur, J. Moura, D. Parikh, D. Batra, and M. Rohrbach.
Visual coreference resolution in visual dialog using neural
module networks. In ECCV, 2018. 2, 6, 7

[28] Y. Li, N. Duan, B. Zhou, X. Chu, W. Ouyang, X. Wang, and
M. Zhou. Visual Question Generation as Dual Task of Visual
Question Answering. In https://arxiv.org/abs/1709.07192,
2017. 2

[29] T.Y. Lin, M. Maire, S. Belongie, J. Hays, P. Perona, D. Ra-
manan, P. Doll´ar, and C.L. Zitnick. Microsoft coco: Common
objects in context. In ECCV, 2014. 1, 6

[30] C.W. Liu, R. Lowe, I.V. Serban, M. Noseworthy, L. Charlin,
and J. Pineau. How not to evaluate your dialogue system:
An empirical study of unsupervised evaluation metrics for
dialogue response generation. In EMNLP, 2016. 6

[31] S. Loffe and C. Szegedy. Batch normalization: Accelerating
deep network training by reducing internal covariate shift. In
ICML, 2015. 4

[32] J. Lu, A. Kannan, J. Yang, D. Parikh, and D. Batra. Best
of both worlds: Transferring knowledge from discriminative
learning to a generative visual dialog model. In NIPS, 2017.
1, 2, 6, 7

[33] J. Lu, J. Yang, D. Batra, and D. Parikh. Hierarchical question-
image co-attention for visual question answering. In NIPS,
2016. 1, 2, 6, 8

[34] M. Malinowski and M. Fritz. A Multi-World Approach to
Question Answering about Real-World Scenes based on Un-
certain Input. In NIPS, 2014. 2

[35] M. Malinowski, M. Rohrbach, and M. Fritz. Ask your neu-
rons: A neural-based approach to answering questions about
images. In ICCV, 2015. 2

[36] J. Mao, W. Xu, Y. Yang, J. Wang, Z. Huang, and A. Yuille.
Deep Captioning with Multimodal Recurrent Neural Net-
works (m-rnn). In ICLR, 2015. 2

[37] N. Mostafazadeh, C. Brockett, B. Dolan, M. Galley, J. Gao,
G. P. Spithourakis, and L. Vanderwende. Image-grounded
conversations: Multimodal context for and response genera-
tion. arXiv preprint arXiv:1701.08251, 2017. 2

2047

[58] C. Zhu, Y. Zhao, S. Huang, K. Tu, and Y. Ma. Structured

attentions for visual question answering. In ICCV, 2017. 2

[59] Y. Zhu, O. Groth, M. Bernstein, and L. Fei-Fei. Visual7W:
Grounded Question Answering in Images. In CVPR, 2016. 2

[38] N. Mostafazadeh, I. Misra, J. Devlin, M. Mitchell, X. He,
and L. Vanderwende. Generating natural questions about an
image. In ACL, 2016. 2

[39] M. Narasimhan, S. Lazebnik, and A. G. Schwing. Out of the
Box: Reasoning with Graph Convolution Nets for Factual
Visual Question Answering. In Proc. NIPS, 2018. 2

[40] M. Narasimhan and A. G. Schwing. Straight to the Facts:
Learning Knowledge Base Retrieval for Factual Visual Ques-
tion Answering. In Proc. ECCV, 2018. 2

[41] M. Ren, R. Kiros, and R. Zemel. Exploring models and data

for image question answering. In NIPS, 2015. 2

[42] I. Schwartz, A. G. Schwing, and T. Hazan. High-Order Atten-
tion Models for Visual Question Answering. In Proc. NIPS,
2017. 2

[43] I. Schwartz, A. G. Schwing, and T. Hazan. A Simple Baseline
for Audio-Visual Scene-Aware Dialog. In Proc. CVPR, 2019.
2

[44] P. H. Seo, A. Lehrmann, B. Han, and L. Sigal. Visual refer-
ence resolution using attention memory for visual dialog. In
NIPS, 2017. 2, 6, 8

[45] I. V. Serban, A. Sordoni, R. Lowe, L. Charlin, J. Pineau,
A. Courville, and Y. Bengio. A hierarchical latent variable
encoder-decoder model for generating dialogues. In AAAI,
2017. 1, 2

[46] K. J. Shih, S. Singh, and D. Hoiem. Where to look: Focus

regions for visual question answering. In CVPR, 2016. 2

[47] K. Simonyan and A. Zisserman. Very deep convolutional
networks for large-scale image recognition. In ICLR, 2015. 2
[48] P. Veliˇckovi´c, G. Cucurull, A. Casanova, A. Romero, P. Li`o,
and Y. Bengio. Graph attention networks. arXiv preprint
arXiv:1710.10903, 2017. 3

[49] A. K. Vijayakumar, M. Cogswell, R. R. Selvaraju, Q. Sun,
S. Lee, D. Crandall, and D. Batra. Diverse Beam Search:
Decoding Diverse Solutions from Neural Sequence Models.
In AAAI, 2018. 2

[50] L. Wang, A. G. Schwing, and S. Lazebnik. Diverse and Ac-
curate Image Description Using a Variational Auto-Encoder
with an Additive Gaussian Encoding Space. In Proc. NIPS,
2017. 2

[51] J. Weston, S. Chopra, and A. Bordes. Memory networks. In

NIPS, 2014. 1, 2

[52] Q. Wu, C. Shen, A. van den Hengel, P. Wang, and A. Dick.
Image captioning and visual question answering based on
attributes and their related external knowledge.
In arXiv
1603.02814, 2016. 8

[53] Q. Wu, P. Wang, C. Shen, I. Reid, and A. van den Hengel. Are
you talking to me? reasoned visual dialog generation through
adversarial learning. arXiv preprint arXiv:1711.07613, 2017.
2, 6, 7

[54] C. Xiong, S. Merity, and R. Socher. Dynamic memory net-
works for visual and textual question answering. In ICML,
2016. 2

[55] H. Xu and K. Saenko. Ask, attend and answer: Exploring
question-guided spatial attention for visual question answer-
ing. In ECCV, 2016. 2

[56] K. Xu, J. Ba, R. Kiros, K. Cho, A. Courville, R. Salakhudinov,
R. Zemel, and Y. Bengio. Show, attend and tell: Neural image
caption generation with visual attention. In ICML, 2015. 2

[57] Z. Yang, X. He, J. Gao, L. Deng, and A. Smola. Stacked
attention networks for image question answering. In CVPR,
2016. 2

2048

