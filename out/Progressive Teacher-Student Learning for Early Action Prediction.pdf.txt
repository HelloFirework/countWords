Progressive Teacher-student Learning for Early Action Prediction

Xionghui Wang1 , Jian-Fang Hu1

,

3 ∗ , Jianhuang Lai1

,

3 , Jianguo Zhang2 , and Wei-Shi Zheng1

4

,

1

Sun Yat-sen University, China; 2University of Dundee, United Kingdom

3Guangdong Province Key Laboratory of Information Security Technology, China

4Key Laboratory of Machine Intelligence and Advanced Computing, Ministry of Education, China

wxiongh@mail2.sysu.edu.cn, hujf5@mail.sysu.edu.cn, stsljh@mail.sysu.edu.cn,

j.n.zhang@dundee.ac.uk, wszheng@ieee.org

Abstract

Observed

Unobserved

The goal of early action prediction is to recognize ac-
tions from partially observed videos with incomplete action
executions, which is quite different from action recognition.
Predicting early actions is very challenging since the par-
tially observed videos do not contain enough action infor-
mation for recognition.
In this paper, we aim at improv-
ing early action prediction by proposing a novel teacher-
student learning framework. Our framework involves a
teacher model for recognizing actions from full videos,
a student model for predicting early actions from partial
videos, and a teacher-student learning block for distilling
progressive knowledge from teacher to student, crossing d-
ifferent tasks. Extensive experiments on three public action
datasets show that the proposed progressive teacher-student
learning framework can consistently improve performance
of early action prediction model. We have also reported the
state-of-the-art performances for early action prediction on
all of these sets.

1. Introduction

Early action prediction,

i.e., predicting the label of
actions before they are fully executed,
is one of the
most fundamental tasks in video analysis with many real-
world applications in surveillance, self driving, and human-
computer interaction etc. Different from the traditional ac-
tion recognition task that intends to recognize actions from
full videos, early action prediction aims to predict the label
of actions from partially observed videos with incomplete
action executions.

As shown in Figure 1, recognizing actions from partial
videos is very challenging, especially when the depicted ac-
tions are performed at very early stages (e.g., when 10% of

∗Corresponding author

Learned feature

Raw feature

Partial video

Drinking:0.34
Eating:0.27

Knowledge 
Distillation

Drinking:0.57(cid:1371)
Eating:0.16 (cid:1373)

Full feature

ll f

Drinking:0.85
Eating:0.06

Full video

Figure 1: Schematic diagram showing our motivation of
proposing distilling knowledge from action recognition sys-
tem for early action prediction.

an action is executed). However, the recognition would be-
come much easier if the actions are fully executed and ob-
served [16, 24]. Videos with different observation ratios of-
ten contain different degree of action context. How to mine
as much action knowledge as possible from these partially
or fully observed videos for prediction is one of the major
challenges in the community.

Many works have been proposed to exploit the partially
and fully observed videos for early action prediction. For
instance, Kong et.al. [21] assume that the prediction conﬁ-
dences are monotonically increasing as more video frames
are observed. Hu et.al. [16] intends to learn a soft label
for the video of each progress level so that the full and
partial videos can be learned in a uniﬁed regression frame-
work. More recently, Kong et.al. [24] learns a reconstruc-
tion map from all partially observed videos to full videos.
These works mainly develop a joint learning framework to
learn early action predictor from partial and full videos, they
do not seek to distill some disriminative action knowledge
from the full videos to improve the early action prediction
with partial videos. As illustrated in Figure 1, the action

3556

knowledge gained from full videos can be used to drive the
early action prediction with partial videos.

In this paper, we formulate a novel knowledge distilla-
tion framework for early action prediction. Our framework
involves a teacher model for recognizing actions from ful-
l videos, a student model for predicting early actions from
partial videos, and a teacher-student learning block for dis-
tilling knowledge from teacher to student. To the best of
our knowledge, we are the ﬁrst to explicitly formulate a
teacher-student learning framework for early action predic-
tion, particularly for casting it as a problem of progres-
sive knowledge distillation across different tasks, with both
mean square error (MSE) and maximum mean discrepancy
(MMD) loss considered in an uniﬁed framework to distill
local progress-wise and global distribution knowledge, re-
spectively. The experimental results show that the proposed
progressive teacher-student learning framework is beneﬁ-
cial for early prediction of actions, especially when the ac-
tions are performed at very early stages.

In summary, the main contributions of this work are
three-fold: 1) a novel teacher-student learning framework
for distilling progressive action knowledge from action
recognition model (teacher) to early action prediction mod-
el (student), across different tasks; 2) based on the pro-
posed teacher-student learning, an early action prediction
system integrating the early action prediction task with ac-
tion recognition in the spirit of knowledge distillation; and
3) extensive experimental analysis on early action predic-
tion with RGB-D and RGB videos on three datasets, show-
ing that our early action prediction system achieves state-
of-the-art performances and the proposed teacher-student
learning framework can efﬁciently improve the prediction
performance by knowledge distillation.

2. Related Work

Action recognition. Action recognition has been widely
studied in the community. The existing methods are main-
ly developed for extracting some discriminative action fea-
tures from videos with complete action executions. Some
representative handcrafted features like Cuboids [7] [44]
[6], interest point clouds [4], 3DHOG [20], SIFT [33], and
dense trajectory [41] etc. are developed for characteriz-
ing the spatio-temporal motion information, which is crit-
ical for describing human actions. Recently, with the rise
of deep learning, many deep learning based methods, in-
cluding 3D CNN [39] [5] [12] [40] [13] and two stream
CNN [36] [8] [46] etc., are proposed to encode the spatio-
temporal information and achieve satisfactory recognition
results in many datasets, including UCF-101 [37] and Ki-
neticts [5] datasets. Besides these advances for recogniz-
ing actions from RGB videos, action recognition with depth
camera has also made some encouraging progress in these
years. Some researchers found that combining the multi-

modality features extracted from RGB, depth and skeleton
sequences can capture more useful action information and
obtain a better recognition performance [45] [17] [35] [31].
However, these action recognition approaches are speciﬁ-
cally developed for the after-the-fact prediction of human
action (i.e. when actions are entirely observed), and they
didn’t seek to build models for predicting early actions at
different progress levels, which in particular requires mod-
eling the intrinsic expressive power of partial videos.

Early action prediction. Different from action recogni-
tion, where actions are assumed to be fully executed and ob-
served, early action prediction aims to recognize actions be-
fore they are completely executed [32, 25, 23, 24, 2, 16, 22].
Actions at early stage are very difﬁcult to be recognized
due to the lacking of sufﬁcient information. Ryoo [32] in-
tended to recognize ongoing actions by observing some ev-
idences from the features accumulated over time. Lan et
al. [25] employed a max-margin framework to predict ac-
tions from a hierarchical feature representation. Kong et
al. [23] developed a structured SVM formulation to capture
[16]
the temporal evolution of human actions. Hu et al.
proposed a soft regression framework to learn a robust ac-
tion predictor from both the partial videos and full videos.
Aliakbarian et al. [2] introduced a multi-stage LSTM archi-
tecture to model context-aware and action-aware informa-
tion. Recently, Kong et al. [24] proposed a deep sequential
context networks (DeepSCN), with an aim to reconstruct
the features of full videos from those extracted from partial
videos. None of these works are proposed to exploit the
action recognition task for early action prediction, which
could discover some informative action knowledge for ear-
ly action prediction. With that in mind, we develop a nov-
el teacher-student learning framework to distill knowledge
from an action recognition model, for the purpose of im-
proving early action prediction.

Knowledge distillation. Recent studies show that the
knowledge learned by a teacher network can be used to im-
prove the performance of student network [14, 27, 1, 43].
In the literature, teacher network often refers to a heavi-
ly, cumbersome model and student network refers a simple,
lightweight model. Both the teacher and student network-
s are oriented for addressing the same task. For example,
Romero et al. [1] proposed to minimize the MSE between
the outputs of teacher and student models. Yim et al. [42]
used a Gram matrix loss to distill knowledge for improving
image classiﬁcation. Li el at. [27] showed that minimizing
Gram matrix loss in neural style transfer [9] is equivalent
to minimize the MMD loss [11]. These works are main-
ly developed for distilling knowledge in static images and
within the same task.
In contrast, we aim to transfer the
sequential knowledge gained in recognition model, to im-
prove our prediction performance. Thus, our method seeks
to transfer knowledge across different video analysis tasks.

3557

(cid:38)(cid:49)(cid:49)

(cid:346)

(cid:348)

(cid:347)

(cid:349)

(cid:55)(cid:72)(cid:68)(cid:70)(cid:75)(cid:72)(cid:85)(cid:3)(cid:49)(cid:72)(cid:87)(cid:90)(cid:82)(cid:85)(cid:78)

(cid:54)(cid:87)(cid:88)(cid:71)(cid:72)(cid:81)(cid:87)(cid:3)(cid:49)(cid:72)(cid:87)(cid:90)(cid:82)(cid:85)(cid:78)
(cid:346)

(cid:347)

(cid:348)

(cid:349)

(cid:38)(cid:49)(cid:49)

(cid:41)(cid:72)(cid:68)(cid:87)(cid:88)(cid:85)(cid:72)(cid:3)(cid:72)(cid:91)(cid:87)(cid:85)(cid:68)(cid:70)(cid:87)(cid:76)(cid:82)(cid:81)

(cid:48)(cid:54)(cid:40)

(cid:2206)(cid:2778)
(cid:2190)(cid:2778)(cid:2176)
(cid:2190)(cid:2778)(cid:2175)
(cid:2206)(cid:2778)

(cid:37)(cid:76)(cid:47)(cid:54)(cid:55)(cid:48)

(cid:1710)
(cid:2206)(cid:2779)
(cid:1710)
(cid:2190)(cid:2779)(cid:2176)
(cid:1710)
(cid:2190)(cid:2779)(cid:2175)
(cid:1710)
(cid:2206)(cid:2779)

(cid:48)(cid:54)(cid:40)

(cid:47)(cid:54)(cid:55)(cid:48)

(cid:47)(cid:82)(cid:70)(cid:68)(cid:79)(cid:3)(cid:46)(cid:39)

(cid:48)(cid:54)(cid:40)

(cid:2206)(cid:2170)
(cid:2190)(cid:2170)(cid:2176)
(cid:2190)(cid:2170)(cid:2175)
(cid:2206)(cid:2170)

(cid:53)(cid:72)(cid:70)(cid:82)(cid:74)(cid:81)(cid:76)(cid:87)(cid:76)(cid:82)(cid:81)

(cid:54)(cid:82)(cid:73)(cid:87)(cid:80)(cid:68)(cid:91)

(cid:41)(cid:38)

(cid:2176)(cid:2175)

(cid:48)(cid:48)(cid:39)

(cid:41)(cid:38)

(cid:54)(cid:82)(cid:73)(cid:87)(cid:80)(cid:68)(cid:91)

(cid:51)(cid:85)(cid:72)(cid:71)(cid:76)(cid:70)(cid:87)(cid:76)(cid:82)(cid:81)

(cid:42)(cid:79)(cid:82)(cid:69)(cid:68)(cid:79)(cid:3)(cid:46)(cid:39)

Figure 2: The overall framework of our progressive teacher-student learning for early action prediction.

3. Our Approach

We tackle the same problem as in [16, 24, 22], i.e., to
learn a common early action predictor for predicting early
actions. Following the existing setting in [16, 24, 21, 32, 25,
26], we assume that each training video contains complete
action execution and uniformly partition it into N shorter
segments. The ﬁrst n segments (n = 1, 2, ..., N ) form a
partial video with a progress level of n, whose observation
ratio is deﬁned as n/N . Let’s denote xn as the feature ex-
tracted from the partial video of progress level n.

In this work, we focus on developing a teacher-student
learning framework to improve an early action prediction
model (referred as student) with the assistance of an action
recognition model (referred as teacher). In the following,
we ﬁrst describe our teacher and student models and then
show how to distill useful knowledge from the teacher mod-
el to improve our student model.

3.1. Teacher and Student Networks

Student model. Hu et. al.
[16] observed that explicit-
ly learning the temporal dependencies among the videos of
different progress levels is beneﬁcial for early action pre-
diction. Here, we follow this observation and employ a s-
tandard 1-layer long short-term memory (LSTM) [15] ar-
chitecture as our student prediction model to predict early
actions at any progress level.
Teacher model. Here, we specify our teacher model by
a 1-layer bidirectional LSTM (BiLSTM) [10] architecture,
which has been widely used for addressing the video recog-
nition problem. We use the BiLSTM model as our teacher
model for two aspects. First, it can provide a latent feature
representation for the videos of any progress level, which is
consistent with the student model. Second, since the BiL-
STM has a forward LSTM and a backward LSTM layer,
which can receive information from the historical frames
and future frames, respectively, the latent features obtained

by BiLSTM often contain more discriminative action infor-
mation than those obtained by the student LSTM model,
especially for the actions at very early stages. However, the
BiLSTM model is not applicable for early action prediction,
as the frames after the current observation is often unreach-
able in practice. Even though, we demonstrate that it could
still be used for early action prediction. In particular, it can
be treated as a teacher model to guide our student learning.
To this end, we propose a teacher-student learning method
to make use of the rich latent features obtained by the teach-
er model for improving our early action prediction.

3.2. Progressive Teacher student Learning

With the teacher model described previously, our goal is
to distill some useful knowledge from the teacher model to
facilitate the student prediction model learning. Here, we
achieve the knowledge distillation by developing a teacher-
student learning block, which would link the progress-wise
latent feature representations obtained by the teacher net-
work and student network, as illustrated in Figure 2.
In
the following, we describe our formulation for the teacher-
student learning block in detail.
Teacher-student learning block. Let us denote the latent
feature representations of the teacher and student networks
over all the progress levels for the i−th video sample by Si
and Ti, respectively. Here, Si and Ti are two D × N -sized
matrices. D indicates the feature dimension and N is the
total number of progress levels used for early action predic-
tion. Then, our knowledge distillation can be achieved by
minimizing

L =

1
I

I

X

i=1

(LC(Si, yi) + LT S(Si, Ti))

(1)

where LT S indicates the knowledge distillation (KD) loss
and LC is the prediction loss of the student model. yi indi-
cates the ground truth action label for the i-th video sample.

3558

KD Loss LT S(Si, Ti). We deﬁne the KD loss as αLM SE +
βLMM D, where LM SE is used to distill knowledge in a
progress-wise manner by computing the mean square error
(MSE) between the latent features of teacher and student
models. Thus, it can capture some local action knowledge
with respect to the videos at each individual progress level
for distillation. The loss LMM D is employed to measure the
maximum mean discrepancy (MMD) between the teacher
recognition model (with full videos) and the early action
prediction model (with partial videos). Minimizing LMM D
can distill knowledge for the videos of all the progress levels
from a global distribution perspective.

We formulated LM SE as kSi ⊙ w − Ti ⊙ wk2

F . w is
a weight vector indicating the contribution of MSE losses
with respect to the videos of each individual progress level.
⊙ is an element-wise multiplication operator, multiplying
each column of Si with the corresponding element of w.
Minimizing LM SE is to decrease the discrepancy between
the knowledge gained by the teacher and student models for
the videos of each individual progress level.

In contrast, MMD is widely used to measure the distance
between two distributions [11]. Here, the loss LMM D is
employed to control the global distribution discrepancy for
the videos of all the progress levels. Our MMD loss can be
deﬁned as

LMM D(Si, Ti) = k

1
N

N

X

n=1

φ(Si(:, n))−

1
N

N

X

n=1

φ(Ti(:, n))k2

2

(2)
φ is a function mapping the latent feature representation to
Reproducing Kernel Hilbert Space (RKHS), which corre-
sponds to a kernel function k(x, y) =< φ(x), φ(y) >. We
follow the suggestions in [27] and set it as a speciﬁc second
order polynomial kernel function k(x, y) = (x⊤y)2. Then
the MMD loss can be equivalently rewritten as:

LMM D(Si, Ti) = kGS i − GT i k2

F

Here, GSi and GTi are Gram matrices:

GSi = SiS⊤

i , GTi = TiT ⊤

i

(3)

(4)

where G∗ ∈ RD×D, (·)⊤ stands for matrix transposition.
Note that the representations Si and Ti are l2 normalized at
each progress level to avoid signiﬁcant discrepancy.

Overall, the KD Loss can be expressed as

LT S(Si, Ti) = αkSi ⊙ w − Ti ⊙ wk2
i k2

i − TiT ⊤

+βkSiS⊤

F

F

(5)

where α and β are used to control the impact of MSE loss
and MMD loss respectively when combined with the pre-
diction loss in Eq. (1).
Prediction loss. As for prediction, we treat the early action
prediction as a problem of recognizing actions from ongo-
ing videos (partial or full) with unknown progress levels.

For simpliﬁcation, we directly feed the latent feature repre-
sentation of student LSTM model into a FC layer (with a
parameter WF ) to conduct prediction. Note that the clas-
siﬁer weight WF is shared for all the videos of different
progress levels. Then our prediction loss can be deﬁned as:

LC(Si, yi) =

N

X

n=1

l(pn

i , yi)

(6)

Here, l(pn
i , yi) is the standard cross-entropy loss between
prediction results pn
i and the ground truth action label yi at
the progress level n, where pn
i = sof tmax(WF Si(:, n)).
Model learning.
In our teacher-student learning frame-
work, the teacher model is assumed to be previously pre-
pared, which means that it is trained from the training data
and then ﬁxed for learning the student model1. Similar to
other teacher-student learning framework [1], we also em-
ploy a two-stage optimization method to obtain a robust es-
timation for the student model. At the ﬁrst stage, we directly
minimize the KD loss over the LSTM parameters (without
FC layer), without taking into account the prediction loss,
which requires the student to predict the latent features of
the teacher network. We empirically ﬁnd that training the
LSTM layer in this way can provide a good initialization
for tuning the student model. At the second stage, we learn
the LSTM parameter and classiﬁer together by minimizing
L in Eq. (1). Our experiments in Section 5 show that the s-
tudent model learned in this way can achieve better results.

4. Experiments

We tested our method for early action prediction with
RGB-D and RGB videos on three benchmark datasets: N-
TU RGB-D action [34], SYSU 3DHOI [17], and UCF-101
set [37]. In the following, we will describe the implementa-
tion details, and experimental results with detailed analysis.

4.1. Implementation details

For early action prediction on the RGB-D action datasets
(i.e., NTU RGB-D and SYSU 3DHOI sets), we followed the
settings in [16] and partition each video clip into N = 40
shorter segments. While for the prediction on RGB action
dataset (i.e., UCF-101 set), we used the settings in [24] and
divided each full video into N = 10 shorter segments.
Details for feature extraction. For extracting visual fea-
tures from videos in RGB-D dataset (NTU and SYSU), we
followed the implementations in [16] and uniformly sam-
pled 16 frames from each video clip, from which a set of im-
age patches containing the actors are cropped, in order to re-
duce the inﬂuence of cluttered backgrounds. These patches

1Indeed, we do not observe any improvement on the prediction perfor-
mance by training the teacher recognition model and student student model
jointly. Please refer to Section 5 for details.

3559

(cid:49)(cid:55)(cid:56)

(cid:54)(cid:60)(cid:54)(cid:56)

(cid:56)(cid:38)(cid:41)(cid:16)(cid:20)(cid:19)(cid:20)

Figure 3: Some frame examples from the NTU RGB-D, SYSU 3DHOI and UCF-101 datasets, The ﬁrst two rows present
RGB and depth frames from NTU set. The next two rows provide some examples from SYSU 3DHOI set. And the last row
gives examples from the UCF-101 set.

are then concatenated (after resized) along the temporal di-
mension to form a 16×299×299-sized tensor. We then ﬁne-
tuned a 16-channel-InceptionResNetV22 [38] model based
on the tensors generated from RGB and depth videos, re-
spectively. Since all the actions in SYSU set involve human-
object interactions, we followed the suggestion in [18] and
extracted CNN features from the image patches of human
body parts. For extracting features from 3D skeleton se-
quences, we followed the pre-processing step in [34] and
transformed the 3D locations of human joints from camera
coordinate system to body coordinate system. We sampled
10 frames from each partial or full skeleton sequence and
then fed them into a RNN model to extract corresponding
features. Finally, the features extracted from RGB, depth,
and skeleton data were concatenated to obtain representa-
tion {xn}N

n=1 for the videos of each progress level.

For extracting features from videos in unconstrained
RGB action set UCF-101, we used the 3D ResNeXt-101
[13] pre-trained on Kinetics dataset [19] to extract some
spatio-temporal features without ﬁnetuning on the training
data3. More speciﬁcally, we sampled 16 frames from each
video clip (partial or full) and then re-sized them into a
3 × 16 × 112 × 112-sized tensor. Finally, these tensors were
fed into the 3D ResNeXt-101 to extract visual features.

Details for teacher-student learning. We trained a 1-layer
sequence-sequence Bi-LSTM network as our teacher mod-
el, where the dimension of hidden layer in each direction
(forward and backward) was set as 256. Hence, the dimen-
sion of the latent features output by teacher model is 512.

2https://github.com/Cadene/pretrained-models.pytorch
3We do not observe any improvement on the performance by ﬁnetuning

3D ResNeXt-101 in our experiments.

We employed the cross-entropy loss over all the progress
levels as the loss of our teacher learning. For the student
model, we trained a 1-layer sequence-sequence LSTM net-
work with the size of the hidden layer set as 512, in order to
match with the latent features output by teacher model. We
set w as that in [16], as we experimentally ﬁnd that learn-
ing it from scratch can only earn a minor improvement. The
weights (α, β) for controlling MSE and MMD loss were set
to (0.1, 0.02), (25, 0.002), (4, 0.02) on NTU RGB-D, SYSU
3DHOI, and UCF-101, respectively. The learning rate and
batch sizes were set to 0.01 and 30 for SYSU dataset, 0.1
and 256 for both NTU and UCF-101 datasets, respectively.
Dropout was utilized in student model to mitigate overﬁt-
ting. We used SGD optimizer [3] with a momentum rate
0.9 to train both teacher and student networks. All the ex-
periments were conducted in PyTorch [30].

4.2. NTU RGB D Action Dataset

To the best of our knowledge, the NTU RGB-D action
dataset [34] is by far the largest public set for 3D action
recognition and prediction.
It contains more than 56,000
video samples with about 4 million frames from 60 action
categories. All of these action samples were recorded by
Kinect v2 devices from three different views. For collecting
this set, 40 subjects were asked to perform certain actions
several times. Some action frames can be found in Figure
3. This set is very challenging for early action prediction
mainly due to its larger scales in quantity, greater diversity
in action categories and more complexity in human-human
interaction and human-object interaction. Moreover, many
actions considered in this set are easily confused with each
other at the beginning stages. Taking the actions “eating”

3560

y
c
a
r
u
c
c
A

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0

0.1

0.2

0.3

y
c
a
r
u
c
c
A

0.85

0.8

0.75

0.7

0.65

0.6

0.55

0.5

0.45

0.4

0.35

Ours [60.97]
STUDENT [59.24]
MSRNN [46.56]
DeepSCN [43.24]
RankLSTM [43.13]
KNN [21.90]

0.9

0.8

0.7

0.6

y
c
a
r
u
c
c
A

0.5

0.4

Ours [75.35]
STUDENT [71.87]
MSRNN [71.61]
RankLSTM [68.59]
DeepSCN [62.18]
KNN [54.74]

Ours [89.64]
STUDENT [88.39]
MSRRN [87.25]
Mem-LSTM [84.10]
DeepSCN [81.31]
MTSSVM [77.41]
IBOW [70.01]
DBOW [51.37]

0.4

0.5

0.6

Observation ratio

0.7

0.8

0.9

1

0

0.1

0.2

0.3

0.4

0.5

0.6

Observation ratio

0.7

0.8

0.9

1

0.1

0.2

0.3

0.5

0.4
0.7
Observation ratio

0.6

0.8

0.9

1

(a) NTU RGB-D action set

(b) SYSU 3D HOI set

(c) UCF-101 set

Figure 4: Comparison results on the (a) NTU RGB-D Action, (b) SYSU 3DHOI and (c) UCF-101 sets. [*] in the legend of
the ﬁgure stands for the AUC(%) performance obtained by the corresponding method.

Observation ratio

KNN [16]

RankLSTM [28]
DeepSCN [24]
MSRNN [16]

STUDENT

Ours

Table 1: Prediction results (%) on the NTU RGB-D Action set.
90%
10%

20%

30%

40%

50%

60%

70%

80%

100% AUC

7.45
11.54
16.80
15.17

25.99
27.80

9.56
16.48
21.46
20.33

33.68
35.85

12.25
25.66
30.51
29.53

43.91
46.27

16.04
37.74
39.93
41.37

56.20
58.45

20.89
47.96
48.73
51.64

65.59
67.40

25.97
55.94
54.61
59.15

72.12
73.86

30.85
60.99
58.18
63.91

76.16
77.63

34.49
64.41
60.18
67.38

78.82
80.06

36.15
66.05
60.01
68.89

80.09
81.47

37.02
65.95
58.62
69.24

80.53
82.01

21.90
43.13
43.24
46.56

59.24
60.97

and “drinking” for example, both of them have the moments
of fetching object and holding it up. For experiments, we
followed exactly the cross-subject setting in [34, 16] and
used the samples performed by 20 certain subjects to train
our model. The samples performed by the rest subjects are
employed to evaluate the learned model. In total, we have
40,320 full videos for training and 16,560 full videos for
testing, which means that we have a total of 662,400 partial
and full samples to test the trained model.

The detailed prediction results are presented in Figure
4(a) and Table 1, where we denote the student model with-
out distilling knowledge from teacher model as STUDEN-
T. As shown, with the help of a teacher model, the per-
formances of our student model are improved at all of the
40 progress levels, especially for the actions at very early
stage. For instance, when only using the ﬁrst 30% segments
for prediction, our system achieves an accuracy of 46.27%,
outperforming the STUDENT model by 2.36%. We also
observe that the accuracy of prediction actions from full
videos is 82.01%, which is 1.48% higher than STUDEN-
T. This demonstrates that the knowledge distillation frame-
work is also beneﬁcial for the action recognition task. From
the perspective of area under the curve (AUC), which s-
tands for the average prediction accuracy, it increases from
59.24% to 60.97% with an improvement of 1.73%, as com-
pared to STUDENT, which means that more than 11,400
mis-predicted action samples are correctly predicted when
using our progressive teacher-student learning method.

Table 1 shows the comparison of our method with other
state-of-the-art methods [16, 24, 28]. It could be observed
that our method outperforms the competitors by a large mar-

gin (more than 14% in terms of AUC), which is a signiﬁcant
breakthrough for early action prediction on this challenging
dataset. The results demonstrate the effectiveness of our
early action prediction system with knowledge distillation.

4.3. SYSU 3DHOI dataset

The SYSU 3D Human-Object Interaction (3DHOI)
dataset [17] was captured by Kinect v1, with 480 RGB-
D sequences from 12 action categories, including “playing
phone”, “calling phone”, “pouring”, “drinking”, etc. Each
action involves a kind of human-object interactions. Simi-
lar to the NTU RGB-D action set, the collectors invited 40
actors to perform 12 human-object interaction actions with
six different objects. Some frame examples can be found in
Figure 3. This set is challenging for early action prediction
as the actions are quite similar to each other, especially at
the beginning stages. For instance, the actions of “calling
phone” and “playing phone” have the same movement of
picking up a phone. Thus, it is not easy for the system to
accurately infer action by only observing a small part of se-
quences. Following the same evaluation setting with [16],
sequences performed by the ﬁrst 20 subjects were used for
training and the rest for testing. For evaluation, each full se-
quence was uniformly partitioned into 40 segments. There-
fore, we have a total of 9,600 video clips (both full and par-
tial) to test the learned prediction models in this set.

Figure 4(b) and Table 2 present the detailed prediction
results on this set. As shown, our method obtains an AUC
of 75.35%, outperforming all of the competitors including
STUDENT, RankLSTM [28], DeepSCN [24], and MSRN-
N [16]. As expected, the proposed teacher-student learning

3561

Table 2: Prediction results (%) on the SYSU 3DHOI set.

Observation ratio

10%

KNN [16]

RankLSTM [28]
DeepSCN [24]
MSRNN [16]

STUDENT

Ours

35.83
48.75
45.50
47.50

54.58
59.58

20%

42.50
57.08
51.75
56.67

61.25
63.33

30%

50.42
65.42
57.58
66.67

67.08
68.33

40%

55.00
71.25
58.83
75.42

72.92
75.00

50%

57.92
73.75
60.50
78.33

73.75
78.33

60%

61.25
75.42
67.17
80.42

77.50
81.67

70%

63.33
77.08
73.42
81.67

80.42
84.17

80%

65.00
77.50
73.83
82.50

82.50
86.25

90%

63.33
77.92
75.08
81.67

84.58
87.50

100%

62.08
76.67
74.67
79.58

84.17
87.92

AUC

54.74
68.59
62.18
71.61

71.87
75.35

framework has consistently improved the performance of
our student model by a large margin (about 3.5%), espe-
cially for the prediction of actions at very early stages. By
only observing the ﬁrst 10% videos, our system can obtain
an accuracy of 59.58%, which clearly exceeds the perfor-
mances obtained by our student model without teacher stu-
dent learning and other competitors. These aspects demon-
strate that the proposed progressive teacher-student learning
framework can efﬁciently facilitate the learning of early ac-
tion prediction model.

4.4. UCF 101 dataset

The UCF-101 set is unconstrained RGB video based
dataset, which has been widely used for action recognition.
It consists of 13,320 full videos from 101 action classes,
such as ”Playing Guitar” and ”Basket-ball Dunk”. Most
of the considered actions involve human-object interaction,
body-motion, human-human interaction and sports. Figure
3 presents some frame examples in this set. For evaluation,
we employed the same settings as [22, 16] and used the ﬁrst
15 groups of videos for training, the next 3 groups for val-
idation, and the rest for testing.
In this setting, we have
3,682 full action videos for test and each video is split into
N = 10 segments, which means that we need to predict the
actions of 36,820 clips in this experiment.

The detailed prediction results are presented in Figure
4(c) and Table 3. As expected, the results obtained in this
study are consistent with those obtained on the NTU RGB-
D action and SYSU 3DHOI sets. Our proposed teacher-
student learning framework can consistently improve the
prediction performance of our student model and outper-
forms the other state of the arts [22, 16, 24].
It is worth
noting that our system can obtain an accuracy of 83.3% for
predicting partial videos with a progress level of 10%, out-
performing the state of the art approach [16] by a margin of
5.32%. When more video frames are provided, the accuracy
will keep rising until all frames are observed. Overall, the
prediction accuracies obtained on this set are much higher
than those on the NTU RGB-D and SYSU 3DHOI sets, e-
specially for the prediction of actions at very early stages.
This is because that many actions in this set can be recog-
nized by only observing the scene context depicted in each
single frame, e.g., “playing billiards” and “archery”.

Table 4: More evaluation on the inﬂuence of MSE and M-
MD losses. S stands for STUDENT without knowledge
distillation, L stands for local knowledge distillation with
MSE, G stands for global knowledge with MMD.

Observation ratio

10% 30% 50% 70% 100% AUC

SYSU

UCF-101

S

54.58
57.08
57.50
S+L+G 59.58

S+L
S+G

S

81.64
83.19
83.57
S+L+G 83.32

S+L
S+G

67.08
67.08
66.67
68.33

87.53
88.43
88.02
88.92

73.75
75.83
76.67
78.33

89.33
90.22
90.14
90.85

80.42
80.42
80.42
84.17

90.20
91.20
90.63
91.28

84.17
85.83
85.00
87.92

90.63
90.98
90.71
91.47

71.87
73.53
73.08
75.35

88.39
89.27
89.01
89.64

5. Ablation study

Here, we provide more evaluation results on the SYSU

3DHOI and UCF-101 sets.
Inﬂuence of MSE and MMD loss. Note that our KD loss
for the teacher-student learning consists of two components,
MSE and MMD, where MSE is employed to capture local
progress-wise knowledge, and MMD is used to distill global
distribution knowledge. Here, we study their inﬂuence and
report the results in Table 4. As can be seen, distilling action
knowledge, either local or global, is always beneﬁcial for
early action prediction. And a proper combination of them
can obtain the best performance in most of the test cases.
Evaluation on the model optimization. In this paper, we
have used a two-stage optimization method for determining
the student parameters (denoted by Two).
Intuitively, we
can also directly optimize the objective function L in a one-
stage manner (denoted by One). Here, we report the results
of using the two strategies in Table 5. As shown, both opti-
mization methods can improve our early action prediction,
compared to the STUDENT only. We also note that the
two-stage optimization approach can obtain better results
than the one-stage training in our experiments. Especially
on the SYSU 3DHOI set, the two-stage based method has a
performance gain about 1.8%, which means that more than
140 samples are correctly predicted by the student model.
Visualization for the beneﬁts of introducing teacher-
student learning. Here, we use t-SNE [29] to visualize
the latent features output by our teacher model and studen-
t model with/without teacher-student learning, respectively.

3562

(a) Teacher

(b) Student without teacher-student learning (c) Student with teacher-student learning

Figure 5: Visualization results. Samples from different actions are marked by different colors and numbers.

Observation ratio

10%

DBOW [32]
IBOW [32]

MTSSVM [23]
DeepSCN [24]

Mem-LSTM [22]

MSRNN [16]

STUDENT

Ours

36.29
36.29
40.05
45.02
51.02
68.00

81.64
83.32

Table 3: Prediction results (%) on the UCF-101 set.
80%
20%

30%

40%

50%

60%

70%

51.57
65.69
72.83
77.64
80.97
87.39

85.23
87.13

52.71
71.69
80.02
82.95
85.73
88.16

87.53
88.92

53.13
74.25
82.18
85.36
87.76
88.79

88.59
89.82

53.16
74.39
82.39
85.75
88.37
89.24

89.33
90.85

53.24
75.23
83.21
86.70
88.58
89.67

89.79
91.04

53.24
75.36
83.37
87.10
89.09
89.85

90.20
91.28

53.34
75.57
83.51
87.42
89.38
90.28

90.36
91.23

90%

53.45
75.79
83.69
87.50
89.67
90.43

90.58
91.31

100%

53.53
75.79
82.82
87.63
90.49
90.70

90.63
91.47

AUC

51.37
70.01
77.41
81.31
84.10
87.25

88.39
89.64

Table 5: More evaluation on the optimization strategies. S
stands for STUDENT without teacher-student learning.

Observation ratio

SYSU

UCF-101

S

One
Two

S

One
Two

10% 30% 50% 70% 100% AUC
71.87
54.58
73.57
57.08
59.58
75.35

84.17
85.42
87.92

67.08
66.25
68.33

73.75
77.08
78.33

80.42
82.50
84.17

81.64
83.41
83.32

87.53
88.51
88.92

89.33
90.47
90.85

90.20
91.31
91.28

90.63
91.23
91.47

88.39
89.51
89.64

Table 6: Comparison on with vs. without joint learning.

Observation ratio

10% 30% 50% 70% 100% AUC

SYSU

UCF-101

with

without

with

without

53.33
59.58

83.60
83.32

66.25
68.33

88.35
88.92

74.58
78.33

89.82
90.85

81.67
84.17

90.20
91.28

84.58
87.92

90.85
91.47

72.49
75.35

89.07
89.64

The results on the test videos from the SYSU 3DHOI set
are shown in Figure 5. The teacher model performs better in
separating samples of different action types than the studen-
t model, which illustrates that teacher model contains more
powerful action information. By distilling these knowledge
to the student model, the samples are better separated by our
student model as illustrated in Figure 5(b) and Figure 5(c).
This also demonstrates that some useful knowledge are dis-
tilled by our model to improve early action prediction.
Joint learning of teacher and student. During our model
training, the teacher model was pre-trained and then ﬁxed,
we also test the case of jointly learning teacher and student
networks simultaneously. The results are reported in Table
6. It is interesting to note that jointly learning teacher and

student model obtains an inferior performance in our ex-
periments, which could be attributed to the intractability of
optimizing two highly non-convex problem simultaneously.

6. Conclusion

In this paper, we present a novel teacher-student learn-
ing framework for early action prediction.
In the frame-
work, the progressive knowledge gained in an action recog-
nition model (teacher) is explicitly distilled for facilitat-
ing the learning of early action prediction model (student)
learning. We achieve knowledge distillation by minimizing
the local progressive-wise and global distribution knowl-
edge discrepancy between the teacher and student models.
Extensive experiments on two RGB-D action sets and one
unconstrained RGB action set have been reported to demon-
strate the efﬁcacy of the proposed framework.

Acknowledgments

This work is partially supported by the National Key
Research and Development Program of China (2018YF-
B1004903), NSFC (61702567, 61628212), SF-China
(61772570), Pearl River S&T Nova Program of Guangzhou
(201806010056), Guangdong Natural Science Funds for
(2018B030306025), and
Distinguished Young Scholar
FY19-Research-Sponsorship-185.
Jian-Fang Hu is al-
so supported by the Opening Project of GuangDong
Province Key Laboratory of Information Security Technol-
ogy(2017B030314131) and the CCF-Tencent open research
fund. The corresponding author is Jian-Fang Hu.

3563

References

[1] Romero Adriana, Ballas Nicolas, K Samira Ebrahimi, Chas-
sang Antoine, Gatta Carlo, and B Yoshua. Fitnets: Hints for
thin deep nets. International Conference on Learning Rep-
resentations, 2015. 2, 4

[2] Mohammad Sadegh Aliakbarian, F Sadat Saleh, Mathieu
Salzmann, Basura Fernando, Lars Petersson, and Lars An-
dersson. Encouraging lstms to anticipate actions very early.
In IEEE International Conference on Computer Vision, vol-
ume 1, 2017. 2

[3] L´eon Bottou. Large-scale machine learning with stochastic
gradient descent. In Proceedings of COMPSTAT’2010, pages
177–186. Springer, 2010. 5

[4] Matteo Bregonzio, Shaogang Gong, and Tao Xiang. Recog-
nising action as clouds of space-time interest points. In IEEE
Conference on Computer Vision and Pattern Recognition,
pages 1948–1955, 2009. 2

[5] Joao Carreira and Andrew Zisserman. Quo vadis, action
recognition? a new model and the kinetics dataset. In IEEE
Conference on Computer Vision and Pattern Recognition,
pages 4724–4733, 2017. 2

[6] Piotr Doll´ar, Vincent Rabaud, Garrison Cottrell, and Serge
Belongie. Behavior recognition via sparse spatio-temporal
features. In IEEE International Workshop on Visual Surveil-
lance and Performance Evaluation of Tracking and Surveil-
lance, pages 65–72, 2005. 2

[7] Alireza Fathi and Greg Mori. Action recognition by learning
mid-level motion features. In IEEE Conference on Computer
Vision and Pattern Recognition, pages 1–8, 2008. 2

[8] Christoph Feichtenhofer, Axel Pinz, and Andrew Zisserman.
Convolutional two-stream network fusion for video action
recognition.
In IEEE Conference on Computer Vision and
Pattern Recognition, pages 1933–1941, 2016. 2

[9] Leon A Gatys, Alexander S Ecker, and Matthias Bethge. Im-
age style transfer using convolutional neural networks.
In
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 2414–2423, 2016. 2

[10] Alex Graves and J¨urgen Schmidhuber. Framewise phoneme
classiﬁcation with bidirectional lstm and other neural net-
work architectures. Neural Networks, 18(5-6):602–610,
2005. 3

[11] Arthur Gretton, Karsten M Borgwardt, Malte J Rasch, Bern-
hard Sch¨olkopf, and Alexander Smola. A kernel two-sample
test. Journal of Machine Learning Research, 13(Mar):723–
773, 2012. 2, 4

[12] Kensho Hara, Hirokatsu Kataoka, and Yutaka Satoh. Learn-
ing spatio-temporal features with 3d residual networks for
action recognition.
In IEEE International Conference on
Computer Vision Workshop, volume 2, page 4, 2017. 2

[13] Kensho Hara, Hirokatsu Kataoka, and Yutaka Satoh. Can
spatiotemporal 3d cnns retrace the history of 2d cnns and
imagenet?
In IEEE Conference on Computer Vision and
Pattern Recognition, pages 6546–6555, 2018. 2, 5

[14] Geoffrey Hinton, Oriol Vinyals, and Jeff Dean. Distilling the

knowledge in a neural network. 2014. 2

[15] Sepp Hochreiter and J¨urgen Schmidhuber. Long short-term

memory. Neural computation, 9(8):1735–1780, 1997. 3

[16] J. Hu, W. Zheng, L. Ma, G. Wang, J. Lai, and J. Zhang. Early
action prediction by soft regression. IEEE Transactions on
Pattern Analysis and Machine Intelligence, pages 1–1, 2018.
1, 2, 3, 4, 5, 6, 7, 8

[17] Jian-Fang Hu, Wei-Shi Zheng, Jianhuang Lai, and Jianguo
Zhang. Jointly learning heterogeneous features for rgb-d ac-
tivity recognition.
IEEE Transactions on Pattern Analysis
and Machine Intelligence, 39(11):2186–2200, 2017. 2, 4, 6
[18] Jian-Fang Hu, Wei-Shi Zheng, Jiahui Pan, Jianhuang Lai,
and Jianguo Zhang. Deep bilinear learning for rgb-d action
recognition. In European Conference on Computer Vision,
pages 346–362, 2018. 5

[19] Will Kay, Jo˜ao Carreira, Karen Simonyan, Brian Zhang,
Chloe Hillier, Sudheendra Vijayanarasimhan, Fabio Viola,
Tim Green, Trevor Back, Paul Natsev, Mustafa Suleyman,
and Andrew Zisserman. The kinetics human action video
dataset. CoRR, 2017. 5

[20] Alexander Klaser, Marcin Marszałek, and Cordelia Schmid.
In

A spatio-temporal descriptor based on 3d-gradients.
British Machine Vision Conference, pages 275–1, 2008. 2

[21] Yu Kong and Yun Fu. Max-margin action prediction ma-
chine. IEEE Transactions on Pattern Analysis and Machine
Intelligence, 38(9):1844–1858, 2016. 1, 3

[22] Yu Kong, Shangqian Gao, Bin Sun, and Yun Fu. Action pre-
diction from videos via memorizing hard-to-predict samples.
In AAAI Conference on Artiﬁcial Intelligence, 2018. 2, 3, 7,
8

[23] Yu Kong, Dmitry Kit, and Yun Fu. A discriminative model
with multiple temporal scales for action prediction. In Euro-
pean Conference on Computer Vision, pages 596–611, 2014.
2, 8

[24] Yu Kong, Zhiqiang Tao, and Yun Fu. Deep sequential con-
In IEEE Conference
text networks for action prediction.
on Computer Vision and Pattern Recognition, pages 1473–
1481, 2017. 1, 2, 3, 4, 6, 7, 8

[25] Tian Lan, Tsung-Chuan Chen, and Silvio Savarese. A hier-
archical representation for future action prediction. In Euro-
pean Conference on Computer Vision, pages 689–704. 2014.
2, 3

[26] Kang Li and Yun Fu. Prediction of human activity by discov-
ering temporal sequence patterns. IEEE Transactions on Pat-
tern Analysis and Machine Intelligence, 36(8):1644–1657,
2014. 3

[27] Yanghao Li, Naiyan Wang, Jiaying Liu, and Xiaodi Hou. De-
mystifying neural style transfer. In International Joint Con-
ference on Artiﬁcial Intelligence, pages 2230–2236, 2017. 2,
4

[28] Shugao Ma, Leonid Sigal, and Stan Sclaroff. Learning activ-
ity progression in lstms for activity detection and early detec-
tion. In IEEE Conference on Computer Vision and Pattern
Recognition, pages 1942–1950, 2016. 6, 7

[29] Laurens van der Maaten and Geoffrey Hinton. Visualizing
data using t-sne. Journal of Machine Learning Research,
9(Nov):2579–2605, 2008. 7

[30] Adam Paszke, Sam Gross, Soumith Chintala, Gregory
Chanan, Edward Yang, Zachary DeVito, Zeming Lin, Al-
ban Desmaison, Luca Antiga, and Adam Lerer. Automatic
differentiation in pytorch. 2017. 5

3564

[46] Yi Zhu, Zhen-Zhong Lan, Shawn D. Newsam, and Alexan-
der G. Hauptmann. Hidden two-stream convolutional net-
works for action recognition. CoRR, abs/1704.00389, 2017.
2

[31] Hossein Rahmani and Mohammed Bennamoun. Learning
action recognition model from depth and skeleton videos. In
IEEE International Conference on Computer Vision, 2017. 2
[32] Michael S Ryoo. Human activity prediction: Early recog-
nition of ongoing activities from streaming videos. In IEEE
International Conference on Computer Vision, pages 1036–
1043, 2011. 2, 3, 8

[33] Paul Scovanner, Saad Ali, and Mubarak Shah. A 3-
dimensional sift descriptor and its application to action
recognition. In ACM international conference on Multime-
dia, pages 357–360, 2007. 2

[34] Amir Shahroudy, Jun Liu, Tian-Tsong Ng, and Gang Wang.
Ntu rgb+ d: A large scale dataset for 3d human activity anal-
ysis. In IEEE Conference on Computer Vision and Pattern
Recognition, pages 1010–1019, 2016. 4, 5, 6

[35] Amir Shahroudy, Tian-Tsong Ng, Yihong Gong, and Gang
Wang. Deep multimodal feature analysis for action recogni-
tion in rgb+ d videos. IEEE Transactions on Pattern Analysis
and Machine Intelligence, 40(5):1045–1058, 2018. 2

[36] Karen Simonyan and Andrew Zisserman. Two-stream con-
volutional networks for action recognition in videos. In Ad-
vances in neural information processing systems, pages 568–
576, 2014. 2

[37] Khurram Soomro, Amir Roshan Zamir, and Mubarak Shah.
Ucf101: A dataset of 101 human actions classes from videos
in the wild. CoRR, abs/1212.0402, 2012. 2, 4

[38] Christian Szegedy, Sergey Ioffe, Vincent Vanhoucke, and
Alexander A Alemi. Inception-v4, inception-resnet and the
impact of residual connections on learning.
In AAAI Con-
ference on Artiﬁcial Intelligence, volume 4, page 12, 2017.
5

[39] Du Tran, Lubomir Bourdev, Rob Fergus, Lorenzo Torresani,
and Manohar Paluri. Learning spatiotemporal features with
3d convolutional networks.
In IEEE International Confer-
ence on Computer Vision, pages 4489–4497, 2015. 2

[40] Du Tran, Jamie Ray, Zheng Shou, Shih-Fu Chang, and
Manohar Paluri. Convnet architecture search for spatiotem-
poral feature learning. CoRR, abs/1708.05038, 2017. 2

[41] Heng Wang and Cordelia Schmid. Action recognition with
improved trajectories. In IEEE International Conference on
Computer Vision, pages 3551–3558, 2013. 2

[42] Junho Yim, Donggyu Joo, Jihoon Bae, and Junmo Kim. A
gift from knowledge distillation: Fast optimization, network
minimization and transfer learning. In IEEE Conference on
Computer Vision and Pattern Recognition, volume 2, 2017.
2

[43] Sergey Zagoruyko and Nikos Komodakis. Paying more at-
tention to attention: Improving the performance of convolu-
tional neural networks via attention transfer. In International
Conference on Learning Representations, 2017. 2

[44] Zhang Zhang and Dacheng Tao. Slow feature analysis for
human action recognition.
IEEE Transactions on Pattern
Analysis and Machine Intelligence, 34(3):436–450, 2012. 2
[45] Yu Zhu, Wenbin Chen, and Guodong Guo. Fusing spa-
tiotemporal features and joints for 3d action recognition. In
IEEE Conference on Computer Vision and Pattern Recogni-
tion Workshop, pages 486–491, 2013. 2

3565

