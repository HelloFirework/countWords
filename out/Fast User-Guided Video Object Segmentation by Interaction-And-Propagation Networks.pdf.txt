Fast User-Guided Video Object Segmentation

by Interaction-and-Propagation Networks

Seoung Wug Oh
Yonsei University

Joon-Young Lee
Adobe Research

Ning Xu

Seon Joo Kim

Adobe Research

Yonsei University

Abstract

Frame index

3

First interaction

40

50

We present a deep learning method for the interactive
video object segmentation. Our method is built upon two
core operations, interaction and propagation, and each op-
eration is conducted by Convolutional Neural Networks.
The two networks are connected both internally and ex-
ternally so that the networks are trained jointly and inter-
act with each other to solve the complex video object seg-
mentation problem. We propose a new multi-round train-
ing scheme for the interactive video object segmentation so
that the networks can learn how to understand the user‚Äôs
intention and update incorrect estimations during the train-
ing. At the testing time, our method produces high-quality
results and also runs fast enough to work with users inter-
actively. We evaluated the proposed method quantitatively
on the interactive track benchmark at the DAVIS Challenge
2018. We outperformed other competing methods by a sig-
niÔ¨Åcant margin in both the speed and the accuracy. We also
demonstrate that our method works well with real user in-
teractions.

1. Introduction

Video object segmentation is a task of separating a fore-
ground object from a video sequence. It is an essential task
in video editing with a wide range of applications from the
consumer-level video editing to the professional TV and
movie post-production. This problem is often solved by
either a fully-automatic approach (i.e. unsupervised fore-
ground object segmentation [35]) or a semi-supervised ap-
proach (i.e. ground-truth object masks are given on few
frames [5, 28]). However, both solutions have limitations
in reÔ¨Çecting a user‚Äôs intention or reÔ¨Åning incorrect estima-
tions.

Interactive video segmentation can potentially resolve
this issue by allowing user intervention given in a user-
friendly form such as scribbles [37, 31, 2]. However, ex-
isting interactive methods require a lot of user interactions
to obtain results with acceptable quality for video editing
applications. In this paper, we aim to develop an interactive

‚Ä¶

1

 

d
n
u
o
R

‚Ä¶

2

 

d
n
u
o
R

‚Ä¶

‚Ä¶

Second interaction

50

‚Ä¶

‚Ä¶

‚Ä¶

‚Ä¶

‚Ä¶

ùëñ

: User interaction at ùëñ"# frame

‚Ä¶

‚Ä¶

‚Ä¶

: Temporal propagation through frames

Figure 1: We propose a method that can estimate object
masks in a video by interacting with a user. The mask of a
target object is generated using user annotations (e.g. scrib-
bles at frame 3), and the computed mask is propagated to
compute the masks for the entire video. The user can re-
peatedly provide additional feedback (e.g. scribbles on false
positive and false negative at frame 50) to reÔ¨Åne the seg-
mentation masks. Our method generates high-quality object
masks with minimal user interactions and time budget.

video object segmentation technique that can estimate ac-
curate object masks in a video sequence with minimal user
interactions.

Interactive video cutout methods usually follow the pro-
cedure of the rotoscoping [4, 20], where a user sequentially
processes a video frame-by-frame. In this scenario, the user
veriÔ¨Åes and updates the object mask with multiple interac-
tions at every frame. This rotoscoping-style interaction re-
quires a lot of effort and is more suitable for professional
uses that require high-quality results.

Recently, Caelles et al. [6] introduced another workÔ¨Çow
for the video object cutout that can minimize the user‚Äôs ef-
fort. In this scenario, which we call as the round-based in-
teraction, the user provides annotations on a selected frame
and an algorithm computes the segmentation maps for all
video frames in a batch process. To reÔ¨Åne the results, the
process of user annotation and segmentation map computa-
tions are repeatedd until the user is satisÔ¨Åed with the results.
This round-based interaction is useful for consumer-level
applications and rapid prototyping for professional usage,

5247

where the efÔ¨Åciency is the main concern. One can control
the quality of the segmentation according to the time bud-
get, as more rounds of interactions will provide more accu-
rate results.

In this paper, we present a deep learning based method
for the interactive video object segmentation tailored to
the round-based interaction scenario (Fig. 1). While sev-
eral deep learning approaches for video object segmentation
have been proposed [5, 28], they are usually too slow for the
interactive scenario as they rely heavily on online learning.
Even with a fast video segmentation algorithm [26], design-
ing a deep neural network (DNN) and its training mecha-
nism for the interactive segmentation scenario remains as a
challenge.

To solve this challenging problem, we propose the
Interaction-and-Propagation Networks and an effective
training method. Our framework consists of two deep
CNNs, each of which is dedicated to the core operations
interaction and propagation respectively. The interaction
network takes the user annotation (e.g. scribbles) to seg-
ment the foreground object. The propagation network trans-
fers the object mask computed in the source frame to other
neighboring frames. These two networks are internally con-
nected using our feature aggregation module and are also
externally connected so that each of them takes the other‚Äôs
output as its input.

The two networks are trained jointly to adapt to each
other, which reduces unstable behaviors between the two
operations. We also propose the concept of multi-round
training, which is speciÔ¨Åcally designed to simulate a real
testing scenario of the interactive video segmentation. In
this training strategy, a number of user feedback cycles and
the response of networks form a single training iteration
(see Fig. 3). This new training scheme greatly improves
the performance of our model.

Our framework is quantitatively evaluated on the inter-
active track benchmark at the DAVIS Challenge 2018 [6]
and achieves the state-of-the-art performance with a big
gap compared to other competing methods [27]. We also
demonstrate the usefulness of our method with real interac-
tive cutout use-cases. We will release the source code that
contains our trained model and the graphical user interface.

2. Related Work

2.1. Video Object Segmentation

We categorize the video object segmentation into three

categories based on different types of user interactions.

Unsupervised Methods. In the unsupervised setting, there
is no user interaction. The unsupervised approaches run au-
tomatically but they can only segment visually salient ob-
jects based on the appearance or the motion. For example,
Jain et al. [18] combine an appearance model with an opti-

cal Ô¨Çow model to segment generic objects in videos. Simi-
larly, Tokmakov et al. [35] use a motion estimation network
with a recurrent neural network to segment moving fore-
grounds. The fundamental limitation of the unsupervised
methods is that users have no means to select the object of
interest.

Semi-supervised Methods.
In the semi-supervised set-
ting, the ground-truth mask of an object in the Ô¨Årst frame
is provided. The goal is to propagate the object mask
throughout the entire video sequence. Many recent ap-
proaches [5, 36, 24] employ the online learning by Ô¨Åne-
tuning deep network models at the testing time in order to
remember the appearance of the target object on the given
object mask. Then the object segmentation is performed
for each frame. Instead of employing the online learning,
Jampani et al. [19] propagate the object mask by bilateral
Ô¨Åltering. Oh et al. [26] use Siamese two-stream networks
and leverage synthetic training data. Although the semi-
supervised methods do not have the limitation of the un-
supervised methods, they require a fully annotated object
mask in the initial frame, which can be expensive to ac-
quire. Additionally, semi-supervised methods rely on extra
information such as fully annotated masks or external tools
to further improve the output quality.

Interactive Methods. In the interactive setting, users can
provide various types of inputs (e.g. bounding box, scrib-
bles, or masks) to select an object of interest in the be-
ginning. Users can also provide more interactions to re-
Ô¨Åne the segmentation results. The goal of this interac-
tive approach is to achieve satisfactory segmentation re-
sults with a minimum number of user interactions. Many
interactive methods [37, 31, 9, 2, 4, 20] have been pro-
posed. [37, 31, 33] solve spatio-temporal graphs with hand-
crafted energy terms. Some methods Ô¨Ånd the corresponding
patches between a target frame and a reference frame, then
utilize local classiÔ¨Åers [2, 44] or an existing patch-match al-
gorithm [9]. [1, 20] solve the segmentation task by tracking.
Recently, [3, 6] proposed deep-learning based methods by
modifying semi-supervised methods to the interactive sce-
nario. Benard and Gygli [3] use the deep interactive image
segmentation method [39] to select an object given initial
strokes or clicks, and use the semi-supervised video ob-
ject segmentation method [5] to propagate the object mask.
Compared to such a simple combination of two separate
methods, we carefully design two module networks to in-
teract with each other and train the whole networks jointly
using our new multi-round training scheme.

2.2. Interaction with Deep Neural Networks

Recently, several methods have been introduced for in-
tegrating user interaction with deep neural networks for
various interactive tasks. Xu et al. proposed to transform
clicks [39] or bounding boxes [38] into Euclidean distance

5248

(a) Interaction Network

Skip connections

Frame image

Prev. round mask

Scribbles

Mask estimation

ROI Align

(b) Propagation Network

ROI Align

ResNet50

Encoder

Decoder

Feature   
Aggregation
Module

Encoder

Decoder

ResNet50

concat.

Frame image

Prev. round mask

Prev. time mask

Mask estimation

(c) Feature Aggregation Module

(d) Decoder block

(e) Residual Block

Fully-connected network with bottleneck

Skip  connection

Previous
aggregated
feature map

Current
interaction
feature map

Glo b al 
Av g . 
Po o l

Glo b al 
Av g . 
Po o l

e
t
a
n
e
t
a
c
n
o
c

e
p
a
h
s
e
r

x
a
m

t
f
o
s

&

e
s
i
w

-
l
e
n
n
a
h
C

m
u
s
 

d
e
t
h
g
i
e
w

Current
aggregated
feature map

Lower 
scale
block
output

2048

2048√ó2

Residual

Block

Upsample

2√ó

Residual

Block

v
n
o
c
+
 
u
l
e
r

	

3
√ó
3

	

v
n
o
c
+
 
u
l
e
r

	

3
√ó
3

	

2048√ó8√ó8

4096

4096

: element-wise summation

Figure 2: The overall network structure. We have two deep networks dedicated each to (a) interaction and (b) propagation
tasks. The two networks are internally connected by (c) our feature aggregation module and also externally connected to take
the other‚Äôs output as their input (a, b). Please see Sec. 3.1 for the details.

maps for the interactive image segmentation. Zhang et
al. [43] incorporated a user‚Äôs color selection for the image
colorization. Sangkloy et al. [32] and Isola et al. [16] used
sketches to help generate realistic natural images.

Different from the above interactive approaches that only
consider an interaction given once onto an image, our model
considers multiple user inputs possibly drawn onto different
video frames. The sequence of multiple user interactions is
aggregated by a specially designed recurrent block called
the feature aggregation module.
In addition, we use the
segmentation results from previous rounds as an additional
channel, in order to consider the unique characteristics of
the interactive video segmentation.

3. Method

Given user annotations on a video frame (e.g. scribbles
drawn on the foreground and background pixels of an im-
age), we aim for cutting out the target object in all frames
of the given video. From the initial user input, we generate

object masks of all frames solely based on the user anno-
tation. If the user provides additional feedback annotations
after reviewing the generated masks, our method reÔ¨Ånes the
object masks based on both additional user annotations and
the previous mask estimation results.

To this end, we deÔ¨Åne two basic operations for the task:
interaction and propagation. Two deep CNNs dedicated for
each operation are proposed as shown in Fig. 2 (a),(b). The
interaction network generates the object mask (or reÔ¨Ånes
the previous results) for the annotated frame according to
the user inputs. The propagation network generates the ob-
ject masks (or reÔ¨Ånes the previous results) by temporally
propagating the object mask information both forward and
backward starting from the frame with user annotation.

To prevent the error accumulation due to drifts and oc-
clusions during the propagation, the propagation network
refers to a reliable visual memory similar to [26, 41, 42].
While [26, 42] employ a Siamese network to access the ref-
erence frame directly, we modiÔ¨Åed the framework to make it
more suitable for the interactive video object segmentation.

5249

SpeciÔ¨Åcally, as the most reliable information is contained
in the user annotated frames in the interactive scenario, we
allow the propagation network to access the features of the
interaction network. In addition, we propose a feature ag-
gregation module that accumulates all the previous refer-
ence information encoded by the interaction network. This
reference-guided propagation is effective, especially for the
long-term propagation.

We refer to the series of operations consisting of both
the user interactions on one frame and a number of consec-
utive propagation towards both ends as a round (see Fig. 3).
Users are able to repeat several rounds of interactions to re-
Ô¨Åne the segmentation results until they are satisÔ¨Åed with the
results as shown in Fig. 1. Both networks operate on the
results obtained from the previous round. We use the same
networks for every round.

3.1. Network Design

We have two networks, interaction and propagation, and
both networks are constructed as an encoder-decoder struc-
ture that can effectively produce a sharp mask output. We
adopt the ROI align before the encoder to make our net-
works to pay attention to the region of interest (the area
around the target object) [13]. We take ResNet50 [14]
(without the last global pooling and fully-connected layers)
as the encoder network, and also modify it to be able to take
additional input channels (e.g. scribbles and the previous
masks) by implanting additional Ô¨Ålters at the Ô¨Årst convo-
lution layer [28, 39]. The network weights are initialized
from the ImageNet pre-trained model, except for the newly
added Ô¨Ålters which are initialized randomly.

The decoder takes the output of the encoder and pro-
duces an object mask. To reconstruct a sharp mask by fully
exploiting the information at different scales, the decoder
additionally takes intermediate feature maps inside the en-
coder through skip connections. We make modiÔ¨Åcations to
the feature pyramid networks [21, 29] by adding residual
blocks [15] and use it as the building block of our decoder,
as shown in Fig. 2 (d),(e). The decoder estimates the ob-
ject mask in a quarter scale of an input image. For the
multi-object scenario where scribbles for each object are
given, we Ô¨Årst estimate masks for each object then merge
the masks to get the multi-object mask using the soft aggre-
gation proposed in [26].

Interaction Network. The input to the interaction network
consists of a frame, the object mask from the previous round
(if available), and two binary user annotation maps for the
positive and the negative regions respectively. The inputs
are concatenated along the channel dimension to form an
input tensor Xi ‚àà R6√óH√óW . The object mask is repre-
sented as a probability map Ô¨Ålled with values between 0 and
1. If no previous mask is available (e.g. at the Ô¨Årst round),
we feed a neutral mask Ô¨Ålled with 0.5 for all pixels. The

output of this network is ÀÜYi ‚àà RH√óW , the probabilities of
the target object at every pixel.

Propagation Network. The input to the propagation net-
work consists of a frame, the object mask obtained at the
previous frame, and the object mask obtained at the previ-
ous round. Similar to the interaction network, the inputs
are concatenated along the channel dimension to be a ten-
sor Xp ‚àà R5√óH√óW . The two object masks are represented
with probabilities and the neutral mask is used if the mask
is not available. Different from the interaction network, the
decoder of this propagation network additionally takes the
reference feature map which is computed by our feature ag-
gregation module. The reference feature map and the en-
coder output of this propagation network are concatenated
along the channel dimension and are fed into the decoder.

Feature Aggregation Module. In the interactive video ob-
ject segmentation, the system often takes multiple user an-
notations in different frames through multiple rounds. It is
important to exploit all previous user inputs for good perfor-
mance. To achieve this, we propose a feature aggregation
module which is specially designed for accumulating infor-
mation of the target object from all user interactions. We use
the encoder output of the interaction network to generate
reference feature maps. We update the feature maps recur-
rently when a new user interaction triggers the interaction
network. We design this module to be able to select mem-
orable features by self-attention. As shown in Fig. 2 (c),
the module Ô¨Årst performs a global average pooling on the
spatial dimension of the feature maps to obtain compact
feature vectors. The vectors are concatenated and fed into
two fully-connected layers with a bottleneck. The outputs
of the layers are two channel-wise weight vectors (Œ± and
Œ≤) after reshaping and a softmax. We place the softmax
layer to make sure that Œ± + Œ≤ = 1. The two feature maps
are channel-wise weighted by Œ± and Œ≤, then merged by the
summation: Ar = Œ± ‚äô Ar‚àí1 + Œ≤ ‚äô Rr. Ar and Ar‚àí1
are the aggregated reference feature map at the round r and
r ‚àí 1 respectively, and Rr is the encoder output of the in-
teraction network at the round r, and ‚äô is an element-wise
multiplication on the channel dimension.

Region of Interest (ROI). While fully convolutional net-
works for image segmentation [23] can handle image inputs
in any resolution, the performance heavily relies on the ab-
solute scale of objects. For example, small objects are easily
missed and objects larger than the receptive Ô¨Åeld need to be
estimated by observing only a part of the objects. This issue
can be addressed when the network knows where to look. In
our case, we can reason about the region of interest (ROI)
from the guidance (e.g. scribbles and masks).

To take advantage of the guidance, we Ô¨Årst compute
a tight box that contains all available guiding information
(which include user scribbles, the mask from the previous

5250

frame, and the mask from the previous round) and set the
ROI to a box that is computed by doubling each side of the
tight box. Then, the ROI area for all the inputs is bilin-
early warped into a Ô¨Åxed size (e.g. 256 √ó 256 in our imple-
mentation) before we feed them into the encoders [17, 13].
Finally, the prediction made within the ROI is inversely
warped and pasted back to the original location. The train-
ing losses become scale-invariant as they are computed in
the ROI-aligned space, and this enables us to not use the
complex balanced loss functions [5]. Note that we set ROI
as the whole image at the Ô¨Årst round and start to compute
ROI using the guidance from the second round.

3.2. Training

Multi-round Training. For the best testing performance,
we make our training loop close to the real testing sce-
nario: a user interacts with our model multiple times while
providing feedback in the forms of scribbles on multiple
frames. We propose a new multi-round training scheme
where a single training sample consists of multiple rounds
of user interactions. At every round, our model is trained
to reÔ¨Åne the previous round‚Äôs results by understanding the
user‚Äôs intention (interaction network) and temporally prop-
agating the object mask (propagation network). Two net-
works are trained jointly by making an estimation using the
previous estimation that can be inferred from the other net-
work. Losses are computed at every intermediate prediction
and the back-propagation is performed at every loss com-
putation to update the parameters of the networks. At each
round, user inputs are synthesized by simulating user behav-
iors. Fig. 3 shows an example of a single training iteration
in our multi-round training scheme.

User Scribble Synthesis. One challenge in training an in-
teractive model is collecting user input data. For our sce-
nario where a user provides scribbles as feedback, it is not
feasible to collect large training data. Instead, we train our
model with synthetically generated user interactions. In the
Ô¨Årst round, positive scribbles are sampled from the fore-
ground region. In the following rounds, scribbles are syn-
thesized within false negative and false positive areas where
the areas are computed using the ground-truth mask. We
sample positive scribbles from the false negative area and
negative scribbles from the false positive area.

We use morphological skeletonization to automatically
generate realistic scribbles similar to [6]. Given a candi-
date area to sample scribbles, we Ô¨Årst remove small false
estimations isolated from the main body by repeating a bi-
nary morphological opening operation. Then, we perform
the skeletonization of the mask to get either positive and
negative scribbles within the target area. We use a fast im-
plementation of the thinning algorithm [11] for the skele-
tonization.

A concern can be raised about the gap between the sim-

s
e
m
a
r
F

1

 

d
n
u
o
R

2

 

d
n
u
o
R

3

 

d
n
u
o
R

1

2

N

‚Ä¶

‚Ä¶

‚Ä¶

‚Ä¶

Intermediate estimations

: Synthetic feedback scribbles

: Interaction network

: Propagation network

Figure 3: An example of a single training iteration in our
multi-round training scheme. The multiple rounds of the
network feed-forwarding form a single training iteration so
that the networks can experience a real testing scenario and
learn how to understand user intention and update incorrect
estimations. Training losses are computed at every interme-
diate estimation.

ulated and the real scribbles. We empirically validate that
our model trained with simulated user scribbles works well
with real user interactions as shown in our demo video.

Pre-training on Images. It is widely known that training
deep networks requires a large amount of data. However,
video data that comes with object masks are limited due to
laborious human annotation process. We bypass the issue
by employing two-stage training where our networks are
Ô¨Årst pre-trained on synthetic image data and then are Ô¨Åne-
tuned on real video data. The idea that trains a video seg-
mentation network on image data was proposed in [28], and
we follow the data simulation method in [26]. The method
produces a set of reference and target frame pairs by apply-
ing random afÔ¨Åne transforms and object composition. This
pre-training is similar to training on videos, but temporal
propagation is limited to a single step as there are no con-
secutive frames.

Implementation Details. For the pre-training, we com-
bine multiple image datasets that come with object masks
(salient object detection ‚Äì [34, 7], semantic segmentation ‚Äì
[8, 12, 22]). After the pre-training, we use the video data
from the training subset of DAVIS [30], GyGo [10], and
Youtube-VOS [40] to train our networks.

To sample training data, we Ô¨Årst resize video frames to
be 480-pixels on the shorter edge while keeping the aspect
ratio. Then, N consecutive 400 √ó 400 sized patches are

5251

Round 1

1

t
h
g
i
e
w

0

Round 2

1

t
h
g
i
e
w

0

Round 3

1

t
h
g
i
e
w

0

frame

frame

frame

: Current round‚Äôs user interaction

: Previous round‚Äôs user interaction

: Current results‚Äô weights 

: Previous results‚Äô weights

Figure 4: Round-based Testing Scheme. At each round, we
update previous object masks with new estimations by the
weighted averaging. Solid lines and dashed lines indicate
mask updating weights for current estimation and previous
estimation, respectively. Weights are inversely proportional
to the propagated distance.

sampled from a random location of the video, where N is
the length of a training video clip. We randomly skipped
frames to simulate fast motion and N is gradually increased
from 4 to 8 during training. We also augment all the training
samples using random afÔ¨Åne transforms. The number of
rounds also grows from 1 to 3 during training. The loss is
computed by the cross-entropy function and we use Adam
optimizer with a Ô¨Åxed learning rate of 1e-5. The training
with video data takes about 5 days using a single NVIDIA
GeForce 1080 Ti GPU.

3.3. Testing Scheme

One potential issue observed during our testing is that
the propagated mask may be worse than the mask from the
previous round. This happens especially when the destina-
tion is far from the user-selected frame.We conjecture that
the long-term propagation may be unstable as our model
is trained on short video clips. To address this issue, we
modiÔ¨Åed our testing scheme in two ways; continuous up-
dating and restricted propagation. In continuous updating,
we update the previous round‚Äôs masks with newly estimated
masks by the weighted average. The weighting factor is in-
versely proportional to the propagated distance, and differ-
ent weighting functions such as a linear and the Gaussian
were tested. We empirically found that the different weight-

Method
Ours
NajaÔ¨Å et al. [25]
Lin et al.
Huang et al.
Scribble-OSVOS [6]
Rakelly et al.

AUC J@60
0.647
0.641
0.395
0.549
0.240
0.450
0.328
0.335
0.153
0.299
0.269
0.273

Table 1: The leaderboard of the interactive track in the
DAVIS challenge 2018. The entries are ordered according
to the AUC score. Scribble-OSVOS is a baseline method
proposed by the challenge organizer [6].

ing functions end up giving similar performance. We used a
simple linear function in our experiments. For the restricted
propagation, we propagate the object mask until we reach a
frame in which user annotations were given in any previous
rounds. The restricted propagation improves not only the
accuracy by preventing the drift, but also the runtime speed
since it requires a smaller number of propagations. This
testing scheme is depicted in Fig. 4.

4. Experiments

It is difÔ¨Åcult to evaluate interactive video object segmen-
tation methods quantitatively because the user input is di-
rectly related to the segmentation results, and vice versa.
To tackle this problem with the evaluation, Caelles et al. [6]
introduced a robot agent service that simulates human inter-
action according to the intermediate results of an algorithm.
We used their method to quantitatively evaluate our method.

4.1. DAVIS Challenge

To fairly compare our method against the state-of-the-art
methods, we evaluated our model on the interactive track
benchmark in the DAVIS Challenge 2018 [6]. In the chal-
lenge, each method can interact with a robot agent up to
8 times and is expected to compute masks within 30 sec-
onds per object for each interaction. The performance of
each method is evaluated using two metrics: area under the
curve (AUC) and Jaccard at 60 seconds (J@60s). AUC is
designed to measure the overall accuracy of the evaluation.
J@60 measures the accuracy with a limited time budget (60
seconds). We summarize the evaluation results in Table 1.
In both metrics, our method outperforms competing meth-
ods by a large margin [27].

4.2. Qualitative Results

Fig. 5 shows examples of our results obtained after 5 in-
teractions with the automatic evaluation robot in the DAVIS
Challenge 2018. Our method generates accurate segmenta-
tion results for various object types with complex motions
even if there are multiple object instances. In the supple-

5252

t
c
e
j
b
O
 
e
l
g
n
i
S

s
t
c
e
j
b
O
 
e
l
p
i
t
l
u
M

0%

25%

50%

75%

100%

Figure 5: The qualitative results on the DAVIS-2017 validation set. All the user interactions are automatically simulated by
the robot agent provided by [6]. The result masks are overlaid to uniformly sampled frames after 5 interactions (rounds).

mentary video, we present the recording of our real-time
demo with real user interactions.

4.3. Ablation Studies

We conduct an ablation studies using the DAVIS-2017
validation set to validate the effectiveness of our feature
aggregation module and training scheme. SpeciÔ¨Åcally, we
compare our complete model with three variant models. No
Reference is a model without the feature aggregation mod-
ule. In No Aggregation model, the feature aggregation mod-
ule is replaced with a simple identity connection without
feature aggregation. No Multi-Round is a model trained
with the number of rounds as one (i.e. at each training it-
eration, there is only one interaction from the user).

The Jaccard score of ablation models with growing num-
ber of interactions is shown in Fig. 6. As shown in Fig. 6,
the proposed multi-round training is crucial for achieving

high accuracy and our feature aggregation module further
improves the performance by allowing the networks to ex-
ploit the reference information from all previous user in-
puts.

Another ablation study was conducted on the use of the
training data. Our complete model is Ô¨Årst pre-trained on
static image data and then Ô¨Åne-tuned using video data. To
validate the effect of the pre-training, we compare vari-
ant models that are just trained on the video data without
the pre-training. Also, to further inspect the effect of the
amount of video training data, we evaluate variants that are
Ô¨Åne-tuned with only 60 train videos of DAVIS-2017. Ta-
ble 2 summarizes the results obtained by our variant mod-
els trained using different combinations of training datasets.
Without pre-training, our performance drops signiÔ¨Åcantly.
The use of additional training video data further raises our
performance.

5253

User annotated frame

After propagating 5 frames

‚Ä¶

Round 1

Round 2

Figure 7: Failure cases.
(top) Our propagation network
may suffer from error accumulation due to fast and complex
object motions. (bottom) We take only partial annotations
from users and misunderstanding of the user intention may
lead to unstable prediction with additional annotations.

5. Conclusion

While object segmentation in a video is one of the most
basic tasks for video editing, it requires a lot of user ef-
fort and time with existing tools. To make it more acces-
sible, we have presented a novel technique that generates
object segmentation masks in video frames with minimum
user inputs. Our method consists of interaction and propa-
gation networks that share information with the feature ag-
gregation module. We proposed the multi-round training
scheme designed for interactive tasks and it plays a key role
in achieving high accuracy. While our model is trained us-
ing synthetic user interactions, our method not only shows
the best performance on the quantitative evaluation but also
demonstrates good performance with real user interactions.
There are directions to further improve our system.
The drifting during propagation is still a major challenge,
although we greatly improved the performance with the
aggregated reference features and the multi-round train-
ing. We believe that a better semantic understanding of
the scene will help to resolve this problem by robustly
linking the instances with appearance changes across video
frames. Another important future work is supporting
high-resolution videos. This is one of the common issues
in many deep learning-based segmentation algorithms, and
we hope that this can be addressed with a better network
architecture or by combining our work with additional
post-processing modules.

Acknowledgement

This work was supported by Institute for Information
& communications Technology Promotion (IITP) grant
funded by the Korea government (MSIP) (2018-0-01858).

5254

Figure 6: The result of our ablation study on the DAVIS-
2017 validation set. We compare models with ablations
from our complete model. The AUC of each variant is
shown in the squared brackets of the legend.

X

PT DV GG+YV AUC J@60s
0.589
0.637
0.657
0.734

0.555
0.621
0.627
0.691

X X

X X

X

X

X

Table 2: We compare our models trained with different
combination of training datasets. PT: pre-training on static
images [34, 7, 8, 12, 22]. DV, GG and YV: the use of
DAVIS [30], GyGo [10], and Youtube-VOS [40] for Ô¨Åne-
tuning.

4.4. Failure Cases

While our method demonstrates satisfactory results on
both the quantitative and the qualitative evaluations, we
found few failure cases as shown in Fig. 7. We observed
that rapid and complex object motions may lead our propa-
gation network to drift by the error accumulating as shown
in Fig. 7 (top). We believe that a good future direction is to
augment the algorithm with a reliable temporal propagation
of object masks.

Another limitation we found is that our method may be
less stable on very challenging scenes in the current round-
based scenario. Our method mostly improves results with
additional user interactions, but this is not guaranteed as
shown in Fig. 7 (bottom). Since we take only partial an-
notations from users at each round, the propagated masks
from newer round are sometimes less accurate and there is
no guarantee that we can always keep better results from
different rounds. This is because there is no safety gear in
the testing scenario and it can be resolved by asking the user
for the conÔ¨Årmation of the mask being good to prevent up-
dating the masks.

12345Number of Interactions (Rounds)0.450.500.550.600.650.70Jaccard (IoU)Complete [0.691]No Aggregation [0.668]No Reference [0.650]No Multi-Round [0.560]References

[1] A. Agarwala, A. Hertzmann, D. H. Salesin, and S. M. Seitz.
Keyframe-based tracking for rotoscoping and animation. In
ACM Transactions on Graphics (ToG), volume 23, pages
584‚Äì591. ACM, 2004. 2

[2] X. Bai, J. Wang, D. Simons, and G. Sapiro. Video snapcut:
robust video object cutout using localized classiÔ¨Åers. In ACM
Transactions on Graphics (ToG), volume 28, page 70. ACM,
2009. 1, 2

[3] A. Benard and M. Gygli. Interactive video object segmen-
tation in the wild. arXiv preprint arXiv:1801.00269, 2017.
2

[4] B. Bratt. Rotoscoping: Techniques and tools for the Aspiring

Artist. Focal Press, 2012. 1, 2

[5] S. Caelles, K.-K. Maninis, J. Pont-Tuset, L. Leal-Taix¬¥e,
D. Cremers, and L. Van Gool. One-shot video object seg-
mentation.
In IEEE Conference on Computer Vision and
Pattern Recognition (CVPR). IEEE, 2017. 1, 2, 5

[6] S. Caelles, A. Montes, K.-K. Maninis, Y. Chen, L. Van Gool,
The 2018 davis chal-
arXiv preprint

F. Perazzi, and J. Pont-Tuset.
lenge on video object segmentation.
arXiv:1803.00557, 2018. 1, 2, 5, 6, 7

[7] M.-M. Cheng, N. J. Mitra, X. Huang, P. H. Torr, and S.-M.
Hu. Global contrast based salient region detection.
IEEE
Transactions on Pattern Analysis and Machine Intelligence,
37(3):569‚Äì582, 2015. 5, 8

[8] M. Everingham, L. Van Gool, C. K. Williams, J. Winn, and
A. Zisserman. The pascal visual object classes (voc) chal-
lenge. International Journal of Computer Vision, 88(2):303‚Äì
338, 2010. 5, 8

[9] Q. Fan, F. Zhong, D. Lischinski, D. Cohen-Or, and B. Chen.
Jumpcut: non-successive mask transfer and interpolation
for video cutout. ACM Transactions on Graphics (TOG),
34(6):195, 2015. 2

[10] I. Friedman,

I. Chemla, E. Smolyansky, M. Stepanov,
I. Afanasyeva, G. Sharir, S. Nadir, and S. Rorlich.
Gygo: an e-commerce video object segmentation dataset
by visualead.
https://github.com/ilchemla/
gygo-dataset, 2017. 5, 8

[11] Z. Guo and R. W. Hall.

thinning with two-
subiteration algorithms. Commun. ACM, 32(3):359‚Äì373,
Mar. 1989. 5

Parallel

[12] B. Hariharan, P. Arbel¬¥aez, L. Bourdev, S. Maji, and J. Ma-
lik. Semantic contours from inverse detectors. In IEEE In-
ternational Conference on Computer Vision (ICCV), pages
991‚Äì998. IEEE, 2011. 5, 8

[13] K. He, G. Gkioxari, P. Dollr, and R. Girshick. Mask r-cnn. In
IEEE International Conference on Computer Vision (ICCV),
2017. 4, 5

[14] K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learning
for image recognition. In IEEE Conference on Computer Vi-
sion and Pattern Recognition (CVPR), pages 770‚Äì778, 2016.
4

[16] P. Isola, J.-Y. Zhu, T. Zhou, and A. A. Efros.

Image-
to-image translation with conditional adversarial networks.
arXiv preprint, 2017. 3

[17] M. Jaderberg, K. Simonyan, A. Zisserman, et al. Spatial
In Advances in neural information

transformer networks.
processing systems, pages 2017‚Äì2025, 2015. 5

[18] S. D. Jain, B. Xiong, and K. Grauman. Fusionseg: Learning
to combine motion and appearance for fully automatic seg-
mentation of generic objects in videos. In IEEE Conference
on Computer Vision and Pattern Recognition (CVPR), 2017.
2

[19] V. Jampani, R. Gadde, and P. V. Gehler. Video propagation
networks. IEEE Conference on Computer Vision and Pattern
Recognition (CVPR), 2017. 2

[20] W. Li, F. Viola, J. Starck, G. J. Brostow, and N. D. Campbell.
Roto++: Accelerating professional rotoscoping using shape
manifolds. ACM Transactions on Graphics (TOG), 35(4):62,
2016. 1, 2

[21] T.-Y. Lin, P. Dollar, R. Girshick, K. He, B. Hariharan, and
S. Belongie. Feature pyramid networks for object detection.
In IEEE Conference on Computer Vision and Pattern Recog-
nition (CVPR), July 2017. 4

[22] T.-Y. Lin, M. Maire, S. Belongie, J. Hays, P. Perona, D. Ra-
manan, P. Doll¬¥ar, and C. L. Zitnick. Microsoft coco: Com-
mon objects in context. In European Conference on Com-
puter Vision (ECCV), pages 740‚Äì755. Springer, 2014. 5, 8

[23] J. Long, E. Shelhamer, and T. Darrell. Fully convolutional
networks for semantic segmentation.
In IEEE Conference
on Computer Vision and Pattern Recognition (CVPR), pages
3431‚Äì3440, 2015. 4

[24] K.-K. Maninis, S. Caelles, Y. Chen, J. Pont-Tuset, L. Leal-
Taix¬¥e, D. Cremers, and L. Van Gool. Video object seg-
mentation without temporal information.
arXiv preprint
arXiv:1709.06031, 2017. 2

[25] M. NajaÔ¨Å, V. Kulharia, T. Ajanthan, and P. H. S. Torr. Sim-
ilarity learning for dense label transfer. The 2018 DAVIS
Challenge on Video Object Segmentation - CVPR Work-
shops, 2018. 6

[26] S. W. Oh, J.-Y. Lee, K. Sunkavalli, and S. J. Kim. Fast video
object segmentation by reference-guided mask propagation.
In IEEE Conference on Computer Vision and Pattern Recog-
nition (CVPR), 2018. 2, 3, 4, 5

[27] S. W. Oh, J.-Y. Lee, N. Xu, and S. J. Kim. Fast user-guided
video object segmentation by deep networks. The 2018
DAVIS Challenge on Video Object Segmentation - CVPR
Workshops, 2018. 2, 6

[28] F. Perazzi, A. Khoreva, R. Benenson, B. Schiele, and
A. Sorkine-Hornung. Learning video object segmentation
from static images. In IEEE Conference on Computer Vision
and Pattern Recognition (CVPR), 2017. 1, 2, 4, 5

[29] P. O. Pinheiro, T.-Y. Lin, R. Collobert, and P. Doll¬¥ar. Learn-
In European Conference on

ing to reÔ¨Åne object segments.
Computer Vision (ECCV), pages 75‚Äì91. Springer, 2016. 4

[15] K. He, X. Zhang, S. Ren, and J. Sun. Identity mappings in
deep residual networks. In European Conference on Com-
puter Vision (ECCV), pages 630‚Äì645. Springer, 2016. 4

[30] J. Pont-Tuset, F. Perazzi, S. Caelles, P. Arbel¬¥aez, A. Sorkine-
Hornung, and L. Van Gool. The 2017 davis challenge on
video object segmentation. arXiv:1704.00675, 2017. 5, 8

5255

[31] B. L. Price, B. S. Morse, and S. Cohen. Livecut: Learning-
based interactive video segmentation by evaluation of mul-
tiple propagated cues. In IEEE International Conference on
Computer Vision (ICCV), pages 779‚Äì786. IEEE, 2009. 1, 2
[32] P. Sangkloy, J. Lu, C. Fang, F. Yu, and J. Hays. Scribbler:
Controlling deep image synthesis with sketch and color. In
IEEE Conference on Computer Vision and Pattern Recogni-
tion (CVPR), volume 2, 2017. 3

[33] N. Shankar Nagaraja, F. R. Schmidt, and T. Brox. Video
segmentation with just a few strokes. In IEEE International
Conference on Computer Vision (ICCV), pages 3235‚Äì3243,
2015. 2

[34] J. Shi, Q. Yan, L. Xu, and J. Jia. Hierarchical image saliency
detection on extended cssd. IEEE Transactions on Pattern
Analysis and Machine Intelligence, 38(4):717‚Äì729, 2016. 5,
8

[35] P. Tokmakov, K. Alahari, and C. Schmid. Learning video ob-
ject segmentation with visual memory. In IEEE Conference
on Computer Vision and Pattern Recognition (CVPR), 2017.
1, 2

[36] P. Voigtlaender and B. Leibe. Online adaptation of convo-
lutional neural networks for video object segmentation. In
British Machine Vision Conference, 2017. 2

[37] J. Wang, P. Bhat, R. A. Colburn, M. Agrawala, and M. F.
Cohen. Interactive video cutout. In ACM Transactions on
Graphics (ToG), volume 24, pages 585‚Äì594. ACM, 2005. 1,
2

[38] N. Xu, B. Price, S. Cohen, J. Yang, and T. Huang. Deep grab-
cut for object selection. arXiv preprint arXiv:1707.00243,
2017. 2

[39] N. Xu, B. Price, S. Cohen, J. Yang, and T. S. Huang. Deep
In IEEE Conference on Com-
interactive object selection.
puter Vision and Pattern Recognition (CVPR), pages 373‚Äì
381, 2016. 2, 4

[40] N. Xu, L. Yang, D. Yue, J. Yang, B. Price, J. Yang, S. Cohen,
Y. Fan, Y. Liang, and T. Huang. Youtube-vos: Sequence-to-
sequence video object segmentation.
In European Confer-
ence on Computer Vision (ECCV), 2018. 5, 8

[41] L. Yang, Y. Wang, X. Xiong, J. Yang, and A. K. Katsaggelos.
EfÔ¨Åcient video object segmentation via network modulation.
In IEEE Conference on Computer Vision and Pattern Recog-
nition (CVPR), 2018. 3

[42] J. S. Yoon, F. Rameau, J. Kim, S. Lee, S. Shin, and I. S.
Kweon. Pixel-level matching for video object segmentation
using convolutional neural networks. In IEEE International
Conference on Computer Vision (ICCV), 2017. 3

[43] R. Zhang, J.-Y. Zhu, P. Isola, X. Geng, A. S. Lin, T. Yu, and
A. A. Efros. Real-time user-guided image colorization with
learned deep priors. ACM Transactions on Graphics (TOG),
36(4):119, 2017. 3

[44] F. Zhong, X. Qin, Q. Peng, and X. Meng. Discontinuity-
aware video object cutout. ACM Transactions on Graphics
(TOG), 31(6):175, 2012. 2

5256

