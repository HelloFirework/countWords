Towards Real Scene Super-Resolution with Raw Images

Xiangyu Xu Yongrui Ma Wenxiu Sun

SenseTime Research

Figure 1. Existing super-resolution method (RDN [38]) does not perform well for real captured images as shown in (c). We can obtain
sharper results (d) by re-training existing model [38] with the data generated by our method. Furthermore, we recover more structures and
details (e) by exploiting the radiance information recorded in raw images. The two input images (a) are captured by Leica SL Typ-601 and
iPhone 6s respectively, and both cameras are not seen by the models during training. Results best viewed electronically with zoom.

Abstract

Most existing super-resolution methods do not perform
well in real scenarios due to lack of realistic training data
and information loss of the model input. To solve the ﬁrst
problem, we propose a new pipeline to generate realistic
training data by simulating the imaging process of digital
cameras. And to remedy the information loss of the input,
we develop a dual convolutional neural network to exploit
the originally captured radiance information in raw images.
In addition, we propose to learn a spatially-variant color
transformation which helps more effective color correction-
s. Extensive experiments demonstrate that super-resolution
with raw data helps recover ﬁne details and clear struc-
tures, and more importantly, the proposed network and data
generation pipeline achieve superior results for single im-
age super-resolution in real scenarios.

1. Introduction

In optical photography, the number of pixels represent-
ing an object, i.e. the image resolution, is directly propor-
tional to square of the focal length of the camera [11]. While
one can use a long-focus lens to obtain a high-resolution im-

age, the range of the captured scene is usually limited by the
size of the sensor array at the image plane. Thus, it is often
desirable for users to capture the wide-range scene at a low-
er resolution with a short-focus camera (e.g. a wide-angle
lens), and then apply the single image super-resolution tech-
nique which recovers a high-resolution image from its low-
resolution version.

Most state-of-the-art super-resolution methods [4, 18,
31, 34, 20, 32, 38, 37] are based on data-driven models,
and in particular, deep convolutional neural networks (C-
NNs) [4, 27, 21]. While these methods are effective on
synthetic data, they do not perform well for real captured
images by cameras or cellphones (examples shown in Fig-
ure 1(c)) owing to lack of realistic training data and infor-
mation loss of network input. To remedy these problems
and enable real scene super-resolution, we propose a new
pipeline for generating training data and a dual CNN mod-
el for exploiting additional raw information, which are de-
scribed as below.

First, most existing methods cannot synthesize realistic
training data; the low-resolution images are usually gener-
ated with a ﬁxed downsampling blur kernel (e.g. bicubic
kernel) and homoscedastic Gaussian noise [38, 35]. On one
hand, the blur kernel in practice may vary with zoom, fo-

1723

Figure 2. Typical ISP pipeline of digital cameras. (b) represents
a Bayer pattern raw image, where the sensels surrounded by the
black-dot curve is a Bayer pattern block.

cus, and camera shake during image capturing, which is
beyond the ﬁxed kernel assumption. On the other hand,
image noise usually obeys heteroscedastic Gaussian distri-
bution [26] whose variance depends on the pixel intensity,
which is in sharp contrast to the homoscedastic Gaussian
noise. More importantly, both the blur kernel and noise
should be applied to the linear raw data whereas previous
approaches use the pre-processed non-linear color images.
To solve above problems, we synthesize the training data
in linear space by simulating the imaging process of digital
cameras, and applying different kernels and heteroscedastic
Gaussian noise to approximate real scenarios. As shown in
Figure 1(d), we can obtain sharper results by training exist-
ing model [38] with the data from our generation pipeline.
Second, while modern cameras provide both the raw data
and the pre-processed color image (produced by the image
signal processing system, i.e. ISP) to users [12], most super-
resolution algorithms only take the color image as input,
which does not make full use of the radiance information
existing in raw data. By contrast, we directly use raw data
for restoring high-resolution clear images, which conveys
several advantages: (i) More information could be exploit-
ed in raw pixels since they are typically 12 or 14 bits [1],
whereas the color pixels produced by ISP are typically 8
bits [12]. We show a typical ISP pipeline in Figure 2(a).
Except for the bit depth, there is additional information loss
within the ISP pipeline, such as the noise reduction and
compression [25].
(ii) Raw data is proportional to scene
radiance, while the ISP contains nonlinear operations, such
as tone mapping. Thus, the linear degradations in the imag-
ing process, including blur and noise, are nonlinear in the
processed RGB space, which brings more difﬁculties in im-
age restoration [24]. (iii) The demosaicing step in the ISP is
highly related to super-resolution, because these two prob-
lems both refer to the resolution limitations of cameras [39].
Therefore, to solve the super-resolution problem with pre-
processed images is sub-optimal and could be inferior to a
single uniﬁed model solving both problems simultaneously.
In this paper, we introduce a new super-resolution
method to exploit raw data from camera sensors. Existing
raw image processing networks [2, 29] usually learn a direct
mapping function from the degraded raw image to the de-
sired full color output. However, raw data does not have the
relevant information for color corrections conducted with-

in the ISP system, and thereby the networks trained with
it could only be used for one speciﬁc camera. To solve
this problem, we propose a dual CNN architecture (Fig-
ure 3) which takes both the degraded raw and color images
as input, so that our model could generalize well to differ-
ent cameras. The proposed model consists of two parallel
branches, where the ﬁrst branch restores clear structures and
ﬁne details with the raw data, and the second branch recov-
ers high-ﬁdelity colors with the low-resolution RGB image
as reference. To exploit multi-scale features, we use dense-
ly connected convolution layers [15] in an encoder-decoder
framework for image restoration. For the color correction
branch, simply adopting the technique in [29] to learn a
global transformation usually leads to artifacts and incor-
rect color appearances. To address this issue, we propose to
learn pixel-wise color transformations to handle more com-
plex spatially-variant color operations and generate more
appealing results. In addition, we introduce feature fusion
for more accurate color correction estimation. As shown in
Figure 1(e), the proposed algorithm signiﬁcantly improves
the super-resolution results for real captured images.

The main contributions of this work are summarized as
follows. First, we design a new data generation pipeline
which enables synthesizing realistic raw and color training
data for image super-resolution. Second, we develop a d-
ual network architecture to exploit both raw data and col-
or images for real scene super-resolution, which is able to
generalize to different cameras. In addition, we propose to
learn spatial-variant color transformations as well as fea-
ture fusion for better performance. Extensive experiments
demonstrate that solving the problem using raw data helps
recover ﬁne details and clear structures, and more impor-
tantly, the proposed network and data generation pipeline
achieve superior results for single image super-resolution in
real scenarios.

2. Related Work

We discuss state-of-the-art super-resolution methods as
well as learning-based raw image processing, and put this
work in proper context.

Super-resolution. Most state-of-the-art super-resolution
methods [34, 18, 32, 4, 38, 20, 6, 37] learn CNNs to re-
construct high-resolution images from low-resolution color
inputs. Dong et al. [4] propose a three-layer CNN for map-
ping the low-resolution patches to high-resolution space,
but fail to get better results with deeper networks [5]. To
solve this problem, Kim et al. [18] introduce residual learn-
ing to accelerate training and achieve better results. Tong et
al. [32] use dense skip connections to further speed up the
reconstruction process. While these methods are effective
in interpolating pixels, they are based on preprocessed col-
or images and thus have limitations in producing realistic

1724

Figure 3. Overview of the proposed network. Our model has two parallel branches, where the ﬁrst branch exploits raw data Xraw to restore
high-resolution linear measurements bXlin for all color channels with clear structures and ﬁne details, and the second branch estimates the
transformation matrix to recover the ﬁnal color result bX using the low-resolution color image Xref as reference.

details. By contrast, we propose to exploit both raw data
and color image in a uniﬁed framework for better super-
resolution.

radiance information recorded in raw data. We describe the
synthetic data generation pipeline in Section 3.1 and the net-
work architecture in Section 3.2.

Joint super-resolution and demosaicing. Many existing
methods for this problem estimate a high-resolution color
image with multiple low-resolution frames [7, 33]. More
closely related to our task, Zhou et al. [39] propose a deep
residual network for single image super-resolution with mo-
saiced images. However, this model is trained on gamma-
corrected image pairs which may not work well for real lin-
ear data. More importantly, these works do not consider the
complex color correction steps applied by camera ISPs, and
thus cannot recover high-ﬁdelity color appearances. Differ-
ent from them, the proposed algorithm solves the problems
of image restoration and color correction simultaneously,
which are more suitable for real applications.

Learning-based raw image processing. In recent years,
learning-based methods have been proposed for raw image
processing [16, 2, 29]. Jiang et al. [16] propose to learn
a large collection of local linear ﬁlters to approximate the
complex nonlinear ISP pipelines. Following their work,
Schwartz et al. [29] use deep CNNs for learning the col-
or correction operations of speciﬁc digital cameras. Chen et
al. [2] train a neural network with raw data as input for fast
low-light imaging. In this work, we learn color correction in
the context of raw image super-resolution. Instead of learn-
ing a color correction pipeline for one speciﬁc camera, we
use a low-resolution color image as reference for handling
images from more diverse ISP systems.

3. Method

For better super-resolution results in real scenarios, we
propose a new data generation pipeline to synthesize more
realistic training data, and a dual CNN model to exploit the

3.1. Training Data

Most super-resolution methods [18, 4] generate training
data by downsampling high-resolution color images with
a ﬁxed bicubic blur kernel. And homoscedastic Gaussian
noise is often used to model real image noise [38]. How-
ever, as introduced in Section 1, the low-resolution images
generated in this way does not resemble real captured im-
ages and will be less effective for training real scene super-
resolution models. Moreover, we need to generate low-
resolution raw data as well for training the proposed du-
al CNN, which is often approached by directly mosaicing
the low-resolution color images [9, 39]. This strategy ig-
nores the fact that the color images have been processed
by nonlinear operations of the ISP system while the raw
data should be from linear color measurements of the pix-
els. To solve these problems, we start with high-quality
raw images [1] and generate realistic training data by sim-
ulating the imaging process of the degraded images. We
ﬁrst synthesize ground truth linear color measurements by
downsampling the high-quality raw images so that each pix-
el could have its ground truth red, green and blue values.
In particular, for Bayer pattern raw data (Figure 2(b)), we
deﬁne a block of Bayer pattern sensels as one new virtual
sensel, where all color measurements are available. In this
way, we can obtain the desired images Xlin ∈ RH×W ×3
with linear measurements of all three colors for each pixel.
H and W denote the height and width of the ground truth
linear image. Similar with [17], we compensate the color
shift artifact by aligning the center of mass of each color in
the new sensel. With the ground truth linear measurements
Xlin, we can easily generate the ground truth color images

1725

Figure 4. The image restoration branch adopts dense blocks in an encoder-decoder framework, which reconstructs high-resolution linear
color measurements bXlin from the degraded low-resolution raw input Xraw.

Xgt ∈ RH×W ×3 by simulating the color correction steps
of the camera ISP system, such as color space conversion
and tone adjustment. For the simulation, we use Dcraw [3]
which is a widely-used raw processing software.

W

×

H
2

To generate degraded low-resolution raw images
Xraw ∈ R
2 , we separately apply blurring, downsam-
pling, Bayer sampling, and noise onto the linear color mea-
surements:

Xraw = fBayer(fdown(Xlin ∗ kdef ∗ kmot)) + n,

(1)

where fBayer is the Bayer sampling function which mosaic-
s images in accordance with the Bayer pattern (Figure 2(b)).
fdown represents the downsampling function with a sam-
pling factor of two. Since the imaging process is likely to
be affected by out-of-focus effect as well as camera shake,
we consider both defocus blur kdef modeled as disk ker-
nels with variant sizes, and modest motion blur kmot gen-
erated by random walk [28]. ∗ denotes the convolution op-
erator. To synthesize more realistic training data, we add
heteroscedastic Gaussian noise [23, 26, 13] to the generated
raw data:

n(x) ∼ N (0, σ2

1x + σ2

2),

(2)

×

H
2

W
2

where the variance of noise n depends on the pixel inten-
sity x. σ1 and σ2 are parameters of the noise. Finally,
the raw image Xraw is demosaiced with the AHD [14],
a commonly-used demosaicing method, and further pro-
cessed by Dcraw to produce the low-resolution color image
×3. We compress Xref as 8-bit JPEG as
Xref ∈ R
normally done in digital cameras. Note that the settings for
the color correction steps in Dcraw are the same as those
used in generating Xgt, so that the reference colors corre-
spond well to the ground truth. The proposed pipeline syn-
thesizes realistic data so that the models trained on Xraw
and Xref generalize well to real degraded raw and color
images (Figure 1(e)).

3.2. Network Architecture

A straightforward way to exploit raw data for super-
resolution is to directly learn a mapping function from raw
images to high-resolution color images with neural net-
works. While the raw data is advantageous for image
restoration, this naive strategy does not work well in prac-
tice; because the raw data does not have the relevant in-
formation for color correction and tone enhancement which
have been conducted within the ISP system of digital cam-
eras. In fact, one raw image could potentially correspond
to multiple ground truth color images generated by differ-
ent image processing algorithms of various ISP pipelines,
which will confuse the network training and make it non-
practical to train a model to reconstruct high-resolution im-
ages with desired colors. To solve this problem, we propose
a two-branch CNN as shown in Figure 3, where the ﬁrst
branch exploits raw data to restore high-resolution linear
measurements for all color channels with clear structures
and ﬁne details, and the second branch estimates the trans-
formation matrix to recover high-ﬁdelity color appearances
using the low-resolution color image as reference. The ref-
erence image complements the limitations of raw data; thus,
jointly training two branches with raw and color data could
essentially help recover better results.

Image restoration. We show an illustration of the im-
age restoration network in Figure 4. Similar with [2], we
ﬁrst pack the raw data Xraw into four channels which re-
spectively correspond to the R, G, B, G patterns in Fig-
ure 2(b). Then we apply a convolution layer to the packed
four-channel input for learning low-level features, and con-
secutively adopt four dense blocks [15, 32] to learn more
complex nonlinear mappings for image restoration. The
dense block is composed of eight densely connected con-
volution layers. Different from previous work [15, 32], we
deploy the dense blocks in an encoder-decoder framework
to make the model more compact and efﬁcient. We use

1726

Figure 5. Network architecture of the color correction branch. Our
model predicts the pixel-wise transformation L (Xref ) with a ref-
erence color image.

g1(Xraw) to denote the encoded features as shown in Fig-
ure 4. Finally, the feature maps with the same spatial size
are concatenated and fed into a convolution layer, and this
layer produces 48 feature maps which are rearranged by a
sub-pixel layer [30] to restore the three-channel linear mea-
surements bXlin ∈ RH×W ×3 with 2 times resolution of the
input.

Color correction. With the predicted linear measurements
bXlin, we learn the second branch for color correction which
reconstructs the ﬁnal result bX ∈ RH×W ×3 using the color
reference image Xref . Similar with [29], we use a CNN
to estimate a transformation G (Xref ) ∈ R3×3 to produce
a global color correction of the image. Mathematically,
the correction could be formulated as: G (Xref ) bXlin[i, j],
where bXlin[i, j] ∈ R3×1 represents the RGB values at pixel
[i, j] of the linear image. However, this global correction
strategy does not work well when the color transformation
of camera ISP involves spatially-variant operations.

To solve this problem, we propose to learn a pixel-wise
transformation L (Xref ) ∈ RH×W ×3×3 which allows dif-
ferent color corrections for each spatial location. Thus, we
can generate the ﬁnal results as:

bX[i, j] = L (Xref )[i, j] bXlin[i, j],

(3)

where L (Xref )[i, j] ∈ R3×3 is the local transformation
matrix for the RGB vector at pixel [i, j]. Note that we
directly transform the RGB vectors instead of using the
quadratic form in [29] as we empirically ﬁnd no beneﬁts
from it.

We adopt a U-Net structure [8, 36] for predicting the
transformation L (Xref ) in Figure 5. The CNN starts with
an encoder including three convolution layers with 2 × 2
average pooling to extract the encoded features g2(Xref ).
To estimate the spatially-variant transformations, we adopt
a decoder consisting of consecutive deconvolution and con-
volution layers, which expands the encoded features to the
desired resolution H ×W . We concatenate the feature maps
with the same resolution in the encoder and decoder to ex-
ploit hierarchy features. Finally, the output layer of the de-
coder generates 3 × 3 weights for each pixel, which form
the pixel-wise transformation matrix L (Xref ).

Feature fusion. As the transformation L (Xref ) is applied
to the restored image, it would be beneﬁcial to make the
matrix estimation network aware of the features in the im-
age restoration branch, so that L (Xref ) could more ac-
curately adapt to the structures of the restored image. To-
wards this end, we develop feature fusion for g2(Xref ) us-
ing the encoded features from the ﬁrst branch g1(Xraw).
As g2(Xref ) and g1(Xraw) are likely to have different s-
cales, we fuse them by weighted sum where the weights are
learned to adaptively update the features. We could formu-
late the feature fusion as:

g2(Xref ) ← g2(Xref ) + φ(g1(Xraw)),

(4)

where φ is a 1 × 1 convolution. After this, we put the updat-
ed g2(Xref ) back into the original branch, and the follow-
ing decoder could further use the fused features for trans-
formation estimation. The convolutions are initialized with
zeros to avoid interrupting the initial behavior of the color
correction branch.

4. Experimental Results

We describe the implementation details of our method
and present analysis and evaluations on both synthetic and
real data in this section.

4.1. Implementation Details

For generating training data, we use the MIT-Adobe 5K
dataset [1] which is composed of 5000 raw photograph-
s with size around 2000 × 3000. After manually remov-
ing images with noticeable noise and blur, we obtain 1300
high-quality images for training and 150 for testing which
are captured by 19 types of Canon cameras. We use the
method described in Section 3.1 to synthesize the training
and test datasets. The radius of the defocus blur is random-
ly sampled from [1, 5] and the maximum size of the motion
kernel is sampled from [3, 11]. The noise parameters σ1, σ2
are respectively sampled from [0, 10−2] and [0, 10−3].

We use the Xavier initializer [10] for the network weight-
s and the LeakyReLU [22] with slope 0.2 as the activation
function. We adopt the L1 loss function for training the net-
work and use the Adam optimizer [19] with initial learning
rate 2 × 10−4. We crop 256 × 256 patches as input and use
a batch size of 6. We ﬁrst train the model with 4 × 104 itera-
tions where the learning rate is decreased by a factor of 0.96
every 2 × 103 updates, and then another 4 × 104 iterations at
a lower rate 10−5. During the test phase, we chop the input
into overlapping patches and process each patch separately.
The reconstructed high-resolution patches are placed back
to the corresponding locations and averaged in overlapping
regions.

Baseline methods. We compare our method with state-of-
the-art super-resolution methods [4, 18, 32, 38] as well as

1727

Figure 6. Results on our synthetic dataset. References for the baseline methods could be found in Table 1. “GT” represent ground truth.

Table 1. Quantitative evaluations on the proposed synthetic
dataset. “Blind” represents the images with variable blur kernels,
and “Non-blind” denotes ﬁxed kernel. Red and blue text indicates
the ﬁrst and second best performance, respectively.

Methods

SID [2]

DeepISP [29]
SRCNN [4]
VDSR [18]

SRDenseNet [32]

RDN [38]

w/o color branch

w/o local color correction

w/o raw input

w/o feature fusion

Ours full model

Blind

Non-blind

PSNR
21.87
21.71
28.83
29.32
29.46
29.93
20.54
29.81
30.05
30.73
30.79

SSIM PSNR
21.89
0.7325
21.84
0.7323
0.7556
29.19
29.88
0.7686
30.05
0.7732
30.46
0.7804
21.13
0.7252
0.7954
30.29
30.51
0.7827
31.68
0.8025
0.8044
31.79

SSIM
0.7346
0.7382
0.7625
0.7803
0.7844
0.7897
0.7413
0.8095
0.7921
0.8252
0.8272

learning-based raw image processing algorithms [2, 29]. As
the raw image processing networks [2, 29] are not originally
designed for super-resolution, we add deconvolution layers
after them for increasing the output resolution. All the base-
line models are trained on our data with the same settings.

4.2. Results on Synthetic Data

We quantitatively evaluate our method using the test
dataset described above. Table 1 shows that the proposed
algorithm performs favorably against the baseline method-

s in terms of both PSNR and structural similarity (SSIM).
Figures 6 shows some restored results from our synthetic
dataset. Since the low-resolution raw input does not have
the relevant information for color conversion and tone ad-
justment conducted within the ISP system, the raw image
processing methods [2, 29] can only approximate the col-
or corrections of one speciﬁc camera, and thereby cannot
recover good results for different camera types in our test
set. In addition, the training process of the raw processing
models is inﬂuenced by the color differences between the
predictions and ground truth, and cannot focus on restor-
ing sharp structures. Thus, the results in Figures 6(c) are
still blurry. Figure 6(d)-(e) show that the super-resolution
methods with low-resolution color image as input generate
shaper results with correct colors, which, however, still lack
ﬁne details. In contrast, our method achieves better results
with clear structures and ﬁne details in Figure 6(f) by ex-
ploiting both the color input and raw radiance information.

Non-blind super-resolution. Since most super-resolution
methods [4, 18, 38] are non-blind with the assumption that
the downsampling blur kernel is known and ﬁxed, we also
evaluate our method for this case by using ﬁxed defocus k-
ernel with radius 5 to synthesize training and test datasets.
As shown in Table 1, the proposed method achieves com-
petitive super-resolution results under non-blind settings.

1728

Figure 7. Ablation study of the proposed network on the synthetic dataset.

Figure 8. Generalization to manually retouched color images from MIT-Adobe 5K dataset [1]. The proposed method generates clear
structures and high-ﬁdelity colors.

Learning more complex color corrections.
In addition
to the reference images rendered by Dcraw, we also train
the proposed model on manually retouched images by pho-
tography artists from the MIT-Adobe 5K dataset [1], which
represent more diverse ISP systems. We test our model
on the same raw input with different reference images pro-
duced by different artists in Figure 8. The proposed algo-
rithm generates clear structures as well as high-ﬁdelity col-
ors, which shows that our method is able to generalize to
more diverse and complex ISP systems.

4.3. Ablation Study

For better evaluation of the proposed algorithm, we test
variant versions of our model by removing each component.
We show the quantitative results on the synthetic dataset-
s in Table 1 and provide qualitative comparisons in Fig-
ure 7. First, without the color correction branch, the net-
work directly uses the low-resolution raw input for super-
resolution, which cannot effectively recover high-ﬁdelity
colors for diverse cameras (Figure 7(c)). Second, sim-
ply adopting the global color correction strategy from [29]
could only recover holistic color appearances, such as in the

background of Figure 7(d), but there are still signiﬁcant col-
or errors in local regions without the proposed pixel-wise
transformations. Third, to evaluate the importance of the
raw input, we use the low-resolution color image as the in-
put for both branches of our network, which is enabled by
adaptively changing the packing layer of the image restora-
tion branch. As shown in Figure 7(e), the model without
raw input cannot generate ﬁne structures and details due to
the information loss in the ISP system. In addition, the net-
work without feature fusion cannot predict accurate trans-
formations and tends to bring color artifacts around sub-
tle structures in Figure 7(f). By contrast, our full model
effectively integrates different components, and generates
sharper results with better details and fewer artifacts in Fig-
ure 7(g) by exploiting the complementary information in
raw data and preprocessed color images.

4.4. Effectiveness on Real Images

We qualitatively evaluate our data generation method
as well as the proposed network on real captured images.
As shown in Figure 1(d) and 9(d), the results of RDN be-
come sharper after re-training with the data generated by

1729

Figure 9. Results on real images. Since the outputs are of ultra-high resolution, typically 8000 ×12000 for a Leica camera and 4000 ×6000
for Canon, we only show image patches cropped from the tiny yellow boxes in (a). The images from top to bottom are captured by Canon,
Sony, Nikon and Leica cameras, respectively.

our pipeline. On the other hand, the proposed dual CNN
model cannot generate clear images (Figure 9(e)) by train-
ing on previous data generated by bicubic downsampling,
homoscedastic Gaussian noise and non-linear space mo-
saicing [4, 9]. By contrast, we achieve better results with
sharper edges and ﬁner details by training the proposed net-
work on our synthetic dataset as shown in Figure 1(e) and
9(f), which demonstrates the effectiveness of the proposed
data generation pipeline as well as the raw super-resolution
algorithm. Note that the real images are captured by differ-
ent types of cameras, and all of them are not seen during
training.

5. Conclusions

We propose a new pipeline to generate realistic training
data by simulating the imaging process of digital cameras.
In addition, we develop a dual CNN to exploit the radiance
information recorded in raw data. The proposed algorith-
m compares favorably against state-of-the-art methods both
quantitatively and qualitatively, and more importantly, en-
ables super-resolution for real captured images. This work

shows the superiority of learning with raw data, and we ex-
pect more applications of our work in other image process-
ing problems.

References

[1] V. Bychkovsky, S. Paris, E. Chan, and F. Durand. Learn-
ing photographic global tonal adjustment with a database of
input/output image pairs. In CVPR, 2011. 2, 3, 5, 7

[2] C. Chen, Q. Chen, J. Xu, and V. Koltun. Learning to see in

the dark. In CVPR, 2018. 2, 3, 4, 6

[3] D. Cofﬁn. Dcraw: Decoding raw digital photos in linux.

http://www.cybercom.net/ dcofﬁn/dcraw/. 4

[4] C. Dong, C. C. Loy, K. He, and X. Tang. Learning a deep
convolutional network for image super-resolution. In ECCV,
2014. 1, 2, 3, 5, 6, 8

[5] C. Dong, C. C. Loy, K. He, and X. Tang.

resolution using deep convolutional networks.
38:295–307, 2016. 2

Image super-
TPAMI,

[6] C. Dong, C. C. Loy, and X. Tang. Accelerating the super-
resolution convolutional neural network. In ECCV, 2016. 2

1730

[7] S. Farsiu, M. Elad, and P. Milanfar. Multiframe demosaic-
ing and super-resolution of color images. TIP, 15:141–159,
2006. 3

[28] C. Schuler, H. Burger, S. Harmeling, and B. Scholkopf. A
machine learning approach for non-blind image deconvolu-
tion. In CVPR, 2013. 4

[8] Y. Gan, X. Xu, W. Sun, and L. Lin. Monocular depth estima-
tion with afﬁnity, vertical pooling, and label enhancement.
In ECCV, 2018. 5

[29] E. Schwartz, R. Giryes, and A. M. Bronstein. Deepisp:
Towards learning an end-to-end image processing pipeline.
TIP, 2018. 2, 3, 5, 6, 7

[30] W. Shi, J. Caballero, F. Husz´ar, J. Totz, A. P. Aitken, R. Bish-
op, D. Rueckert, and Z. Wang. Real-time single image and
video super-resolution using an efﬁcient sub-pixel convolu-
tional neural network. In CVPR, 2016. 5

[31] R. Timofte, V. De Smet, and L. Van Gool. A+: Adjusted
anchored neighborhood regression for fast super-resolution.
In ACCV, 2014. 1

[32] T. Tong, G. Li, X. Liu, and Q. Gao. Image super-resolution

using dense skip connections. In ICCV, 2017. 1, 2, 4, 5, 6

[33] P. Vandewalle, K. Krichane, D. Alleysson, and S. S¨usstrunk.
Joint demosaicing and super-resolution imaging from a set
of unregistered aliased images. In Digital Photography III,
2007. 3

[34] Z. Wang, D. Liu, J. Yang, W. Han, and T. Huang. Deep
In

networks for image super-resolution with sparse prior.
ICCV, 2015. 1, 2

[35] X. Xu, J. Pan, Y.-J. Zhang, and M.-H. Yang. Motion blur
kernel estimation via deep learning. TIP, 27:194–205, 2018.
1

[36] X. Xu, D. Sun, S. Liu, W. Ren, Y.-J. Zhang, M.-H. Yang, and
J. Sun. Rendering portraitures from monocular camera and
beyond. In ECCV, 2018. 5

[37] X. Xu, D. Sun, J. Pan, Y. Zhang, H. Pﬁster, and M.-H. Yang.
In

Learning to super-resolve blurry face and text images.
ICCV, 2017. 1, 2

[38] Y. Zhang, Y. Tian, Y. Kong, B. Zhong, and Y. Fu. Residual
dense network for image super-resolution. In CVPR, 2018.
1, 2, 3, 5, 6

[39] R. Zhou, R. Achanta, and S. S¨usstrunk. Deep residual
network for joint demosaicing and super-resolution. arXiv
preprint arXiv:1802.06573, 2018. 2, 3

[9] M. Gharbi, G. Chaurasia, S. Paris, and F. Durand. Deep joint
demosaicking and denoising. ACM Transactions on Graph-
ics (TOG), 35:191, 2016. 3, 8

[10] X. Glorot and Y. Bengio. Understanding the difﬁculty of
In AISTATS,

training deep feedforward neural networks.
2010. 5

[11] J. E. Greivenkamp. Field guide to geometrical optics, vol-

ume 1. SPIE Press Bellingham, WA, 2004. 1

[12] S. W. Hasinoff, D. Sharlet, R. Geiss, A. Adams, J. T. Barron,
F. Kainz, J. Chen, and M. Levoy. Burst photography for high
dynamic range and low-light imaging on mobile cameras.
ACM Trans. Graph. (SIGGRAPH Asia), 35(6), 2016. 2

[13] G. E. Healey and R. Kondepudy. Radiometric ccd camera
calibration and noise estimation. TIP, 16:267–276, 1994. 4
[14] K. Hirakawa and T. W. Parks. Adaptive homogeneity-

directed demosaicing algorithm. TIP, 14:360–369, 2005. 4

[15] G. Huang, Z. Liu, L. Van Der Maaten, and K. Q. Weinberger.
Densely connected convolutional networks. In CVPR, 2017.
2, 4

[16] H. Jiang, Q. Tian, J. Farrell, and B. A. Wandell. Learning the

image processing pipeline. TIP, 26:5032–5042, 2017. 3

[17] D. Khashabi, S. Nowozin, J. Jancsary, and A. W. Fitzgibbon.
Joint demosaicing and denoising via learned nonparametric
random ﬁelds. TIP, 23:4968–4981, 2014. 3

[18] J. Kim, J. K. Lee, and K. M. Lee. Accurate image super-
resolution using very deep convolutional networks. In CVPR,
2016. 1, 2, 3, 5, 6

[19] D. Kingma and J. Ba. Adam: A method for stochastic opti-

mization. CoRR, abs/1412.6980, 2014. 5

[20] W.-S. Lai, J.-B. Huang, N. Ahuja, and M.-H. Yang. Deep
laplacian pyramid networks for fast and accurate superreso-
lution. In CVPR, 2017. 1, 2

[21] C. Liu, X. Xu, and Y. Zhang. Temporal attention network for

action proposal. In ICIP, 2018. 1

[22] A. L. Maas, A. Y. Hannun, and A. Y. Ng. Rectiﬁer nonlin-
earities improve neural network acoustic models. In ICML,
2013. 5

[23] B. Mildenhall, J. T. Barron, J. Chen, D. Sharlet, R. Ng, and
R. Carroll. Burst denoising with kernel prediction networks.
In CVPR, 2018. 4

[24] R. M. Nguyen and M. S. Brown. Raw image reconstruction
using a self-contained srgb-jpeg image with only 64 kb over-
head. In CVPR, 2016. 2

[25] W. B. Pennebaker and J. L. Mitchell. JPEG: Still image data
compression standard. Springer Science & Business Media,
1992. 2

[26] T. Plotz and S. Roth. Benchmarking denoising algorithms

with real photographs. In CVPR, 2017. 2, 4

[27] W. Ren, J. Zhang, X. Xu, L. Ma, X. Cao, G. Meng, and
W. Liu. Deep video dehazing with semantic segmentation.
TIP, 28:1895–1908, 2019. 1

1731

