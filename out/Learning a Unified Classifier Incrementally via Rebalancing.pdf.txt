Learning a UniÔ¨Åed ClassiÔ¨Åer Incrementally via Rebalancing

Saihui Hou1‚àó, Xinyu Pan2‚àó, Chen Change Loy3, Zilei Wang1, Dahua Lin2

1 University of Science and Technology of China, 2 The Chinese University of Hong Kong,

3 Nanyang Technological University

saihui@mail.ustc.edu.cn, px118@ie.cuhk.edu.hk, ccloy@ntu.edu.sg,

zlwang@ustc.edu.cn, dhlin@ie.cuhk.edu.hk

Abstract

new class
embeddings

Conventionally, deep neural networks are trained of-
Ô¨Çine, relying on a large dataset prepared in advance. This
paradigm is often challenged in real-world applications,
e.g. online services that involve continuous streams of in-
coming data. Recently, incremental learning receives in-
creasing attention, and is considered as a promising solu-
tion to the practical challenges mentioned above. However,
it has been observed that incremental learning is subject to
a fundamental difÔ¨Åculty ‚Äì catastrophic forgetting, namely
adapting a model to new data often results in severe perfor-
mance degradation on previous tasks or classes. Our study
reveals that the imbalance between previous and new data
is a crucial cause to this problem. In this work, we develop
a new framework for incrementally learning a uniÔ¨Åed clas-
siÔ¨Åer, i.e. a classiÔ¨Åer that treats both old and new classes
uniformly. SpeciÔ¨Åcally, we incorporate three components,
cosine normalization, less-forget constraint, and inter-class
separation, to mitigate the adverse effects of the imbalance.
Experiments show that the proposed method can effective-
ly rebalance the training process, thus obtaining superior
performance compared to the existing methods. On CIFAR-
100 and ImageNet, our method can reduce the classiÔ¨Åcation
errors by more than 6% and 13% respectively, under the in-
cremental setting of 10 phases.

1. Introduction

Incremental learning is a learning paradigm that allows
a model to be continually updated on new data, instead of
being trained once on a whole dataset. In recent years, in-
cremental learning sees increasing demand from real-world
applications ‚Äì many of them are exposed to continuous
streams of data during daily operation. A natural approach
to incremental learning is to simply Ô¨Ånetune a pretrained
model on new data. This approach, however, faces a seri-

‚àó indicates joint Ô¨Årst authorship.

old class
embeddings

Imbalanced Magnitudes

Cosine Normalization

previous 
knowledge

Deviation

Less-Forget Constraint

new class
embeddings

Negative

Anchor

old class
embeddings

Positive

Ambiguities

Inter-Class Separation

Figure 1. Illustration of the adverse effects caused by the imbal-
ance between old and new classes in multi-class incremental learn-
ing, and how our approach tackle them.

ous challenge ‚Äì catastrophic forgetting [26]. To be more
speciÔ¨Åc, Ô¨Ånetuning a model on new data usually results in
signiÔ¨Åcant performance drop on previous data.

Great efforts have been devoted to overcoming this dif-
Ô¨Åculty, which generally follow two directions: (1) trying to
identify and preserve signiÔ¨Åcant parameters of the original
model [21, 37, 1], and (2) trying to preserve the knowledge
in the original model through methods like knowledge dis-
tillation [24, 2, 28, 29, 19, 15]. Whereas these methods, to
a certain extent, mitigate the effect of catastrophic forget-
ting, the overall performances remain signiÔ¨Åcantly inferior
to those obtained by joint training.

In this work, we aim to explore a more effective way
to incremental learning. Particularly, we focus on the multi-
class setting, with an aim to learn a uniÔ¨Åed classiÔ¨Åer that can

831

recognize all classes seen at different stages. Compared to
the conventional multi-task setting, where a model is trained
to handle different tasks with each task dedicated to a sepa-
rate group of classes, the multi-class setting is more realis-
tic, but also more challenging.

As we work on this problem, we Ô¨Ånd that the imbalance
between the old classes seen at previous stages and the new
ones at the current stage constitutes a key challenge. Specif-
ically, the training algorithm only sees none or a few sam-
ples of old classes but substantially more of new classes.
Under this circumstance, the focus of the training process
is signiÔ¨Åcantly biased towards new classes, thus leading to
a number of adverse effects on the class-speciÔ¨Åc weights as
shown in Figure 1: (1) imbalanced magnitudes: the magni-
tudes of the weight vectors of new classes are remarkably
higher than those of old classes; (2) deviation: the previous
knowledge, i.e. the relationship between the features and the
weight vectors of old classes, are not well preserved; and (3)
ambiguities: the weight vectors of new classes are close to
those of old classes, often leading to ambiguities. The com-
bination of these effects can severely mislead the classiÔ¨Åer,
resulting in the decisions biased towards new classes and
the confusion among old classes.

In response to these problems, we propose a new frame-
work for learning a uniÔ¨Åed classiÔ¨Åer under the incremen-
tal setting. Particularly, it incorporates three components to
mitigate the adverse effects caused by the imbalance: (1)
cosine normalization, which enforces balanced magnitudes
across all classes, including both old and new ones; (2)
less-forget constraint, which aims to preserve the geometric
conÔ¨Åguration of old classes; and (3) inter-class separation,
which encourages a large margin to separate the old and
new classes. By rebalancing the training process with these
techniques, the proposed framework can more effectively
preserve the knowledge learned in previous phases and re-
duce the ambiguities between old and new classes.

We systematically compare different methods for incre-
mental learning on CIFAR-100 [22] and ImageNet [7], un-
der the multi-class setting. In our experiments, the proposed
framework performs signiÔ¨Åcantly superior to the baselines.
For example, under the incremental settings of 10 phases on
CIFAR100 and ImageNet, our method can reduce the clas-
siÔ¨Åcation errors by more than 6% and 13% respectively.

2. Related Work

2.1. Incremental Learning

Incremental learning has been a long standing research
area [4, 30]. Recently, along with the success of deep learn-
ing, incremental learning of deep neural networks becomes
an active topic, where the existing works mainly fall into
two categories, parameter-based and distillation-based.

Parameter-based. The methods of this category such as
EWC [21], SI [37], MAS [1] try to estimate the importance
of each parameter in the original model and add more penal-
ty to the changes on signiÔ¨Åcant parameters. The differences
among these works lie in the way to compute the parameter
importance. However, it is difÔ¨Åcult to design a reasonable
metric to evaluate all the parameters, especially in long se-
quences of tasks or classes.

Distillation-based. Knowledge distillation, as discussed
in [14], is an effective way to transfer knowledge from one
network to another.
It is Ô¨Årst introduced to incremental
learning in Learning without Forgetting (LwF) [24], where
a modiÔ¨Åed cross-entropy loss is used to preserve the knowl-
edge in the original model. Aljundi et al. [2] propose to
train multiple networks on different tasks and take an auto-
encoder to choose one for each test sample. Rannen et
al. [28] also introduce an auto-encoder to preserve the cru-
cial features for old tasks. Hou et al. [15] propose to use
knowledge distillation to facilitate the adaptation to new
tasks. Note that the works mentioned above [24, 2, 28, 15]
all follow the multi-task setting, i.e. the trained model is e-
quipped with multiple classiÔ¨Åers, each of which is evaluated
only on the data from an individual task.

The multi-class setting, which aims to learn a uniÔ¨Åed
classiÔ¨Åer for all the classes observed so far, has also been ex-
plored in previous efforts [19, 29, 3]. Jung et al. [19] consid-
er the domain expansion that can be treated as a special case
of incremental learning, and propose a solution that relies
on two properties, namely unchanged decision boundaries
iCaRL [29] combines knowledge
and feature proximity.
distillation and representation learning, with several novel
components, e.g. nearest-mean-of-exemplars classiÔ¨Åcation,
and prioritized exemplar selection. Castro et al. [3] resort
to the sophisticated data augmentation on the reserved old
samples, reporting even better performance.

Discussion.
In this work, the proposed method falls into
the distillation-based category. But it differs from previous
works in a key aspect: more than simply combining dif-
ferent objective terms to balance old and new classes, we
carefully investigate the adverse effects of imbalance and
propose a systematic solution that overcomes the issue from
multiple perspectives.

It is noteworthy that the previous works have also ex-
plored other ideas for incremental learning, such as adopt-
ing dynamic network structures [31, 36] or using a gener-
ative model to produce samples for old classes [35, 20].
These works, however, are orthogonal to the proposed
method, and thus can be incorporated into our framework
to achieve further improvement.

832

Reserved Samples

New Samples

CNN Features

Class Embedding









	

	









Old Model

New Model

Figure 2. Illustration of our approach for multi-class incremental learning. Due to cosine normalization, the features and class embeddings
lie in a high-dimensional sphere geometrically. There are three types of loss involved in the incremental process. Besides the cross-entropy
loss Lce computed on all classes, LG
dis is a novel distillation loss computed on the features (less-forget constraint), and Lmr is a variant of
margin ranking loss to separate the old and new classes (inter-class separation).



2.2. Tackling Imbalance

Class imbalance is a signiÔ¨Åcant challenge for machine
learning [18, 13]. Previous efforts to tackle the class imbal-
ance can be roughly divided into two groups: data resam-
pling [13, 6, 12] and cost-sensitive learning [32, 17, 38, 16,
9]. The former aims to rebalance the training samples in d-
ifferent classes through resampling; while the latter focuses
on adjusting the loss.
In this work, we tackle the imbal-
ance in incremental learning from different aspects, instead
of directly adjusting the sampling ratio or loss weights. In
inter-class separation, we introduce a margin ranking loss
which focuses on the boundary and thus is less suscepti-
ble to the imbalance among classes. Among the previous
works, the one presented in [9] is the most relevant to ours.
Dong et al. [9] propose a class rectiÔ¨Åcation loss to rectify
the learning bias of cross-entropy loss given the imbalanced
data. Our margin ranking loss differs from [9] in the mining
of the positives and hard negatives which is more efÔ¨Åcient
and specialized for incremental learning. In particular, we
do not rely on a pretrained model to deÔ¨Åne the class simi-
larity for the negative selection.

3. Our Approach

In this work we focus on the multi-class incremental
classiÔ¨Åcation problem. Formally, given a model trained on
an old dataset Xo, we aim to learn a uniÔ¨Åed classiÔ¨Åer for
both old classes Co and new classes Cn, based on a new
dataset X = Xn ‚à™ X ‚Ä≤
o. Xn is a large dataset that covers on-
ly the new classes Cn, while X ‚Ä≤
o ‚äÇ Xo reserves just a tiny
subset of old samples. The main challenge is how to utilize
the severely imbalanced X and the original model to boost
the performance on all classes without suffering from catas-

trophic forgetting [26]. In what follows, we will Ô¨Årst review
Learning without forgetting (LwF) [24] and iCaRL [29] as
background. Then we will dive deeply into the imbalance in
multi-class incremental learning, and elaborate on how our
approach can address the issue from different aspects. The
proposed approach is shown in Figure 2.

3.1. Background

LwF is the Ô¨Årst work to introduce knowledge distillation
to multi-task incremental learning and here we adapt it to
the multi-class setting. For each training sample x, the loss
function is the sum of two terms: the classiÔ¨Åcation loss Lce
and the distillation loss LF
dis. SpeciÔ¨Åcally, Lce is the stan-
dard cross-entropy loss [23]:

Lce(x) = ‚àí

|C|
(cid:2)

i=1

yi log (pi) ,

(1)

where C is the set of all observed classes so far, y is the
one-hot ground-truth label and p is the corresponding class
probabilities obtained by softmax. LF
dis is the distillation
loss, which aims to make the current model mimic the be-
haviors of the original model, i.e. the model learned on old
classes:

LF

dis(x) = ‚àí

|Co|
(cid:2)

i=1

œÑi(p‚àó) log(œÑi(p)),

(2)

where p‚àó is the soft label of x generated by the original
model on old classes, œÑi(v) = v1/‚Ñ¶
is a rescal-
ing function, where ‚Ñ¶ is usually set to be greater than 1
(e.g. ‚Ñ¶ = 2 in our experiments) to increase the weights of
small values. While LF
dis is devised to preserve the previ-
ous knowledge by encouraging the current predictions on

/ (cid:3)j v1/‚Ñ¶

j

i

833

Features
Embedding

(cid:2009)

(cid:2009)

Constraint on Angles

Constraint on Features

Figure 3. Visualization of the weights and biases in the last layer
for old and new classes. The results come from the incremental
setting of CIFAR100 (1 phase) by iCaRL [29].

Figure 4. Illutration of less-forget constraint. The constraint on
features is stronger compared to the constraint on angles with the
embeddings of old classes Ô¨Åxed.

old classes to match the soft labels by the original mod-
el. However, it is observed in both our study and [29] that
the adapted LwF tends to classify the test samples into new
classes.

To deal with the issue, iCaRL [29] proposes a classiÔ¨Å-
cation strategy named nearest-mean-of-exemplars. Specif-
ically, it computes a prototype Œºi by averaging features of
all reserved samples for each class ci ‚àà C. During infer-
ence, it extracts the features for a test sample and assigns
the class label of the most similar prototype. While iCaR-
L makes improvements over LwF, its performance on long
sequences of classes is still not satisfying1.

Overall, despite all the efforts devoted to incremental
learning, there remains much room to improve. A key prob-
lem that limits the performance of the multi-class setting, as
discussed earlier, is the signiÔ¨Åcant imbalance between old
and new classes. In this work, we aim to tackle this problem
by incorporating three components, cosine normalization,
less-forget constraint, and inter-class separation, which ad-
dresses the imbalance from different aspects. In what fol-
lows, we will present these components in turn.

3.2. Cosine Normalization

In a typical CNN, the predicted probability of a sample

x is computed as follows:

pi(x) =

exp(Œ∏T

i f (x) + bi)

(cid:3)j exp(Œ∏T

j f (x) + bj)

,

(3)

where f is the feature extractor, Œ∏ and b are the weights
(i.e. class embedding) and the bias vectors in the last lay-
er. As shown in Figure 3, due to the class imbalance, the
magnitudes of both the embeddings and the biases for the
new classes are signiÔ¨Åcantly higher than those for the old
classes. This results in the bias in the predictions that favor
new classes. To address this issue, we propose to use cosine
normalization in the last layer, as:

pi(x) =

exp(Œ∑(cid:5)¬ØŒ∏i, ¬Øf (x)(cid:6))

(cid:3)j exp(Œ∑(cid:5)¬ØŒ∏j, ¬Øf (x)(cid:6))

,

(4)

1The implementation of iCaRL described here is a little different from
the original version [29]. Our implementation refers to those in [3, 35]
which have proven to be more effective.

where ¬Øv = v/(cid:7)v(cid:7)2 denotes the l2-normalized vector, and
(cid:5)¬Øv1, ¬Øv2(cid:6) = ¬ØvT
1 ¬Øv2 measures the cosine similarity between
two normalized vectors. The learnable scalar Œ∑ is intro-
duced to control the peakiness of softmax distribution s-
ince the range of (cid:5)¬Øv1, ¬Øv2(cid:6) is restricted to [‚àí1, 1]. Al-
though cosine normalization is widely adopted in other vi-
sual tasks [33, 10, 27, 25], it is Ô¨Årst introduced for incre-
mental learning here. It can effectively eliminate the bias
caused by the signiÔ¨Åcant difference in magnitudes.

Now we revisit the method in Section 3.1 for incremen-
tal learning based on cosine normalization. For a sample x,
the classiÔ¨Åcation loss Lce is computed similarly as in Eq (1)
except that the probability for each class is computed in a
different way. For the distillation loss, since the scalar Œ∑ in
the original model and that in the current network are dif-
ferent, it is reasonable to mimic the scores before softmax
instead of the probabilities after softmax. It is also note-
worthy that due to cosine normalization, the scores before
softmax all lies in the same range (i.e. [‚àí1, 1]) and thus are
comparable. Formally, the distillation loss is updated as:

LC

dis(x) = ‚àí

|Co|
(cid:2)

i=1

(cid:7)(cid:5)¬ØŒ∏i, ¬Øf (x)(cid:6) ‚àí (cid:5)¬ØŒ∏‚àó

i , ¬Øf ‚àó(x)(cid:6)(cid:7),

(5)

where f ‚àó and Œ∏‚àó are the feature extractors and class embed-
dings in the original model, |Co| are the number of old class-
es. Geometrically, the normalized features and the class em-
beddings lie on a high-dimensional sphere. LC
dis encourages
the geometric structures, reÔ¨Çected by the angles between the
features and the old class embeddings, to be approximately
preserved in the current network.

3.3. Less-Forget Constraint

A model adapted to new data tends to forget what it
has learned previously. Hence, one of the practical chal-
lenges for incremental learning is how to less forget the
previous knowledge. To this end, we introduce a less-
forget constraint through a new loss LG
dis, which provides
a stronger constraint on the previous knowledge compared
to LC
dis mainly considers the local ge-
ometric structures, i.e. the angles between the normalized
features and the old class embeddings. This constraint is

dis. SpeciÔ¨Åcally, LC

834

not able to prevent the embeddings and the features from
being rotated entirely, as illustrated in Figure 4.

To enforce a stronger constraint on the previous knowl-
edges, we propose to Ô¨Åx the old class embeddings and com-
pute a novel distillation loss on the features as below:

dis(x) = 1 ‚àí (cid:5) ¬Øf ‚àó(x), ¬Øf (x)(cid:6),
LG

(6)

where ¬Øf ‚àó(x) and ¬Øf (x) are respectively the normalized fea-
tures extracted by the original model and those by the cur-
rent one. LG
dis encourages the orientation of features extract-
ed by current network to be similar to those by the original
model. The loss is bounded (LG
dis ‚â§ 2). The rationale be-
hind this design is that the spatial conÔ¨Åguration of the class
embeddings, to a certain extent, reÔ¨Çects the inherent rela-
tionships among classes. Hence, to preserve the previous
knowledge, a natural idea is to keep this conÔ¨Åguration. With
the old class embeddings Ô¨Åxed, it is then reasonable to en-
courage the features to be similar as in LG

dis.

In practice, as different numbers of new classes intro-
duced in each phase (e.g. 10 classes vs. 100 classes), the
degree of need to preserve the previous knowledge varies.
In response to this, we propose to set the weight of the loss
LG

dis (denoted as Œª) adaptively as follows:

Œª = Œªbase(cid:4)|Cn|/|Co|,

(7)

where |Co| and |Cn| are the number of old and new classes
in each phase, Œªbase is a Ô¨Åxed constant for each dataset. In
general, Œª increases when the ratio of the number of new
classes to that of old classes increases.

Note that a recent work [19], which deals with the do-
main expansion that can be treated as one-phase incremen-
tal learning, also proposes to Ô¨Åx the last layer and mimic the
features of the original model. However, our method differs
from [19] in three aspects. (1) The distillation loss LG
dis only
considers the orientation of the features but not the magni-
tudes (since the features are normalized in the loss), which
gives more Ô¨Çexibility to the model to Ô¨Åt for new classes. (2)
We introduce an adaptive coefÔ¨Åcient to weight the distilla-
tion loss for more than one phase. (3) Our experiments show
that the proposed method works well on long sequences of
classes (e.g. 10 phases) and more realistic datasets (e.g. Im-
ageNet), which have not been evaluated in [19].

3.4. Inter-Class Separation

Another practical challenge for multi-class incremental
learning is how to form a uniÔ¨Åed classiÔ¨Åer for all the class-
es, including both old and new ones, given that the data of
new classes dominate the training set. In order to avoid the
ambiguities between old and new classes, we introduce a
margin ranking loss to ensure that they are well separated.

The reserved samples for old classes are fully exploited.
SpeciÔ¨Åcally, for each reserved sample x, we try to sepa-
rate the ground-truth old class from all the new classes by a

margin, using x itself as an anchor. We consider the embed-
ding of the ground-truth class as positive. To Ô¨Ånd the hard
negatives, we propose an online mining method. We select
those new classes that yield highest responses to x as hard
negative classes and use their embeddings as negatives for
the corresponding anchor. Therefore, the proposed margin
ranking loss is computed as:

Lmr(x) =

K

(cid:2)

k=1

max(m ‚àí (cid:5)¬ØŒ∏(x), ¬Øf (x)(cid:6) + (cid:5)¬ØŒ∏k, ¬Øf (x)(cid:6), 0),

(8)
where m is the margin threshold, ¬ØŒ∏(x) is the ground-truth
class embedding of x, ¬ØŒ∏k is one of the top-K new class
embeddings chosen as hard negatives for x.

It is worth noting that, the positive and the negatives for
each anchor are the class embeddings instead of samples.
The proposed loss can be seamlessly incorporated in the
training process without altering the data sampling process.

3.5. Integrated Objective

Our approach addresses the imbalance in multi-class in-
cremental learning from multiple aspects. Combining the
losses presented above, we reach a total loss comprised of
three terms, given as:

L =

1
|N | (cid:2)

x‚ààN

(Lce(x) + ŒªLG

dis(x)) +

1
|No| (cid:2)

x‚ààNo

Lmr(x),

(9)
where N is a training batch drawn from X , No ‚äÇ N are
the reserved old samples contained in N . Œª is a loss weight,
which is set according to Eq (7).

Besides, at the end of each training phase, we can further
Ô¨Ånetune the model with a balanced set of reserved samples
taken from all observed classes. We Ô¨Ånd that the so-called
class balance Ô¨Ånetune can improve the performance moder-
ately in pratice.

4. Experiment

4.1. Settings

Datasets. Our experiments are conducted on two popu-
lar datasets for multi-class incremental learning, i.e. CI-
FAR100 [22], and ImageNet [7]. In a real-world applica-
tion such as product categorization or face recognition, in-
cremental learning usually starts from a model trained on
a pre-collected dataset. To mimic this, we evaluate our al-
gorithm starting from a model trained on half of classes for
each dataset, and the rest classes come in different phases.

Implementation Details. All models are implemented
with PyTorch and trained on TITAN-X GPUs. We adopt
a 32-layer ResNet for CIFAR100 and a 18-layer ResNet for
ImageNet. When adopting cosine normalization in the last

835

(a) CIFAR100 (1 phase)

(b) CIFAR100 (2 phases)

(c) CIFAR100 (5 phases)

(d) CIFAR100 (10 phases)

Figure 5. The performance on CIFAR100. The average and standard deviations are obtained over three runs.

(a) ImageNet-Subset (5 phases)

(b) ImageNet-Subset (10 phases)

(c) ImageNet-Full (5 phases)

(d) ImageNet-Full (10 phases)

Figure 6. The performance on ImageNet. Reported on ImageNet-Subset (100 classes) and ImageNet-Full (1000 classes).

layer, the ReLU in the penultimate layer is removed to allow
the features to take both positive and negative values. For
CIFAR100, the learning rate starts from 0.1 and is divided
by 10 after 80 and 120 epochs (160 epochs in total). For Im-
ageNet, the learning rates also starts from 0.1 and is divided
by 10 every 30 epochs (90 epochs in total). Through the
experiments, the networks are trained by SGD [23] with the
batch size 128. The training images are randomly Ô¨Çipped
and cropped as input, and no more data augmentation is
used. For other hyper-parameters, Œªbase is set to 5 for CI-
FAR100 and 10 for ImageNet, K is set to 2 and m is set to
0.5 for all the experiments.

As for the strategy to reserve the samples for old classes,
there are two popular ones. The Ô¨Årst one stores a constan-
t number of samples for each old class (e.g. Rper = 20),
and thus the memory size grows with the number of class-
es. The second one considers a memory with Ô¨Åxed capacity
(e.g. Rtotal = 2000 for CIFAR100 and Rtotal = 20000 for
ImageNet). Since the capacity is independent of the num-
ber of classes, the more classes stored, the fewer samples
reserved for each old class. In our experiments, we adop-
t the Ô¨Årst strategy because it is usually more challenging
(e.g. Rper = 20 vs. Rtotal = 2000 on CIFAR100) 2. Be-
sides, we used the method proposed in [29] based on herd
selection [34] to select the samples to be reserved within
each old class.

For the experiments on a given dataset, the classes are ar-

2We provide some results with the second strategy to reserve old sam-

ples in the supplementary material.

ranged in a Ô¨Åxed random order. Each method is then trained
in a class-incremental way. After each incremental phase,
the output model is evaluated on all the classes observed so
far. Thus the evaluation result for each method is a curve
of the classiÔ¨Åcation accuracies after each phase. If a single
number is preferable, we report the average of these accu-
racies, namely average incremental accuracy [29].

Baselines.
iCaRL [29], as described in Section 3.1, is the
representative method for multi-class incremental learning,
which is adopted as the baseline here. More speciÔ¨Åcal-
ly, we respectively report its results of CNN prediction-
s and nearest-mean-of-exemplars classiÔ¨Åcation, denoted as
iCaRL-CNN and iCaRL-NME.

For other methods, Finetune [11] and Feature Extrac-
tion [8] have proven to perform poorly for this setting [29,
3]. LwF [24] with a few additional reserved samples is e-
quivalent to iCaRL-CNN, where the reserved samples have
proven much helpful for incremental learning [29, 15]. Cas-
tro et al. [3] report better performance than iCaRL through
the sophisticated data augmentation on the reserved old
samples. However, according to the ablation study in [3],
the performance is still inferior to iCaRL without the data
augmentation. The recent works [35, 20] also report supe-
rior performance than iCaRL with the help of a generative
model to produce the samples for old classes, which deal
with the task in a different line with us and rely heavily on
the quality of the generative model. The parameter-based
methods such as EWC [21] and SI [37] have not evaluate

836

on ImageNet while MAS [1] and A-GEM [5] are evaluated
in the multi-task setting.

To evaluate our model, we also respectively report
the results achieved by the CNN predictions and nearest-
mean-of-exemplars classiÔ¨Åcation, denoted as Ours-CNN
and Ours-NME. Besides, the results of Joint Training are
provided as reference, which requires all previous data
available in each phase 3.

4.2. Evaluation on CIFAR100

CIFAR100 is composed of 60000 images from 100 class-
es of size 32 √ó 32. Every class has 500 images for train-
ing and 100 images for evaluation. We start from a model
trained on 50 classes and the remaining 50 classes come in
1, 2, 5 and 10 phases.

As shown in Figure 5, our method outperforms iCaRL by
a large margin, either in the trend of classiÔ¨Åcation accuracy
curve or average incremental accuracy. Particularly, under
the incremental setting of 10 phases (Figure 5(d)), the over-
all performance on the total 100 classes at the end of incre-
mental learning is improved by more than 6% (Ours-CNN
vs. iCaRL-NME). In our model, the CNN predictions per-
forms (i.e. Ours-CNN) better or at least comparable to the
nearest-mean-of-exemplars classiÔ¨Åcation (i.e. Ours-NME),
which is contrary to the observation in iCaRL [29]. Thus
the CNN predictions can be directly adopted for prediction-
s which indicates that the imbalance between old and new
classes are well handled in our approach.

4.3. Evaluation on ImageNet

ImageNet is a large-scale dataset consisting of 1000
classes with more than 1000 images per class, which is a
more challenging benchmark for incremental learning. In
total, there are roughly 1.2 millon training images and 50k
validation images. We report the performance on the vali-
dation set. Referring to [29, 3], we run two series of exper-
iments on this dataset. In the Ô¨Årst one, we conduct the ex-
periments on a randomly selected subset of 100 classes, de-
noted as ImageNet-Subset. In the other one we evaluate our
method on the whole 1000 classes denoted as ImageNet-
Full. We start from a model trained on half of the total
classes and divide the rest classes into 5 and 10 phases. The
results are shown in Figure 6.

The observations on this dataset are consistent with those
on CIFAR100. Our method performs signiÔ¨Åcantly better
than iCaRL under different settings. In our model, the re-
sults of CNN predictions is better or at least comparable
to those of nearest-mean-of-exemplars classiÔ¨Åcation. It is
noteworthy that, under the incremental setting of 10 phases
on ImageNet-Full, our method can reduce the overall clas-

3We provide the results compared to more baselines in the supplemen-

tary material.

(a) CIFAR100 (5 phases)

(b) CIFAR100 (5 phases)

Figure 7. (a) The effect of each component. (b) The effect of the
number of reserved samples.

(a) CIFAR100 (5 phases)

(b) CIFAR100 (10 phases)

Figure 8. The effect of adaptive loss weight (AW).

siÔ¨Åcation error on the 1000 classes at the last phase by more
than 13% (Ours-CNN vs. iCaRL-NME in Figure 6(d))

4.4. Ablation Study

The effect of each component. Our approach are main-
ly comprised of three components, i.e. cosine normaliza-
tion (CN), less-forget constraint (LC), inter-class separa-
tion (IS)), When all the training is done, a class balance
Ô¨Ånetune (CBF) is further conducted on the reserved sam-
ples. Here we provide the results of some intermediate
models to analyze the effect of each component: (a) CN:
cosine normalization is adopted in the last layer and the
distillation loss is updated as in Eq (5); (b) CN + LC: on
the basis of cosine normalization, a stronger constraint is
built to less forget the previous knowledge and the distilla-
tion loss is computed as in Eq (6); (c) CN + LC + IS: the
proposed margin ranking loss in Eq (8) is further added to
separate the old and new classes. For convenience, we only
report the results of CNN predictions. From the results in
Figure 7(a), we can observe that, each component has its
contribution to the performance achieved by our Ô¨Ånal mod-
el, while CBF has a relatively small effect on this dataset
since the adverse effects of the imbalance is mitigated by
the former three components.

The effect of the number of reserved samples. To re-
serve a few samples have proven much helpful to maintain
the performance for old classes [29, 15]. Figure 7(b) shows
the comparison of our approach with iCaRL reserving d-

837

(a) iCaRL-CNN (51.80%)

(b) iCaRL-NME (59.13%)

(c) Ours-NME (60.21%)

(d) Ours-CNN (62.34%)

Figure 9. The comparison of confusion matrix (with entries trans-
formed by log (1 + x) for better visibility). CIFAR100 (1 phase)
is adopted as the benchmark for convenience. Along with each
method is the overall top-1 accuracy on the 100 classes.

ifferent number of samples per class. The more samples
reserved, the better performance for both iCaRL and our
approach. While in each case, the results of our approach
are superior to those of iCaRL.

The effect of adaptive loss weight.
In our approach we
introduce an adaptive loss weight in Eq (7) for the distilla-
tion loss. Figure 8 shows the effect of adaptive loss weight
4
compared to the baseline that uses the Ô¨Åxed constant Œªbase
to weight the distillation loss. According to Figure 8, we
can observe that, the adaptive loss weight for the distilla-
tion loss can help achieve better performance for long se-
quences of classes. Eq (7) is a heuristic strategy and we
believe that there exists better choice to set the adaptive loss
weight which will be explored in the future work.

The comparison of confusion matrix. Figure 9 shows
the comparison of confusion matrix by iCaRL and our ap-
proach, which can provides further insight into the behav-
iCaRL-CNN (Figure 9(a)) tends to
iors of both methods.
classify the samples into new classes, while is caused by

4Œªbase is optimized in the case of 1 phase where the number of old and

new classes are the same.

the severe imbalance between old and new classes. The ad-
verse effects of the imbalance is mitigated in the last three
methods, while Ours-CNN achieves the best overall per-
formance. The confusion matrix of Ours-CNN suggests
more balanced predictions over all classes, both in terms
of diagonal entries (i.e. correction predictions) as well as
off-diagonal entries (i.e. mistakes), which indicates that the
class imbalance is well handled in our approach.

5. Conclusion

This work develops a novel framework to learn a uniÔ¨Åed
classiÔ¨Åer under the multi-class incremental setting. Our s-
tudy reveals that the imbalance between old and new classes
is an crucial cause for the challenges in this task, which is
handled from different aspects in our approach, including
cosine normalization, less-forget constraint, and inter-class
separation. The combination of these components rebal-
ances the training process which can thus more effectively
preserve the previous knowledge and reduce the ambiguities
between old and new classes. The extensive experiments
on CIFAR100 and ImageNet demonstrate that our approach
outperforms iCaRL by a large margin, and brings consistent
improvements under different settings.

Acknowledgment

This work is partially supported by the NSFC under
Grant 61673362 & 61836008, Youth Innovation Promotion
Association CAS, and the Fundamental Research Funds for
the Central Universities. This work is partially supported
by the Collaborative Research grant from SenseTime Group
(CUHK Agreement No. TS1610626 & No. TS1712093),
and the General Research Fund (GRF) of Hong Kong (No.
14236516 & No. 14203518).

References

[1] Rahaf Aljundi, Francesca Babiloni, Mohamed Elhoseiny,
Marcus Rohrbach, and Tinne Tuytelaars. Memory aware
synapses: Learning what (not) to forget. In ECCV, 2018.

[2] Rahaf Aljundi, Punarjay Chakravarty, and Tinne Tuytelaars.
Expert gate: Lifelong learning with a network of experts. In
CVPR, 2017.

[3] Francisco M Castro, Manuel Mar¬¥ƒ±n-Jim¬¥enez, Nicol¬¥as Guil,
Cordelia Schmid, and Karteek Alahari. End-to-end incre-
mental learning. In ECCV, 2018.

[4] Gert Cauwenberghs and Tomaso Poggio.

Incremental and
decremental support vector machine learning. In NIPS, 2001.
[5] Arslan Chaudhry, Marc‚ÄôAurelio Ranzato, Marcus Rohrbach,
and Mohamed Elhoseiny. EfÔ¨Åcient lifelong learning with a-
gem. In ICLR, 2019.

[6] Nitesh V Chawla, Kevin W Bowyer, Lawrence O Hall, and
W Philip Kegelmeyer. Smote: synthetic minority over-
sampling technique.
Journal of artiÔ¨Åcial intelligence re-
search, 16:321‚Äì357, 2002.

838

[7] Jia Deng, Wei Dong, Richard Socher, Li-Jia Li, Kai Li,
and Li Fei-Fei. Imagenet: A large-scale hierarchical image
database. In CVPR, 2009.

[8] Jeff Donahue, Yangqing Jia, Oriol Vinyals, Judy Hoffman,
Ning Zhang, Eric Tzeng, and Trevor Darrell. Decaf: A deep
convolutional activation feature for generic visual recogni-
tion. In ICML, 2014.

[9] Qi Dong, Shaogang Gong, and Xiatian Zhu. Class rectiÔ¨Å-
cation hard mining for imbalanced deep learning. In ICCV,
2017.

[10] Spyros Gidaris and Nikos Komodakis. Dynamic few-shot

visual learning without forgetting. In CVPR, 2018.

[11] Ross Girshick, Jeff Donahue, Trevor Darrell, and Jitendra
Malik. Rich feature hierarchies for accurate object detection
and semantic segmentation. In CVPR, 2014.

[12] Haibo He, Yang Bai, Edwardo A Garcia, and Shutao Li.
Adasyn: Adaptive synthetic sampling approach for imbal-
anced learning. In International Joint Conference on Neural
Networks, 2008.

[13] Haibo He and Edwardo A Garcia. Learning from imbalanced
data. IEEE Transactions on Knowledge & Data Engineering,
(9):1263‚Äì1284, 2008.

[14] Geoffrey Hinton, Oriol Vinyals, and Jeff Dean. Distilling
the knowledge in a neural network. arXiv preprint arX-
iv:1503.02531, 2015.

[15] Saihui Hou, Xinyu Pan, Chen Change Loy, Zilei Wang, and
Dahua Lin. Lifelong learning via progressive distillation and
retrospection. In ECCV, 2018.

[16] Chen Huang, Yining Li, Chen Change Loy, and Xiaoou
Tang. Learning deep representation for imbalanced classi-
Ô¨Åcation. In CVPR, 2016.

[17] Chen Huang, Chen Change Loy, and Xiaoou Tang. Discrim-
inative sparse neighbor approximation for imbalanced learn-
ing. IEEE transactions on neural networks and learning sys-
tems, 29(5):1503‚Äì1513, 2018.

[18] Nathalie Japkowicz and Shaju Stephen. The class imbal-
ance problem: A systematic study. Intelligent data analysis,
6(5):429‚Äì449, 2002.

[19] Heechul Jung, Jeongwoo Ju, Minju Jung, and Junmo Kim.
Less-forgetful learning for domain expansion in deep neural
networks. In AAAI, 2018.

[20] Ronald Kemker and Christopher Kanan. Fearnet: Brain-

inspired model for incremental learning. In ICLR, 2018.

[21] James Kirkpatrick, Razvan Pascanu, Neil Rabinowitz, Joel
Veness, Guillaume Desjardins, Andrei A Rusu, Kieran
Milan, John Quan, Tiago Ramalho, Agnieszka Grabska-
Barwinska, et al. Overcoming catastrophic forgetting in neu-
ral networks. Proceedings of the National Academy of Sci-
ences, 114(13):3521‚Äì3526, 2017.

[22] Alex Krizhevsky and Geoffrey Hinton. Learning multiple

layers of features from tiny images. 2009.

[23] Alex Krizhevsky, Ilya Sutskever, and Geoffrey E Hinton.
Imagenet classiÔ¨Åcation with deep convolutional neural net-
works. In NIPS, 2012.

[24] Zhizhong Li and Derek Hoiem. Learning without forgetting.

In ECCV, 2016.

[25] Chunjie Luo, Jianfeng Zhan, Xiaohe Xue, Lei Wang, Rui
Ren, and Qiang Yang. Cosine normalization: Using cosine
similarity instead of dot product in neural networks. In In-
ternational Conference on ArtiÔ¨Åcial Neural Networks, 2018.
[26] German I Parisi, Ronald Kemker, Jose L Part, Christo-
pher Kanan, and Stefan Wermter. Continual lifelong learn-
ing with neural networks: A review. arXiv preprint arX-
iv:1802.07569, 2018.

[27] Hang Qi, Matthew Brown, and David G Lowe. Low-shot

learning with imprinted weights. In CVPR, 2018.

[28] Amal Rannen Ep Triki, Rahaf Aljundi, Matthew Blaschko,
and Tinne Tuytelaars. Encoder based lifelong learning. In
ICCV, 2017.

[29] Sylvestre-Alvise RebufÔ¨Å, Alexander Kolesnikov,

and
Incremental classiÔ¨Åer and

Christoph H Lampert.
representation learning. In CVPR, 2017.

icarl:

[30] Stefan Ruping. Incremental learning with support vector ma-

chines. In ICDM, 2001.

[31] Andrei A Rusu, Neil C Rabinowitz, Guillaume Desjardins,
Hubert Soyer, James Kirkpatrick, Koray Kavukcuoglu, Raz-
van Pascanu, and Raia Hadsell. Progressive neural networks.
arXiv preprint arXiv:1606.04671, 2016.

[32] Kai Ming Ting. A comparative study of cost-sensitive boost-

ing algorithms. In ICML, 2000.

[33] Oriol Vinyals, Charles Blundell, Tim Lillicrap, Daan Wier-
stra, et al. Matching networks for one shot learning. In NIPS,
2016.

[34] Max Welling. Herding dynamical weights to learn. In ICML,

2009.

[35] Yue Wu, Yinpeng Chen, Lijuan Wang, Yuancheng Ye,
Zicheng Liu, Yandong Guo, Zhengyou Zhang, and Yun Fu.
Incremental classiÔ¨Åer learning with generative adversarial
networks. arXiv preprint arXiv:1802.00853, 2018.

[36] Jaehong Yoon, Eunho Yang, Jeongtae Lee, and Sung Ju H-
wang. Lifelong learning with dynamically expandable net-
works. In ICLR, 2018.

[37] Friedemann Zenke, Ben Poole, and Surya Ganguli. Contin-

ual learning through synaptic intelligence. In ICML, 2017.

[38] Zhi-Hua Zhou and Xu-Ying Liu. On multi-class cost-

sensitive learning. In AAAI, 2006.

839

