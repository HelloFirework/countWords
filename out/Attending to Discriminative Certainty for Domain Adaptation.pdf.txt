Attending to Discriminative Certainty for Domain Adaptation

Vinod Kumar Kurmi∗,

Shanu Kumar∗, Vinay P. Namboodiri

Indian Institute of Technology Kanpur

India

{vinodkk,sshanu,vinaypn}@iitk.ac.in

Abstract

In this paper, we aim to solve for unsupervised domain
adaptation of classiﬁers where we have access to label in-
formation for the source domain while these are not avail-
able for a target domain. While various methods have been
proposed for solving these including adversarial discrimi-
nator based methods, most approaches have focused on the
entire image based domain adaptation. In an image, there
would be regions that can be adapted better, for instance,
the foreground object may be similar in nature. To obtain
such regions, we propose methods that consider the prob-
abilistic certainty estimate of various regions and specify
focus on these during classiﬁcation for adaptation. We ob-
serve that just by incorporating the probabilistic certainty
of the discriminator while training the classiﬁer, we are able
to obtain state of the art results on various datasets as com-
pared against all the recent methods. We provide a thor-
ough empirical analysis of the method by providing abla-
tion analysis, statistical signiﬁcance test, and visualization
of the attention maps and t-SNE embeddings. These evalua-
tions convincingly demonstrate the effectiveness of the pro-
posed approach.

1. Introduction

With the advent of deep learning, there has been substan-
tial progress for solving image classiﬁcation tasks with state
of the art methods obtaining lesser than 3% error (on top ﬁve
results) on the imagenet dataset. However, it was observed
that these results do not transfer to other datasets [25] due
to the effect of dataset bias [44]. The classiﬁers trained on
one dataset (termed source dataset) show a signiﬁcant drop
in accuracy when tested on another dataset (termed target
dataset). To address this issue, some methods have been
proposed for adapting domains [7, 50]. One of the more
successful approaches towards addressing this domain shift
has been based on the adversarial adaptation of features us-

∗Equal contributions from both authors.

(a)

(b)

(c)

(d)

(e)

(f)

Figure 1: Visualization of the uncertainty and certainty
maps of the discriminator during the midst of training is
provided for the input image (a). The aleatoric and pre-
dictive uncertain regions of the discriminator are shown in
image (b) and (d). While aleatoric and predictive certain
regions of the discriminator are shown in (c) and (e). From
the ﬁgure, it is clear that the certain regions of the discrim-
inator during training mostly corresponds to (f) classiﬁer’s
activation map based on true label at the end of training.

ing an adversarial discriminator [12] that aims to distinguish
between samples drawn from the source and target datasets.
Due to the adversarial training, the feature representations
are brought close such that the discriminator is not able to
distinguish between samples from source and target dataset.
However, all approaches that are based on this idea consider
the whole image as being adapted. This usually is not the
case as there are predominant regions in an image that may
be better adapted and useful for improving classiﬁcation on
target dataset. We address this issue and propose a simple
approach for solving this problem.

To specify regions that can be adapted we propose the
use of certainty of a probabilistic discriminator. During
training, we identify regions where the discriminator is cer-
tain, i.e., the probabilistic uncertainty for these regions is

1491

low. These regions can be adapted because there exists a
clear distinction between the source and target regions. Fig-
ure 1 shows that using measures such as data uncertainty
(known as aleatoric uncertainty) [19] and predictive uncer-
tainty [24], we can obtain regions that can be adapted bet-
ter. We also observe from the Figure 1 and 5 that for most
of the duration during training, discriminator is certain on
the foreground regions, as the foreground is hard to adapt.
Hence, when the classiﬁer is trained with the emphasis be-
ing placed on these regions, then we observe that the classi-
ﬁer focuses on these regions during prediction and therefore
generalizes better on target dataset. Quantitatively we ob-
serve results that are up to 7.4% better than the current state
of the art methods on Ofﬁce-Home dataset [49].

To summarize, through this paper we make the following

contributions:

• We propose a method to identify adaptable regions us-
ing the certainty estimate of the discriminator, and this
is evaluated using various certainty estimates.

• We use these certainty estimate weights for improving
the classiﬁer performance on target dataset by focusing
the training of the classiﬁer on the adaptable regions of
the source dataset.

• We provide a thorough evaluation of the method by
considering detailed comparison on standard bench-
mark datasets against the state of the art methods and
also provide an empirical analysis using statistical sig-
niﬁcance analysis, visualization and ablation analysis
of the proposed method.

• An additional observation is that by using Bayesian
classiﬁers we also improve the robustness of the classi-
ﬁer in addition to obtaining certainties of classiﬁcation
accuracy. This aids in better understanding of the pro-
posed method.

2. Literature Survey

Some studies have examined different adaptation meth-
ods. One study by [47] examined domain adaptation by
minimizing the maximum mean discrepancy distance. The
maximum mean discrepancy based approaches were fur-
ther extended to multi-kernel MMD in [25]. In adversar-
ial learning framework [12] has proposed a method to min-
imize the source target discrepancy using a gradient re-
versal layer at discriminator. Recently many adversarial
methods have been applied in the domain adaptation task
to bring the source and target distribution closer. Adver-
sarial discriminative domain adaptation [46] considers an
inverted label GAN loss. Wasserstein distance based dis-
criminator was used in [39] to bring the two distributions
closer. Domain confusion network [45] was also used to
solve the adaptation problem in two domains by minimiz-
ing the discriminate distance between two domains. The
discriminative feedback of the discriminator also applied

in the paraphrase generation problem [33]. Another ad-
versarial discriminator based model is [34], where multiple
discriminators (MADA) have been used to solve the mode
collapse problem in the domain adaptation. Some works
closely related to MADA have been proposed in [4, 3].
The labeled discriminator [23] used to tackle the mode col-
lapse problem in domain adaptation. The adversarial do-
main adaptation also explored in scene graph [22]. Other
source and target discrepancy minimization based methods
such as [37, 54] also address the domain adaptation prob-
lem. [32, 31] have proposed an exemplar based discrepancy
minimization method. Recently [2, 5] have applied gen-
erative adversarial network [14] for the domain adaptation
problems. Image generation methods are used to adapt the
source and target domain [13, 38, 30]. Other work in[16]
and [42] have used Cycle consistency [55] loss and deep
coral loss [41, 40] for ensuring the closeness of source and
target domain respectively. Deep Bayesian models have
been used to play an important role in the estimation of the
deep model uncertainty. The Bayesian formulation in do-
main adaptation natural language processing has been pro-
posed in [9]. In [11], it has been justiﬁed that dropout can
also work as an approximation of the deep Bayesian net-
work. Works on the uncertainty estimation have been re-
ported in [10, 19]. In [29] predictive uncertainty has been
calculated over the prior networks. Uncertainty in the en-
semble model along with adversarial training has been dis-
cussed in [24]. Another work on the Bayesian uncertainty
estimation has been reported in the [43].

Attention-based networks have been widely applied in
many computer vision applications such as image caption-
ing [51, 53], visual question answer [52, 31, 18] and speech
recognition [6]. The advantage of the attention model is that
it helps to learn some set of weights over a set of represen-
tation input which has relatively more importance than oth-
ers. Recently [48] showed that the attention mechanism can
also be achieved by dispensing with recurrence and convo-
lutions. A recent work [17] addresses the domain adaptation
problem by obtaining the synthetic source and target images
from CycleGAN [55], and then aligned the attention map of
all the pairs.

3. Methodology

In the unsupervised domain adaptation problem,

the
i ) consists of data sample (xs
source dataset Ds = (xs
i , ys
i )
with corresponding label (ys
i ) where Ds ∈ Ps and the tar-
get dataset Dt(xt
i) consists of unlabeled data samples (xt
i)
where Dt ∽ Pt. Ps and Pt are the source and target dis-
tributions. We further assume that both the domains are
complex and unknown. For solving this task, we are follow-
ing the adversarial domain adaptation framework, where a
discriminator is trained to learn domain invariant features
domain invariant while a classiﬁer is trained to learn class

492

discriminative features. In this paper, we are proposing a
discriminator certainty based domain adaption model repre-
sented in the Figure 2, which consists of three major mod-
ules: Feature extractor, Bayesian Classiﬁer, and Bayesian
Discriminator. The feature extractor is pretrained on the
Imagenet dataset, while both the classiﬁer and discrimina-
tor are Bayesian neural networks (BNN). We have followed
the approach deﬁned in [11, 19, 20] for transforming deep
neural networks into BNNs.

3.1. Bayesian Classiﬁer

Bayesian framework is one of the efﬁcient ways to pre-
dict uncertainty. Gal et.al [10] has shown that by apply-
ing dropout after every fully connected (fc) layer, we can
perform probabilistic inference for deep neural networks.
Hence we have followed a similar approach for deﬁning the
classiﬁer. For estimating uncertainty, similar to [19], we
trained the classiﬁer to output class probabilities along with
aleatoric uncertainty (data uncertainty). The predictive un-
certainty includes both model uncertainty and data uncer-
tainty, where model uncertainty results from uncertainty in
model parameters. Estimation of aleatoric uncertainty for
the classiﬁer makes the features more robust for prediction,
and estimation of predictive uncertainty provides a tool for
visualizing model’s predictions.

For the input sample xi, the feature extractor Gf outputs
features fi, represented by fi = Gf (xi). The predicted class
logits yc

i and aleatoric uncertainty vc

i are obtained as:

classiﬁer. The uncertainty in the discriminator network im-
plies the region where it is uncertain about its prediction
about the domain. The uncertainty estimation of the dis-
criminator can guide the feature extractor more efﬁciently
for domain adaptation. All real-world images contain some
type of aleatoric uncertainty or noise. These regions which
contain aleatoric uncertainty, are not adaptable. By aligning
these uncertain regions, we are corrupting the feature rep-
resentation, thus confusing the classiﬁer during predictions
for the target domain. So, by estimating aleatoric uncer-
tainty, the discriminator is avoiding the learning of feature
representations for these regions, which also reduces neg-
ative transfer [34]. The negative transfer introduces false
alignment of the mode of two distributions across domains,
which needs to be prevented during adaptation. Similarly,
the predictive uncertainty tells us about the model’s inca-
pability to classify the domains, as the discriminator is not
sure about the domain. Predictive uncertainty occurs in the
region where either it is already adapted, or there is noise
which corresponds to aleatoric uncertainty. We obtain the
discriminator predicated logits and variance using the fol-
lowing equations

yd
i = Gdy(Gd(fi)),

vd
i = Gdv(Gd(fi))

(4)

where Gdy and Gdv predict domain class logits yd
i and do-
main aleatoric uncertainty vd
i respectively using features
from Gd. The domain classiﬁcation loss Ldy is deﬁned as:

yc
i = Gcy(Gc(fi)),

vc
i = Gcv(Gc(fi))

(1)

Ldy =

1

ns + nt X

xi∈Ds∪Dt

L(yd

i , di)

(5)

where Gcy and Gcv are the logits and aleatoric uncer-
tainty prediction modules of the classiﬁer Gc respectively.
The classiﬁcation loss for predicted logits is deﬁned as:

Lcy =

1
ns X

xi∈Ds

L(yc

i , yi)

(2)

where L is the cross entropy loss function, di is the true
domain of the image, and ns and nt are the number of
source and target samples. The domain label di is deﬁned
to be 0 if xi ∈ Ds and 1 if xi ∈ Dt. The discriminator
aleatoric loss Ldv is deﬁned as:

where L is the cross entropy loss function and yi is the true
class label for the input xi. The total number of data sam-
ples in the source domain is denoted as ns. The classiﬁer
aleatoric loss Lcv for predicted uncertainty vc
i is deﬁned as:

Ldv = −

i + σd

i

ˆyd
i,t = yd
1

ns + nt X

xi∈Ds∪Dt

∗ ǫt,
1
T X

log

t

ǫt ∼ N (0, I)

L(ˆyd

i,t, di)

(6)

i

ˆyc
i,t = yc
i + σc
1
ns X

xi∈Ds

Lcv = −

∗ ǫt,
1
T X

log

t

ǫt ∼ N (0, I)

L(ˆyc

i,t, yi)

(3)

i is the standard deviation, vc

i )2. The classi-
where σc
ﬁer is trained by jointly minimizing both the classiﬁcation
loss Lcy and aleatoric loss Lcv.

i = (σc

3.2. Bayesian Discriminator

In the proposed method, the discriminator is also mod-
eled in the Bayesian framework similar to the Bayesian

i = (σd

i )2. Discriminator is trained by jointly mini-
where vd
mizing both the domain classiﬁcation loss Ldy and discrim-
inator aleatoric loss Ldv.

3.3. Certainty Based Attention

Uncertainty estimation of the discriminator can help in
identifying those regions which can be adapted, cannot be
adapted, or already adapted. The regions which are already
aligned will confuse the discriminator for predicting the do-
main. Hence discriminator will be highly uncertain on these
regions. The discriminator will also be highly uncertain on

493

Figure 2: The architecture of Certainty based Attention for Domain Adaptation (CADA), consists of a shared feature ex-
tractor, Bayesian classiﬁer and Bayesian discriminator where both the classiﬁer and discriminator predict the variance value
along with the prediction score. Discriminator’s predictive or aleatoric uncertainty is used to highlight the regions where the
discriminator is certain about its predictions.

the regions containing aleatoric uncertainty, and these re-
gions can’t be adapted. Uncertainty estimation can also help
to identify regions where discriminator is certain or the re-
gions which can be further aligned.

In most of the datasets, the discriminator can easily dis-
criminate between the source and target images by only at-
tending on the background during the initial phase of the
training. Hence, the discriminator will be more certain in
these regions, which results in easier adaptation of back-
ground regions after some adversarial training. But the fore-
ground regions are difﬁcult to adapt, as foreground varies a
lot across all the classes and images. Therefore for most
of the span during training, the discriminator will be cer-
tain on the transferable regions of the foreground. Thus, if
the classiﬁer attends to the certain regions of the discrimi-
nator, it will focus more on the transferable regions of the
foreground during training.

The Certainty Attention based Domain Adaption
(CADA) model is shown in Figure 2. In the proposed work,
we propose the two variants of CADA: aleatoric certainty
based attention (CADA-A) and predictive certainty based
attention (CADA-P).

3.3.1 Aleatoric Certainty based Attention

The aleatoric uncertainty (vd
i ) of the domain discriminator
occurs due to corruption or noise in the regions. These re-
gions are not suited for the adaptation as well as for object
classiﬁcation and should be less focused as compared to the
certain regions for the classiﬁcation task. For identifying
the aleatoric uncertain regions, we compute the gradient of
aleatoric uncertainty with respect to the features fi. These
) will ﬂow back through the gradient rever-
gradients (

∂vd
i
∂fi

sal layer, and will correspond to the gradients of aleatoric
certainty, i.e., − ∂vd
i
∂fi

.

pi = fi ∗ −

∂vd
i
∂fi

(7)

Therefore the positive sign of the product of features and
gradients of the aleatoric certainty denotes the positive in-
ﬂuence of aleatoric certainty on these features. i.e the dis-
criminator is certain on these regions.

ai = ReLU(pi) + c ∗ ReLU(−pi)

(8)

For obtaining the regions where the discriminator is cer-
tain, the product pi is passed through a ReLU function. But
for ignoring the negative values that corresponds to uncer-
tain regions, −pi is again passed through a ReLU function.
This is then multiplied with a large number c, such that after
applying softmax over ai all negative values of pi become
zero and all the positive values are normalized.

wi = (1 − vd

i ) ∗ Softmax(ai)

(9)
To focus on more attentive (certain) regions, we follow
the residual setting [27] for obtaining the effective weighted
features hi. Images with high aleatoric uncertainty (lower
certainty) should be less attentive, and it is obtain by mul-
tiplying the normalized softmax attention value to its cer-
tainty value (1 − vd
i ) using the Eq. 9. The weighted feature
hi is generated as follows:

hi = fi ∗ (1 + wi)

(10)

3.3.2 Predictive Certainty based Attention

The predictive uncertainty measures the model’s capabil-
ity for prediction. It occurs in the regions which are either

494

already domain invariant or which contain noise. The re-
gions corresponding to discriminator’s predictive certainty
are domain transferable regions and should be attended dur-
ing classiﬁcation. We follow the approach proposed in [19]
for computing the predictive uncertainty of discriminator.
It is obtained by the entropy of the average class probabili-
ties of the Monte Carlo (MC) samples. We sample weights
from Gd, and perform MC simulations over domain prob-
abilities p(yd
i,t for estimating
predictive uncertainty Var d(fi).

i,t) and aleatoric uncertainty vd

3.4. Training Algorithm

We employ Certainty Attention based Domain Adaption
(CADA) models for solving the task of unsupervised do-
main adaptation. Both the CADA-P and CADA-A mod-
els jointly learn domain invariant and class invariant fea-
tures, by focusing the classiﬁer’s attention on the discrim-
inator’s certain regions. So, the class probabilities yc
i and
aleatoric uncertainty vc
i for the classiﬁer will be estimated
using weighted feature hi.

gi,t = Gt

d(fi), Gt

d

∼ Gd

(11)

yc
i = Gcy(Gc(hi)),

vc
i = Gcv(Gc(hi))

(19)

Using the sampled model, we calculate domain probabili-
ties and aleatoric uncertainty.

The ﬁnal objective function J for optimizing both the mod-
els is deﬁned as:

p(yd

i,t) = Softmax(Gdy(gi,t)),

vd
i,t = Gdv(gi,t) (12)

J = Lcy + Lcv − λ ∗ (Ldy + Ldv)

(20)

H(yd

i,t) = −

2

X

c=1

p(yd

i,t = c) ∗ log(p(yd

i,t = c))

Var d(fi) ≈

1
T

T

X

t=1

(cid:16)vd

i,t + H(yd

i,t)(cid:17)

(13)

(14)

i,t) is the Entropy of the p(yd

where H(yd
i,t). For identify-
ing the predictive uncertain regions, we compute gradients
of the predictive uncertainty Var d(fi) of the discriminator
with respect to the features fi i.e. ∂Var d
, and negative
of these gradients which returns through the gradient rever-
sal layer will correspond to the gradients of the predictive
certainty, i.e., − ∂Var d

(fi)

(fi)

∂fi

.

∂fi

pi = fi ∗ −

∂Var d(fi)

∂fi

ai = ReLU(pi) + c ∗ ReLU(−pi)
wi = (1 − Var d
i (fi)) ∗ Softmax(ai)

(15)

(16)

(17)

Similar to aleatoric certainty based attention, for obtaining
the predictive certain regions we apply ReLU function to
pi and ignoring its negative values (corresponds to uncer-
tain regions), a ReLU function is applied to negative of pi,
and multiply it with a large number c using Eq. 16. After
applying the Softmax, the features that are activated by the
predictive uncertainty will have zero weight and for features
that are highly activated by the predictive certainty will get
more weight. The residual weighted features are obtain by
following equations

hi = fi ∗ (1 + wi)

(18)

Therefore the images with high predictive uncertainty have
lower value of wi, have less attention, while images have
high predictive certainty have high value of wi, produce
high attentive features.
This will ensure that already
adapted regions or non- adaptive region (both cases have
high uncertainty) have the lower attention value.

where λ is a trade-off parameter between classiﬁer and dis-
criminator. The optimization problem is to ﬁnd the param-
eters ˆθf , ˆθc, ˆθcy, ˆθcv, ˆθd, ˆθdy, ˆθdv that jointly satisfy:

(ˆθf , ˆθc, ˆθcy, ˆθcv) = arg min
θf ,θc,
θcy ,θcv
(ˆθd, ˆθdy, ˆθdv) = arg max
θd,θdy ,θdv

J(θf , θc, θcy, θcv, θd, θdy, θdv)

J(θf , θc, θcy, θcv, θd, θdy, θdv)

The implementation details are provided in supplementary
material and other details are provided in the project page 1

4. Experiments and Results

4.1. Datasets

Ofﬁce-31 Dataset The Ofﬁce-31 [36] consists of three
domains: Amazon, Webcam and DSLR with 31 classes in
each domain. There are 2817 images in Amazon (A) do-
main, 795 images in Webcam (W) and 498 images are in
DSLR (D) domain makes total 4,110 images. To enable
unbiased evaluation, we evaluate all methods on 6 transfer
tasks A→W, D→A, W→A, A →D, D→ W and W → D.

Ofﬁce-Home Dataset We also evaluated our model
on the Ofﬁce-Home dataset [49] for unsupervised domain
adaptation. This dataset consists of four domains: Art (Ar),
Clip-art (Cl), Product (Pr) and Real-World (Rw). Each do-
main has common 65 categories and total 15,500 images.
We evaluated our model by considering all the 12 adapta-
tion tasks. The performance is reported in the Table 3.

ImageCLEF Dataset ImageCLEF-2014 dataset con-
sists of three datasets: Caltech-256 (C), ILSVRC 2012 (I),
and Pascal VOC 2012 (P). There are 12 common classes and
total 600 images in each domain. We evaluate our model on
all the 6 transfer tasks and results are reported in Table 4.

1https://delta-lab-iitk.github.io/CADA/

495

Table 1: Classiﬁcation accuracy (%) on Ofﬁce-31 dataset for unsupervised domain adaptation (AlexNet[21])

Method

A → W

D→ W

W → D

A → D

D → A

W → A

Average

Alexnet[21]
MMD[47]
RTN[27]
DAN[25]
GRL [12]
JAN [28]
CDAN[26]
MADA[34]

60.6 ± 0.4
61.0 ± 0.5
73.3 ± 0.3
68.5 ± 0.4
73.0 ± 0.5
75.2 ± 0.4
77.9 ± 0.3
78.5 ± 0.2

CADA-W 82.3± 0.3
84.1 ± 0.2
CADA-A
83.4 ± 0.2
CADA-P

95.0± 0.2
95.0± 0.3
96.8 ± 0.2
96.0 ± 0.3
96.4 ± 0.3
96.6 ± 0.2
96.9 ± 0.2
99.8 ± 0.1

99.2± 0.1
99.2 ± 0.2
99.8 ± 0.1

99.5± 0.1
98.5± 0.3
99.6 ± 0.1
99.0 ± 0.2
99.2 ± 0.3
99.6 ± 0.1
100.0 ± 0
100.0 ± 0

99.6 ± 0.1
99.8± 0.2
100.0 ± 0

64.2 ± 0.3
64.9 ± 0.4
71.0± 0.2
66.8± 0.2
72.3 ± 0.3
72.8 ± 0.3
74.6 ± 0.2
74.1 ± 0.1

75.9± 0.2
77.3 ± 0.1
80.1 ± 0.1

45.5± 0.5
47.2± 0.5
50.5± 0.3
50.0± 0.4
52.4± 0.4
57.5± 0.2
55.1± 0.3
56.0± 0.2

57.7± 0.1
61.3± 0.2
59.8± 0.2

48.3± 0.5
49.4± 0.4
51.0± 0.1
49.8± 0.3
50.4± 0.5
56.3± 0.2
57.5± 0.4
54.5± 0.3

53.3± 0.2
54.1± 0.3
59.5± 0.3

68.8
69.3
74.1
71.7
74.1
76.3
77.0
77.1

78.0
79.3
80.4

Table 2: Classiﬁcation accuracy (%) on Ofﬁce-31 dataset for unsupervised domain adaptation (ResNet-50 [15])

Method

A → W

D→ W

W → D

A → D

D → A

W → A

Average

ResNet-50[15]

DAN[25]
RTN[27]

DANN[12]
ADDA [46]

JAN[28]

MADA[34]
SimNet[35]

GTA[38]

DAAA [17]
CDAN[26]

CADA-W
CADA-A
CADA-P

68.4±0.2
80.5±0.4
84.5±0.2
82.0±0.4
86.2±0.5
85.4±0.3
90.0± 0.1
88.6 ±0.5
89.5±0.5
86.8±0.2
93.1±0.1

96.7±0.1
97.1±0.2
96.8±0.1
96.9±0.2
96.2±0.3
97.4± 0.2
97.4 ±0.1
98.2±0.2
97.9±0.3
99.3±0.1
98.6±0.1

93.9± 0.1
96.8 ± 0.2
97.0 ± 0.2

99.1 ± 0.2
99.0±0.1
99.3 ±0.1

99.3±0.1
99.6±0.1
99.4±0.1
99.1±0.1
98.4±0.3
99.8±0.2
99.6± 0.1
99.7±0.2
99.8±0.4
100.0±0.0
100.0±0.0

99.6± 0.2
99.8 ±0.1
100.0±0

68.9±0.2
78.6±0.2
77.5±0.3
79.7±0.4
77.8±0.3
84.7± 0.3
87.8±0.2
85.2±0.3
87.7±0.5
88.8±0.4
93.4±0.2

93.2± 0.3
93.4±0.1
95.6±0.1

62.5±0.3
63.6±0.3
66.2±0.2
68.2±0.4
69.5±0.4
68.6±0.3
70.3±0.3
73.4±0.8
72.8±0.3
74.3±0.2
71.0±0.3

68.9± 0.1
71.7±0.2
71.5±0.2

60.7± 0.3
62.8±0.2
64.8±0.3
67.4±0.5
68.9±0.5
70.0±0.4
66.4±0.3
71.6±0.6
71.4±0.4
73.9 ±0.2
70.3 ±0.3

68.3± 0.2
70.5±0.3
73.1±0.3

76.1
80.4
81.6
82.2
82.9
84.3
85.2
86.2
86.5
87.2
87.7

87.2
88.5
89.5

Table 3: Classiﬁcation accuracy (%) on Ofﬁce-Home dataset for unsupervised domain adaptation (ResNet-50 [15])

Method

Ar→Cl Ar→Pr Ar→Rw Cl→Ar Cl→Pr Cl→Rw Pr→Ar Pr→Cl Pr→Rw Rw→Ar Rw→Cl Rw→Pr Avg

50.0
57.0
59.3
61.2
65.9

75.4
76.4

58.0
67.9
70.1
68.9
73.4

80.2
80.7

37.4
45.8
47.0
50.4
55.7

61.7
61.3

41.9
56.5
58.5
59.7
62.7

74.6
75.2

46.2
60.4
60.9
61.0
64.2

74.9
75.2

38.5
44.0
46.1
45.8
51.8

62.9
63.2

31.2
43.6
43.7
43.4
49.1

54.4
54.5

60.4
67.7
68.5
70.3
74.5

80.9
80.7

53.9
63.1
63.2
63.9
68.2

74.3
73.9

41.2
51.5
51.8
52.4
56.9

61.1
61.5

59.9 46.1
74.3 56.3
76.8 57.6
76.8 58.3
80.7 62.8

84.4 70.1
84.1 70.2

DAN[25]
DANN[12]

ResNet-50[15] 34.9
43.6
45.6
45.9
50.6

CDAN[26]

JAN[28]

CADA-A
CADA-P

56.9
56.9

4.2. Results

Following the common setting in unsupervised domain
adaption, we used the pre-trained Alexnet [21] and pre-
trained ResNet [15] architecture as our base model. For
Ofﬁce-31 dataset, results are reported in the Table 1 and

Table 2. From the table,
it is clear that the proposed
CADA outperforms the other methods on most transfer
tasks, where CADA-P is the top-performing variant for both
Alexnet and Resnet model. On average, we obtain improve-
ments of 3.3% and 1.8% over the state of the art methods

496

(a) ResNet

(b) DANN

(c) CADA-A

(d) CADA-P

(e) Proxy distance

Figure 3: The t-SNE visualization of representations learned by (a) ResNet, (b) DANN, (c) CADA-A, and (d) CADA-P (blue:
A; red: W), (e) shows ProxyA-distance for A → W task for method Reset [15], GRL [12] and the proposed model CADA-P

Table 4: Classiﬁcation accuracy (%) on ImageCLEF dataset
for unsupervised domain adaptation (ResNet-50 [15])

Method I → P P→ I I → C C → I C → P P → C Avg

DAN[25]
RTN[27]
GRL [12]
JAN[28]

ResNet [15] 74.8 83.9 91.5 78.0
75.0 86.2 93.3 84.1
75.6 86.8 95.3 86.9
75.0 86.0 96.2 87.0
76.8 88.0 94.7 89.5
MADA [34] 75.0 87.9 96.0 88.8
CDAN[26] 77.2 88.3 98.3 90.7

CADA-A 78.0 91.5 96.3 91.0
78.0 90.5 96.7 92.0
CADA-P

65.5
69.8
72.7
74.3
74.2
75.2
76.7

77.1
77.2

91.2 80.7
91.3 83.3
92.2 84.9
91.5 85.0
91.7 85.8
92.2 85.8
94.0 87.5

95.3 88.2
95.5 88.3

(a) A → W

(b) A → D

Figure 4: Analysis of statistically signiﬁcant difference for
A→W and A →D in ResNet [15], GRL [12], CADA-A, and
CADA-P methods, with a signiﬁcance level of 0.05.

as it can be seen that the difference between other meth-
ods are usually less than 1% and therefore this amount of
improvement is fairly signiﬁcant. In some cases such as,
in Amazon-Webcam (A-W) we obtain almost 4% improve-
ment over the state of the art method. Note that for DSLR-
Amazon (D-A) and Webcam-Amazon (W-A), we do not ob-
tain a state of the art. A very recent work [17] obtain state of
the art results for these two cases. The difference between
the domains is signiﬁcant in these cases, and our method
was not trained to optimally for these cases. The proposed
method has obtained better results in all other cases, and
even in these two cases, our results are competitive.

For the Ofﬁce-Home dataset, the results are reported in
Table 3. For this more challenging dataset we have achieved
state-of-art performance. It is note worthy that the proposed
model provides the classiﬁcation accuracy that are substan-
tially better on this Ofﬁce-Home dataset which is harder

dataset for domain adaptation problem obtaining on aver-
age an improvement of 7.4% and 7.3% over the state of the
art methods using CADA-P and CADA-A respectively.

The results on the ImageCLEF are reported in Table 4.
Both CADA-P and CADA-A outperform the other state of
the art models for all the transfer tasks except I→C, with
0.8% and 0.7% improvement on average over the state of
the art methods respectively. The room for improvement is
smaller than the Ofﬁce-Home Dataset, as ImageCLEF only
have 12 classes and datasets in each domain and class cate-
gory is equal, making it much easier for domain adaptation.

5. Ablation Study

We investigate the Bayesian model with and without at-
tention for both Alexnet and ResNet model on the ofﬁce-31
dataset. From Table 1 and 2, it is clear that the Bayesian
model without attention (CADA-W) performs signiﬁcantly
better than the most of the other previous models, as predict-
ing uncertainty for discriminator reduces negative transfer,
by neglecting the regions which contain data uncertainty.
Table 1 and 2 demonstrates that CADA-P (predictive cer-
tainty) performs better than CADA-A (aleatoric certainty),
as predictive uncertainty includes both model and aleatoric
uncertainty, providing a better estimate of certain regions
for the discriminator.

6. Empirical Analysis

We further provide empirical analysis in terms of quali-
tative analysis of attention maps, feature visualization, dis-
crepancy distance and statistical signiﬁcance for additional
insights about the performance of our method.

6.1. Qualitative Analysis of Attention Maps

To provide the effectiveness of proposed certainty based
adaptation, we provide the certainty map of the discrimi-
nator at different training stages (chosen randomly) in the
Figure 5.
In the ﬁgure, we see that at the initial phase
of the training (after 4 epochs), the discriminator discrim-
inates the source and target domains just by some random
location. As the training progress, the discriminator learns

497

the domain by attending the background of the images (In
A→W, domains are mostly dissimilar in the background).
After some more training, the background is adapted (af-
ter 125 epochs), and now the discriminator attends to fore-
ground part of the image to differentiate the domains (after
535 epochs). However, the foreground varies a lot across
all the images. Hence discriminator is highly certain in
the class object regions. Now with further training of the
model, these class object regions are also adapted (after
1300 epochs). The remaining regions of the image cannot
be further adapted because there is data uncertainty. At the
end of the training, the discriminator will be highly uncer-
tain regarding the domain, and the attention weight on the
regions which are not adaptable will have low weights as
we are using the certainty of the discriminator as the mea-
sure for the weights. Note that at the time of inference, we
do not use the attention weights obtained by certainty for
aiding classiﬁer. These are used only at the time of training.
The results show that these attention weights based training
aids the classiﬁer to better generalize to the target domain.
We have provided more visualization examples in the sup-
plementary material for further justiﬁcation.

6.2. Feature Visualization

Adaptability of target to source features can be visual-
ized using the t-SNE embeddings of images feature. We
follow similar setting in [47, 12, 34] and plot t-SNE embed-
dings of the dataset in the Figure 3. We can observe that the
proposed model correctly aligns the source and target do-
main images with exactly 31 clusters which is equal to the
number of class labels with clear boundaries.

6.3. Discrepancy Distance

A-distance is a measure of cross domain discrepancy[1],
which, together with the source risk, will bound the target
risk. The proxy A-distance is deﬁned as dA = 2(1 − 2ǫ),
where ǫ is the generalization error of a classiﬁer(e.g. kernel
SVM) trained on the binary task of discriminating source
and target. Figure 3 (e) shows dA on tasks A →W with fea-
tures of ResNet[15], GRL[12], and our model. We observe
that dA using our model features is much smaller than dA
using ResNet and GRL features, which suggests that our
features can reduce the cross-domain gap more effectively.

6.4. Statistical Signiﬁcance Test

We analyzed statistical signiﬁcance [8] for variants of
proposed method against GRL [12]. The Critical Difference
(CD) for Nemenyi test depends upon the given conﬁdence
level (which is 0.05 in our case) for average ranks and num-
ber of test datasets. If the difference in the rank of the two
methods lies within CD, then they are not signiﬁcantly dif-
ferent. Figure 4 visualizes the post hoc analysis using the
CD diagram for A→W dataset. From the ﬁgures, it is clear
that our models are signiﬁcantly different from GRL[12].

Figure 5: Attention visualization of the last convolutions
layer of the proposed model CADA-P. The ﬁrst and the third
row shows the image from source domain (A) whereas the
second and the fourth row shows the image from target do-
main (W). In each row, the leftmost image (a) represents
the original image and the rightmost image (f) represents
the classiﬁer’s activation maps for ground truth class label
at the end of the training. From left to right, the attention
map of discriminator’s predictive certainty is illustrated at
different training stages: (b) 4 epochs, (c) 125 epochs, (d)
535 epochs, and (e) 1300 epochs. We can see as the train-
ing progress, the discriminator’s certainty activation map
changes from the background to the foreground, and then
to the regions which can not be adapted further.

7. Conclusion

In this paper, we propose the use of certainty estimates
of the discriminator to aid the generalization of the classiﬁer
by increasing the attention of the classiﬁer on these regions.
As it can be observed through our results, the attention maps
obtained through certainty agree well with the classiﬁer cer-
tainty for true labels and this aids in the generalization of
the classiﬁer for the target domain as well. The proposed
method is thoroughly evaluated by comparison with state of
the art methods and shows improved performance over all
the other methods. Further, the analysis is provided in terms
of statistical signiﬁcance tests, discrepancy distance, and vi-
sualizations for better insight about the proposed method.
The proposed method shows a new direction of using prob-
abilistic measures for domain adaptation, and in the future,
we aim to further explore this approach.

Acknowledgment: We acknowledge travel support from
Microsoft Research India and Google Research India. We
also acknowledge resource support from Delta Lab, IIT
Kanpur. Vinod Kurmi acknowledges support from TCS Re-
search Scholarship Program.

498

References

[1] Shai Ben-David,

John Blitzer, Koby Crammer, Alex
Kulesza, Fernando Pereira, and Jennifer Wortman Vaughan.
A theory of learning from different domains. Machine learn-
ing, 79(1):151–175, 2010. 8

[2] Konstantinos Bousmalis, Nathan Silberman, David Dohan,
Dumitru Erhan, and Dilip Krishnan. Unsupervised pixel-
level domain adaptation with generative adversarial net-
works.
In The IEEE Conference on Computer Vision and
Pattern Recognition (CVPR), volume 1, page 7, 2017. 2

[3] Zhangjie Cao, Mingsheng Long,

Jianmin Wang, and
Michael I. Jordan. Partial transfer learning with selective
adversarial networks. In The IEEE Conference on Computer
Vision and Pattern Recognition (CVPR), June 2018. 2

[4] Zhangjie Cao, Lijia Ma, Mingsheng Long, and Jianmin
Wang. Partial adversarial domain adaptation. In Proceedings
of the European Conference on Computer Vision (ECCV),
pages 135–150, 2018. 2

[5] Yunjey Choi, Minje Choi, and Munyoung Kim. Stargan:
Uniﬁed generative adversarial networks for multi-domain
image-to-image translation. 2

[6] Jan K Chorowski, Dzmitry Bahdanau, Dmitriy Serdyuk,
Kyunghyun Cho, and Yoshua Bengio. Attention-based mod-
els for speech recognition. In Advances in neural information
processing systems (NIPS), pages 577–585, 2015. 2

[7] Gabriela Csurka. Domain adaptation for visual applications:
A comprehensive survey. arXiv preprint arXiv:1702.05374,
2017. 1

[8] Janez Demˇsar. Statistical comparisons of classiﬁers over
multiple data sets. Journal of Machine learning research,
7(Jan):1–30, 2006. 8

[9] Jenny Rose Finkel and Christopher D Manning. Hierarchi-
cal bayesian domain adaptation. In Proceedings of Human
Language Technologies: The 2009 Annual Conference of the
North American Chapter of the Association for Computa-
tional Linguistics, pages 602–610. Association for Compu-
tational Linguistics, 2009. 2

[10] Yarin Gal. Uncertainty in Deep Learning. PhD thesis, Uni-

versity of Cambridge, 2016. 2, 3

[11] Yarin Gal and Zoubin Ghahramani. Dropout as a bayesian
approximation: Representing model uncertainty in deep
learning. In international conference on machine learning,
pages 1050–1059, 2016. 2, 3

[12] Yaroslav Ganin and Victor Lempitsky. Unsupervised domain
adaptation by backpropagation. In International Conference
on Machine Learning, pages 1180–1189, 2015. 1, 2, 6, 7, 8

[13] Muhammad Ghifary, W Bastiaan Kleijn, Mengjie Zhang,
and David Balduzzi. Domain generalization for object recog-
nition with multi-task autoencoders. In Proceedings of the
IEEE international conference on computer vision, pages
2551–2559, 2015. 2

[14] Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing
Xu, David Warde-Farley, Sherjil Ozair, Aaron Courville, and
Yoshua Bengio. Generative adversarial nets.
In Advances
in neural information processing systems, pages 2672–2680,
2014. 2

[15] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun.
Deep residual learning for image recognition. In Proceed-
ings of the IEEE conference on computer vision and pattern
recognition, pages 770–778, 2016. 6, 7, 8

[16] Judy Hoffman, Eric Tzeng, Taesung Park, Jun-Yan Zhu,
Phillip Isola, Kate Saenko, Alexei Efros, and Trevor Dar-
rell. Cycada: Cycle-consistent adversarial domain adap-
tation.
In International Conference on Machine Learning,
pages 1994–2003, 2018. 2

[17] Guoliang Kang, Liang Zheng, Yan Yan, and Yi Yang. Deep
adversarial attention alignment for unsupervised domain
adaptation: the beneﬁt of target expectation maximization.
In The European Conference on Computer Vision (ECCV),
September 2018. 2, 6, 7

[18] Vahid Kazemi and Ali Elqursh. Show, ask, attend, and an-
swer: A strong baseline for visual question answering. arXiv
preprint arXiv:1704.03162, 2017. 2

[19] Alex Kendall and Yarin Gal. What uncertainties do we need
in bayesian deep learning for computer vision? In Advances
in neural information processing systems, pages 5574–5584,
2017. 2, 3, 5

[20] Alex Kendall, Yarin Gal, and Roberto Cipolla. Multi-task
learning using uncertainty to weigh losses for scene geome-
try and semantics. In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, pages 7482–
7491, 2018. 3

[21] Alex Krizhevsky, Ilya Sutskever, and Geoffrey E Hinton.
Imagenet classiﬁcation with deep convolutional neural net-
works.
In Advances in neural information processing sys-
tems, 2012. 6

[22] Shanu Kumar, Shubham Atreja, Anjali Singh, and Mohit
Jain. Adversarial adaptation of scene graph models for un-
derstanding civic issues. arXiv preprint arXiv:1901.10124,
2019. 2

[23] Vinod Kumar Kurmi and Vinay P. Namboodiri. Looking
back at labels: A class based domain adaptation technique,
2019. 2

[24] Balaji Lakshminarayanan, Alexander Pritzel, and Charles
Blundell. Simple and scalable predictive uncertainty esti-
mation using deep ensembles. In Advances in Neural Infor-
mation Processing Systems, pages 6402–6413, 2017. 2

[25] Mingsheng Long, Yue Cao, Jianmin Wang, and Michael Jor-
dan. Learning transferable features with deep adaptation net-
works. In International Conference on Machine Learning,
pages 97–105, 2015. 1, 2, 6, 7

[26] Mingsheng Long, Zhangjie Cao,

Jianmin Wang, and
Michael I Jordan. Conditional adversarial domain adapta-
tion. In Advances in Neural Information Processing Systems,
pages 1640–1650, 2018. 6, 7

[27] Mingsheng Long, Han Zhu, Jianmin Wang, and Michael I
Jordan. Unsupervised domain adaptation with residual trans-
fer networks. In Advances in Neural Information Processing
Systems, pages 136–144, 2016. 4, 6, 7

[28] Mingsheng Long, Han Zhu, Jianmin Wang, and Michael I
Jordan. Deep transfer learning with joint adaptation net-
works. In International Conference on Machine Learning,
pages 2208–2217, 2017. 6, 7

499

[29] Andrey Malinin and Mark Gales. Predictive uncertainty es-
timation via prior networks. In Advances in Neural Informa-
tion Processing Systems, pages 7047–7058, 2018. 2

[30] Zak Murez, Soheil Kolouri, David Kriegman, Ravi Ra-
mamoorthi, and Kyungnam Kim. Image to image translation
for domain adaptation.
In Proceedings of the IEEE Con-
ference on Computer Vision and Pattern Recognition, pages
4500–4509, 2018. 2

[31] Badri Patro and Vinay P. Namboodiri. Differential atten-
tion for visual question answering. In The IEEE Conference
on Computer Vision and Pattern Recognition (CVPR), June
2018. 2

[32] Badri Narayana Patro, Sandeep Kumar, Vinod Kumar
Kurmi, and Vinay Namboodiri. Multimodal differential net-
work for visual question generation. In Proceedings of the
2018 Conference on Empirical Methods in Natural Lan-
guage Processing, pages 4002–4012, 2018. 2

[33] Badri Narayana Patro, Vinod Kumar Kurmi, Sandeep Ku-
mar, and Vinay Namboodiri. Learning semantic sentence
embeddings using sequential pair-wise discriminator. In Pro-
ceedings of the 27th International Conference on Computa-
tional Linguistics, pages 2715–2729, 2018. 2

[34] Zhongyi Pei, Zhangjie Cao, Mingsheng Long, and Jianmin
Wang. Multi-adversarial domain adaptation. In Advances in
Artiﬁcial Intelligence (AAAI), 2018. 2, 3, 6, 7, 8

[35] Pedro O Pinheiro and AI Element. Unsupervised domain

adaptation with similarity learning. 6

[36] Kate Saenko, Brian Kulis, Mario Fritz, and Trevor Dar-
rell. Adapting visual category models to new domains. In
European conference on computer vision, pages 213–226.
Springer, 2010. 5

[37] Kuniaki Saito, Kohei Watanabe, Yoshitaka Ushiku, and Tat-
suya Harada. Maximum classiﬁer discrepancy for unsuper-
vised domain adaptation. In Proceedings of the IEEE Con-
ference on Computer Vision and Pattern Recognition, pages
3723–3732, 2018. 2

[38] Swami Sankaranarayanan, Yogesh Balaji, Arpit Jain, Ser
Nam Lim, and Rama Chellappa. Learning from synthetic
data: Addressing domain shift for semantic segmentation.
In Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, pages 3752–3761, 2018. 2, 6

[39] Jian Shen, Yanru Qu, Weinan Zhang, and Yong Yu. Wasser-
stein distance guided representation learning for domain
adaptation. In AAAI, 2018. 2

[40] Baochen Sun, Jiashi Feng, and Kate Saenko. Return of frus-
tratingly easy domain adaptation. In AAAI, volume 6, page 8,
2016. 2

[41] Baochen Sun, Jiashi Feng, and Kate Saenko. Correla-
tion alignment for unsupervised domain adaptation. Do-
main Adaptation in Computer Vision Applications, page 153,
2017. 2

[42] Baochen Sun and Kate Saenko. Deep coral: Correlation
alignment for deep domain adaptation.
In European Con-
ference on Computer Vision, pages 443–450. Springer, 2016.
2

[43] Mattias Teye, Hossein Azizpour, and Kevin Smith. Bayesian
uncertainty estimation for batch normalized deep networks.

In International Conference on Machine Learning, pages
4914–4923, 2018. 2

[44] Antonio Torralba and Alexei A Efros. Unbiased look at
dataset bias.
In Computer Vision and Pattern Recogni-
tion (CVPR), 2011 IEEE Conference on, pages 1521–1528.
IEEE, 2011. 1

[45] Eric Tzeng, Judy Hoffman, Trevor Darrell, and Kate Saenko.
Simultaneous deep transfer across domains and tasks.
In
Computer Vision (ICCV), 2015 IEEE International Confer-
ence on, pages 4068–4076. IEEE, 2015. 2

[46] Eric Tzeng, Judy Hoffman, Kate Saenko, and Trevor Darrell.
Adversarial discriminative domain adaptation. In Computer
Vision and Pattern Recognition (CVPR), volume 1, page 4,
2017. 2, 6

[47] Eric Tzeng, Judy Hoffman, Ning Zhang, Kate Saenko, and
Trevor Darrell. Deep domain confusion: Maximizing for
domain invariance. arXiv preprint arXiv:1412.3474, 2014.
2, 6, 8

[48] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszko-
reit, Llion Jones, Aidan N Gomez, Łukasz Kaiser, and Illia
Polosukhin. Attention is all you need. In Advances in Neural
Information Processing Systems, pages 5998–6008, 2017. 2
[49] Hemanth Venkateswara, Jose Eusebio, Shayok Chakraborty,
and Sethuraman Panchanathan. Deep hashing network for
unsupervised domain adaptation.
In Proc. CVPR, pages
5018–5027, 2017. 2, 5

[50] Mei Wang and Weihong Deng. Deep visual domain adapta-

tion: A survey. Neurocomputing, 2018. 1

[51] Kelvin Xu, Jimmy Ba, Ryan Kiros, Kyunghyun Cho, Aaron
Courville, Ruslan Salakhudinov, Rich Zemel, and Yoshua
Bengio. Show, attend and tell: Neural image caption gen-
eration with visual attention. In International conference on
machine learning, pages 2048–2057, 2015. 2

[52] Zichao Yang, Xiaodong He, Jianfeng Gao, Li Deng, and
Alex Smola. Stacked attention networks for image question
answering. In Proceedings of the IEEE conference on com-
puter vision and pattern recognition, pages 21–29, 2016. 2

[53] Quanzeng You, Hailin Jin, Zhaowen Wang, Chen Fang, and
Jiebo Luo.
In
Proceedings of the IEEE conference on computer vision and
pattern recognition, pages 4651–4659, 2016. 2

Image captioning with semantic attention.

[54] Zhen Zhang, Mianzhi Wang, Yan Huang, and Arye Nehorai.
Aligning inﬁnite-dimensional covariance matrices in repro-
ducing kernel hilbert spaces for domain adaptation. In Pro-
ceedings of the IEEE Conference on Computer Vision and
Pattern Recognition, pages 3437–3445, 2018. 2

[55] Jun-Yan Zhu, Taesung Park, Phillip Isola, and Alexei A
Efros. Unpaired image-to-image translation using cycle-
consistent adversarial networks. In Proceedings of the IEEE
Conference on Computer Vision and Pattern Recognition,
pages 2223–2232, 2017. 2

500

