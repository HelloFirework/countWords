Progressive Feature Alignment for Unsupervised Domain Adaptation

Chaoqi Chen∗1, Weiping Xie∗1, Wenbing Huang2, Yu Rong2, Xinghao Ding1,

Yue Huang†1, Tingyang Xu†2, Junzhou Huang2

1 Fujian Key Laboratory of Sensing and Computing for Smart City,

School of Information Science and Engineering, Xiamen University, China

2 Tencent AI Lab

cqchen94@stu.xmu.edu.cn, xiewp@stu.xmu.edu.cn, hwenbing@126.com, yu.rong@hotmail.com

dxh@xmu.edu.cn, huangyue05@gmail.com, Tingyangxu@tencent.com, jzhuang@uta.edu

Abstract

Unsupervised domain adaptation (UDA)

transfers
knowledge from a label-rich source domain to a fully-
unlabeled target domain. To tackle this task, recent ap-
proaches resort to discriminative domain transfer in virtue
of pseudo-labels to enforce the class-level distribution
alignment across the source and target domains. These
methods, however, are vulnerable to the error accumula-
tion and thus incapable of preserving cross-domain catego-
ry consistency, as the pseudo-labeling accuracy is not guar-
anteed explicitly. In this paper, we propose the Progressive
Feature Alignment Network (PFAN) to align the discrimina-
tive features across domains progressively and effectively,
via exploiting the intra-class variation in the target domain.
To be speciﬁc, we ﬁrst develop an Easy-to-Hard Transfer S-
trategy (EHTS) and an Adaptive Prototype Alignment (APA)
step to train our model iteratively and alternatively. More-
over, upon observing that a good domain adaptation usu-
ally requires a non-saturated source classiﬁer, we consider
a simple yet efﬁcient way to retard the convergence speed
of the source classiﬁcation loss by further involving a tem-
perature variate into the soft-max function. The extensive
experimental results reveal that the proposed PFAN exceed-
s the state-of-the-art performance on three UDA datasets.

1. Introduction

Hiving large-scale labeled datasets is one of the reasons
for the recent success of deep convolutional neural network-
s (CNNs) [14]. Nevertheless, the collection and annotation
of numerous samples in various domains is an extremely
expensive and time-consuming process. Meanwhile, tradi-
tional CNNs trained on one large dataset show low gen-
eralization ability on another due to the data bias or shift

∗ indicates equal contributions.
†Corresponding authors

Figure 1: (Best viewed in color.) Motivations of the pro-
posed work (SVHN→MNIST). The classiﬁcation bound-
aries are ﬁrst drawn by the fully labeled source domain.
There is intra-class variation in the target domain.

[38]. Unsupervised domain adaptation (UDA) methods
tackle the mentioned problem by transferring knowledge
from a label-rich source domain to a fully unlabeled target
domain [28, 27]. The deep UDA methods have achieved re-
markable performance [40, 22, 9, 10, 2, 39, 25, 33, 30, 16],
which usually seek to jointly achieve small source general-
ization error and cross-domain distribution discrepancy.

Most prior efforts focus on matching global source and
target data distributions to learn domain-invariant represen-
tations. However, the learned representations may not on-
ly bring the source and target domains closer, but also mix
samples with different class labels together. Recent studies
[23, 34, 13, 32, 44, 29, 21, 35, 44, 41] started to consid-
er learning discriminative representations for the target do-
main. Speciﬁcally, some of them [34, 32, 44] proposed to
use pseudo-labels to learn target discriminative representa-
tions, which encourages a low-density separation between
classes in the target domain [20]. Despite their efﬁcacy,
these approaches faces two critical limitations. Firstly, they

627

require a strong pre-assumption that the correctly-pseudo-
labeled samples can reduce the bias caused by falsely-
pseudo-labeled samples. Nevertheless, it is challenged to
satisfy the assumption, especially when the domain discrep-
ancy is large. The learned classiﬁers might be incapable
of conﬁdently distinguishing target samples, or precisely
pseudo-label them with an expected accuracy requiremen-
t. Secondly, they backpropagate the category loss for target
samples based on pseudo-labeled samples, which makes the
target performance vulnerable to the error accumulation.

During the exploration, we empirically observe the dis-
tinct data patterns in the target domain. The motivation is
demonstrated in Fig. 1. The intra-class distribution variance
exists in the target domain. Some target samples, which we
call easy samples, are very likely to be classiﬁed correctly
since they are sufﬁciently close to the source domain, and
we can directly assign pseudo-labels to them without any
adaptation. Some target samples, which we call hard sam-
ples, lay far away from the source domain and they are am-
biguous for the classiﬁcation boundaries. Moreover, some
easy samples, which we call false-easy samples, lay in the
support of non-corresponding source classes and are prone
to be falsely pseudo-labeled with high conﬁdence. These
false-labeled samples introduce wrong information in the
category alignment and potentially result in the error accu-
mulation. Thus it is prerequisite to alleviate their negative
inﬂuences in the context of UDA.

In this paper, we propose a Progressive Feature Align-
ment Network (PFAN), which largely extends the ability
of prior discriminative representations-based approaches by
explicitly enforcing the category alignment in a progressive
manner. Firstly, an Easy-to-Hard Transfer Strategy (EHT-
S) progressively selects reliable pseudo-labeled target sam-
ples with cross-domain similarity measurements. Howev-
er, the selected samples may include some misclassiﬁed
target samples with high conﬁdence. Then, to suppress
the negative inﬂuence of falsely-labeled samples, we pro-
pose an Adaptive Prototype Alignment (APA) to align the
source and target prototypes for each category. Rather than
backpropagating the category loss for target samples based
on pseudo-labeled samples, our work statistically align the
cross-domain class distributions based on the source sam-
ples and the selected pseudo-labeled target samples.

The EHTS and APA update iteratively and alternative-
ly, where EHTS boosts the robustness of APA by provid-
ing reliable pseudo-labeled samples, and the cross-domain
category alignment learned by APA can effectively allevi-
ate those falsely-labeled samples introduced by the EHT-
S. Moreover, upon observing that a good adaptation model
usually requires a non-saturated source classiﬁer, we con-
sider a simple yet efﬁcient way to retard the convergence
speed of the source classiﬁcation loss by further involving a
temperature variate into the soft-max function. The exper-

imental results reveal that the proposed PFAN exceeds the
state-of-the-art performance on three UDA datasets.

2. Related Work

We summarize the work most relevant to our proposed
approach. We focus primarily on deep UDA methods due
to their empirical superiority in this problem.

Inspired by the recent success of generative adversari-
al networks (GAN) [11], deep adversarial domain adapta-
tion has received increasing attention in learning domain-
invariant representations to reduce the domain discrepancy
and provide remarkable results [9, 39, 29, 43, 44, 17, 45].
These methods try to ﬁnd a feature space such that con-
fusion between the source and the target distributions in
that space is maximal. For example, [9] proposed a gra-
dient reversal layer to train a feature extractor that produces
features which maximize the domain binary classiﬁer loss,
while simultaneously minimizing the label predictor loss.

Many approaches utilize a distance metric to measure
the domain discrepancy between the source and target do-
mains, such as maximum mean discrepancy (MMD), KL-
divergence or Wasserstein distance [12, 22, 37, 24, 42, 6].
Most prior efforts intend to achieve domain alignment by
matching P (Xs) and P (Xt). However, an exact domain-
level alignment does not imply a ﬁne-grained class-to-class
overlap. Thus, it is important to pursue the category-level
alignment under the absence of target true labels.

[3, 5, 23, 34, 32, 44, 41] utilize the pseudo-labels to com-
pensate the lack of categorical information in the target do-
main. [23] jointly matched both the marginal distribution
and conditional distribution using a revised MMD. [32] uti-
lized an asymmetric tri-training strategy to learn discrim-
inative representations for the target domain.
[44] itera-
tively selected pseudo-labeled target samples based on the
classiﬁer from the previous training epoch and re-trained
the model by using the enlarged training set.
[41] pro-
posed to assign pseudo-labels to all target samples and u-
tilize them to achieve semantic alignment across domain-
s. However, these approaches highly relied on the hypoth-
esis that correctly-pseudo-labeled samples can reduce the
bias caused by falsely-pseudo-labeled samples. They do
not explicitly alleviate those falsely-pseudo-labeled sam-
ples. When the falsely-pseudo-labeled samples take the
prominent position, their performances will be limited.

3. Progressive Feature Alignment Network

In this section, we ﬁrst provide the details of the pro-
posed PFAN and then theoretically investigate the effec-
tiveness of our approach. The overall architecture of PFAN
is depicted in Fig. 2, which consists of three components,
EHTS, APA, and the soft-max function with a tempera-
ture variate. EHTS provides reliable pseudo-labeld samples

628

Figure 2: The overall structure of the proposed PFAN. We separate the network into three modules: feature extractor G, label
predictor F , domain discriminator D and with associated parameters θg, θf , θd. Left: The easy-to-hard strategy (ETHS).
Right: The network structure: the dotted lines in PFAN denote weight-sharing.

from easy to hard by iterations and APA explicitly enforces
the cross-domain category alignment.

target sample, xt
where ψ is computed as follows,

j , to the corresponding source prototypes,

3.1. Task Formulation

i )}ns

i=1 (xs

i ∈ Xs, ys

In UDA, we are given a source domain Ds =
i , ys
{(xs
i ∈ Ys) of ns labeled samples
t ∈ Xt) of
and given a target domain Dt = {xt
nt unlabeled samples [28]. The source and target domains
are drawn from the joint probability distributions P (Xs, Ys)
and Q(Xt, Yt) respectively, and P 6= Q. We assume that
the source and target domains contain the same object class-
es, and we consider C classes in all.

j=1 (xj

j}nt

3.2. Easy to Hard Transfer Strategy

The EHTS is biased to favor easier samples and this bias
helps to avoid including the hard samples which are more
likely to be given false pseudo-labels.
In our approach,
the easy samples are increasing progressively. Thus the
“hard” samples will potentially be selected in further step-
s. The selected pseudo-labeled samples by EHTS can be
used to align with their corresponding source categories as
described in Section 3.3.

The EHTS ﬁrst computes a D-dimensional prototype
cS
k ∈ RD of each class in the source domain. The source
prototype is a mean vector of the embedded source samples
in each class through an embedding function G (i.e.
the
feature extractor in Fig. 2) with trainable parameters θg,

cS
k =

1
N k

s X(xs

i ,ys

i )∈Dk
s

G(xs

i ),

(1)

where Dk
s denotes the set of samples labeled with class k in
the source domain and N k
s is the number of corresponding
samples. Then, a set of prototypes {cS
k=1 are obtained.
The embedded target samples are supposed to gather around
the source prototypes in the latent feature space. Thus, we
use a similarity measurement ψ to cluster j-th unlabeled

k }C

ψ(xt

j) = CS(G(xt

j), cS

k ), k = {1, 2, ..., C}

(2)

where CS(., .) denotes the cosine similarity function be-
tween two vectors. xt
j is added into the target domain of
the class Dk′
j = k′ where k′ =
arg max

t with a pseudo-label ˆyt

ψk(xt

j).

k

t }C

j, ˆyt

j}nt

k=1 = {xt

Then, the unlabeled target samples Dt are partitioned in-
to C classes (i.e. Dt = {Dk
j=1) and each
sample is scored by its similarity. To obtain the “easy” sam-
ples, we constrain that the similarity scores should above a
certain threshold τ . During the training process, the values
of the similarity ψ increase continuously because the source
samples and the target samples become closer to each other
in the hidden space as training proceeds. “Hard” samples
in the earlier stages may be selected as “easy” in the later
stages. However, the constant threshold will turn too much
“hard” samples into “easy” samples in each step. To control
the growth rate of the “easy” samples, we gradually adjust
the threshold step by step as follows,

τ =

1

1 + e−µ·(m+1) − 0.01,

(3)

where µ is a constant and m (m = {0, 1, 2, ...}) denotes the train-
ing step. Therefore, the sample selection function is formulated as
follows,

∀xj ∈ Dk
t |

C

k=1, wj = (cid:26) 1

0

if ψ ≥ τ
if ψ < τ

(4)

where wj = 1 indicates xj to be selected; otherwise,
wj = 0 indicates xj not to be selected. Finally, we obtain
a selected pseudo-labeled target domain ˆDt = {xt
j=1,
where ˆnt denotes the number of selected samples.

j}ˆnt

j, ˆyt

3.3. Adaptive Prototype Alignment

In this section, we introduce the proposed APA, which
considers the pairwise semantic similarity across domains

629

to explicitly alleviate the negative inﬂuence of those false-
easy samples and enforce the cross-domain category con-
sistency. It can be implemented by aligning the prototype
of source and selected target samples for each category. We
measure the distance between two prototypes as follows,

d(cS

k , cT

k − cT
cS

k ) = (cid:13)(cid:13)(cid:13)

2

,

k (cid:13)(cid:13)(cid:13)

k and cT

where cS
k represent the source and target prototypes,
respectively. We opt for the squared Euclidean distance as
the distance measure function. The justiﬁcation is that the
cluster mean yields optimal cluster representatives when a
Bregman divergence (e.g. squared Euclidean distance and
Mahalanobis distance) is used [36]. An optional approach
for prototype alignment is to compute and align the local
prototypes based on the mini-batch sampled from Ds and
ˆDt at each iteration. However, this approach is in a position
of weakness because the categorical information in each
mini-batch is expected to be insufﬁcient, even one falsely
labeled sample in the target mini-batch may cause huge bias
between the computed prototype and true prototype.

To overcome the aforementioned problems, we propose
to adaptively align the global prototypes. The APA ﬁrst
computes the initial global prototypes based on the selected
pseudo-labeled target samples ˆDt as follows,

cT
k(0) =

1
ˆDk

t X(xt

j ,yt

j )∈ ˆDk

t

G(xt

j).

(6)

In each iteration, we compute a set of local prototypes
{ct
k}C
k=1 using the mini-batch samples. The accumulated
prototypes are computed as the average of all previous local
prototypes in each iteration,

ct
k(I) =

1
I

I

Xi=1

ct
k (i),

(7)

where I denotes the iteration times in the current training
step. Then, the new cT

k are updated as follows,

ρt = CS(ct
2ct

cT
k(I) ← ρt

k(I−1)),

k(I), cT
k(I) + (1 − ρt

2)cT

k(I−1),

(8)

where CS(., .) is the cosine distance which was deﬁned
in Eq. (2) and ρ is the trade-off parameters.
k(I) be
analogously updated for the source domain. To this end, the
APA loss is formulated as follows,

let cS

Lapa(θg) =

C

Xk=1

d(cS

k(I), cT

k(I)).

(9)

The motivations of APA is intuitive: 1) the accumulated
prototypes are introduced to estimate the accumulated shift
caused by the falsely labeled samples, and then we can use
their similarity with the previous global prototypes to de-
cide the new global prototypes cT
k ; and 2) we statistically
align the cross-domain category distributions which can al-
leviate the error accumulation of the pseudo-labels.

(5)

Ensure: θg, θd, θf

Algorithm 1 Progressive Feature Alignment Network, m =
{0, 1, ...} denotes the training step, I denotes the iteration
times, Bs and Bt denote the mini-batch training sets.
i )}ns
Require: labeled source samples Ds = {(xs

i=1, un-

i , ys

labeled target samples Dt = {xt

j}nt
j=1

1: m = 0
2: Stage-1:
3: Initialize G and F using Ds, output: model0
4: Stage-2:
5: while not converge do
6: m = m + 1
7:

8:

9:

10:

11:

12:

13:

Run the EHTS based on modelm−1, output: ˆDt
Calculate the initial global prototypes cS
using Ds and ˆDt based on modelm−1
for I = 1 to max iter do

k(0) and cT

k(0)

Derive Bs and Bt sampled from Ds and ˆDt
Calculate local prototypes cs
Update: cS
Train modelm ﬁne-tuned from modelm−1 using
Bs and Bt by optimizing 12, output: modelm

k(I) by using Eq. 7 and Eq. 8

k(I) and ct

k(I), cT

k(I)

14:

end for
ˆDt = ∅
15:
16: end while

3.4. Training Losses

In this work, we empirically found that a good adaptor
needs a non-saturated source classiﬁer. This empirical re-
sult is supported by the theoretical analysis described in
Section 3.5. The justiﬁcation is that the adaptation model
is biased towards minimizing the source classiﬁcation loss,
which usually converges rapidly since the available of the
source true labels. However, this bias may lead the overﬁt-
ting to the source samples and resulting in a limited target
performance. Inspired by [15], we propose to add a high
temperature variate T (T > 1) to the source classiﬁer (as
depicted in Fig. 2). By that means we can retard the conver-
gence speed of the source classiﬁcation loss and effectively
guides the adaptor to a better adaptation performance. We
achieve this behavior via the following softmax function,

qi =

exp(zi/T )

Pj exp(zj/T )

,

(10)

where qi denotes the class probabilities for a source sam-
ples and z is the logit that produced by source classiﬁer.
Using a higher value for T produces a softer output and
naturally retards the convergence speed.

Adversarial learning has been successfully introduced to
UDA by extracting domain-invariant features to achieve do-
main alignment [9]. However, the learned representations
can not ensure category alignment, which is the main source
of performance reduction. Therefore, our work simultane-
ously considers domain-level and category-level alignment.

630

In our PFAN, the input x is ﬁrst embedded by G to a D-
dimensional feature vector f ∈ RD, i.e. f = G(x; θg). In or-
der to make f domain-invariant, the parameters θg of feature
extractor G are expected to be optimized by maximizing the
loss of the domain discriminator D, while the parameters θd
of domain discriminator D are trained by minimizing the
loss of the domain discriminator, the discriminator is opti-
mized following a standard classiﬁcation loss:

Ld(θg, θd) = Ex∼Ds [logD(G(x))]

+ Ex∼ ˆDt

[logD(1 − G(x))],

(11)

In addition, we also need to simultaneously minimize the
loss of the label predictor F for the labeled source samples
and the APA loss. Formally, our ultimate goal is to optimize
the following minimax objective:

Figure 3: (a) Before category alignment:
there exists an
optimality gap. (b) After category alignment: the optimality
gap does not exist any more.

to the absence of target true labels. Thus, we resort to the
pseudo-labels to give the approximate evaluation and mini-
mization.

min
θg ,θf

max

θd

ns

Xi=1

Lc(F (G(xs

i ; θg); θf ), ys
i )

+λLd(θg, θd) + γLapa(θg)

(12)

Deﬁnition 1. If RT ′ (·) denotes the expected risk on the se-
lected pseudo-labeled target set ˆDt, the ideal joint hypoth-
esis is the hypothesis which minimizes the combined error

where Lc is the standard cross-entropy loss, λ and γ are
weights that control the interaction among the source clas-
siﬁcation loss, the domain confusion loss and the APA loss.
The pseudo-code of training PFAN is shown in Algorithm 1,
the EHTS and APA work alternatively and iteratively.

3.5. Theoretical Analysis

In this section, we theoretically show that our approach
improves the boundary of the expected error on the target
samples, making use of the theory of domain adaptation
[1]. Formally, let H be the hypothesis class and given t-
wo domains S and T , the probabilistic bound of the error
of hypothesis h on the target domain is deﬁned as,

∀h ∈ H, RT (h) ≤ RS (h) +

1
2

dH∆H(S, T ) + C (13)

where the expected error on the target samples, RT (h), are
bounded by three terms: (1) the expected error on the source
domain, RS (h); (2) dH∆H(S, T ) is the domain divergence
measured by a discrepancy distance between two distribu-
tions S and T w.r.t. a hypothesis set H; (3) the shared error
of the ideal joint hypothesis, C.

In Inequality (13), RS (h) is expected to be small and
prone to be optimized by a deep network since we have
source labels. On the other hand, prior efforts [9] seeks to
minimize dH∆H(S, T ) by the domain classiﬁer-based ad-
versarial learning. However, A small dH∆H(S, T ) and a
small RS (h) do not guarantee small RT (h). It is possible
that C tends to be large when the cross-domain category
alignment is not be explicitly enforced (i.e.
the marginal
distribution is well aligned, but the class conditional distri-
bution is not guaranteed). Therefore, C needs to be bounded
as well. Unfortunately, we cannot directly measure C due

h∗ = arg min
h∈H

RS (h, fS ) + RT ′ (h, fT ),

and the combined error of the ideal hypothesis is

C = RS (h∗, fS ) + RT ′ (h∗, fT ),

(14)

where fS and fT are the labeling functions for the source
and target domains, respectively.

To bound the combined error of the ideal hypothesis, the

following inequality holds:

Theorem 1. Let f ˆT be the pseudo-labeling function. Giv-
en RT ′ (fS , f ˆT ) and RT ′ (fT , f ˆT ) as the minimum shared
error and the degree to which the target samples are falsely
labeled on ˆDt, respectively. We have

C ≤ min
h∈H

RS (h, fS )+RT ′ (h, f ˆT )+2RT ′ (fS , f ˆT )+RT ′ (fT , f ˆT ).

(15)

We show the derivation of Theorem 1 in the Supplemen-
tary Material. It is easy to respectively ﬁnd a suitable h in
H to approximate the fS and f ˆT since we have the source
labels and target pseudo-labels. However, we assume that
when the category alignment has not been achieved, there
exists an optimality gap between fS and f ˆT (Fig. 3(a)).
While most existing methods do not consider such phe-
nomenon and directly minimizing RS (h, fS ), which leads
the overﬁtting to source samples.

Remark 1 (Minimizing RS (h, fS ) + RT ′ (h, f ˆT )). The
proposed softmax function with a temperature variate al-
leviates the overﬁtting to source samples (i.e. enforcing
a non-saturated source classiﬁer) by retarding the con-
vergence speed of RS (h, fS ). This guides the adapta-
tion model to a better target performance, i.e., a smaller

631

RS (h, fS ) + RT ′ (h, f ˆT ). Note that when the cross-domain
category distributions is well aligned, the aforementioned
optimality gap is removed (Fig. 3(b)).

Recall that the labeling function f can be decomposed
into the feature extractor G and label classiﬁer F . By con-
sidering the 0-1 loss function σ for RT ′ , we have

RT ′ (fS , f ˆT ) = Ex∼T ′ [σ(FS (G(x)), F ˆT (G(x)))]
= Ex∼T ′ [|σ(FS (G(x)), y1) − σ(F ˆT (G(x)), y2)|]

where

|σ(FS (G(x)), y1) − σ(F ˆT (G(x)), y2)| = (cid:26) 1

0

if
if

y1 6= y2
y1 = y2

(16)

(17)

Remark 2 (Minimizing shared error). The proposed ap-
proach aims to progressively align feature in category-level,
i.e., it aligns the kth class in source domain Dk
s with the
same pseudo-labeled target class ˆDk
t . When the categories
are aligned, it is safe to assume that y1 = y2. Thus,
RT ′ (fS , f ˆT ) is expected to be minimized.

Remark 3 (Minimizing the degree to which the target sam-
ples are falsely labeled on ˆDt). The proposed EHTS aims to
select reliable pseudo-labeled samples in the target domain
which minimizes RT ′ (fT , f ˆT ).

4. Experiments

4.1. Datasets and Baselines

Ofﬁce-31 [31] is a popular benchmark for evaluation on
domain adaptation. It contains 4110 images of 31 categories
in total, which are collected from three domains, including
Amazon (A) comprising 2817 images downloaded from on-
line merchants, Webcam (W) involving 795 low resolution
images acquired from webcams, and DSLR (D) containing
498 high resolution images of digital SLRs. We try all 6
combinations of two domains for evaluation.

ImageCLEF-DA [4] originally used for the ImageCLE-
F 2014 domain adaptation challenge consists of twelve
common classes from three domains: ImageNet ILSVRC
2012 (I), Pascal VOC 2012 (P), and Caltech-256 (C). Each
doamin has 600 images in total and contains 50 images per
class. We test 6 tasks by using all domain combinations.

MNIST [19], SVHN [26] and USPS [7] contain digital
images of 10 classes. In particular, the images in MNIST
and SVHN are grey, and are of size 28 × 28 and 16 × 16,
respectively; USPS consists of color images of size 32× 32,
and there are often more than one digit in one image. Fol-
lowing previous works, we consider the three transfer tasks:
MNIST→SVHN, SVHN→MNIST and MNIST→USPS.

4.2. Implementation Details

Joining previous practices, we instantiate our backbone
by AlexNet that has been pre-trained on ImageNet for
Ofﬁce-31 and ImageCLEF-DA, and employ the CNN ar-
chitecture by [39] for the digital datasets. As suggested

lr0

by [25], we ﬁne-tune the feature extractor G upon the back-
bone and train the predictor F from the scratch via back
propagation. We utlize stochastic gradient descent (SGD)
for the training with a momentum of 0.9 and a anneal-
ing learning rate (lr) given by lrp =
(1+αp)β , where p
is increased linearly from 0 to 1 as the training proceeds,
lr0 = 0.01, α = 10, and β = 0.75.
In order to sup-
press noisy signal especially for the initial training step-
s, we use the similar schedule method as [9] to adaptive-
ly change the values of λ and γ in Eq. (12) by computing
1+exp(−δp) −1 with δ = 10. We set T = 1.8 in E-
λ = γ =
q. (10) and µ = 0.8 in Eq. (3) for all experiments. The batch
size is selected as 128. The means and standard derivations
of all results are obtained over 5 random runs. All experi-
ments are implemented by the Caffe framework.

2

4.3. Comparisons with State of the Arts

State-of-the-arts. We compare our approach with vari-
ous state-of-the-art UDA methods, including AlexNet [18],
Deep Domain Confusion (DDC)
[40], Deep Adapta-
tion Network (DAN) [22], Residual Transfer Network
(RTN) [24] , Reverse Gradient (RevGrad) [9], Adver-
sarial Discriminative Domain Adaptation (ADDA) [39],
Joint Adaptation Networks (JAN) [25], Asymmetric Tri-
Training (ATT) [32] , Multi-Adversarial Domain Adapta-
tion (MADA) [29], and Moving Semantic Transfer Net-
work (MSTN) [41]. For all above methods, we summarize
the results reported in their original papers. For similarity,
we term our method as PFAN hereafter.

Table 1 displays the results on Ofﬁce-31. The proposed
PFAN outperforms all compared methods in general and
improves the state-of-the-art result from 79.1% to 80.4%
on average. If we focus more on the hard transfer tasks (e.g.
A → W and A → D), PFAN substantially exhibits better
transferring ability than others. In contrast to JAN, MADA
and MSTN, our PFAN additionally considers both the target
intra-class variation and the non-saturated source classiﬁer.
Our better performance over them could indicate the effec-
tiveness of these two components. RevGrad has also taken
the domain adversarial adaptation into account, but its re-
sults are still inferior to ours. The advantage of our model
compared to RevGrad is that, we furhter perform EHTS and
APA, which as supported by our experiments can explicitly
enforce the cross-domain category alignment, hence deliv-
ering better performance.

The results of ImageCLEF-DA are reported in Table 2.
Our approach outperforms all comparison methods on most
transfer tasks, which reveals that PFAN is scalable for dif-
ferent datasets.

The results of digit classiﬁcation are reported in Table 3.
We follow the training protocol established in [39]. For
adaptation between MNIST and USPS, we randomly sam-
ple 2000 images from MNIST and 1800 from USPS. For

632

Method

AlexNet [18]

DDC [40]
DAN [22]
RTN [24]

RevGrad [9]

JAN [25]

MADA [29]
MSTN [41]

PFAN

Method

AlexNet [18]

DAN [22]

RevGrad [9]

JAN [25]

MADA [29]
MSTN [41]

PFAN

Table 1: AlexNet-based approaches on Ofﬁce-31 (%)

D → W
95.1±0.3
95.0±0.5
96.0±0.3
96.8±0.2
96.4±0.3
96.6±0.2
99.8±0.1
96.9±0.1
99.0±0.2

W → D
99.0±0.2
98.5±0.4
99.0±0.2
99.6±0.1
99.2±0.3
99.5±0.2
100.0±.0
99.9±0.1
99.9±0.1

A → D
64.4±0.5
64.4±0.3
67.0±0.4
71.0±0.2
72.3±0.3
71.8±0.2
74.1±0.1
74.5±0.4
76.3±0.3

D → A
48.8±0.3
52.1±0.6
54.0±0.4
50.5±0.3
53.4±0.4
58.3±0.3
56.0±0.2
62.5±0.4
63.3±0.3

Table 2: AlexNet-based approaches on ImageCLEF-DA (%)

P → I

70.0±0.2
80.5±0.3
81.8±0.4
82.8±0.4
83.0±0.1
82.8±0.2
84.4±0.4

I → C

84.3±0.2
87.7±0.3
89.0±0.5
91.3±0.5
91.0±0.2
91.5±0.1
92.2±0.6

C → I

71.3±0.4
76.0±0.3
79.8±0.5
80.0±0.5
80.7±0.2
81.7±0.3
82.3±0.4

C → P

59.3±0.5
61.6±0.3
63.5±0.4
63.5±0.4
63.8±0.2
65.3±0.2
66.3±0.3

A → W
61.5±0.5
61.8±0.4
68.5±0.4
73.3±0.3
73.0±0.5
74.9±0.3
78.5±0.2
80.5±0.4
83.0±0.3

I → P

66.2±0.2
67.3±0.2
66.5±0.5
67.2±0.5
68.3±0.3
67.3±0.3
68.5±0.5

W → A
47.0±0.4
52.2±0.4
53.1±0.3
51.0±0.1
51.2±0.5
55.0±0.4
54.5±0.3
60.0±0.6
60.8±0.5

P → C

84.5±0.3
88.4±0.2
88.7±0.4
91.0±0.4
92.2±0.3
91.2±0.2
91.7±0.2

Avg
69.3
70.6
72.9
73.7
74.3
76.0
77.1
79.1
80.4

Avg
73.9
76.9
78.2
79.3
79.8
80.0
80.9

Table 3: Accuracy on the digit classiﬁcation task. (%)

Table 4: Ablation of PFAN on different transfer tasks. (%)

Source
Target

Source Only
RevGrad [9]
ADDA [39]

ATT [32]

MSTN [41]

PFAN

MNIST
SVHN

33.0±1.2

35.7

-

52.8

did not converge

57.6±1.8

SVHN
MNIST
60.1±1.1

73.9

76.0±1.8

85.0

91.7±1.5
93.9±0.8

MNIST
USPS

75.2±1.6
77.1±1.8
89.4±0.2

-

92.9±1.1
95.0±1.3

Model

A→W

Source Only

PFAN (Random)

PFAN (Full)

PFAN (woAPA)

PFAN (woA)
PFAN (woT)

PFAN

61.6
77.0
81.9
76.4
82.2
80.6
83.0

I→P

66.2
67.0
68.0
67.1
68.1
67.9
68.5

SVHN→MNIST

60.1
87.2
92.5
82.0
93.0
92.1
93.9

adaptation between SVHN and MNIST, we use the ful-
l training sets. For the hard transfer task MNIST→SVHN,
we reproduced the MSTN [41] but were unable to get it to
converge, since the performance of this approach depend-
s strongly on the accuracy of the pseudo-labeled samples
which was lower on this task.
In contrast, our approach
signiﬁcantly outperforms the suboptimal result by +4.8%,
which clearly demonstrates the effect of our approach on s-
electing reliable pseudo-labeled samples and alleviating the
negative inﬂuence of falsely-labeled samples on the chal-
lenging scenario. For the easier tasks SVHN→MNIST and
MNIST→USPS, our approach also shows superiority.

4.4. Further Empirical Analysis

Ablation Study. To isolate the contribution of our work,
we perform ablation study by evaluating several variants of
PFAN: (1) PFAN (Random), which randomly selects the
target samples instead of using the easy-to-hard order; (2)
PFAN (Full), which uses all target samples at the training
period; (3) PFAN (woAPA), which denotes training com-
pletely without the APA (i.e. γ = 0 in Eq. (12)); (4) PFAN

(woA), which denotes aligning the prototypes based on the
current mini-batch without considering the global and accu-
mulated prototypes; (5) PFAN (woT), which removes the
temperature from our model (i.e. T = 1 in Eq. (10)). The
results are shown in Table 4. We can observe that all the
components are designed reasonably and when any one of
these components is removed, the performance degrades. It
is noteworthy that PFAN outperforms both PFAN (Random)
and PFAN (Full), which reveals that the EHTS can provide
more reliable and informative target samples for the cross-
domain category alignment.
Pseudo-labeling Accuracy. We show the relationship be-
tween the pseudo-labeling accuracy and test accuracy in
Fig. 5. We found that (1) the pseudo-labeling accuracy
keeps higher and stable throughout as training proceeds,
which thanks to the EHTS by selecting reliable pseudo-
labeled samples; (2) the test accuracy increases with the in-
creasing of labeled samples, which implies that the number
of correctly and falsely labeled samples are both proportion-
ally increasing, but our approach can explicitly alleviate the
negative inﬂuence of the falsely-labeled samples.

633

1.0

0.8

0.6

0.4

0.2

s
s
o
l
 
n
o
i
t
a
c
i
f
i
s
s
a
l
c
 
e
c
r
u
o
S

0.0
0

T=1
T=1.8

2.0

1.8

AlexNet
RevGrad
PFAN

e
c
n
a
t
s
i
D
-
A

1.6

1.4

1.2

1.0

50

10

20

30

Iteration times (epoch)

40

A-->W

W-->D

Transfer Task

(a) Non-saturated source classiﬁer

(b) Distribution Discrepancy

(c) RevGrad: target=W

(d) PFAN: target=W

Figure 4: (a) The convergence speed of the source classiﬁcation loss in different temperature setting. (b) Distribution Dis-
crepancy. (c)-(d) The t-SNE visualization of network activations on target domain W generated by RevGrad and PFAN.

0.90

0.85

0.80

0.75

0.70

y
c
a
r
u
c
c
A

0.65

0.60

0.55

Pseudo-labeling accuracy
Test accuracy
Number of labeled samples

0

2

4

6
Training Step

8

l

l

s
e
p
m
a
s
 
d
e
e
b
a
l
 
f
o
 
r
e
b
m
u
N

420

400

380

360

340

320

Figure 5: Comparison of the pseudo-labeling accuracy and
the test accuracy on transfer task A → W. The pseudo-
labeling accuracy is computed using (the number of cor-
rectly labeled samples)/(the number of labeled samples).

Non-saturated source classiﬁer. To further verify our
hypothesis about the non-saturated source classiﬁer, we in-
vestigate the source classiﬁcation loss in different tempera-
ture setting. The results are reported in Fig. 4(a). The T = 1
model converges faster than T = 1.8 especially at the be-
ginning of training. However, such difference gradually de-
creases as training proceeds. The justiﬁcation is that we use
a higher T to retard the convergence speed of the source
classiﬁcation loss (i.e. alleviating the adaptor overﬁtting to
the source samples), thus showing better adaptation.

Distribution Discrepancy. The domain adaptation theo-
ry [1] suggests that A-distance can be used as a measure of
domain discrepancy. The way of estimating empirical A-
distance was deﬁned as dA = 2(1 − ǫ), where ǫ is the gen-
eralization error of a classiﬁer trained to discriminate the
source and target features. We utilize a kernel SVM to esti-
mate the A-distance. Fig. 4(b) demonstrates the A-distance
calculated with the features from AlexNet, RevGrad and
PFAN on tasks A → W and W → D. We can observe
that our method signiﬁcantly reduces the A-distance com-
pared with the AlexNet. However, when compared with
RevGrad, PFAN shows smaller improvement with respect
to A-distance, but improves the performance by large mar-
gin, which demonstrates that a low domain divergence does

not imply better performance in the target domain. This
phenomenon is consistent with the analysis in Section 3.5.

Feature Visualization. We utilize t-SNE [8] to visualize
the deep feature of the network activations on task A → W
(randomly selected 8 classes) learned by RevGrad (the bot-
tleneck layer) and PFAN (the bottleneck layer). As shown
in Fig. 4(c)-4(d), we can see that the RevGrad features on
target domain can not be discriminated very well, some cat-
egories have been mixed up in the feature space. By con-
trast, PFAN can learn more discriminative representations,
which jointly enlarges the inter-class dispersion and reduces
the intra-class variations.

5. Conclusion

In this paper, we proposed a novel approach called Pro-
gressive Feature Alignment Network, to take advantage of
target domain intra-class variance and cross-domain catego-
ry consistency for addressing UDA problems. The proposed
EHTS and APA complement each other in selecting reli-
able pseudo-labeled samples and alleviating the bias caused
by the falsely-labeled samples. The performance is further
improved by retarding the convergence speed of the source
classiﬁcation loss. The extensive experiments reveal that
our approach outperforms state-of-the-art UDA approaches
on three domain adaptation datasets.

6. Acknowledgements

This work was supported in part by the National Nat-
ural Science Foundation of China under Grants 61571382,
81671766, 61571005, 81671674, 61671309 and U1605252,
in part by the Fundamental Research Funds for the Central
Universities under Grants 20720160075 and 20720180059,
in part by the CCF-Tencent open fund, and the Nat-
ural Science Foundation of Fujian Province of China
(No.2017J01126).

References

[1] Shai Ben-David,

John Blitzer, Koby Crammer, Alex
Kulesza, Fernando Pereira, and Jennifer Wortman Vaughan.

634

A theory of learning from different domains. Machine learn-
ing, 79(1-2):151–175, 2010.

[2] Konstantinos Bousmalis, George Trigeorgis, Nathan Silber-
man, Dilip Krishnan, and Dumitru Erhan. Domain separa-
tion networks. In Advances in Neural Information Process-
ing Systems, pages 343–351, 2016.

[3] Lorenzo Bruzzone and Mattia Marconcini. Domain adapta-
tion problems: A dasvm classiﬁcation technique and a circu-
lar validation strategy. IEEE transactions on pattern analysis
and machine intelligence, 32(5):770–787, 2010.

[4] Barbara Caputo, Henning M¨uller, Jesus Martinez-Gomez,
Mauricio Villegas, Burak Acar, Novi Patricia, Neda Mar-
vasti, Suzan ¨Usk¨udarlı, Roberto Paredes, Miguel Cazorla,
et al.
Imageclef 2014: Overview and analysis of the re-
sults.
In International Conference of the Cross-Language
Evaluation Forum for European Languages, pages 192–211.
Springer, 2014.

[5] Minmin Chen, Kilian Q Weinberger, and John Blitzer. Co-
training for domain adaptation. In Advances in neural infor-
mation processing systems, pages 2456–2464, 2011.

[6] Qingchao Chen, Yang Liu, Zhaowen Wang, Ian Wassell, and
Kevin Chetty. Re-weighted adversarial adaptation network
for unsupervised domain adaptation. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 7976–7985, 2018.

[7] John S Denker, WR Gardner, Hans Peter Graf, Donnie Hen-
derson, Richard E Howard, W Hubbard, Lawrence D Jackel,
Henry S Baird, and Isabelle Guyon. Neural network recog-
nizer for hand-written zip code digits. In Advances in neural
information processing systems, pages 323–331, 1989.

[8] Jeff Donahue, Yangqing Jia, Oriol Vinyals, Judy Hoffman,
Ning Zhang, Eric Tzeng, and Trevor Darrell. Decaf: A deep
convolutional activation feature for generic visual recogni-
tion. In International conference on machine learning, pages
647–655, 2014.

[9] Yaroslav Ganin and Victor Lempitsky. Unsupervised domain
adaptation by backpropagation. In International Conference
on Machine Learning, pages 1180–1189, 2015.

[10] Mingming Gong, Kun Zhang, Tongliang Liu, Dacheng Tao,
Clark Glymour, and Bernhard Sch¨olkopf. Domain adapta-
tion with conditional transferable components. In Interna-
tional conference on machine learning, pages 2839–2848,
2016.

[11] Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing X-
u, David Warde-Farley, Sherjil Ozair, Aaron Courville, and
Yoshua Bengio. Generative adversarial nets.
In Advances
in neural information processing systems, pages 2672–2680,
2014.

[12] Arthur Gretton, Karsten M Borgwardt, Malte J Rasch, Bern-
hard Sch¨olkopf, and Alexander Smola. A kernel two-sample
test. Journal of Machine Learning Research, 13(Mar):723–
773, 2012.

[14] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun.
Deep residual learning for image recognition. In Proceed-
ings of the IEEE conference on computer vision and pattern
recognition, pages 770–778, 2016.

[15] Geoffrey Hinton, Oriol Vinyals, and Jeff Dean. Distilling
the knowledge in a neural network. arXiv preprint arX-
iv:1503.02531, 2015.

[16] Judy Hoffman, Eric Tzeng, Taesung Park, Jun-Yan Zhu,
Phillip Isola, Kate Saenko, Alexei A Efros, and Trevor Dar-
rell. Cycada: Cycle-consistent adversarial domain adap-
tation.
In International Conference on Machine Learning
(ICML), 2018.

[17] Guoliang Kang, Liang Zheng, Yan Yan, and Yi Yang. Deep
adversarial attention alignment for unsupervised domain
adaptation: the beneﬁt of target expectation maximization.
In European Conference on Computer Vision, 2018.

[18] Alex Krizhevsky, Ilya Sutskever, and Geoffrey E Hinton.
Imagenet classiﬁcation with deep convolutional neural net-
works.
In Advances in neural information processing sys-
tems, pages 1097–1105, 2012.

[19] Yann LeCun, L´eon Bottou, Yoshua Bengio, and Patrick
Haffner. Gradient-based learning applied to document recog-
nition. Proceedings of the IEEE, 86(11):2278–2324, 1998.

[20] Dong-Hyun Lee. Pseudo-label: The simple and efﬁcient
semi-supervised learning method for deep neural network-
s. In Workshop on Challenges in Representation Learning,
ICML, volume 3, page 2, 2013.

[21] Shuang Li, Shiji Song, Gao Huang, Zhengming Ding, and
Cheng Wu. Domain invariant and class discriminative fea-
ture learning for visual domain adaptation. IEEE Transac-
tions on Image Processing, 27(9):4260–4273, 2018.

[22] Mingsheng Long, Yue Cao, Jianmin Wang, and Michael Jor-
dan. Learning transferable features with deep adaptation net-
works. In International Conference on Machine Learning,
pages 97–105, 2015.

[23] Mingsheng Long, Jianmin Wang, Guiguang Ding, Jiaguang
Sun, and Philip S Yu. Transfer feature learning with joint
distribution adaptation.
In Proceedings of the IEEE inter-
national conference on computer vision, pages 2200–2207,
2013.

[24] Mingsheng Long, Han Zhu, Jianmin Wang, and Michael I
Jordan. Unsupervised domain adaptation with residual trans-
fer networks. In Advances in Neural Information Processing
Systems, pages 136–144, 2016.

[25] Mingsheng Long, Han Zhu, Jianmin Wang, and Michael I
Jordan. Deep transfer learning with joint adaptation network-
s. In International Conference on Machine Learning, pages
2208–2217, 2017.

[26] Yuval Netzer, Tao Wang, Adam Coates, Alessandro Bissac-
co, Bo Wu, and Andrew Y Ng. Reading digits in natural im-
ages with unsupervised feature learning. In NIPS workshop
on deep learning and unsupervised feature learning, volume
2011, page 5, 2011.

[13] Philip Haeusser, Thomas Frerix, Alexander Mordvintsev,
and Daniel Cremers. Associative domain adaptation.
In
International Conference on Computer Vision (ICCV), vol-
ume 2, page 6, 2017.

[27] Sinno Jialin Pan, Ivor W Tsang, James T Kwok, and Qiang
Yang. Domain adaptation via transfer component analy-
sis. IEEE Transactions on Neural Networks, 22(2):199–210,
2011.

635

on Computer Vision and Pattern Recognition, pages 8156–
8164, 2018.

[44] Weichen Zhang, Wanli Ouyang, Wen Li, and Dong Xu.
Collaborative and adversarial network for unsupervised do-
main adaptation.
In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, pages 3801–
3809, 2018.

[45] Yang Zou, Zhiding Yu, BVK Vijaya Kumar, and Jinsong
Wang. Unsupervised domain adaptation for semantic seg-
mentation via class-balanced self-training.
In Proceedings
of the European Conference on Computer Vision (ECCV),
pages 289–305, 2018.

[28] Sinno Jialin Pan and Qiang Yang. A survey on transfer learn-
ing. IEEE Transactions on knowledge and data engineering,
22(10):1345–1359, 2010.

[29] Zhongyi Pei, Zhangjie Cao, Mingsheng Long, and Jianmin
Wang. Multi-adversarial domain adaptation. In AAAI Con-
ference on Artiﬁcial Intelligence, 2018.

[30] Pedro O Pinheiro and AI Element. Unsupervised domain
adaptation with similarity learning.
In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 8004–8013, 2018.

[31] Kate Saenko, Brian Kulis, Mario Fritz, and Trevor Darrel-
l. Adapting visual category models to new domains.
In
European conference on computer vision, pages 213–226.
Springer, 2010.

[32] Kuniaki Saito, Yoshitaka Ushiku, and Tatsuya Harada.
Asymmetric tri-training for unsupervised domain adaptation.
In International Conference on Machine Learning, pages
2988–2997, 2017.

[33] Kuniaki Saito, Kohei Watanabe, Yoshitaka Ushiku, and Tat-
suya Harada. Maximum classiﬁer discrepancy for unsuper-
vised domain adaptation. arXiv preprint arXiv:1712.02560,
2017.

[34] Ozan Sener, Hyun Oh Song, Ashutosh Saxena, and Silvio
Savarese. Learning transferrable representations for unsuper-
vised domain adaptation. In Advances in Neural Information
Processing Systems, pages 2110–2118, 2016.

[35] Rui Shu, Hung H Bui, Hirokazu Narui, and Stefano Ermon.
A dirt-t approach to unsupervised domain adaptation. arXiv
preprint arXiv:1802.08735, 2018.

[36] Jake Snell, Kevin Swersky, and Richard Zemel. Prototypi-
cal networks for few-shot learning. In Advances in Neural
Information Processing Systems, pages 4077–4087, 2017.

[37] Baochen Sun and Kate Saenko. Deep coral: Correlation
alignment for deep domain adaptation.
In European Con-
ference on Computer Vision, pages 443–450. Springer, 2016.
[38] Antonio Torralba and Alexei A Efros. Unbiased look at
In Computer Vision and Pattern Recogni-
dataset bias.
tion (CVPR), 2011 IEEE Conference on, pages 1521–1528.
IEEE, 2011.

[39] Eric Tzeng, Judy Hoffman, Kate Saenko, and Trevor Darrell.
Adversarial discriminative domain adaptation. In Computer
Vision and Pattern Recognition (CVPR), volume 1, page 4,
2017.

[40] Eric Tzeng, Judy Hoffman, Ning Zhang, Kate Saenko, and
Trevor Darrell. Deep domain confusion: Maximizing for
domain invariance. arXiv preprint arXiv:1412.3474, 2014.

[41] Shaoan Xie, Zibin Zheng, Liang Chen, and Chuan Chen.
Learning semantic representations for unsupervised domain
adaptation. In International Conference on Machine Learn-
ing, pages 5419–5428, 2018.

[42] Hongliang Yan, Yukang Ding, Peihua Li, Qilong Wang, Y-
ong Xu, and Wangmeng Zuo. Mind the class weight bias:
Weighted maximum mean discrepancy for unsupervised do-
main adaptation. In The IEEE Conference on Computer Vi-
sion and Pattern Recognition (CVPR), volume 3, 2017.

[43] Jing Zhang, Zewei Ding, Wanqing Li, and Philip Ogun-
bona. Importance weighted adversarial nets for partial do-
main adaptation.
In Proceedings of the IEEE Conference

636

