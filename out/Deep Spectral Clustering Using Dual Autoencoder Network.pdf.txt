Deep Spectral Clustering using Dual Autoencoder Network

Xu Yang1 , Cheng Deng1 ‚àó, Feng Zheng2 , Junchi Yan3 , Wei Liu4 ‚àó

1School of Electronic Engineering, Xidian University, Xian 710071, China

2Department of Computer Science and Engineering, Southern University of Science and Technology

3Department of CSE, and MoE Key Lab of ArtiÔ¨Åcial Intelligence, Shanghai Jiao Tong University

4Tencent AI Lab, Shenzhen, China

{xuyang.xd, chdeng.xd}@gmail.com, zhengf@sustc.edu.cn,

yanjunchi@sjtu.edu.cn, wl2223@columbia.edu

Abstract

The clustering methods have recently absorbed even-
increasing attention in learning and vision. Deep cluster-
ing combines embedding and clustering together to obtain
optimal embedding subspace for clustering, which can be
more effective compared with conventional clustering meth-
ods. In this paper, we propose a joint learning framework
for discriminative embedding and spectral clustering. We
Ô¨Årst devise a dual autoencoder network, which enforces the
reconstruction constraint for the latent representations and
their noisy versions, to embed the inputs into a latent space
for clustering. As such the learned latent representations
can be more robust to noise. Then the mutual information
estimation is utilized to provide more discriminative infor-
mation from the inputs. Furthermore, a deep spectral clus-
tering method is applied to embed the latent representations
into the eigenspace and subsequently clusters them, which
can fully exploit the relationship between inputs to achieve
optimal clustering results. Experimental results on bench-
mark datasets show that our method can signiÔ¨Åcantly out-
perform state-of-the-art clustering approaches.

1. Introduction

As an important task in unsupervised learning [39, 8, 20]
and vision communities, clustering has been widely used
in image segmentation [33], image categorization [41], and
digital media analysis [1]. The goal of clustering is to Ô¨Ånd
a partition in order to keep similar data points in the same
cluster while dissimilar ones in different clusters. In recen-
t years, many clustering methods have been proposed, such
as K-means clustering [24], spectral clustering [27, 42], and
non-negative matrix factorization clustering [37], among
which K-means and spectral clustering are two well-known

‚àóCorresponding author.

(a) Raw data

(b) ConvAE

(c) Our method

Figure 1. Visualizing the discriminative embedding capability on
MNIST-test with t-SNE algorithm. (a): the space of raw data, (b):
data points in the latent subspace of convolution autoencoder; (c):
data points in the latent subspace of the proposed autoencoder net-
work. Our method can provide a more discriminative embedding
subspace.

conventional algorithms that are applicable to a wide range
of various tasks. However, these shallow clustering method-
s depend on low-level features such as raw pixels, SIFT [28]
or HOG [7] of the inputs. Their distance metrics are only
exploited to describe local relationships in data space, and
have limitation to represent the latent dependencies among
the inputs [3].

This paper presents a novel deep learning based unsu-
pervised clustering approach. Deep clustering, which inte-
grates embedding and clustering processes to obtain opti-
mal embedding subspace for clustering, can be more effec-
tive than shallow clustering methods. The main reason is
that the deep clustering methods can effectively model the
distribution of the inputs and capture the non-linear proper-
ty, being more suitable to real-world clustering scenarios.

Recently, many clustering methods are promoted by
deep generative approaches, such as autoencoder net-
work [25]. The popularity of the autoencoder network lies
in its powerful ability to capture high dimensional probabil-
ity distributions of the inputs without supervised informa-
tion. The encoder model projects the inputs into the latent

14066

space, and adopts an explicit approximation of maximum
likelihood to estimate the distribution diversity between the
latent representations and the inputs. Simultaneously, the
decoder model reconstructs the latent representations to en-
sure the output maintaining all of the details in the input-
s [34]. Almost all existing deep clustering methods endeav-
or to minimize the reconstruction loss. The hope is making
the latent representations more discriminative which direct-
ly determines the clustering quality. However, in fact, the
discriminative ability of the latent representations has no
substantial connection with the reconstruction loss, causing
the performance gap that is to be bridged in this paper.

We propose a novel dual autoencoder network for deep
spectral clustering. First, a dual autoencoder, which en-
forces the reconstruction constraint for the latent represen-
tations and their noisy versions, is utilized to establish the
relationships between the inputs and their latent represen-
tations. Such a mechanism is performed to make the la-
tent representations more robust.
In addition, we adop-
t the mutual information estimation to reserve discrimina-
tive information from the inputs to an extreme.
In this
way, the decoder can be viewed as a discriminator to de-
termine whether the latent representations are discrimina-
tive. Fig. 1 demonstrates the performance of our proposed
autoencoder network by comparing different data represen-
tations on MNIST-test data points. Obviously, our method
can provide more discriminative embedding subspace than
the convolution autoencoder network. Furthermore, deep
spectral clustering is harnessed to embed the latent repre-
sentations into the eigenspace, which followed by cluster-
ing. This procedure can exploit the relationships between
the data points effectively and obtain the optimal results.
The proposed dual autoencoder network and deep spectral
clustering network are jointly optimized.

The main contributions of this paper are in three-folds:

‚Ä¢ We propose a novel dual autoencoder network for gen-
erating discriminative and robust latent representation-
s, which is trained with the mutual information estima-
tion and different reconstruction results.

‚Ä¢ We present a joint learning framework to embed the
inputs into a discriminative latent space with a dual
autoencoder and assign them to the ideal distribution
by a deep spectral clustering model simultaneously.

‚Ä¢ Empirical experiments demonstrate that our method
outperforms state-of-the-art methods over the Ô¨Åve
benchmark datasets,
including both traditional and
deep network-based models.

2. Related Work

Recently, a number of deep learning-based clustering
methods are proposed. Deep Embedding Clustering [36]

(DEC) adopts a fully connected stacked autoencoder net-
work in order to learn the latent representations by min-
imizing the reconstruction loss in the pre-training phase.
The objective function applied to the clustering phase is the
Kullback Leibler (KL) divergence between the soft assign-
ments of clustering modelled by a t-distribution. And then,
a K-means loss is adopted at the clustering phase to train a
fully connected autoencoder network [38], which is a joint
approach of dimensionality reduction and K-means cluster-
ing. In addition, Gaussian Mixture Variational Autoencoder
(GMVAE) [9] shows that minimum information constraint
can be utilized to mitigate the effect of over-regularization
in VAEs and provides an unsupervised clustering within the
VAE framework considering a Gaussian mixture as a pri-
or distribution. Discriminatively Boosted Clustering [21],
a fully convolutional network with layer-wised batch nor-
malization, adopts the same objective function as DEC and
uses a boosting factor to the relatively train a stacked au-
toencoder.

Shah and Koltun [30] jointly solve the tasks of clus-
tering and dimensionality reduction by efÔ¨Åciently optimiz-
ing a continuous global objective based on robust statistics,
which allows heavily mixed clusters to be untangled. Fol-
lowing this method, a deep continuous clustering approach
is suggested in [31], where the autoencoder parameters and
a set of representatives deÔ¨Åned against each data-point are
simultaneously optimized. The convex clustering approach
proposed by [6] optimizes the representatives by minimiz-
ing the distances between each representative and its asso-
ciated data-point. Non-convex objectives are involved to
penalize for the pairwise distances between the representa-
tives.

Furthermore, to improve the performance of clustering,
some methods combine convolutional layers with fully con-
nected layers. Joint Unsupervised Learning (JULE) [40]
jointly optimizes a convolutional neural network with the
clustering parameters in a recurrent manner using an ag-
glomerative clustering approach, where image clustering
is conducted in the forward pass and representation learn-
ing is performed in the backward pass. Dizaji [10] pro-
poses DEPICT, a method that trains a convolutional auto-
encoder with a softmax layer stacked on-top of the en-
coder. The softmax entries represent the assignment of
each data-point to one cluster. VaDE [16] is a variation-
al autoencoder method for deep embedding, and combines
a Gaussian Mixture Model for clusering. In [15], a deep
autoencoder is trained to minimize a reconstruction loss
together with a self-expressive layer. This objective en-
courages a sparse representation of the original data. Zhou
et al. [44] presents a deep adversarial subspace clustering
(DASC) method to learn more favorable representations
and supervise sample representation learning by adversar-
ial deep learning [19]. However, the results of reconstruc-

4067

R
e
l
a
t
i
v
e
 
R
e
c
o
n
s
t
r
u
c
t
i
o
n
 
L
o
s
s
 

R
e
c
o
n
s
t
r
u
c
t
i
o
n
 
L
o
s
s
 

Decoder 

 ùùçùùç 

KL Divergence 

Encoder 

Graph 

Spectral Clustering 

ùíöùíö 

Decoder 

Mutual Information 

Negative Sample 

Figure 2. Illustration of the overall architecture. We Ô¨Årst pre-train a dual autoencoder to embed the inputs into a latent space, and reconstruc-
tion results are obtained by the latent representations and their noise versions based on the noisy-transformer œà. The mutual information
calculated with negative sampling estimation is utilized to learn the discriminative information from inputs. Then, we assign the latent
representations to the ideal clusters by a deep spectral clustering model, and jointly optimize the dual autoencoder and spectral clustering
network simultaneously.

tion through low-dimensional representations are often very
blurry. One possible way is to train a discriminator with ad-
versarial learning but it can further increase the difÔ¨Åculty of
training. Comparatively, our method introduces a relative
reconstruction loss and mutual information estimation to
obtain more discriminative representations, and jointly op-
timize the autoencoder network and the deep spectral clus-
tering network for optimal clustering.

3. Methodology

As aforementioned, our framework consists of two main
components: a dual autoencoder and a deep spectral clus-
tering network. The dual autoencoder, which reconstructs
the inputs using the latent representations and their noise
versions, is introduced to make the latent representations
more robust. In addition, the mutual information estimation
between the inputs and the latent representations is applied
to preserve the input information as much as possible. Then
we utilize the deep spectral clustering network to embed the
latent representations into the eigenspace and subsequently
clustering is performed. The two networks are merged into
a uniÔ¨Åed framework and jointly optimized with KL diver-
gence. The framework is shown in Fig. 2.

Let X = {x1, ..., xn} denote the input samples, Z =
{z1, ..., zn} denote their corresponding latent representa-
tions where zi = f (xi; Œ∏e) ‚àà Rd is learned by the encoder
E. The parameters of the encoder are deÔ¨Åned by Œ∏e, and
d is the feature dimension. Àúxzi = g(zi; Œ∏d) represents the
reconstructed data point, which is the output of the decoder
D, and the parameters of the decoder are denoted by Œ∏d.
We adopt a deep spectral clustering network C to map zi to
yi = c(zi; Œ∏y) ‚àà RK , where K is the number of clusters.

3.1. Discriminative latent representation

We Ô¨Årst train the dual autoencoder network to embed the
inputs into a latent space. Based on the original reconstruc-
tion loss, we add a noise-disturbed reconstruction loss to
learn the decoder network.
In addition, we introduce the
maximization of mutual information [13] to the learning
procedure of the encoder network, so that the network can
obtain more robust representations.
Encoder: Feature extraction is the major step in cluster-
ing and a good feature can effectively improve clustering
performance. However, a single reconstruction loss can-
not well guarantee the quality of the latent representations.
We hope that the representations will help us to identify the
sample from the inputs, which means it is the most unique
information extracted from the inputs. Mutual information
measures the essential correlation between two samples and
can effectively estimate the similarity between features Z
and inputs X. The deÔ¨Ånition of mutual information is de-
Ô¨Åned as:

I(X, Z) =ZZ p(z|x)p(x) log

p(z|x)
p(z)

dxdz

(1)

=KL(p(z|x)p(x)||p(z)p(x)),

where p(x) is the distribution of the inputs, p(z|x) is the
distribution of the latent representations, and the distribu-
tion of latent space p(z) can be calculated by p(z) =

R p(z|x)p(x)dx. The mutual information is expected to

be as large as possible when training the encoder network,
hence we have:

p(z|x) = max

Œ∏e

I(X, Z).

(2)

4068

In addition, the learned latent representations are required
to obey the prior distribution of the standard normal distri-
bution with KL divergence. This is beneÔ¨Åcial to make the
latent space more regular. The distribution difference be-
tween p(z) and its prior q(z) is deÔ¨Åned as.

KL(p(z)||q(z)) = Z p(z)log

p(z)
q(z)

dz.

According to Eqs. (2) and (3), we have:

p(z|x) = min

Œ∏e (cid:26)‚àíZZ p(z|x)p(x) log
+Œ±Z p(z) log

p(z|x)
p(z)
p(z)
q(z)

dxdz

dz(cid:27) .

It can be further rewritten as:

(3)

(4)

p(z|x) = min

Œ∏e (cid:26)ZZ p(z|x)p(x)[‚àí(Œ± + 1) log
p(z|x)
q(z)

+Œ± log

p(z|x)
p(z)
]dxdz(cid:27) .

(5)

(6)

(7)

According to Eq. (1), the Eq. (5) can be viewed as:

p(z|x) = min

Œ∏e {‚àíŒ≤I(X, Z)

+Œ≥Ex‚àºp(x)[KL(p(z|x)||q(z))](cid:9) .

Unfortunately, KL divergence is unbounded. Instead of us-
ing KL divergence, J S divergence is adopted for mutual
information maximization:

p(z|x) = min

Œ∏e {‚àíŒ≤J S(p(z|x)p(x), p(z)p(x))
+Œ≥Ex‚àºp(x)[KL(p(z|x)||q(z))](cid:9) .

We have known that the variational estimation of J S di-

vergence [29] is deÔ¨Åned as:

J S(p(x)||q(x)) = max

T

(Ex‚àºp(x)[log œÉ(T (x))]

(8)

+Ex‚àºq(x)[log(1 ‚àí œÉ(T (x)))]).

2p(x)

where T (x) = log
p(x)+q(x) [29]. Here p(z|x)p(x) and
p(z)p(x) are utilized to replace p(x) and q(x). As a result,
Eq. (7) can be deÔ¨Åned as:

p(z|x) = min

Œ∏e (cid:8)‚àíŒ≤(E(x,z)‚àºp(z|x)p(x)[log œÉ(T (x, z))]
+E(x,z)‚àºp(z)p(x)[log(1 ‚àí œÉ(T (x, z)))])
+ Œ≥Ex‚àºp(x)[KL(p(z|x)||q(z))](cid:9) .

(9)

Negative sampling estimation [13], which is the process
of using a discriminator to distinguish the real and noisy

Figure 3. Local mutual information estimation.

samples to estimate the distribution of real samples, is gen-
erally utilized to solve the problem in Eq. (9). œÉ(T (x, z))
is a discriminator, where x and its latent representation z
together form a positive sample pair. We randomly select
zt from the disturbed batch to construct a negative sample
pair according to x. Note that Eq. (9) represents the global
mutual information between X and Z.

Furthermore, we extract the feature map from the middle
layer of the convolutional network, and construct the rela-
tionship between the feature map and the latent representa-
tion, which is the local mutual information. The estimation
method plays the same role as global mutual information.
The middle layer feature are combined with the latent repre-
sentation to obtain a new feature map. Then a 1√ó1 convolu-
tion is considered as the estimation network of local mutual
information, as shown in Fig. 3. The selection method of
negative samples is the same as global mutual information
estimation. Therefore, the objective function that needs to
be optimized can be deÔ¨Åned as:

Le = ‚àí Œ≤(E(x,z)‚àºp(z|x)p(x)[log œÉ(T1(x, z))]

Œ≤
hw

Œ£i,j(E(x,z)‚àºp(z|x)p(x)[log œÉ(T2(Cij, z))]

+ E(x,z)‚àºp(z)p(x)[log(1 ‚àí œÉ(T1(x, z)))])
‚àí
+ E(x,z)‚àºp(z)p(x)[log(1 ‚àí œÉ(T2(Cij, z)))])
+ Œ≥Ex‚àºp(x)[KL(p(z|x)||q(z))],

(10)

where h and w represent the height and width of the feature
map. Cij represents the feature vector of the middle feature
map at coordinates (i, j) and q(z) is the standard normal
distribution.
Decoder: In the existing decoder networks, the reconstruc-
tion loss is generally a suboptimal scheme for clustering,
due to the natural trade-off between the reconstruction and
the clustering tasks. The reconstruction loss mainly depend-
s on the two parts: the distribution of the latent representa-
tions and the generative capacity of decoder network. How-

4069

ùüèùüè√óùüèùüè Conv Discriminator ‚ÄúReal‚Äù ‚ÄúFake‚Äù Scores ùêåùêå√óùêåùêå features drawn from another image ùêåùêå√óùêåùêå features +  replicated feature vector Latent Representation Negative Sample ever, the generative capacity of the decoder network is not
required in the clustering task. Our real goal is not to obtain
the best reconstruction results, but to get more discrimina-
tive features for clustering. We directly use noise distur-
bance in the latent space to discard known nuisance fac-
tors from the latent representations. Models trained in this
fashion become robust by exclusion rather than inclusion,
and are expected to perform well on clustering tasks, where
even the inputs contain unseen nuisance [14]. A noisy-
transformer œà is utilized to convert the latent representa-
tions Z into their noisy versions ÀÜZ, and then the decoder re-
constructs the inputs from ÀÜZ and Z. The reconstruction re-
sults can be deÔ¨Åned as ÀúxÀÜzi = g(ÀÜzi; Œ∏d) and Àúxzi = g(zi; Œ∏d),
and the relative reconstruction loss can be written as:

Lr(ÀúxÀÜzi , Àúxzi ) =k ÀúxÀÜzi ‚àí Àúxzi k2
F ,

(11)

where k ¬∑ kF stands for the Frobenius norm. We also use the
original reconstruction loss to ensure the performance of the
decoder network and consider œà as multiplicative Gaussian
noise. The complete reconstruction loss can be deÔ¨Åned as:

Lr =k ÀúxÀÜzi ‚àí Àúxzi k2

F +Œ¥ k x ‚àí Àúxzi k2
F .

(12)

where Œ¥ stands for the strength of different reconstruction
loss.

Hence, by considering all the items, the total loss of the

autoencoder network can be deÔ¨Åned as:

min
Œ∏d,Œ∏e

Lr + Le.

(13)

3.2. Deep Spectral Clustering

The learned autoencoder parameters Œ∏e and Œ∏d are con-
sidered as an initial condition in the clustering phase. Spec-
tral clustering can effectively use the relationship between
samples to reduce intra-class differences, and produce bet-
ter clustering results than K-means. In this step, we Ô¨Årst
adopt the autoencoder network to learn the latent represen-
tations. Next, a spectral clustering method is used to em-
bed the latent representations into the eigenspace of their
associated graph Laplacian matrix. All the samples will
be subsequently clustered in this space. Finally, both the
autoencoder parameters and clustering objective are jointly
optimized.

SpeciÔ¨Åcally, we Ô¨Årst utilize the latent representations Z

to construct the non-negative afÔ¨Ånity matrix W :

Wi,j = e‚àí

kzi‚àízj k2

2œÉ2

.

The loss function of spectral clustering is deÔ¨Åned as:

Lc = E[Wi,j k yi ‚àí yj k2],

(14)

(15)

where yi is the output of the network. When we adopt the
general neural network to output y, we randomly select a

minibatch of m samples at each iteration and thus the loss
function can be deÔ¨Åned as:

Lc =

1
m2

m

Xi,j=1

Wi,j k yi ‚àí yj k2 .

(16)

In order to prevent that all points are grouped into the
same cluster in network maps, the output y is required to be
orthonormal in expectation. That is to say:

1
m

Y T Y = Ik√ók,

(17)

where Y is a m √ó k matrix of the outputs whose ith row is
yT
i . The last layer of the network is utilized to enforce the
orthogonality [32] constraint. This layer gets input from K
units, and acts as a linear layer with K outputs, in which
the weights are required to be orthogonal, producing the or-
thogonalized output Y for a minibatch. Let ÀúY denote the
m √ó k matrix containing the inputs to this layer for Z, a
linear map that orthogonalizes the columns of ÀúY is comput-
ed through its QR decomposition. Since integrated A‚ä§A is
full rank for any matrix A, the QR decomposition can be
obtained by the Cholesky decomposition:

A‚ä§A = BB‚ä§,

(18)

where B is a lower triangular matrix, and Q = A(B‚àí1)‚ä§.
Therefore, in order to orthogonalize ÀúY , the last layer mul-
tiplies ÀúY from the right by ‚àöm(L‚àí1)T . Actually, ÀúL can
be obtained from the Cholesky decomposition of ÀúY and the
‚àöm factor is needed to satisfy Eq. (17).

We unify the latent representation learning and the spec-
In the clustering

tral clustering using KL divergence.
phase, the last term of Eq. (10) can be rewritten as:

Ex‚àºp(x)[KL(p((y, z)|x)||q(y, z))],

(19)

where p((y, z)|x) = p(y|z)p(z|x) and q(y, z) =
q(z|y)q(y). Note q(z|y) is a normal distribution with mean
¬µy and variance 1. Therefore, the overall loss of the autoen-
coder and the spectral clustering network is deÔ¨Åned as:

min

Œ∏d,Œ∏e,Œ∏c

Lr + Le + Lc.

(20)

Finally, we jointly optimize the two networks until con-

vergence to obtain the desired clustering results.

4. Experiments

In this section, we evaluate the effectiveness of the pro-
posed clustering method in Ô¨Åve benchmark datasets, and
then compare the performance with several state-of-the-
arts.

4070

Table 1. Description of Datasets

Dataset

MNIST-full
MNIST-test

USPS

Fashion-Mnist

YTF

Samples Classes Dimensions
1√ó28√ó28
70,000
1√ó28√ó28
10,000
1√ó16√ó16
9298
1√ó28√ó28
70,000
3√ó55√ó55
10,000

10
10
10
10
41

(a) MNIST

(b) Fashion-Mnist

Figure 4. The image samples from the benchmark datasets used in
our experiments

4.1. Datasets

In order to show that our method works well with various
kinds of datasets, we choose the following image datasets.
Considering that clustering tasks are fully unsupervised, we
concatenate the training and testing samples when applica-
ble. MNIST-full [18]: A dataset containing a total of 70,000
handwritten digits with 60,000 training and 10,000 testing
samples, each being a 32√ó32 monochrome image. MNIST-
test: A dataset only consists of the testing part of MNIST-
full data. USPS: A handwritten digits dataset from the USP-
S postal service, containing 9,298 samples of 16√ó16 im-
ages. Fashion-MNIST [35]: This dataset has the same num-
ber of images and the same image size with MNIST, but it
is fairly more complicated. Instead of digits, it consists of
various types of fashion products. YTF: We adopt the Ô¨Årst
41 subjects of YTF dataset and the images are Ô¨Årst cropped
and resized to 55 √ó 55. Some image samples are shown in
Fig. 4. The brief descriptions of the datasets are given in
Tab. 1.

4.2. Clustering Metrics

To evaluate the clustering results, we adopt two standard
evaluation metrics: Accuracy (ACC) and Normalized Mu-
tual Information (NMI) [37].

The best mapping between cluster assignments and true
labels is computed using the Hungarian algorithm to mea-

sure accuracy [17]. For completeness, we deÔ¨Åne ACC by:

ACC = max

m Pn

i=1

1{li = m(ci)}

n

,

(21)

where li and ci are the true label and predicted cluster of
data point xi.

NMI calculates the normalized measure of similarity be-

tween two labels of the same data, which is deÔ¨Åned as:

N M I =

I(l; c)

max{H(l), H(c)}

,

(22)

where I(l, c) denotes the mutual information between true
label l and predicted cluster c, and H represents their en-
tropy. Results of NMI do not change by permutations of
clusters (classes), and they are normalized to the range of
[0, 1], with 0 meaning no correlation and 1 exhibiting per-
fect correlation.

4.3. Implementation Details

In our experiments, we set Œ≤ = 0.01, Œ≥ = 1, and
Œ¥ = 0.5. The channel numbers and kernel sizes of the
autoencoder network are shown in Tab. 2, and the dimen-
sion of latent space is set to 120. The deep spectral cluster-
ing network consists of four fully connected layers, and we
adopt ReLU [22] as the non-linear activations. We construct
the original weight matrix W with probabilistic K-nearest
neighbors for each dataset. The weight Wij is calculated as
nearest-neighbor graph [11], and the number of neighbors
is set to 3.

4.4. Comparison Methods

We compare our clustering model with several base-
lines, including K-means [24], spectral clustering with nor-
malized cuts (SC-Ncut) [33], large-scale spectral clustering
(SC-LS) [4], NMF [2], graph degree linkage-based agglom-
erative clustering (AC-GDL) [43]. In addition, we also eval-
uate the performance of our method with several state-of-
the-art clustering algorithms based on deep learning, includ-
ing deep adversarial subspace clustering (DASC) [44], deep
embedded clustering (DEC) [36], variational deep embed-
ding (VaDE) [16], joint unsupervised learning (JULE) [40],
deep embedded regularized clustering (DEPICT) [10], im-
proved deep embedded clustering with locality preservation
(IDEC) [12], deep spectral clustering with a set of near-
est neighbor pairs (SpectralNet) [32], clustering with GAN
(ClusterGAN) [26] and GAN with the mutual information
(InfoGAN) [5].

4.5. Evaluation of Clustering Algorithm

We run our method with 10 random trials and report the
average performance, the error range is no more than 2%. In
terms of the compared methods, if the results of their meth-
ods on some datasets are not reported, we run the released

4071

Method
MNIST
USPS

Fashion-Mnist

YTF

Table 2. Description the structure of the autoencoder network

encoder-1/decoder-4

encoder-2/decoder-3

encoder-3/decoder-2

encoder-4/decoder-1

3√ó3√ó16
3√ó3√ó16
3√ó3√ó16
5√ó5√ó16

3√ó3√ó16
3√ó3√ó32
3√ó3√ó16
5√ó5√ó16

-

3√ó3√ó32
3√ó3√ó32
5√ó5√ó32

-

3√ó3√ó32
3√ó3√ó32
5√ó5√ó32

Table 3. Clustering performance of different algorithms on Ô¨Åve datasets based on ACC and NMI

Method

K-means [24]
SC-Ncut [33]

SC-LS [4]
NMF [2]

AC-GDL [43]

DASC [44]
DEC [36]
VaDE [16]
JULE [40]

DEPICT [10]

IDEC [12]

SpectralNet [32]

InfoGAN [5]

ClusterGAN [26]

Our Method

MNIST-full

MNIST-test

USPS

Fashion-10

YTF

NMI
0.500
0.731
0.706
0.452
0.017
0.784‚àó
0.834‚àó
0.876
0.913‚àó
0.917‚àó
0.867‚àó
0.814
0.840
0.890
0.941

ACC
0.532
0.656
0.714
0.471
0.113
0.801‚àó
0.863‚àó
0.945
0.964‚àó
0.965‚àó
0.881‚àó
0.800
0.870
0.950
0.978

NMI
0.501
0.704
0.756
0.467
0.864

0.780
0.830‚àó

-

0.915‚àó
0.915‚àó
0.802
0.821

-
-

ACC
0.546
0.660
0.740
0.479
0.933

0.804
0.856‚àó

-

0.961‚àó
0.963‚àó
0.846
0.817

-
-

NMI
0.601
0.794
0.755
0.693
0.825

-

0.767‚àó
0.512
0.913
0.906
0.785‚àó

-
-
-

ACC
0.668
0.649
0.746
0.652
0.725

-

0.762‚àó
0.566
0.950
0.899
0.761‚àó

-
-
-

0.946

0.980

0.857

0.869

NMI
0.512
0.575
0.497
0.425
0.010

-

0.546‚àó
0.630
0.608
0.392
0.557

-

0.590
0.640
0.645

ACC
0.474
0.508
0.496
0.434
0.112

-

0.518‚àó
0.578
0.563
0.392
0.529

NMI
0.776
0.701
0.759

-

ACC
0.601
0.510
0.544

-

0.622

0.430

-

-

0.446‚àó

0.371‚àó

-

0.848
0.802

-

-

0.684
0.621

-

-

0.798

0.685

0.610
0.630
0.662

-
-

-
-

0.857

0.691

code with hyper-parameters mentioned in their papers, and
the results are marked by (*) on top. When the code is not
publicly available, or running the released code is not prac-
tical, we put dash marks (-) instead of the corresponding
results.

The clustering results are shown in Tab. 3, where the
Ô¨Årst Ô¨Åve are conventional clustering methods. In the table,
we can notice that our proposed method outperforms the
competing methods on these benchmark datasets. We ob-
serve that the proposed method can improve the clustering
performance whether in digital datasets or in other product
dataset. Especially when performing on the object dataset
MNIST-test, the clustering accuracy is over 98%. SpeciÔ¨Å-
cally, it exceeds the second best DEPICT which is trained
on the noisy versions of the inputs by 1.6% and 3.1% on
ACC and NMI respectively. Moreover, our method achieves
much better clustering results than several classical shallow
baselines. This is because compared with shallow method-
s, our method uses a multi-layer convolutional autoencoder
as the feature extractor and adopts deep clustering network
to obtain the most optimal clustering results. The Fashion-
MNIST dataset is very difÔ¨Åcult to deal with due to the com-
plexity of samples, but our method still harvests good re-
sults.

We also investigate the parameter sensitivity on MNIST-
test, and the results are shown in Fig. 5, where Fig. 5(a)

(a)

(b)

Figure 5. ACC and NMI of Our method with different Œ≤ and Œ≥ on
MNIST dataset

represents the results of ACC from different parameters and
Fig. 5(b) is the results of NMI. It intuitively demonstrates
that our method maintains acceptable results with most pa-
rameter combinations and has relative stability.

4.6. Evaluation of Learning Approach

We compare different strategies for training our mod-
el. For training a multi-layer convolutional autoencoder,
we analyze the following four approaches: (1) convolution-
al autoencoder with original reconstruction loss (ConvA-
E), (2) convolutional autoencoder with original reconstruc-
tion loss and mutual information (ConvAE+MI), (3) con-
volutional autoencoder with improved reconstruction loss
(ConvAE+RS) and (4) convolutional autoencoder with im-

4072

Table 4. Clustering performance with different strategies on Ô¨Åve datasets based on ACC and NMI

Method

ConvAE

MNIST-full
ACC
NMI
0.776
0.745
0.835
0.800
0.803
0.841
0.957
0.910
ConvAE+MI+RS+SN 0.941
0.978

ConvAE+MI
ConvAE+RS

ConvAE+MI+RS

MNIST-test
ACC
NMI
0.781
0.751
0.844
0.796
0.801
0.850
0.961
0.914
0.946
0.980

USPS

Fashion-10

YTF

NMI
0.652
0.744
0.752
0.827
0.857

ACC
0.698
0.785
0.798
0.831
0.869

NMI
0.556
0.609
0.597
0.640
0.645

ACC
0.546
0.592
0.614
0.656
0.662

NMI
0.642
0.738
0.721
0.801
0.857

ACC
0.476
0.571
0.558
0.606
0.691

(a) Raw data

(b) ConvAE

(c) DEC

(d) SpectralNet

(e) ConvAE+RS

(f) ConvAE+MI

(g) ConvAE+RS+MI

(h) ConvAE+MI+RS+SN

Figure 6. Visualization to show the discriminative capability of embedding subspaces using MNIST-test data.

proved reconstruction loss and mutual information (Con-
vAE+MI+RS). The last one is the joint training of convo-
lutional autoencoder and deep spectral clustering. Tab. 4
represents the performance of different strategies for train-
ing our model.
It clearly demonstrates that each kind of
strategy of our method can improve the accuracy of cluster-
ing effectively, especially after adding mutual information
and the improved reconstruction loss in the convolutional
autoencoder network. Fig. 6 demonstrates the importance
of our proposed strategy by comparing different data rep-
resentations of MNIST-test data points using t-SNE visu-
alization [23], Fig. 6(a) represents the space of raw data,
Fig. 6(b) is the data points in the latent subspace of convo-
lution autoencoder, Fig. 6(c) and 6(d) are the results of DEC
and SpectralNet respectively, and the rest are our proposed
model with different strategies. The results demonstrate the
latent representations obtained by our method have more
clear distribution structure.

5. Conclusion

In this paper, we propose an unsupervised deep cluster-
ing method with a dual autoencoder network and a deep
spectral network. First, the dual autoencoder, which recon-
structs the inputs using the latent representations and their

noise-contaminated versions, is utilized to establish the re-
lationships between the inputs and the latent representations
in order to obtain more robust latent representations. Fur-
thermore, we maximize the mutual information between the
inputs and the latent representations, which can preserve
the information of the inputs as much as possible. Hence,
the features of the latent space obtained by our autoencoder
are robust to noise and more discriminative. Finally, the
spectral network is fused to a uniÔ¨Åed framework to cluster
the features of the latent space, so that the relationship be-
tween the samples can be effectively utilized. We evaluate
our method on several benchmarks and experimental result-
s show that our method outperforms those state-of-the-art
approaches.

6. Acknowledgement

Our work was also supported by the National Natu-
ral Science Foundation of China under Grant 61572388,
61703327 and 61602176,
the Key R&D Program-The
Key Industry Innovation Chain of Shaanxi under Grant
2017ZDCXL-GY-05-04-02, 2017ZDCXL-GY-05-02 and
2018ZDXM-GY-176, and the National Key R&D Program
of China under Grant 2017YFE0104100.

4073

References

[1] Lingling An, Xinbo Gao, Xuelong Li, Dacheng Tao, Cheng
Deng, Jie Li, et al. Robust reversible watermarking via clus-
tering and enhanced pixel-wise masking. IEEE Trans. Image
Processing, 21(8):3598‚Äì3611, 2012.

[2] Deng Cai, Xiaofei He, Xuanhui Wang, Hujun Bao, and Ji-
awei Han. Locality preserving nonnegative matrix factoriza-
tion. In IJCAI, volume 9, pages 1010‚Äì1015, 2009.

[3] Pu Chen, Xinyi Xu, and Cheng Deng. Deep view-aware met-
ric learning for person re-identiÔ¨Åcation. In IJCAI, pages 620‚Äì
626, 2018.

[4] Xinlei Chen and Deng Cai. Large scale spectral clustering
In AAAI, volume 5,

with landmark-based representation.
page 14, 2011.

[5] Xi Chen, Yan Duan, Rein Houthooft, John Schulman, Ilya
Sutskever, and Pieter Abbeel. Infogan: Interpretable repre-
sentation learning by information maximizing generative ad-
versarial nets. In Advances in neural information processing
systems, pages 2172‚Äì2180, 2016.

[6] Eric C Chi and Kenneth Lange. Splitting methods for convex
clustering. Journal of Computational and Graphical Statis-
tics, 24(4):994‚Äì1013, 2015.

[7] Navneet Dalal and Bill Triggs. Histograms of oriented gra-
dients for human detection.
In Computer Vision and Pat-
tern Recognition, 2005. CVPR 2005. IEEE Computer Society
Conference on, volume 1, pages 886‚Äì893. IEEE, 2005.

[8] C Deng, E Yang, T Liu, W Liu, J Li, and D Tao. Unsu-
pervised semantic-preserving adversarial hashing for image
search. IEEE transactions on image processing: a publica-
tion of the IEEE Signal Processing Society, 2019.

[9] Nat Dilokthanakul, Pedro AM Mediano, Marta Garnelo,
Matthew CH Lee, Hugh Salimbeni, Kai Arulkumaran, and
Murray Shanahan. Deep unsupervised clustering with gaus-
sian mixture variational autoencoders. arXiv preprint arX-
iv:1611.02648, 2016.

[10] Kamran Ghasedi Dizaji, Amirhossein Herandi, Cheng Deng,
Weidong Cai, and Heng Huang. Deep clustering via join-
t convolutional autoencoder embedding and relative entropy
minimization. In Computer Vision (ICCV), 2017 IEEE Inter-
national Conference on, pages 5747‚Äì5756. IEEE, 2017.

[11] Quanquan Gu and Jie Zhou. Co-clustering on manifolds. In
Proceedings of the 15th ACM SIGKDD international confer-
ence on Knowledge discovery and data mining, pages 359‚Äì
368. ACM, 2009.

[12] Xifeng Guo, Long Gao, Xinwang Liu, and Jianping Yin. Im-
proved deep embedded clustering with local structure preser-
vation. In International Joint Conference on ArtiÔ¨Åcial Intel-
ligence (IJCAI-17), pages 1753‚Äì1759, 2017.

[13] R Devon Hjelm, Alex Fedorov, Samuel Lavoie-Marchildon,
Karan Grewal, Adam Trischler, and Yoshua Bengio. Learn-
ing deep representations by mutual information estimation
and maximization. arXiv preprint arXiv:1808.06670, 2018.

[14] Ayush Jaiswal, Rex Yue Wu, Wael Abd-Almageed, and Pre-
m Natarajan. Unsupervised adversarial invariance.
In Ad-
vances in Neural Information Processing Systems, pages
5097‚Äì5107, 2018.

[15] Pan Ji, Tong Zhang, Hongdong Li, Mathieu Salzmann, and
Ian Reid. Deep subspace clustering networks. In Advances in
Neural Information Processing Systems, pages 24‚Äì33, 2017.
[16] Zhuxi Jiang, Yin Zheng, Huachun Tan, Bangsheng Tang, and
Hanning Zhou. Variational deep embedding: An unsuper-
vised and generative approach to clustering. arXiv preprint
arXiv:1611.05148, 2016.

[17] Harold W Kuhn. The hungarian method for the assignment
problem. Naval research logistics quarterly, 2(1-2):83‚Äì97,
1955.

[18] Yann LeCun, L¬¥eon Bottou, Yoshua Bengio, and Patrick
Haffner. Gradient-based learning applied to document recog-
nition. Proceedings of the IEEE, 86(11):2278‚Äì2324, 1998.

[19] Chao Li, Cheng Deng, Ning Li, Wei Liu, Xinbo Gao, and
Dacheng Tao. Self-supervised adversarial hashing networks
for cross-modal retrieval. In CVPR, pages 4242‚Äì4251, 2018.
[20] Chao Li, Cheng Deng, Lei Wang, De Xie, and Xianglong
Liu. Coupled cyclegan: Unsupervised hashing network
for cross-modal retrieval. arXiv preprint arXiv:1903.02149,
2019.

[21] Fengfu Li, Hong Qiao, and Bo Zhang. Discriminative-
ly boosted image clustering with fully convolutional auto-
encoders. Pattern Recognition, 83:161‚Äì173, 2018.

[22] Andrew L Maas, Awni Y Hannun, and Andrew Y Ng. Recti-
Ô¨Åer nonlinearities improve neural network acoustic models.
In Proc. icml, volume 30, page 3, 2013.

[23] Laurens van der Maaten and Geoffrey Hinton. Visualiz-
ing data using t-sne. Journal of machine learning research,
9(Nov):2579‚Äì2605, 2008.

[24] James MacQueen et al. Some methods for classiÔ¨Åcation
and analysis of multivariate observations. In Proceedings of
the Ô¨Åfth Berkeley symposium on mathematical statistics and
probability, volume 1, pages 281‚Äì297. Oakland, CA, USA,
1967.

[25] Jonathan Masci, Ueli Meier, Dan Cires¬∏an, and J¬®urgen
Schmidhuber. Stacked convolutional auto-encoders for hi-
erarchical feature extraction. In International Conference on
ArtiÔ¨Åcial Neural Networks, pages 52‚Äì59. Springer, 2011.

[26] Sudipto Mukherjee, Himanshu Asnani, Eugene Lin, and
Clustergan: Latent space clustering
arXiv preprint arX-

Sreeram Kannan.
in generative adversarial networks.
iv:1809.03627, 2018.

[27] Andrew Y Ng, Michael I Jordan, and Yair Weiss. On spectral
clustering: Analysis and an algorithm. In Advances in neural
information processing systems, pages 849‚Äì856, 2002.

[28] Pauline C Ng and Steven Henikoff. Sift: Predicting amino
acid changes that affect protein function. Nucleic acids re-
search, 31(13):3812‚Äì3814, 2003.

[29] Sebastian Nowozin, Botond Cseke, and Ryota Tomioka. f-
gan: Training generative neural samplers using variational
divergence minimization. In Advances in Neural Information
Processing Systems, pages 271‚Äì279, 2016.

[30] Sohil Atul Shah and Vladlen Koltun. Robust continuous
clustering. Proceedings of the National Academy of Sci-
ences, 114(37):9814‚Äì9819, 2017.

[31] Sohil Atul Shah and Vladlen Koltun. Deep continuous clus-

tering. arXiv preprint arXiv:1803.01449, 2018.

4074

[32] Uri Shaham, Kelly Stanton, Henry Li, Boaz Nadler, Ronen
Basri, and Yuval Kluger. Spectralnet: Spectral clustering us-
ing deep neural networks. arXiv preprint arXiv:1801.01587,
2018.

[33] Jianbo Shi and Jitendra Malik. Normalized cuts and image
IEEE Transactions on pattern analysis and

segmentation.
machine intelligence, 22(8):888‚Äì905, 2000.

[34] Elad Tzoreff, Olga Kogan, and Yoni Choukroun. Deep dis-
criminative latent space for clustering. arXiv preprint arX-
iv:1805.10795, 2018.

[35] Han Xiao, Kashif Rasul, and Roland Vollgraf. Fashion-
mnist: a novel image dataset for benchmarking machine
learning algorithms. arXiv preprint arXiv:1708.07747, 2017.
[36] Junyuan Xie, Ross Girshick, and Ali Farhadi. Unsupervised
In International

deep embedding for clustering analysis.
conference on machine learning, pages 478‚Äì487, 2016.

[37] Wei Xu, Xin Liu, and Yihong Gong. Document cluster-
ing based on non-negative matrix factorization. In Proceed-
ings of the 26th annual international ACM SIGIR conference
on Research and development in informaion retrieval, pages
267‚Äì273. ACM, 2003.

[38] Bo Yang, Xiao Fu, Nicholas D Sidiropoulos, and Mingyi
Hong. Towards k-means-friendly spaces: Simultaneous deep
learning and clustering. arXiv preprint arXiv:1610.04794,
2016.

[39] Erkun Yang, Cheng Deng, Tongliang Liu, Wei Liu, and
Dacheng Tao. Semantic structure-based unsupervised deep
hashing. In IJCAI, pages 1064‚Äì1070, 2018.

[40] Jianwei Yang, Devi Parikh, and Dhruv Batra. Joint unsuper-
vised learning of deep representations and image clusters.
In Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, pages 5147‚Äì5156, 2016.

[41] Muli Yang, Cheng Deng, and Feiping Nie. Adaptive-
weighting discriminative regression for multi-view classiÔ¨Å-
cation. Pattern Recogn., 88(4):236‚Äì245, 2019.

[42] Xu Yang, Cheng Deng, Xianglong Liu, and Feiping Nie.
New l2, 1-norm relaxation of multi-way graph cut for clus-
tering. In AAAI, 2018.

[43] Wei Zhang, Deli Zhao, and Xiaogang Wang. Agglomerative
clustering via maximum incremental path integral. Pattern
Recognition, 46(11):3056‚Äì3065, 2013.

[44] Pan Zhou, Yunqing Hou, and Jiashi Feng. Deep adversarial
subspace clustering. In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, pages 1596‚Äì
1604, 2018.

4075

