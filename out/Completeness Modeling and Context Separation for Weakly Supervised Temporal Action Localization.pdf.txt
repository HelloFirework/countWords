Completeness Modeling and Context Separation for Weakly Supervised

Temporal Action Localization

Daochang Liu1, Tingting Jiang1, Yizhou Wang1

2

,

,

3

1NELVT, Cooperative Medianet Innovation Center, School of EECS, Peking University

2Peng Cheng Lab, 3Deepwise AI Lab

{daochang, ttjiang, yizhou.wang}@pku.edu.cn

Abstract

Temporal action localization is crucial for understand-
ing untrimmed videos.
In this work, we ﬁrst identify two
underexplored problems posed by the weak supervision for
temporal action localization, namely action completeness
modeling and action-context separation. Then by present-
ing a novel network architecture and its training strat-
egy, the two problems are explicitly looked into. Specif-
ically, to model the completeness of actions, we propose
a multi-branch neural network in which branches are en-
forced to discover distinctive action parts. Complete ac-
tions can be therefore localized by fusing activations from
different branches. And to separate action instances from
their surrounding context, we generate hard negative data
for training using the prior that motionless video clips are
unlikely to be actions. Experiments performed on datasets
THUMOS’14 and ActivityNet show that our framework out-
performs state-of-the-art methods. In particular, the aver-
age mAP on ActivityNet v1.2 is signiﬁcantly improved from
18.0% to 22.4%. Our code will be released soon.

1. Introduction

Temporal action localization is an important visual task
with potential applications in video surveillance [42], video
summarization [28], skill assessment [16], and others. The
goal is to predict not only the action label but also the
start and end times of each action instance from untrimmed
videos. Fully supervised temporal action localization has
witnessed remarkable progress recently [39, 48, 15, 9, 37,
51, 47, 8, 2, 31]. However, precisely annotating the tem-
poral extent of action instances is labor-intensive and time-
consuming, which undermines fully supervised approaches
in real-world large-scale scenarios. Therefore the weakly
supervised setting, where only video-level category labels
are available during training, is more practical and draws
increasing attention from the community. This paper works

Figure 1. Illustration of the two issues. Top: Completeness model-
ing with the proposed multi-branch network. Branches are trained
to discover different action parts, such that complete action can be
localized using the averaged activations over branches. a) Ground
truth of an action instance of Soccer Penalty. b) Class Activation
Sequence (CAS) of one branch from our trained model, localizing
the Player Shooting part. c) CAS of another branch, localizing the
Ball Flying part. d) Average CAS, localizing the instance com-
pletely. Bottom: Context separation with the hard negative video
generation. e) Ground truth of an action instance of Billiards. f)
Background clips obtained, discriminating the co-occurring con-
text. On the right are four frames taken from the time locations of
correspondingly colored arrows. Best viewed in color.

on temporal action localization with such weak labels.

Most of existing weakly supervised methods [45, 33, 38,
36, 52] fall into the framework of Multiple Instance Learn-
ing (MIL) [54]. In this framework, a video is treated as a
bag of sampled frames or snippets and fed into video-level
classiﬁcation networks. Action instances are then localized
using the Class Activation Sequence (CAS) [38], a 1D tem-
poral classiﬁcation score sequence of each action.

Compared with its fully-supervised counterpart, weakly
supervised temporal action localization introduces two new
challenges, dubbed as action completeness modeling and
action-context separation. The two issues have not been
well considered before and have notably limited the per-

1298

formance. The ﬁrst challenge is how to detect action in-
stances in their entirety without full annotations. An ac-
tion is intrinsically a temporal composition of elementary
sub-actions [20], which are supposed to be wholly included
in the prediction without omission. In the fully supervised
setting, whether an action is complete is learned directly
from the ground truth of temporal boundaries. In contrast,
when weakly supervised, the lack of ﬁne-grained annota-
tions complicates the completeness modeling since the lo-
calization task is now formulated as the classiﬁcation on
video level. Identifying one fragment of an action is sufﬁ-
cient for video-level classiﬁcation but not for segment-level
localization. For example, the action Soccer Penalty can be
roughly divided into two sub-actions, i.e., Player Shooting
and Ball Flying. The activation only on the more discrimi-
native Player Shooting part is adequate to classify the video,
but leaving the Ball Flying part false negative for localiza-
tion. The second challenge of action-context separation
is how to distinguish action instances from their context
with weak labels. Action instances of the same class are
usually surrounded by visually similar clips, such as action
Billiards commonly enclosed by commentary clips with a
static pool table in the screen. Such clips appear together
with the true actions in most videos, thus termed as con-
text in this paper. Context clips are different from ordinary
background clips in terms of distributions in videos. Con-
text clips co-occur with the true action in most cases and
are not involved in videos of other action categories, while
background clips are class-independent and distributed ran-
domly. For this reason, context clips can be regarded as hard
negatives. Video-level classiﬁers learn the correlation be-
tween videos with the same tag and discover their common
contents, which unfortunately include not only the common
action (e.g., Billiards) but also the common context (e.g.,
the static pool table). We argue that action-context sepa-
ration is inherently difﬁcult with weak supervision, unless
employing the prior knowledge about actions.

To tackle the two issues respectively, we propose a multi-
branch network architecture and a hard negative data gen-
eration scheme. To model action completeness, feature se-
quences extracted from input videos are fed into a network
with multiple classiﬁcation branches in parallel. A diver-
sity loss is devised to ensure the dissimilarity between the
Class Activation Sequences output by different branches,
such that each branch is trained to locate distinct fractions of
an action. Thereupon, as the example in Fig. 1, complete ac-
tions can be retrieved by aggregating activations from mul-
tiple branches. The class activation is then pooled over time
with temporal attention, producing a video-level category
distribution. We compute its cross-entropy with the ground
truth, i.e., the standard MIL loss, which is minimized along
with the diversity loss to learn the network parameters. As
for action-context separation, we develop a simple yet ef-

fective strategy for mining hard negatives using the prior
that actions should be of motions. We search for stationary
clips in the training videos, as illustrated in Fig. 1. Then
pseudo videos are generated using static clips and labeled
with a new background class. Such a strategy can assist the
model in rejecting the common context, as long as some
hard negatives are included in the generated pseudo videos.
On two benchmark datasets THUMOS’14 [21] and Ac-
tivityNet [6], the proposed method outperforms the state-
of-the-art methods, demonstrating the effectiveness of han-
dling the two problems. In summary, our contributions are
three-fold: 1) A multi-branch network with diversity loss
is proposed to model action completeness. 2) A hard neg-
ative video generation scheme is devised to separate com-
mon context. 3) Our method achieves superior results on
two benchmark datasets.

2. Related Works

Action recognition on trimmed videos has been exten-
sively studied in the past. Early methods were mainly based
on hand-crafted features [26, 43, 34]. In recent years, vari-
ous deep networks have been proposed, such as two-stream
networks [40, 46], LSTM [12], 3D ConvNets [41], I3D
[7], and others [23, 44, 53]. Please refer to recent surveys
[1, 3, 22, 19] for a detailed review.

Fully supervised temporal action localization ap-
proaches have been largely based on the proposal-plus-
classiﬁcation paradigm [39, 37, 51, 15, 5, 9, 47, 8, 31],
where temporal proposals are generated ﬁrst and then clas-
siﬁed. Other categories of methods have also been stud-
ied, such as those based on single-shot detectors [4, 30] or
sequential decision-making process [48, 2]. Given full an-
notations, the proposal-plus-classiﬁcation methods usually
ﬁlter out the common context at the proposal stage via a
binary actionness classiﬁer. As for the completeness mod-
eling, Zhao et al. [51] used a structural temporal pyramid
pooling followed by an explicit binary classiﬁer to deter-
mine whether an instance is complete. Hou et al. [20] clus-
tered video segments of an action into different sub-actions
and then detected the whole action as an ordered sequence
of sub-actions. Yuan et al. [49] structured an action into
three components, i.e. the start, middle and end, to model
its temporal evolution. But they all require full annotations.
Other works on spatial-temporal action detection [17] and
video temporal segmentation [27] are beyond our scope.

Weakly supervised temporal action localization al-
gorithms mostly belong to the Multiple Instance Learning
(MIL) [54]. Wang et al. [45] proposed a framework called
UntrimmedNet composed of a classiﬁcation module and a
selection module, based on which a sparsity regularization
was later introduced in [33]. Paul et al. [36] used a co-
activity similarity loss to enforce the feature similarity be-
tween the localized instances of the same class. Instead of

1299

Figure 2. Overview architecture. The proposed multi-branch network consists of a feature extraction module, a feature embedding
module, a multi-branch classiﬁcation module, and a temporal attention module. In the classiﬁcation module, multiple branches are trained
with the diversity loss to discover different action parts.

thresholding on the CAS, AutoLoc [38] directly predicted
the temporal boundaries to detect actions. Regarding the
ﬁrst challenge, there are two prior works that attempt to
model action completeness. Hide-and-Seek [25] hid ran-
dom frame sequences while training to force the network
responsive to multiple relevant parts. However, randomly
hiding frames does not always guarantee the discovery of
new parts and also disrupts the training process. Recently,
Zhong et al. [52] trained a series of classiﬁers iteratively
to ﬁnd complementary pieces, by erasing the predictions of
predecessor classiﬁers from input videos. The major draw-
back with this approach is the extra time cost and computa-
tional expense to train multiple classiﬁers. The other chal-
lenge of action-context separation is inherently tricky and
remains unexplored in the literature. The selection module
in UntrimmedNet [45] is intended for eliminating irrelevant
background clips rather than semantically related context.
Researchers have also studied action localization with other
types of weak supervision, such as movies scripts [13], or-
dered action lists [11], and web images [14].

Diversity Loss was initially introduced for text embed-
ding [32] to extract different aspects of a sentence. Re-
cently, Li et al. [29] utilized the diversity loss to deal
with occlusions in person re-identiﬁcation. Unlike previous
works, we use diversity loss to model the action complete-
ness, which is of different speciﬁcation and motivation.

3. Proposed Method

In this section, we present the proposed methodology for
weakly supervised temporal action localization. The input

is an untrimmed video with varying frames in length. Let
a one-hot vector y P t0, 1uC`1
denotes the ground truth
video-level category label, where C is the number of action
classes and C ` 1 represents the newly added background
class. During the test time, the output for each test video is
a set of localized action instances tpsi, ei, ci, qiqu, where si
and ei denote the start time and end time of the ith detec-
tion, ci represents the predicted category, and qi denotes the
conﬁdence score.

3.1. Hard Negative Video Generation

Weakly supervised models are inclined to confuse the
true action with its surrounding context, i.e. the hard nega-
tives, especially when the context appears in a majority of
videos of that class. We observe that it is the motion that
makes an action different from its context. An action must
involve the movement of human or other subjects, while the
context clips are allowed to stay static (e.g., the static pool
table). Therefore, we generate hard negative training data
using stationary video clips, labeling them with a new back-
ground class. Concretely, for each video in the training set,
we compute its optical ﬂow using the TV-L1 algorithm [50]
and average the intensity in every frame. Since the motion
magnitude differs among action categories and even some
actions exhibit minor motion, a small predeﬁned percent-
age ρ of video frames with the lowest optical ﬂow intensity
are picked out from each video individually. Frames picked
from the same video are then concatenated into a pseudo
video, which is labeled with the background class and added
to the training set. We expect that the generated videos par-

1300

tially include the hard negatives and drop hints for the pro-
posed network to deal with the challenge of action-context
separation. Details and the generated video examples are
provided in the supplementary material.

3.2. Multi branch Network

To model action completeness, a multi-branch network
is designed such that each branch focuses on different ac-
tion parts. As shown in Fig. 2, the proposed multi-branch
network consists of a feature extraction module, an embed-
ding module, a multi-branch classiﬁcation module, and a
temporal attention module, which are detailed as follows.

Feature extraction module. Given an input video, a
snippet-wise feature sequence X P RT ˆD is ﬁrst extracted
by pre-trained deep networks, where T denotes the num-
ber of snippets and D denotes the feature dimensions. The
extracted feature sequence provides a high-level represen-
tation of the appearance and motion of the input video and
is fed into the next layers in the network. Note that T and
D depend on the choice of feature extraction network. In
experiments, we focus on two off-the-shelf models, namely
UntrimmedNet [45] and I3D [7].

Embedding module. The feature extraction module is
followed by an embedding module. Since the features may
not be originally trained for weakly supervised action lo-
calization, a task-speciﬁc embedding of the features is de-
sired. We utilize a temporal convolutional layer followed
by a ReLU activation layer to embed the features:

φpXq “ max pWemb ˇ X ` bemb, 0q

(1)

where ˇ represents the convolution operation, Wemb and
bemb are the weights and biases of temporal ﬁlters, φpXq P
RT ˆF denotes the learned embedding, and F is the number
of ﬁlters. Temporal convolutions integrate the information
from neighboring time locations, enabling the network to
capture the temporal structure. The embedded feature se-
quence is then passed to subsequent layers.

Multi-branch classiﬁcation module. In this module, K
classiﬁcation branches are organized in parallel to discover
complementary pieces of an action. Each branch inputs the
embedded feature sequence into a temporal convolutional
layer and outputs a sequence of classiﬁcation scores:

Ak “ W k
cls

ˇ φpXq ` bk
cls

(2)

cls and bk

where Ak P RT ˆpC`1q, W k
cls are respectively the
classiﬁcation scores, the ﬁlter weights, and ﬁlter biases in
the kth branch. Then each Ak is passed through a softmax
along the category dimension, yielding class distributions at
each time location:

Ak “ softmaxpAkq

(3)

where Ak is referred to as Class Activation Sequence
(CAS). For clarity, we use the bar notation in this paper

to indicate it has undergone a softmax. For action com-
pleteness modeling, we expect the CASes from multiple
branches differ from each other. However, without con-
straint, the branches could lazily concentrate on a single
same action part. To avoid such degenerate cases where
branches give identical results, a diversity loss based on co-
sine similarity is imposed on the CASes:

Ldiv “

1
Z

C`1

K´1

ÿ

ÿ

K

ÿ

c“1

i“1

j“i`1

Ai

}Ai

˚,c ¨ Aj
˚,c}}Aj

˚,c
˚,c}

(4)

which is the cosine similarities between the CASes from ev-
ery two branches, averaged over all branch pairs and action
˚,c P RT means the activation sequence for
categories. Ai
class c from the ith branch and Z “ 1
2 KpK ´ 1qpC ` 1q
is a normalization factor. By minimizing such a diversity
loss, branches are encouraged to produce activations on dif-
ferent action parts. Then CASes from multiple branches are
averaged and passed through a softmax along the category
dimension:

K

Aavg “

1
K

Ak

ÿ

k“1

(5)

Aavg “ softmaxpAavgq

(6)
where Aavg P RT ˆpC`1q is referred to as average CAS,
which combines all part activations and encodes the full ac-
tion. Moreover, the softmax operation inhibits activations
of action classes when the score of the background class is
large, thus reducing false positives on context clips.

We empirically notice that Ak from some branches tend
to be nearly all zeros while those from other branches ex-
plode, which may corrupt the training process. More impor-
tantly, if one branch dominates, the average CAS is effec-
tively responsive to single action part instead of the whole
action. From another perspective, these parallel branches
can be considered to be in an adversarial relationship, com-
peting with each other to ﬁnd different discriminative action
segments. It is expected that the branches are balanced to
have comparable strength. Similar ideas can be seen in the
training strategy of Generative Adversarial Networks [18].
Therefore we introduce another regularization term on the
norms of the original score sequences without softmax:

Lnorm “

1

KpC ` 1q

C`1

K

ÿ

ÿ

c“1

i“1

ˇˇ}Ai

˚,c} ´ }Aavg

˚,c}ˇˇ

(7)

which is the deviations from the norm of Aavg, averaged
over branches and categories. Equipped with the diversity
loss and norm regularization, the multi-branch design is ca-
pable of discovering diverse action parts without full super-
vision and therefore modeling the action completeness.

Temporal attention module. Since the input video is
untrimmed and contains irrelevant backgrounds, we uti-
lize a temporal attention module to learn the importance of

1301

video snippets. The attention module feeds the embedded
feature sequence into a temporal convolutional layer fol-
lowed by a softmax along the temporal dimension:

U “ softmaxpWatt ˇ φpXq ` battq

(8)

where Watt and batt are the weight parameter and bias of
the temporal ﬁlter, and U P RT represents the sequence
of learned class-agnostic attention. To get the video-level
classiﬁcation prediction, we perform a softmax along the
category dimension on the summation of Aavg weighted by
the attention:

p “ softmaxp

T

ÿ

U tAavg

t,˚q

t“1

(9)

where p P RC`1 is a probabilistic distribution over action
classes, including the background class. Then its cross-
entropy with the ground truth, i.e., the standard MIL loss,
is computed:

Lmil “ ´

C`1

ÿ

c“1

yclog pc

(10)

Finally, we combine the MIL loss with the diversity loss and
norm regularization:

Lsum “ Lmil ` αLdiv ` βLnorm

(11)

where α and β are coefﬁcients. All the three components
have sub-gradients at least and can be minimized using gra-
dient descent.

3.3. Action Localization

During the test time, we leverage the trained multi-
branch network to classify test videos and localize actions.
Since multiple categories of actions can occur in one video,
we ﬁrst threshold on the video-level classiﬁcation score.
Given a test video, we detect action instances for each non-
background category c with pc larger than 0.1. Then we
threshold on the average CAS of class c, i.e., Aavg
˚,c, to lo-
calize action instances. Let tpsi, ei, c, qiqu denotes the cor-
responding output detections. Similar to the Outer-Inner-
Contrastive loss proposed in [38], we score each localized
instance using the contrast between the mean activation of
the instance itself and its surrounding areas:

qi “ minner ´ mouter ` γpc
minner “ meanpAavg
si :ei,cq

(12)

mouter “ meanprAavg

si´li :si,c, Aavg

ei :ei`li,csq

where r¨s denotes concatenation and li “ pei ´ siq{4 is the
inﬂation length. The video-level score pc is combined as
well with the coefﬁcient γ.

4. Experiments

In this section, we ﬁrst discuss the datasets and our im-
plementation details. Then comparisons between the pro-
posed method and state-of-the-art approaches are presented.
At last, we examine the impact of each model component
by ablation studies.
In the supplementary material, more
experiment results are reported.

4.1. Datasets

Extensive experiments are conducted on two large-
scale benchmarks: THUMOS’14 [21] and ActivityNet [6].
Videos in both datasets are untrimmed and only video-level
category labels are used for training.

THUMOS’14. A subset of THUMOS’14 including 20
action classes is provided with temporal annotations and
used for the localization task. Following the previous con-
vention, we use the validation set of 200 videos for train-
ing, and the test set of 213 videos for evaluation. From the
training data, 152 hard negative videos1 are generated. This
dataset has a large amount of action instances per video and
the length of videos varies widely.

ActivityNet. Experiments are performed on both two
release versions of ActivityNet. ActivityNet1.3 covers 200
action classes and consists of 10,024 training videos, 4,926
validation videos and 5,044 testing videos, with 7323 hard
negative videos generated using the training videos. We
train on the training set and report results on the valida-
tion set as well as the testing set. To facilitate comparisons,
we also evaluate on ActivityNet1.2, a subset of version 1.3,
which has 4,819 training videos, 2,383 validation videos,
2,480 testing videos, and 100 classes. 3469 hard negative
videos are generated on ActivityNet1.2. We employ the
training set for training and the validation set for evaluation.
Evaluation Metrics. We follow the standard evalu-
ation protocol and report mean average precision (mAP)
at different thresholds of temporal intersection over union
(IoU). The mAP values are computed using the evaluation
codes provided by the datasets. All results on THUMOS’14
are averaged over three runs. The performance on Activi-
tyNet1.3 testing set is obtained by submitting results to the
evaluation server.

4.2. Implementation Details

Two deep networks with two-stream architecture are
tried out for feature extraction, namely UntrimmedNet [45]
and I3D [7], which are pre-trained and ﬁxed during train-
ing. UntrimmedNet is pre-trained on ImageNet [10] and
takes video snippets of 1 RGB frame and 5 stacked optical
ﬂow frames as input. I3D is pre-trained on Kinetics [7] and
takes non-overlapping 16-frame chunks as input for both
two streams. Video snippets are sampled every 15 frames

1Please refer to the supplementary for details.

1302

Supervision Methods Ó

IoU threshold Ñ 0.1

Full
Full
Full
Full

Weak
Weak
Weak
Weak
Weak
Weak
Weak
Weak
Weak
Weak

S-CNN [39], CVPR 2016
R-C3D [47], ICCV 2017
SSN [51], ICCV 2017
Chao et al. [8], CVPR 2018

Hide-and-Seek [25], ICCV 2017
UntrimmedNet [45], CVPR 2017
Zhong et al. [52], ACM MM 2018
STPN (UNT) [33], CVPR 2018
W-TALC (UNT) [36], ECCV 2018
AutoLoc (UNT) [38], ECCV 2018
Ours (UNT), Full
STPN (I3D) [33], CVPR 2018
W-TALC (I3D) [36], ECCV 2018
Ours (I3D), Full

47.7
54.5
60.3
59.8

36.4
44.4
45.8
45.3
49.0

-

53.5
52.0
55.2
57.4

0.2

43.5
51.5
56.2
57.1

27.8
37.7
39.0
38.8
42.8

-

46.8
44.7
49.6
50.8

0.3

36.3
44.8
50.6
53.2

19.5
28.2
31.1
31.1
32.0
35.8
37.5
35.5
40.1
41.2

0.4

28.7
35.6
40.8
48.5

12.7
21.1
22.5
23.5
26.0
29.0
29.1
25.8
31.1
32.1

0.5

19.0
28.9
29.1
42.8

6.8
13.7
15.9
16.2
18.8
21.2
19.9
16.9
22.8
23.1

0.6

-
-
-

0.7

5.3

-
-

33.8

20.8

-
-
-

9.8

-

13.4
12.3
9.9

-

15.0

-
-
-

5.1
6.2
5.8
6.0
4.3
7.6
7.0

AVG (0.1:0.5)

35.0
43.1
47.4
52.3

20.6
29.0
30.9
31.0
33.7

-

37.4
35.0
39.8
40.9

Table 1. Results on THUMOS’14 testing set. The mAP values at different IoU thresholds are reported, and the column AVG indicates the
average mAP at IoU thresholds from 0.1 to 0.5. UNT and I3D are abbreviations for UntrimmedNet features and I3D features respectively.
With both UntrimmedNet and I3D features, our full model outperforms state-of-the-art methods at most IoUs.

Methods
Zhong et al. [52]
AutoLoc (UNT) [38]
Ours (UNT)
W-TALC (I3D) [36]
Ours (I3D)

IoUÑ 0.5
27.3
27.3
33.9
37.0
36.8

0.75
14.7
15.1
19.9

-

22.0

0.95 AVG
15.6
2.9
3.3
16.0
20.5
5.1
18.0
22.4

5.6

-

Table 2. Results on ActivityNet1.2 validation set. The column
AVG indicates the average mAP at IoU thresholds 0.5:0.05:0.95.
The proposed method exceeds previous ones by a large margin.

for UntrimmedNet and every 16 frames for I3D. The fea-
ture dimension is 1024 in each stream for both two net-
works. We adopt the early-fusion of the RGB and optical
ﬂow streams for UntrimmedNet and late-fusion for I3D.
The proposed method is implemented with PyTorch [35].
Network parameters are learned using mini-batch stochastic
gradient descent with Adam optimizer [24]. Branch number
is set as K “ 4 in the multi-branch classiﬁcation module.
The kernel size of temporal convolutions is set as 3 in the
classiﬁcation module and 1 in both embedding module and
attention module. The dimension of embedded features is
set as F “ 32. The coefﬁcients α and β in Eq.(11) are both
set as 0.2 and γ in Eq.(12) is set as 0.25. The selection ratio
ρ for hard negative mining is chosen as 25%. Other details
are provided in the supplementary material.

4.3. Comparisons with the State of the art

Experimental results on THUMOS’14 testing set are
shown in Table 1. Our proposed multi-branch network
along with hard negative mining is compared to existing
methods for weakly supervised temporal action localiza-
tion, as well as several fully supervised ones. Our model
outperforms previous weakly supervised methods at most

Validation

Methods
STPN (I3D) [33]
Ours (I3D)

IoUÑ 0.5
29.3
34.0

0.75
16.9
20.9

0.95 AVG
2.6
5.7

21.2

-

Testing

AVG
20.1
23.1

Table 3. Results on ActivityNet1.3. The column AVG indicates
the average mAP at IoU thresholds 0.5:0.05:0.95. Our method
also achieves superior performance.

IoU thresholds regardless of the choice of feature extraction
network. The gain is not as substantial at higher IoU due to
the observation that our model sometimes produces overly
complete instances which lead to false positives. Note that
AutoLoc [38] regresses temporal action boundaries for lo-
calization and therefore obtain high mAP at higher IoU
thresholds, while we simply threshold on the CAS and still
achieve comparable results. We argue that their method and
ours can promote the performance further if combined.

Table 2 presents the results on ActivityNet1.2 validation
set, and results on the validation and testing sets of Activ-
ityNet1.3 are reported in Table 3. On both versions of this
large dataset, the proposed method outperforms the state-of-
the-art signiﬁcantly, verifying the effectiveness of handling
action completeness modeling and context separation.

4.4. Ablation Studies

To analyze the contribution of each model component,
we perform a set of ablation studies, with results on THU-
MOS’14 testing set shown in Table 4. Our best model is
compared to a baseline and other conﬁgurations with each
of the following components removed: 1) multi-branch de-
sign 2) hard negative generation 3) both diversity loss and
norm regularization 4) only norm regularization 5) the tem-

1303

Methods
Ours (UNT), Single + Lmil (Baseline)
Ours (UNT), Single + Lmil + HN
Ours (UNT), Multiple + Lsum
Ours (UNT), Multiple + Lmil + HN
Ours (UNT), Multiple + Lmil + Ldiv + HN
Ours (UNT), Multiple + Lsum + HN (No TA)
Ours (UNT), Multiple + Lsum + HN (Full)

AVG (0.1:0.5)

28.8
32.7
34.8
34.7
35.6
36.3
37.4

Table 4. Ablation study results on THUMOS’14 testing set. ‘Sin-
gle’ and ‘Multiple’ indicate the number of branches in the classi-
ﬁcation module, and ‘HN’ denotes that hard negative videos are
used when training. ‘TA’ denotes the temporal attention module.

Figure 3. Left: Experiments on the branch number. Right: Ex-
periments on the diversity loss weight. The average mAP at IoU
thresholds from 0.1 to 0.5 is reported.

Figure 4. Class-speciﬁc results with different branch number. The
optimal branch number depends on the complexity of the action.
Left: Results of Shotput. Right: Results of Cliff Diving. The
average mAP at IoU thresholds from 0.1 to 0.5 is reported.

Ratio
AVG

15% 20% 25% 30%
32.4
32.8

33.3

32.7

Table 5. Impact of the selection ratio ρ in hard negative mining.
AVG indicates the average mAP at IoU thresholds from 0.1 to 0.5.

poral attention module. Results show that all these com-
ponents are required to achieve the best performance, and
the multi-branch design is especially important. Besides,
we conduct experiments with UntrimmedNet features to in-
vestigate the impact of the branch number, the diversity loss
weight as well as the selection ratio in hard negative mining.
Branch Number. A comparative experiment is per-
formed on the branch number, in which the branch number

K is altered from one to eight. To avoid tuning parameters
on test data, we conduct this experiment on THUMOS’14
validation set, i.e., the one used for training. As the results
shown in Fig. 3, all models with multiple branches exceed
the one with single branch evidently, and the difference
among models with two to eight branches is insigniﬁcant.
Since the complexity of actions varies among categories,
the optimal branch number could be different for each ac-
tion class. As the example given in Fig. 4, complex actions
such as Shotput are comprised of more parts and thus need a
larger branch number, while the structure of simpler actions
like Cliff Diving can be captured with only two branches.

Weight of Diversity Loss. Another comparative experi-
ment on the weight of diversity loss is conducted on THU-
MOS’14 validation set, with results posted in Fig. 3. Since
the norm regularization and diversity loss are intended for
constraining the multiple branches jointly, coefﬁcients α
and β are set to a same changing value. The experiment
shows that our model is insensitive to the diversity loss
weight when it is larger than 0.2, demonstrating the robust-
ness of the proposed method.

Selection Ratio in Hard Negative Mining. Several dif-
ferent percentages are tried out when selecting the static
frames. Since the hard negative videos are generated from
the validation set, this experiment is performed on THU-
MOS’14 testing set. Results produced by the single branch
model are presented in Table 5, which are stable across dif-
ferent ratios.

4.5. Qualitative Results

We plot several interesting examples of localized actions
and corresponding CASes in Fig. 5 to show the effective-
ness of tackling the two challenges qualitatively. Examples
are from THUMOS’14 testing set using UntrimmedNet fea-
tures.
In the ﬁrst example of Diving, incomplete actions
displayed in red bounding boxes such as the one with only
Entry into the Water part and the other one with only Stand-
ing on the Platform part are discovered by single branch but
excluded from ﬁnal predictions due to incompleteness. In
the second example of Billiards, commentary clips (yellow
boxes) semantically similar to the true actions (pink boxes)
are effectively ﬁltered out using hard negative generation.
In the third example of High Jump, CASes from multiple
branches are very diverse, localizing different action parts.

5. Discussion and Future Work

We devise a simple yet effective data generation scheme
to separate action context, while the assumption behind
might not hold in all cases. We ﬁnd its effect closely related
to the action class, with details in the supplementary. In fu-
ture, more advanced techniques such as Generative Adver-
sarial Networks can be applied to mine the hard negatives
deeper. As for action completeness modeling, distinctive

1304

Figure 5. Three prediction examples. The eight barcodes in each case are respectively: 1) ground truth of action instances 2) predictions of
the baseline model, i.e., the single-branch network without hard negative generation 3) predictions of our full model 4) the average CAS of
our full model 5-8) CASes from the four branches. Top: Diving. Incomplete actions (red boxes) only activate single branch and are thus
ruled out by the average CAS. Middle: Billiards. The proposed method focuses on the true actions (pink boxes) and the false positives of
semantically similar context (yellow boxes) are reduced. Bottom: High Jump. In all examples, each branch outputs a distinct CAS.

action parts are discovered automatically by the proposed
multi-branch module in an unsupervised manner. In prac-
tice, the learned action parts may not exactly correspond
to semantically meaningful sub-actions. Instead, the model
may capture different action modes, aspects, stages, or other
underlying structures, depending on which kind of repre-
sentation beneﬁts the learning target most. Along the key
idea of dividing an action into parts, there can be many po-
tential future directions for weakly supervised temporal ac-
tion localization, including but not limited to 1) using the
learned part representation to understand actions or mea-
sure action complexity 2) modeling the temporal conﬁgura-
tion of action parts 3) representing actions hierarchically to
handle ambiguities or subjective annotation biases.

6. Conclusion

In this work, we identiﬁed two challenges posed by the
weak supervision for temporal action localization, namely

action completeness modeling and action-context separa-
tion. To handle the ﬁrst challenge, a multi-branch net-
work was proposed to ﬁnd different action parts and there-
fore locate action instances in their integrity. Meanwhile,
we mined hard negatives to handle the second issue of
action-context separation. Experiments on two benchmarks
showed that our framework tackles the two problems effec-
tively and outperforms state-of-the-art methods.

Acknowledgment.

This work was partially sup-
ported by National Basic Research Program of China
(973 Program) under contract 2015CB351803 and the
Natural Science Foundation of China under contracts
61572042, 61527804, 61625201. We acknowledge the
high-performance computing platform of Peking University
for providing computational resources. Thanks to Jingjia
Huang for providing the optical ﬂow data.

1305

References

[1] Jake K Aggarwal and Michael S Ryoo. Human activity anal-
ysis: A review. ACM Computing Surveys (CSUR), 43(3):16,
2011.

[2] Humam Alwassel, Fabian Caba Heilbron, and Bernard
Ghanem. Action search: Spotting actions in videos and its
application to temporal action localization. In The European
Conference on Computer Vision (ECCV), September 2018.

[3] Maryam Asadi-Aghbolaghi, Albert Clapes, Marco Bellanto-
nio, Hugo Jair Escalante, V´ıctor Ponce-L´opez, Xavier Bar´o,
Isabelle Guyon, Shohreh Kasaei, and Sergio Escalera. A sur-
vey on deep learning based approaches for action and gesture
recognition in image sequences. In Automatic Face & Ges-
ture Recognition (FG 2017), 2017 12th IEEE International
Conference on, pages 476–483. IEEE, 2017.

[4] S Buch, V Escorcia, B Ghanem, L Fei-Fei, and JC
Niebles. End-to-end, single-stream temporal action detection
in untrimmed videos. In Proceedings of the British Machine
Vision Conference (BMVC), 2017.

[5] Fabian Caba Heilbron, Wayner Barrios, Victor Escorcia, and
Bernard Ghanem. SCC: Semantic context cascade for efﬁ-
cient action detection. In The IEEE Conference on Computer
Vision and Pattern Recognition (CVPR), July 2017.

[6] Fabian Caba Heilbron, Victor Escorcia, Bernard Ghanem,
and Juan Carlos Niebles. ActivityNet: A large-scale video
benchmark for human activity understanding. In The IEEE
Conference on Computer Vision and Pattern Recognition
(CVPR), June 2015.

[7] Joao Carreira and Andrew Zisserman. Quo vadis, action
recognition? a new model and the kinetics dataset. In The
IEEE Conference on Computer Vision and Pattern Recogni-
tion (CVPR), July 2017.

[8] Yu-Wei Chao, Sudheendra Vijayanarasimhan, Bryan Sey-
bold, David A. Ross, Jia Deng, and Rahul Sukthankar. Re-
thinking the Faster R-CNN architecture for temporal action
localization. In The IEEE Conference on Computer Vision
and Pattern Recognition (CVPR), June 2018.

[9] Xiyang Dai, Bharat Singh, Guyue Zhang, Larry S. Davis,
and Yan Qiu Chen. Temporal context network for activity
localization in videos. In The IEEE International Conference
on Computer Vision (ICCV), Oct 2017.

[10] Jia Deng, Wei Dong, Richard Socher, Li-Jia Li, Kai Li,
and Li Fei-Fei. Imagenet: A large-scale hierarchical image
database. In The IEEE Conference on Computer Vision and
Pattern Recognition (CVPR), pages 248–255. IEEE, 2009.

[11] Li Ding and Chenliang Xu. Weakly-supervised action seg-
mentation with iterative soft boundary assignment.
In The
IEEE Conference on Computer Vision and Pattern Recogni-
tion (CVPR), June 2018.

[12] Jeffrey Donahue, Lisa Anne Hendricks, Sergio Guadarrama,
Marcus Rohrbach, Subhashini Venugopalan, Kate Saenko,
and Trevor Darrell. Long-term recurrent convolutional net-
works for visual recognition and description. In The IEEE
Conference on Computer Vision and Pattern Recognition
(CVPR), June 2015.

[13] Olivier Duchenne, Ivan Laptev, Josef Sivic, Francis Bach,
and Jean Ponce. Automatic annotation of human actions in

video. In The IEEE International Conference on Computer
Vision (ICCV), pages 1491–1498. IEEE, 2009.

[14] Chuang Gan, Chen Sun, Lixin Duan, and Boqing Gong.
Webly-supervised video recognition by mutually voting for
relevant web images and web video frames.
In The Euro-
pean Conference on Computer Vision (ECCV), pages 849–
866. Springer, 2016.

[15] Jiyang Gao, Zhenheng Yang, and Ram Nevatia. Cascaded
boundary regression for temporal action detection. In Pro-
ceedings of the British Machine Vision Conference (BMVC),
2017.

[16] Yixin Gao, S Swaroop Vedula, Carol E Reiley, Narges Ah-
midi, Balakrishnan Varadarajan, Henry C Lin, Lingling Tao,
Luca Zappella, Benjamın B´ejar, David D Yuh, et al. JHU-ISI
gesture and skill assessment working set (JIGSAWS): A sur-
gical activity dataset for human motion modeling. In MIC-
CAI Workshop: M2CAI, volume 3, page 3, 2014.

[17] Georgia Gkioxari and Jitendra Malik. Finding action tubes.
In The IEEE Conference on Computer Vision and Pattern
Recognition (CVPR), June 2015.

[18] Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing
Xu, David Warde-Farley, Sherjil Ozair, Aaron Courville, and
Yoshua Bengio. Generative adversarial nets. In Advances in
Neural Information Processing Systems (NIPS), pages 2672–
2680, 2014.

[19] Samitha Herath, Mehrtash Harandi, and Fatih Porikli. Going
deeper into action recognition: A survey. Image and Vision
Computing, 60:4–21, 2017.

[20] Rui Hou, Rahul Sukthankar, and Mubarak Shah. Real-time
temporal action localization in untrimmed videos by sub-
action discovery. In Proceedings of the British Machine Vi-
sion Conference (BMVC), volume 2, page 7, 2017.

[21] Haroon Idrees, Amir R Zamir, Yu-Gang Jiang, Alex Gorban,
Ivan Laptev, Rahul Sukthankar, and Mubarak Shah. The
thumos challenge on action recognition for videos “in the
wild”. Computer Vision and Image Understanding, 155:1–
23, 2017.

[22] Soo Min Kang and Richard P Wildes. Review of ac-
arXiv preprint

tion recognition and detection methods.
arXiv:1610.06906, 2016.

[23] Andrej Karpathy, George Toderici, Sanketh Shetty, Thomas
Leung, Rahul Sukthankar, and Li Fei-Fei. Large-scale video
classiﬁcation with convolutional neural networks.
In The
IEEE Conference on Computer Vision and Pattern Recog-
nition (CVPR), June 2014.

[24] Diederik P Kingma and Jimmy Ba. Adam: A method
for stochastic optimization. In International Conference on
Learning Representations (ICLR), 2015.

[25] Krishna Kumar Singh and Yong Jae Lee. Hide-and-seek:
Forcing a network to be meticulous for weakly-supervised
object and action localization.
In The IEEE International
Conference on Computer Vision (ICCV), Oct 2017.

[26] Ivan Laptev. On space-time interest points.

International

Journal of Computer Vision, 64(2-3):107–123, 2005.

[27] Colin Lea, Michael D. Flynn, Rene Vidal, Austin Reiter, and
Gregory D. Hager. Temporal convolutional networks for ac-
tion segmentation and detection.
In The IEEE Conference

1306

on Computer Vision and Pattern Recognition (CVPR), July
2017.

3d convolutional networks. In The IEEE International Con-
ference on Computer Vision (ICCV), December 2015.

[28] Yong Jae Lee, Joydeep Ghosh, and Kristen Grauman. Dis-
covering important people and objects for egocentric video
summarization. In The IEEE Conference on Computer Vision
and Pattern Recognition (CVPR), pages 1346–1353. IEEE,
2012.

[29] Shuang Li, Slawomir Bak, Peter Carr, and Xiaogang Wang.
Diversity regularized spatiotemporal attention for video-
based person re-identiﬁcation.
In The IEEE Conference
on Computer Vision and Pattern Recognition (CVPR), June
2018.

[30] Tianwei Lin, Xu Zhao, and Zheng Shou. Single shot tem-
poral action detection. In Proceedings of the 2017 ACM on
Multimedia Conference, pages 988–996. ACM, 2017.

[31] Tianwei Lin, Xu Zhao, Haisheng Su, Chongjing Wang, and
Ming Yang. BSN: Boundary sensitive network for temporal
action proposal generation. In The European Conference on
Computer Vision (ECCV), September 2018.

[32] Zhouhan Lin, Minwei Feng, Cicero Nogueira dos Santos,
Mo Yu, Bing Xiang, Bowen Zhou, and Yoshua Bengio. A
structured self-attentive sentence embedding. arXiv preprint
arXiv:1703.03130, 2017.

[33] Phuc Nguyen, Ting Liu, Gautam Prasad, and Bohyung Han.
Weakly supervised action localization by sparse temporal
pooling network. In The IEEE Conference on Computer Vi-
sion and Pattern Recognition (CVPR), June 2018.

[34] Dan Oneata, Jakob Verbeek, and Cordelia Schmid. Action
and event recognition with ﬁsher vectors on a compact fea-
ture set. In The IEEE International Conference on Computer
Vision (ICCV), December 2013.

[35] Adam Paszke, Sam Gross, Soumith Chintala, Gregory
Chanan, Edward Yang, Zachary DeVito, Zeming Lin, Al-
ban Desmaison, Luca Antiga, and Adam Lerer. Automatic
differentiation in PyTorch. In NIPS-W, 2017.

[36] Sujoy Paul, Sourya Roy, and Amit K. Roy-Chowdhury. W-
TALC: Weakly-supervised temporal activity localization and
classiﬁcation. In The European Conference on Computer Vi-
sion (ECCV), September 2018.

[37] Zheng Shou, Jonathan Chan, Alireza Zareian, Kazuyuki
Miyazawa, and Shih-Fu Chang. CDC: Convolutional-de-
convolutional networks for precise temporal action localiza-
tion in untrimmed videos. In The IEEE Conference on Com-
puter Vision and Pattern Recognition (CVPR), July 2017.

[38] Zheng Shou, Hang Gao, Lei Zhang, Kazuyuki Miyazawa,
and Shih-Fu Chang. AutoLoc: Weakly-supervised temporal
action localization in untrimmed videos.
In The European
Conference on Computer Vision (ECCV), September 2018.

[39] Zheng Shou, Dongang Wang, and Shih-Fu Chang. Temporal
action localization in untrimmed videos via multi-stage cnns.
In The IEEE Conference on Computer Vision and Pattern
Recognition (CVPR), June 2016.

[40] Karen Simonyan and Andrew Zisserman. Two-stream con-
volutional networks for action recognition in videos. In Ad-
vances in Neural Information Processing Systems (NIPS),
pages 568–576, 2014.

[41] Du Tran, Lubomir Bourdev, Rob Fergus, Lorenzo Torresani,
and Manohar Paluri. Learning spatiotemporal features with

[42] Sarvesh Vishwakarma and Anupam Agrawal. A survey
on activity recognition and behavior understanding in video
surveillance. The Visual Computer, 29(10):983–1009, 2013.
[43] Heng Wang and Cordelia Schmid. Action recognition with
improved trajectories. In The IEEE International Conference
on Computer Vision (ICCV), December 2013.

[44] Limin Wang, Wei Li, Wen Li, and Luc Van Gool.
Appearance-and-relation networks for video classiﬁcation.
In The IEEE Conference on Computer Vision and Pattern
Recognition (CVPR), June 2018.

[45] Limin Wang, Yuanjun Xiong, Dahua Lin, and Luc Van Gool.
Untrimmednets for weakly supervised action recognition
and detection. In The IEEE Conference on Computer Vision
and Pattern Recognition (CVPR), July 2017.

[46] Limin Wang, Yuanjun Xiong, Zhe Wang, Yu Qiao, Dahua
Lin, Xiaoou Tang, and Luc Van Gool. Temporal segment net-
works: Towards good practices for deep action recognition.
In The European Conference on Computer Vision (ECCV),
pages 20–36. Springer, 2016.

[47] Huijuan Xu, Abir Das, and Kate Saenko. R-C3D: Region
convolutional 3D network for temporal activity detection.
In The IEEE International Conference on Computer Vision
(ICCV), Oct 2017.

[48] Serena Yeung, Olga Russakovsky, Greg Mori, and Li Fei-
Fei. End-to-end learning of action detection from frame
glimpses in videos. In The IEEE Conference on Computer
Vision and Pattern Recognition (CVPR), June 2016.

[49] Zehuan Yuan, Jonathan C. Stroud, Tong Lu, and Jia Deng.
Temporal action localization by structured maximal sums.
In The IEEE Conference on Computer Vision and Pattern
Recognition (CVPR), July 2017.

[50] Christopher Zach, Thomas Pock, and Horst Bischof. A dual-
ity based approach for realtime TV-L1 optical ﬂow. In Joint
Pattern Recognition Symposium, pages 214–223. Springer,
2007.

[51] Yue Zhao, Yuanjun Xiong, Limin Wang, Zhirong Wu, Xi-
aoou Tang, and Dahua Lin. Temporal action detection with
structured segment networks.
In The IEEE International
Conference on Computer Vision (ICCV), Oct 2017.

[52] Jia-Xing Zhong, Nannan Li, Weijie Kong, Tao Zhang,
Thomas H Li, and Ge Li. Step-by-step erasion, one-by-one
collection: A weakly supervised temporal action detector. In
Proceedings of the 2018 ACM on Multimedia Conference.
ACM, 2018.

[53] Bolei Zhou, Alex Andonian, Aude Oliva, and Antonio Tor-
ralba. Temporal relational reasoning in videos. In The Eu-
ropean Conference on Computer Vision (ECCV), September
2018.

[54] Zhi-Hua Zhou. Multi-instance learning: A survey. Depart-
ment of Computer Science & Technology, Nanjing Univer-
sity, Tech. Rep, 2004.

1307

