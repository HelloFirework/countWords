Learning Spatial Common Sense with Geometry-Aware Recurrent Networks

Hsiao-Yu Fish Tung1∗ Ricson Cheng 2∗† Katerina Fragkiadaki 1

1Carnegie Mellon University

2Uber Advanced Technologies Group

{htung,katef}@cs.cmu.edu, ricsonc@uber.com

Abstract

We integrate two powerful ideas, geometry and deep vi-
sual representation learning, into recurrent network archi-
tectures for mobile visual scene understanding. The pro-
posed networks learn to “lift” and integrate 2D visual fea-
tures over time into latent 3D feature maps of the scene.
They are equipped with differentiable geometric opera-
tions, such as projection, unprojection, egomotion estima-
tion and stabilization, in order to compute a geometrically-
consistent mapping between the world scene and their 3D
latent feature state. We train the proposed architectures to
predict novel camera views given short frame sequences as
input. Their predictions strongly generalize to scenes with a
novel number of objects, appearances and conﬁgurations;
they greatly outperform previous works that do not con-
sider egomotion stabilization or a space-aware latent fea-
ture state. We train the proposed architectures to detect and
segment objects in 3D using the latent 3D feature map as
input—as opposed to per frame features. The resulting ob-
ject detections persist over time: they continue to exist even
when an object gets occluded or leaves the ﬁeld of view.
Our experiments suggest the proposed space-aware latent
feature memory and egomotion-stabilized convolutions are
essential architectural choices for spatial common sense to
emerge in artiﬁcial embodied visual agents.

1. Introduction

Current state-of-the-art visual systems [11] accurately
detect object categories that are rare and unfamiliar to many
of us, such as gyromitra, a particular genus of mushroom
(Figure 1 top left). Yet, they neglect the basic principles of
object permanence or spatial awareness that a one-year-old
child has developed: once the camera turns away, or a per-
son walks in front of the gyromitra, its detection disappears
and it is replaced by the objects detected in the new visual
frame. We believe the ability of current visual systems to
detect rare and exquisite object categories and their inability

∗Indicates equal contribution
†Work done while at CMU

Figure 1. Internet vision versus robotic vision. Pictures taken
by humans (top row) (and uploaded on the web) are the output of
visual perception of a well-trained agent, the human photographer.
The content is skillfully framed and the objects appear in canonical
scales and poses. Pictures taken by mobile agents, such as a NAO
robot during a robot soccer game (bottom row), are the input to
such visual perception. The objects are often partially occluded
and appear in a wide variety of locations, scales and poses. We
present recurrent neural architectures for the latter, that integrate
visual information over time to piece together the visual story of
the scene.

to carry out elementary spatial reasoning is due to the fact
that they are trained to label object categories from static
Internet photos (in ImageNet and COCO datasets) using a
single frame as input. Our overexposure to Internet pho-
tos makes us forget how pictures captured by mobile agents
look. Consider Figure 1. Internet photos are skillfully cap-
tured by human photographers, are well framed and show
objects unoccluded, in canonical locations, scales and poses
(top row). Instead, photos captured by NAO robots during a
soccer game show objects in a wide variety of scales, poses,
locations, and occlusion conﬁgurations (bottom row). Of-
ten, it would not even make sense to label objects in such
images, as most objects appear only half-visible. In the case
of Internet vision, the picture is the output of visual percep-
tion of a well-trained visual agent, the human photographer.
In the case of mobile robotic vision, the picture is the input
to such visual perception. Thus, different architectures may
be needed for each.

We present Geometry-aware Recurrent Neural Network

2595

3D GRU memory

3D MaskRCNN

View Prediction

?

t

R, t

Egomotion estimation

Unprojection

3D GRU memory

Stabilization

R, t

integrate visual

information over

Figure 2. Geometry-aware Recurrent Neural Networks
(GRNNs)
time in a 3D
geometrically-consistent deep feature memory of the visual scene.
At each frame, RGB images are unprojected into corresponding
3D feature tensors, which are oriented to the coordinate frame of
the memory map built thus far (2nd row). A 3D convolutional
GRU memory is then updated using the egomotion-stabilized fea-
tures as input.

architectures, which we call GRNNs, that learn to “lift” and
integrate over time 2D image features into 3D feature maps
of the scene, while stabilizing against the egomotion of the
agent. They update over time a 3-dimensional latent fea-
ture state: the latent feature vectors are arranged in a 3D
grid, where every location of the grid encodes a 3D phys-
ical location in the scene. The latent state is updated with
each new input frame using egomotion-stabilized convolu-
tions, as shown in Figure 2. GRNNs learn to map 2D input
visual features to a 3D latent feature map, and back, in a
differentiable manner. To achieve such differentiable and
geometrically-consistent mapping between the world scene
and the 3D latent feature state, they are equipped with dif-
ferentiable geometric operations, such as egomotion esti-
mation and feature stabilization, 3D-to-2D projection, and
2D-to-3D unprojection, as shown in Figure 2. Beyond being
space-aware, we do not impose any other constraints on the
learned representations: they are free to encode whatever is
relevant for the downstream task.

We train GRNNs in a self-supervised manner to predict
image views from novel camera viewpoints, given short
frame sequences as inputs. We empirically show GRNNs
learn to predict novel views and strongly generalize to
novel scenes with different number, appearances and con-
ﬁguration of objects. They greatly outperform geometry-
unaware networks of previous works that are trained un-

der the exact same view-prediction loss, but do not use
egomotion-stabilized convolutions or a 3D latent space. We
argue strong generalization is a necessary condition for
claiming the ability to spatially reason. Furthermore, we
show learnt representations of GRNNs support scene arith-
metics: adding/subtracting latent scene 3D feature maps
and decoding them from a particular viewpoint matches the
result of adding/subtracting 3D world scenes directly.

We train GRNNs in a supervised manner to detect and
segment objects in 3D, given short frame sequences as in-
puts (Figure 2). We use the latent 3D feature map as in-
put to a 3D version of maskRCNN [11], a state-of-the-art
2D object detector/segmentor. The resulting 3D object de-
tections and 3D voxel segmentations persist in time despite
instantaneous occlusions and dis-occlusions: an object that
is not visible in the current frame is still present in the la-
tent 3D feature map. By projecting the detected 3D ob-
jects in 2D we obtain amodal [20] object boxes and seg-
ments, even under severe occlusions. Visual recognition
with GRNNs thus exhibits object permanence, a prop-
erty which is effortless for humans, and impossible thus far
for 2D visual detectors. The GRNN architecture borrows
many ideas from SLAM (Simultaneous Localization and
Mapping) methods, as we discuss in Section 3. GRNNs
though eventually learn to “imagine” missing content of
the scene without visual inspection from multiple view-
points. Datasets and code are available at our project page
https://ricsonc.github.io/grnn/.

2. Related Work

Deep geometry Simultaneous Localization and Mapping
(SLAM) [23, 16] methods are purely geometric methods
that build a 3D pointcloud map of the scene while estimat-
ing the motion of the camera. Our method builds multiple
deep feature maps instead, which capture both the geome-
try and the semantics of the scene. Recently, there has been
great interest in integrating learning and geometry for single
view 3D object reconstruction [25, 28], 3D object recon-
struction from videos [18], depth and egomotion estimation
from pairs of frames [27, 32], depth estimation from stereo
images [8], and estimation of 3D human keypoints from 2D
keypoint heatmaps [29, 26]. Many of those works use neu-
ral network architectures equipped with some form of dif-
ferentiable camera projection, so that the 3D desired esti-
mates can be supervised directly using 2D quantities. For
example, Tulsiani et al. [25], Wu et al. [28] and Zhou et al.
[32] use a single image frame as input to predict a 3D re-
construction for a single object, or a 2D depth map for the
entire scene. These works use multiple views only to obtain
extra regularization for the predictions in the form of depth
re-projection error. Learnt stereo machines (LSM) [15] in-
tegrate RGB information along sequences of random cam-
era viewpoints into a latent 3D feature memory tensor, in

2596

an egomotion-stabilized way, similar to our method. How-
ever, their goal is to 3D reconstruct a single object, as op-
posed to detect and 3D reconstruct multiple objects, which
our model does. They assume egomotion is given, while
we also propose a way to estimate egomotion. They can
only be trained supervised for the object 3D reconstruction
task, while GRNNs can be trained self-supervisedly through
view prediction. The work of LSM has inspired though the
models proposed in this paper.

MapNet [12], Cognitive mapping and planning [10],
IQA [9] and Neural Map [19] construct 2D overhead maps
of the scene by taking into account the egomotion of the
observer, similar to our method. MapNet further estimates
the egomotion, while other methods assume it is known. In
IQA, objects are detected in each frame and detections are
aggregated in a birdview map, whereas we detect objects
directly using the 3D feature map as input.

The closest work to ours is the work of Cheng at al. [3],
which considers egomotion-stabilized convolutions and a
3D latent map for segmenting objects in 3D, like us. How-
ever, they assume egomotion is known—while we learn to
estimate it—and their object detection pipeline uses heuris-
tics in order to specify the number of objects in the scene
by discretizing continuous voxel segmentation embeddings
that they obtain with metric learning. We instead train 3D
region proposal and segmentation networks. Most impor-
tantly, they do not consider self-supervised learning via
view prediction, which is one of the central contributions
of this work. Rather, they exclusively focus on supervised
voxel labelling using groundtruth 3D voxel occupancies
provided by a simulator.

Self-supervised visual
feature learning Researchers
have considered many self-supervised tasks to train visual
representations without human labels. For example, works
of [13, 1] train visual representation by predicting egomo-
tion between consecutive frames, and works of [6, 24] pre-
dict novel views of a scene.
In particular, the authors of
generative query network (GQN) [6] argue that GQN learns
to disentangle color, lighting, shapes and spatial arrange-
ment without any human labels. We compare against their
model in Section 4 and show GRNNs can strongly general-
ize beyond the training set, while GQN cannot. Such strong
generalization suggests that 3D latent space and egomotion-
stabilization are necessary architectural choices for spatial
reasoning to emerge.

3D object detection When LiDAR input is available,
many recent works attempt detecting objects directly in 3D
using LiDAR and RGB streams [33, 17, 31]. They mostly
use a single frame as input, while the proposed GRNNs in-
tegrate visual information over time. Extending GRNNs to

scenes with independently moving objects is a clear avenue
for future work.

3. Geometry-aware recurrent networks

GRNNs are recurrent neural networks whose latent state
mt ∈ Rw×h×d×c, t = 1 · · · T learns a 3D deep feature
map of the visual scene. We use the terms 4D tensor and
3D feature map interchangeably, to denote a set of feature
channels, each being 3-dimensional. The memory map is
updated with each new camera view in a geometrically-
consistent manner, so that information from 2D pixel pro-
jections that correspond to the same 3D physical point end
up nearby in the memory tensor, as illustrated in Figure 3.
This permits later convolutional operations to have a corre-
spondent input across frames, as opposed to it varying with
the motion of the observer. We believe this is a key for gen-
eralization. The main components of GRNNs are illustrated
in Figure 3 and are detailed right below.

Unprojection At each timestep, we feed the input RGB
image It to a 2D convolutional encoder-decoder network
with skip-connections (2D U-net [22]) to obtain a set of 2D
feature maps Ft ∈ Rw×h×c. We then unproject all fea-
t ∈ Rw×h×d×c
ture maps to create a 4D feature tensor VI
as follows: For each ”cell” in the 3D feature grid indexed
by (i, j, k), we compute the 2D pixel location (x, y) which
the center of the cell projects onto, from the current camera
viewpoint:

[x, y] = [f · i/k, f · j/k],

where f is the focal length of the camera. Then, VI
i,j,k,: is
ﬁlled with the bilinearly interpolated 2D feature vector at
that pixel location (x, y). All voxels lying along the same
ray casted from the camera center will be ﬁlled with nearly
the same image feature vectors. We further unproject the
input 2D depthmap Dt into a binary voxel occupancy grid
VD
t ∈ {0, 1}w×h×d that contains the thin shell of voxels
directly visible from the current camera view. We com-
pute this by ﬁlling all voxels whose unprojected depth value
equals the grid depth value. When a depth sensor is not
available, we learn to estimate the depthmap using a 2D U-
net that takes the RGB image as input.

t with the binary occupancy grid VD
t

We multiply each 3-dimensional channel of the feature
tensor VI
to get a ﬁ-
nal 4D feature tensor Vt ∈ Rw×h×d×c. The unprojected
tensor Vt enters a 3D encoder-decoder network with skip
connections (3D U-net) to produce a resulting feature ten-
sor ¯Vt ∈ Rw×h×d×c.

Egomotion estimation and stabilization Our model ori-
ents the 3D feature memory to have 0◦ elevation using the
absolute elevation angle of the ﬁrst camera view. We as-
sume this value is given, but it can also be estimated using a

2597

t

t + 1

unprojection

ego motion

prediction

¯V
¯Vt

3D  


feature 

memory

mt−1
mt

GRU 
update

3D 


Unet

Vt−1

stabilization
¯V0
¯V′ 
t

*

x

3D 


Unet

query view

View prediction

RPN

3D MaskRCNN

class Id

object 

mask

V

Vt

mt
mt+1

ROIs

Figure 3. GRNN architecture. At each time step t, an RGB image It is the input to a 2D U-net. The resulting 2D deep feature maps are
unprojected to 4D tensors Vt, which in turn are input to a 3D U-net (we do not show the optional combination with unprojected depthmaps
for clarity). The resulting 3D deep feature maps ¯V are oriented to cancel the relative camera motion between the current viewpoint and the
coordinate system of the 3D GRU memory state mt−1, as estimated by an egomotion estimation module. The resulting oriented 3D deep
feature maps ¯Vt’ update the 3D GRU memory state and output mt. The updated state of the GRU module is then projected from speciﬁc
viewpoints and decoded into a corresponding RGB image for view prediction, or fed into a 3D MaskRCNN to predict 3D object bounding
boxes and object voxel occupancies.

2D convnet. This essentially makes the memory to always
be parallel to the ground plane. The azimuth of the 3D fea-
ture memory is chosen to be the azimuth of the ﬁrst view in
the input frame sequence. We assume the camera does not
translate, only rotates by varying two degrees of freedom,
elevation and azimuth.

At each time step t, we estimate the relative elevation
and azimuth between the current frame’s viewpoint and the
feature memory. Note that we can alternatively predict the
(absolute) elevation directly from each input view, without
matching against the memory built thus far. For the az-
imuth, since we need to estimate the relative azimuth to the
ﬁrst view, such cross-view comparison is necessary. Specif-
ically, the tensor ¯Vt is rotated by different azimuth and el-
evation angles and results in a stack of rotated feature ten-
sors ¯Vrot ∈ R(L·K)×w×h×d×c, where L, K are the total
number of azimuths and elevation angles considered, re-
spectively, after discretization. Similar to the bilinear in-
terpolation used during unprojection, to ﬁll in each feature
voxel in a rotated tensor ¯Vrot
·,i,j,k,:, we compute the 3D lo-
cation (X, Y, Z) where it is rotated from and insert the bi-
linearly interpolated feature value from the original tensor
¯Vt. We then compare each of the rotated feature maps with
our current 3D feature memory mt−1 ∈ Rw×h×d×c using
matrix inner products, to produce a probability distribution

over azimuth and elevation pairs:

¯ρt(r) = mt−1 ∗ ¯Vrot(r, :, :, :, :),

r ∈ 1 · · · L · K

ρt = softmax(¯ρt),

where ∗ denotes matrix inner product. The resulting rota-
tion ¯rt is obtained by a weighted average of azimuth and
elevation angles where weights are in ρt. Finally, we orient
the tensor ¯Vt to cancel the relative rotation ¯rt with respect
to our 3D memory mt−1, we denote the oriented tensor as
¯V′
t.

Recurrent map update Once the feature tensor has been
properly oriented, we feed ¯V′
t as input to a 3D convolu-
tional Gated Recurrent Unit [4] layer, whose hidden state
is the memory mt−1 ∈ Rw×h×d×c, as shown in Figure 3.
This state update outputs mt. The hidden state is initial-
ized to zero at the beginning of the frame sequence. For
our view prediction experiments (Section 4) where we use a
ﬁxed number of views T , we found that averaging, namely
¯¯V ′
mT = 1
t works equally well to using the GRU up-
date equations, while being much faster.

T Pt

Projection and decoding Given a 3D feature memory mt
and a desired viewpoint q, we ﬁrst rotate the 3D feature
memory so that its depth axis is aligned with the query cam-
era axis. We then generate for each depth value k a corre-
sponding projected feature map pk ∈ Rw×h×c. Speciﬁ-

2598

<
l
a
t
e
x
i
t
 
s
h
a
1
_
b
a
s
e
6
4
=
"
s
j
i
C
f
r
A
K
N
h
B
9
8
/
0
a
R
2
a
q
r
l
b
S
P
t
I
=
"
>
A
A
A
B
9
H
i
c
b
V
D
L
S
g
M
x
F
L
1
T
X
7
W
+
q
m
4
E
N
8
E
i
u
C
o
z
b
t
R
d
Q
R
c
u
K
z
h
t
o
R
1
L
J
s
2
0
o
U
l
m
S
D
J
K
G
e
Y
/
3
L
h
Q
c
e
s
f
+
A
e
u
3
P
k
3
p
o
+
F
t
h
4
I
H
M
6
5
l
3
t
y
w
o
Q
z
b
V
z
3
2
y
k
s
L
a
+
s
r
h
X
X
S
x
u
b
W
9
s
7
5
d
2
9
h
o
5
T
R
a
h
P
Y
h
6
r
V
o
g
1
5
U
x
S
3
z
D
D
a
S
t
R
F
I
u
Q
0
2
Y
4
v
B
z
7
z
X
u
q
N
I
v
l
r
R
k
l
N
B
C
4
L
1
n
E
C
D
Z
W
u
u
s
I
b
A
Z
K
Z
I
2
8
m
5
m
8
W
6
6
4
V
X
c
C
t
E
i
8
G
a
n
U
D
j
4
/
w
K
L
e
L
X
9
1
e
j
F
J
B
Z
W
G
c
K
x
1
2
3
M
T
E
2
R
Y
G
U
Y
4
z
U
u
d
V
N
M
E
k
y
H
u
0
7
a
l
E
g
u
q
g
2
y
S
O
k
f
H
V
u
m
h
K
F
b
2
S
Y
M
m
6
u
+
N
D
A
u
t
R
y
K
0
k
+
O
U
e
t
4
b
i
/
9
5
7
d
R
E
5
0
H
G
Z
J
I
a
K
s
n
0
U
J
R
y
Z
G
I
0
r
g
D
1
m
K
L
E
8
J
E
l
m
C
h
m
s
y
I
y
w
A
o
T
Y
4
s
q
2
R
K
8
+
S
8
v
E
v
+
0
e
l
F
1
b
2
w
Z
V
z
B
F
E
Q
7
h
C
E
7
A
g
z
O
o
w
T
X
U
w
Q
c
C
C
h
7
h
G
V
6
c
B
+
f
J
e
X
X
e
p
q
M
F
Z
7
a
z
D
3
/
g
v
P
8
A
O
+
y
U
t
g
=
=
<
/
l
a
t
e
x
i
t
>
<
l
a
t
e
x
i
t
 
s
h
a
1
_
b
a
s
e
6
4
=
"
A
Y
3
G
x
V
C
+
o
8
2
I
f
s
f
u
f
d
/
M
B
L
O
A
n
L
s
=
"
>
A
A
A
B
9
H
i
c
b
V
C
7
T
g
J
B
F
J
3
F
F
+
I
L
s
T
G
x
m
U
B
M
r
M
h
i
o
3
Y
k
U
l
h
i
4
g
I
J
r
G
R
2
m
I
U
J
M
7
u
b
m
b
s
a
s
t
n
/
s
L
F
Q
o
6
V
/
4
B
9
Y
2
f
k
3
z
g
K
F
g
i
e
Z
5
O
S
c
e
3
P
P
H
C
8
S
X
I
N
t
f
1
u
5
l
d
W
1
9
Y
3
8
Z
m
F
r
e
2
d
3
r
7
h
f
a
u
k
w
V
p
Q
5
N
B
S
h
6
n
h
E
M
8
E
D
5
g
A
H
w
T
q
R
Y
k
R
6
g
r
W
9
8
W
X
m
t
+
+
Y
0
j
w
M
b
m
A
S
M
V
e
S
Y
c
B
9
T
g
k
Y
6
b
Y
n
C
Y
y
U
T
F
p
p
P
4
G
0
X
6
z
Y
V
X
s
K
v
E
x
q
c
1
K
p
H
3
5
+
l
B
p
v
5
W
a
/
+
N
U
b
h
D
S
W
L
A
A
q
i
N
b
d
m
h
2
B
m
x
A
F
n
A
q
W
F
n
q
x
Z
h
G
h
Y
z
J
k
X
U
M
D
I
p
l
2
k
2
n
q
F
B
8
b
Z
Y
D
9
U
J
k
X
A
J
6
q
v
z
c
S
I
r
W
e
S
M
9
M
Z
i
n
1
o
p
e
J
/
3
n
d
G
P
x
z
N
+
F
B
F
A
M
L
6
O
y
Q
H
w
s
M
I
c
4
q
w
A
O
u
G
A
U
x
M
Y
R
Q
x
U
1
W
T
E
d
E
E
Q
q
m
q
I
I
p
o
b
b
4
5
W
X
i
n
F
Y
v
q
v
a
1
K
a
O
B
Z
s
i
j
I
1
R
G
J
6
i
G
z
l
A
d
X
a
E
m
c
h
B
F
C
j
2
g
J
/
R
s
3
V
u
P
1
o
v
1
O
h
v
N
W
f
O
d
A
/
Q
H
1
v
s
P
u
T
e
V
1
A
=
=
<
/
l
a
t
e
x
i
t
>
<
l
a
t
e
x
i
t
 
s
h
a
1
_
b
a
s
e
6
4
=
"
A
Y
3
G
x
V
C
+
o
8
2
I
f
s
f
u
f
d
/
M
B
L
O
A
n
L
s
=
"
>
A
A
A
B
9
H
i
c
b
V
C
7
T
g
J
B
F
J
3
F
F
+
I
L
s
T
G
x
m
U
B
M
r
M
h
i
o
3
Y
k
U
l
h
i
4
g
I
J
r
G
R
2
m
I
U
J
M
7
u
b
m
b
s
a
s
t
n
/
s
L
F
Q
o
6
V
/
4
B
9
Y
2
f
k
3
z
g
K
F
g
i
e
Z
5
O
S
c
e
3
P
P
H
C
8
S
X
I
N
t
f
1
u
5
l
d
W
1
9
Y
3
8
Z
m
F
r
e
2
d
3
r
7
h
f
a
u
k
w
V
p
Q
5
N
B
S
h
6
n
h
E
M
8
E
D
5
g
A
H
w
T
q
R
Y
k
R
6
g
r
W
9
8
W
X
m
t
+
+
Y
0
j
w
M
b
m
A
S
M
V
e
S
Y
c
B
9
T
g
k
Y
6
b
Y
n
C
Y
y
U
T
F
p
p
P
4
G
0
X
6
z
Y
V
X
s
K
v
E
x
q
c
1
K
p
H
3
5
+
l
B
p
v
5
W
a
/
+
N
U
b
h
D
S
W
L
A
A
q
i
N
b
d
m
h
2
B
m
x
A
F
n
A
q
W
F
n
q
x
Z
h
G
h
Y
z
J
k
X
U
M
D
I
p
l
2
k
2
n
q
F
B
8
b
Z
Y
D
9
U
J
k
X
A
J
6
q
v
z
c
S
I
r
W
e
S
M
9
M
Z
i
n
1
o
p
e
J
/
3
n
d
G
P
x
z
N
+
F
B
F
A
M
L
6
O
y
Q
H
w
s
M
I
c
4
q
w
A
O
u
G
A
U
x
M
Y
R
Q
x
U
1
W
T
E
d
E
E
Q
q
m
q
I
I
p
o
b
b
4
5
W
X
i
n
F
Y
v
q
v
a
1
K
a
O
B
Z
s
i
j
I
1
R
G
J
6
i
G
z
l
A
d
X
a
E
m
c
h
B
F
C
j
2
g
J
/
R
s
3
V
u
P
1
o
v
1
O
h
v
N
W
f
O
d
A
/
Q
H
1
v
s
P
u
T
e
V
1
A
=
=
<
/
l
a
t
e
x
i
t
>
<
l
a
t
e
x
i
t
 
s
h
a
1
_
b
a
s
e
6
4
=
"
N
C
o
h
M
t
Z
X
z
r
U
U
d
j
j
Q
E
F
F
h
o
R
f
q
V
d
c
=
"
>
A
A
A
B
/
H
i
c
b
V
D
L
S
s
N
A
F
L
3
x
W
e
s
r
P
h
a
C
m
2
A
R
X
J
X
E
j
b
o
r
6
M
J
l
B
d
M
W
m
h
A
m
0
0
k
7
d
D
I
J
M
x
O
h
h
u
C
v
u
H
G
h
4
t
a
d
f
+
D
K
n
X
/
j
p
O
1
C
W
w
8
M
H
M
6
5
l
3
v
m
h
C
m
j
U
t
n
2
t
7
G
w
u
L
S
8
s
l
p
Z
q
6
5
v
b
G
5
t
m
z
u
7
L
Z
l
k
A
h
M
X
J
y
w
R
n
R
B
J
w
i
g
n
r
q
K
K
k
U
4
q
C
I
p
D
R
t
r
h
8
L
L
0
2
3
d
E
S
J
r
w
W
z
V
K
i
R
+
j
P
q
c
R
x
U
h
p
K
T
D
3
v
R
i
p
g
Y
h
z
L
0
Q
i
b
x
V
F
k
K
s
i
M
G
t
2
3
R
7
D
m
i
f
O
l
N
Q
a
B
5
8
f
o
N
E
M
z
C
+
v
l
+
A
s
J
l
x
h
h
q
T
s
O
n
a
q
/
B
w
J
R
T
E
j
R
d
X
L
J
E
k
R
H
q
I
+
6
W
r
K
U
U
y
k
n
4
/
T
F
9
a
x
V
n
p
W
l
A
j
9
u
L
L
G
6
u
+
N
H
M
V
S
j
u
J
Q
T
5
Z
Z
5
a
x
X
i
v
9
5
3
U
x
F
5
3
5
O
e
Z
o
p
w
v
H
k
U
J
Q
x
S
y
V
W
W
Y
X
V
o
4
J
g
x
U
a
a
I
C
y
o
z
m
r
h
A
R
I
I
K
1
1
Y
V
Z
f
g
z
H
5
5
n
r
i
n
9
Y
u
6
f
a
P
L
u
I
I
J
K
n
A
I
R
3
A
C
D
p
x
B
A
6
6
h
C
S
5
g
u
I
d
H
e
I
Y
X
4
8
F
4
M
l
6
N
t
8
n
o
g
j
H
d
2
Y
M
/
M
N
5
/
A
J
C
0
l
6
w
=
<
/
l
a
t
e
x
i
t
>
<
l
a
t
e
x
i
t
 
s
h
a
1
_
b
a
s
e
6
4
=
"
g
f
7
n
u
J
d
1
K
u
C
X
w
E
O
R
O
e
q
F
R
z
i
C
I
Q
o
=
"
>
A
A
A
B
/
H
i
c
b
V
D
N
S
s
N
A
G
N
z
4
W
+
t
f
r
B
4
E
L
0
u
L
4
K
k
k
X
t
R
b
w
R
4
8
V
j
B
t
o
Q
l
h
s
9
2
0
S
z
e
b
s
L
s
R
a
g
i
+
i
h
c
F
F
a
/
e
f
A
N
P
3
n
w
b
N
2
0
P
2
j
q
w
M
M
x
8
H
9
/
s
B
A
m
j
U
l
n
W
t
7
G
0
v
L
K
6
t
l
7
a
K
G
9
u
b
e
/
s
m
n
u
V
t
o
x
T
g
Y
m
D
Y
x
a
L
b
o
A
k
Y
Z
Q
T
R
1
H
F
S
D
c
R
B
E
U
B
I
5
1
g
d
F
n
4
n
V
s
i
J
I
3
5
j
R
o
n
x
I
v
Q
g
N
O
Q
Y
q
S
0
5
J
s
H
b
o
T
U
U
E
S
Z
G
y
C
R
t
f
P
c
z
1
T
u
m
z
W
r
b
k
0
A
F
4
k
9
I
7
X
G
4
e
d
H
p
f
l
U
b
f
n
m
l
9
u
P
c
R
o
R
r
j
B
D
U
v
Z
s
K
1
F
e
h
o
S
i
m
J
G
8
7
K
a
S
J
A
i
P
0
I
D
0
N
O
U
o
I
t
L
L
J
u
l
z
e
K
y
V
P
g
x
j
o
R
9
X
c
K
L
+
3
s
h
Q
J
O
U
4
C
v
R
k
k
V
X
O
e
4
X
4
n
9
d
L
V
X
j
u
Z
Z
Q
n
q
S
I
c
T
w
+
F
K
Y
M
q
h
k
U
V
s
E
8
F
w
Y
q
N
N
U
F
Y
U
J
0
V
4
i
E
S
C
C
t
d
W
F
m
X
Y
M
9
/
e
Z
E
4
p
/
W
L
u
n
W
t
y
2
i
C
K
U
r
g
C
F
T
B
C
b
D
B
G
W
i
A
K
9
A
C
D
s
D
g
D
j
y
A
Z
/
B
i
3
B
u
P
x
q
v
x
N
h
1
d
M
m
Y
7
+
+
A
P
j
P
c
f
D
g
6
Y
y
g
=
=
<
/
l
a
t
e
x
i
t
>
<
l
a
t
e
x
i
t
 
s
h
a
1
_
b
a
s
e
6
4
=
"
g
f
7
n
u
J
d
1
K
u
C
X
w
E
O
R
O
e
q
F
R
z
i
C
I
Q
o
=
"
>
A
A
A
B
/
H
i
c
b
V
D
N
S
s
N
A
G
N
z
4
W
+
t
f
r
B
4
E
L
0
u
L
4
K
k
k
X
t
R
b
w
R
4
8
V
j
B
t
o
Q
l
h
s
9
2
0
S
z
e
b
s
L
s
R
a
g
i
+
i
h
c
F
F
a
/
e
f
A
N
P
3
n
w
b
N
2
0
P
2
j
q
w
M
M
x
8
H
9
/
s
B
A
m
j
U
l
n
W
t
7
G
0
v
L
K
6
t
l
7
a
K
G
9
u
b
e
/
s
m
n
u
V
t
o
x
T
g
Y
m
D
Y
x
a
L
b
o
A
k
Y
Z
Q
T
R
1
H
F
S
D
c
R
B
E
U
B
I
5
1
g
d
F
n
4
n
V
s
i
J
I
3
5
j
R
o
n
x
I
v
Q
g
N
O
Q
Y
q
S
0
5
J
s
H
b
o
T
U
U
E
S
Z
G
y
C
R
t
f
P
c
z
1
T
u
m
z
W
r
b
k
0
A
F
4
k
9
I
7
X
G
4
e
d
H
p
f
l
U
b
f
n
m
l
9
u
P
c
R
o
R
r
j
B
D
U
v
Z
s
K
1
F
e
h
o
S
i
m
J
G
8
7
K
a
S
J
A
i
P
0
I
D
0
N
O
U
o
I
t
L
L
J
u
l
z
e
K
y
V
P
g
x
j
o
R
9
X
c
K
L
+
3
s
h
Q
J
O
U
4
C
v
R
k
k
V
X
O
e
4
X
4
n
9
d
L
V
X
j
u
Z
Z
Q
n
q
S
I
c
T
w
+
F
K
Y
M
q
h
k
U
V
s
E
8
F
w
Y
q
N
N
U
F
Y
U
J
0
V
4
i
E
S
C
C
t
d
W
F
m
X
Y
M
9
/
e
Z
E
4
p
/
W
L
u
n
W
t
y
2
i
C
K
U
r
g
C
F
T
B
C
b
D
B
G
W
i
A
K
9
A
C
D
s
D
g
D
j
y
A
Z
/
B
i
3
B
u
P
x
q
v
x
N
h
1
d
M
m
Y
7
+
+
A
P
j
P
c
f
D
g
6
Y
y
g
=
=
<
/
l
a
t
e
x
i
t
>
<
l
a
t
e
x
i
t
 
s
h
a
1
_
b
a
s
e
6
4
=
"
p
T
S
o
l
e
X
m
V
U
z
Y
q
i
5
i
g
f
1
h
+
t
+
h
M
f
o
=
"
>
A
A
A
B
/
X
i
c
b
V
D
L
S
s
N
A
F
L
2
p
r
1
p
f
U
X
H
l
Z
r
C
K
b
i
y
J
G
3
V
X
0
I
X
L
C
q
Y
t
N
C
F
M
p
p
N
2
6
O
T
B
z
E
Q
o
I
e
C
v
u
H
G
h
4
t
b
/
c
O
f
f
O
G
m
7
0
N
Y
D
A
4
d
z
7
u
W
e
O
U
H
K
m
V
S
W
9
W
1
U
l
p
Z
X
V
t
e
q
6
7
W
N
z
a
3
t
H
X
N
3
r
y
2
T
T
B
D
q
k
I
Q
n
o
h
t
g
S
T
m
L
q
a
O
Y
4
r
S
b
C
o
q
j
g
N
N
O
M
L
o
p
/
c
4
j
F
Z
I
l
8
Y
M
a
p
9
S
L
8
C
B
m
I
S
N
Y
a
c
k
3
D
9
w
I
q
6
G
I
c
j
f
A
I
m
8
X
p
4
W
f
q
8
I
3
6
1
b
D
m
g
A
t
E
n
t
G
6
s
3
j
8
x
A
B
Q
M
s
3
v
9
x
+
Q
r
K
I
x
o
p
w
L
G
X
P
t
l
L
l
5
V
g
o
R
j
g
t
a
m
4
m
a
Y
r
J
C
A
9
o
T
9
M
Y
R
1
R
6
+
S
R
+
g
U
6
0
0
k
d
h
I
v
S
L
F
Z
q
o
v
z
d
y
H
E
k
5
j
g
I
9
W
Y
a
V
8
1
4
p
/
u
f
1
M
h
V
e
e
T
m
L
0
0
z
R
m
E
w
P
h
R
l
H
K
k
F
l
F
6
j
P
B
C
W
K
j
z
X
B
R
D
C
d
F
Z
E
h
F
p
g
o
3
V
h
N
l
2
D
P
f
3
m
R
O
B
e
N
6
4
Z
1
r
8
u
4
h
S
m
q
c
A
h
H
c
A
Y
2
X
E
I
T
7
q
A
F
D
h
D
I
4
R
l
e
4
c
1
4
M
l
6
M
d
+
N
j
O
l
o
x
Z
j
v
7
8
A
f
G
5
w
/
n
r
Z
c
T
<
/
l
a
t
e
x
i
t
>
<
l
a
t
e
x
i
t
 
s
h
a
1
_
b
a
s
e
6
4
=
"
p
y
i
K
+
I
a
d
6
7
2
9
W
0
M
x
U
w
3
M
j
j
a
9
q
L
g
=
"
>
A
A
A
B
/
X
i
c
b
V
D
N
S
s
N
A
G
N
z
U
v
1
r
/
o
u
L
J
S
7
B
K
v
V
g
S
L
+
q
t
o
I
L
H
C
q
Y
t
N
C
F
s
t
p
t
2
6
W
Y
T
d
j
d
C
W
Q
O
+
i
h
c
P
K
l
5
9
C
U
/
e
f
B
s
3
b
Q
/
a
O
r
A
w
z
H
w
f
3
+
y
E
K
S
V
C
2
v
a
3
U
V
p
Y
X
F
p
e
K
a
9
W
1
t
Y
3
N
r
f
M
7
Z
2
W
S
D
K
O
s
I
s
S
m
v
B
O
C
A
W
m
h
G
F
X
E
k
l
x
J
+
U
Y
x
i
H
F
7
X
B
4
W
f
j
t
e
8
w
F
S
d
i
d
H
K
X
Y
j
2
G
f
k
Y
g
g
K
L
U
U
m
H
t
e
D
O
W
A
x
8
o
L
I
V
e
t
v
J
Y
H
S
u
a
B
W
b
X
r
9
h
j
W
P
H
G
m
p
N
o
4
P
I
l
q
D
9
e
f
z
c
D
8
8
n
o
J
y
m
L
M
J
K
J
Q
i
K
5
j
p
9
J
X
k
E
u
C
K
M
4
r
X
i
Z
w
C
t
E
Q
9
n
F
X
U
w
Z
j
L
H
w
1
j
p
9
b
R
1
r
p
W
V
H
C
9
W
P
S
G
q
u
/
N
x
S
M
h
R
j
F
o
Z
4
s
w
o
p
Z
r
x
D
/
8
7
q
Z
j
M
5
9
R
V
i
a
S
c
z
Q
5
F
C
U
U
U
s
m
V
t
G
F
1
S
M
c
I
0
l
H
m
k
D
E
i
c
5
q
o
Q
H
k
E
E
n
d
W
E
W
X
4
M
x
+
e
Z
6
4
p
/
W
L
u
n
2
r
y
7
g
C
E
5
T
B
P
j
g
A
x
8
A
B
Z
6
A
B
b
k
A
T
u
A
A
B
B
Z
7
A
C
3
g
1
H
o
1
n
4
8
1
4
n
4
y
W
j
O
n
O
L
v
g
D
4
+
M
H
A
b
y
Y
p
w
=
=
<
/
l
a
t
e
x
i
t
>
<
l
a
t
e
x
i
t
 
s
h
a
1
_
b
a
s
e
6
4
=
"
p
y
i
K
+
I
a
d
6
7
2
9
W
0
M
x
U
w
3
M
j
j
a
9
q
L
g
=
"
>
A
A
A
B
/
X
i
c
b
V
D
N
S
s
N
A
G
N
z
U
v
1
r
/
o
u
L
J
S
7
B
K
v
V
g
S
L
+
q
t
o
I
L
H
C
q
Y
t
N
C
F
s
t
p
t
2
6
W
Y
T
d
j
d
C
W
Q
O
+
i
h
c
P
K
l
5
9
C
U
/
e
f
B
s
3
b
Q
/
a
O
r
A
w
z
H
w
f
3
+
y
E
K
S
V
C
2
v
a
3
U
V
p
Y
X
F
p
e
K
a
9
W
1
t
Y
3
N
r
f
M
7
Z
2
W
S
D
K
O
s
I
s
S
m
v
B
O
C
A
W
m
h
G
F
X
E
k
l
x
J
+
U
Y
x
i
H
F
7
X
B
4
W
f
j
t
e
8
w
F
S
d
i
d
H
K
X
Y
j
2
G
f
k
Y
g
g
K
L
U
U
m
H
t
e
D
O
W
A
x
8
o
L
I
V
e
t
v
J
Y
H
S
u
a
B
W
b
X
r
9
h
j
W
P
H
G
m
p
N
o
4
P
I
l
q
D
9
e
f
z
c
D
8
8
n
o
J
y
m
L
M
J
K
J
Q
i
K
5
j
p
9
J
X
k
E
u
C
K
M
4
r
X
i
Z
w
C
t
E
Q
9
n
F
X
U
w
Z
j
L
H
w
1
j
p
9
b
R
1
r
p
W
V
H
C
9
W
P
S
G
q
u
/
N
x
S
M
h
R
j
F
o
Z
4
s
w
o
p
Z
r
x
D
/
8
7
q
Z
j
M
5
9
R
V
i
a
S
c
z
Q
5
F
C
U
U
U
s
m
V
t
G
F
1
S
M
c
I
0
l
H
m
k
D
E
i
c
5
q
o
Q
H
k
E
E
n
d
W
E
W
X
4
M
x
+
e
Z
6
4
p
/
W
L
u
n
2
r
y
7
g
C
E
5
T
B
P
j
g
A
x
8
A
B
Z
6
A
B
b
k
A
T
u
A
A
B
B
Z
7
A
C
3
g
1
H
o
1
n
4
8
1
4
n
4
y
W
j
O
n
O
L
v
g
D
4
+
M
H
A
b
y
Y
p
w
=
=
<
/
l
a
t
e
x
i
t
>
<
l
a
t
e
x
i
t
 
s
h
a
1
_
b
a
s
e
6
4
=
"
X
Z
Z
P
L
r
y
h
n
H
k
i
X
x
4
T
u
w
W
u
i
Q
q
a
Q
i
U
=
"
>
A
A
A
B
+
n
i
c
b
V
A
9
T
8
M
w
F
H
w
p
X
6
V
A
S
c
v
I
Y
l
E
h
s
V
A
l
L
M
B
W
C
Q
b
G
I
p
G
2
U
h
t
F
j
u
u
0
V
h
0
n
s
h
1
E
F
e
W
v
s
D
A
A
Y
u
W
X
s
P
F
v
c
D
8
G
a
D
n
J
0
u
n
u
P
b
3
z
h
S
l
n
S
j
v
O
t
1
X
a
2
N
z
a
3
i
n
v
V
v
b
2
D
6
q
H
d
q
3
e
U
U
k
m
C
f
V
I
w
h
P
Z
C
7
G
i
n
A
n
q
a
a
Y
5
7
a
W
S
4
j
j
k
t
B
t
O
b
m
Z
+
9
5
F
K
x
R
L
x
o
K
c
p
9
W
M
8
E
i
x
i
B
G
s
j
B
X
Z
9
E
G
M
9
l
n
G
e
d
4
o
i
y
P
W
5
W
w
R
2
w
2
k
6
c
6
B
1
4
i
5
J
o
9
W
o
V
c
G
g
H
d
h
f
g
2
F
C
s
p
g
K
T
T
h
W
q
u
8
6
q
f
Z
z
L
D
U
j
n
B
a
V
Q
a
Z
o
i
s
k
E
j
2
j
f
U
I
F
j
q
v
x
8
n
r
1
A
p
0
Y
Z
o
i
i
R
5
g
m
N
5
u
r
v
j
R
z
H
S
k
3
j
0
E
z
O
k
q
p
V
b
y
b
+
5
/
U
z
H
V
3
5
O
R
N
p
p
q
k
g
i
0
N
R
x
p
F
O
0
K
w
I
N
G
S
S
E
s
2
n
h
m
A
i
m
c
m
K
y
B
h
L
T
L
S
p
q
2
J
K
c
F
e
/
v
E
6
8
i
+
Z
1
0
7
k
3
Z
d
z
C
A
m
U
4
h
h
M
4
A
x
c
u
o
Q
V
3
0
A
Y
P
C
D
z
B
M
7
z
C
m
1
V
Y
L
9
a
7
9
b
E
Y
L
V
n
L
n
S
P
4
A
+
v
z
B
4
8
E
l
Q
Y
=
<
/
l
a
t
e
x
i
t
>
<
l
a
t
e
x
i
t
 
s
h
a
1
_
b
a
s
e
6
4
=
"
K
n
M
+
K
x
U
A
r
l
r
w
y
/
p
r
/
s
Y
1
6
n
c
u
b
D
s
=
"
>
A
A
A
B
+
n
i
c
b
V
C
9
T
s
M
w
G
H
T
K
X
y
l
Q
0
j
K
y
G
C
o
k
F
q
q
E
B
d
g
q
Y
G
A
s
E
m
k
r
t
V
H
k
u
E
5
r
1
X
Y
i
2
0
F
U
U
V
6
F
h
Q
E
Q
K
0
/
C
x
t
v
g
t
B
2
g
5
S
R
L
p
7
v
v
0
3
e
+
M
G
F
U
a
c
f
5
t
k
p
r
6
x
u
b
W
+
X
t
y
s
7
u
X
n
X
f
r
t
U
7
K
k
4
l
J
h
6
O
W
S
x
7
I
V
K
E
U
U
E
8
T
T
U
j
v
U
Q
S
x
E
N
G
u
u
H
k
p
v
C
7
j
0
Q
q
G
o
s
H
P
U
2
I
z
9
F
I
0
I
h
i
p
I
0
U
2
P
U
B
R
3
o
s
e
Z
Z
1
8
j
z
I
9
J
m
b
B
3
b
D
a
T
o
z
w
F
X
i
L
k
i
j
1
a
h
V
S
0
f
X
S
T
u
w
v
w
b
D
G
K
e
c
C
I
0
Z
U
q
r
v
O
o
n
2
M
y
Q
1
x
Y
z
k
l
U
G
q
S
I
L
w
B
I
1
I
3
1
C
B
O
F
F
+
N
s
u
e
w
x
O
j
D
G
E
U
S
/
O
E
h
j
P
1
9
0
a
G
u
F
J
T
H
p
r
J
I
q
l
a
9
g
r
x
P
6
+
f
6
u
j
S
z
6
h
I
U
k
0
E
n
h
+
K
U
g
Z
1
D
I
s
i
4
J
B
K
g
j
W
b
G
o
K
w
p
C
Y
r
x
G
M
k
E
d
a
m
r
o
o
p
w
V
3
+
8
i
r
x
z
p
t
X
T
e
f
e
l
H
E
L
5
i
i
D
Q
3
A
M
T
o
E
L
L
k
A
L
3
I
E
2
8
A
A
G
T
+
A
Z
v
I
I
3
K
7
d
e
r
H
f
r
Y
z
5
a
s
h
Y
7
B
+
A
P
r
M
8
f
q
o
G
V
2
w
=
=
<
/
l
a
t
e
x
i
t
>
<
l
a
t
e
x
i
t
 
s
h
a
1
_
b
a
s
e
6
4
=
"
K
n
M
+
K
x
U
A
r
l
r
w
y
/
p
r
/
s
Y
1
6
n
c
u
b
D
s
=
"
>
A
A
A
B
+
n
i
c
b
V
C
9
T
s
M
w
G
H
T
K
X
y
l
Q
0
j
K
y
G
C
o
k
F
q
q
E
B
d
g
q
Y
G
A
s
E
m
k
r
t
V
H
k
u
E
5
r
1
X
Y
i
2
0
F
U
U
V
6
F
h
Q
E
Q
K
0
/
C
x
t
v
g
t
B
2
g
5
S
R
L
p
7
v
v
0
3
e
+
M
G
F
U
a
c
f
5
t
k
p
r
6
x
u
b
W
+
X
t
y
s
7
u
X
n
X
f
r
t
U
7
K
k
4
l
J
h
6
O
W
S
x
7
I
V
K
E
U
U
E
8
T
T
U
j
v
U
Q
S
x
E
N
G
u
u
H
k
p
v
C
7
j
0
Q
q
G
o
s
H
P
U
2
I
z
9
F
I
0
I
h
i
p
I
0
U
2
P
U
B
R
3
o
s
e
Z
Z
1
8
j
z
I
9
J
m
b
B
3
b
D
a
T
o
z
w
F
X
i
L
k
i
j
1
a
h
V
S
0
f
X
S
T
u
w
v
w
b
D
G
K
e
c
C
I
0
Z
U
q
r
v
O
o
n
2
M
y
Q
1
x
Y
z
k
l
U
G
q
S
I
L
w
B
I
1
I
3
1
C
B
O
F
F
+
N
s
u
e
w
x
O
j
D
G
E
U
S
/
O
E
h
j
P
1
9
0
a
G
u
F
J
T
H
p
r
J
I
q
l
a
9
g
r
x
P
6
+
f
6
u
j
S
z
6
h
I
U
k
0
E
n
h
+
K
U
g
Z
1
D
I
s
i
4
J
B
K
g
j
W
b
G
o
K
w
p
C
Y
r
x
G
M
k
E
d
a
m
r
o
o
p
w
V
3
+
8
i
r
x
z
p
t
X
T
e
f
e
l
H
E
L
5
i
i
D
Q
3
A
M
T
o
E
L
L
k
A
L
3
I
E
2
8
A
A
G
T
+
A
Z
v
I
I
3
K
7
d
e
r
H
f
r
Y
z
5
a
s
h
Y
7
B
+
A
P
r
M
8
f
q
o
G
V
2
w
=
=
<
/
l
a
t
e
x
i
t
>
<
l
a
t
e
x
i
t
 
s
h
a
1
_
b
a
s
e
6
4
=
"
u
l
A
P
p
e
k
4
Q
J
Q
v
7
E
r
O
9
J
c
k
W
G
H
z
T
1
0
=
"
>
A
A
A
B
+
n
i
c
b
V
A
9
T
8
M
w
F
H
z
h
s
x
Q
o
a
R
l
Z
I
i
o
k
F
q
q
E
B
d
g
q
w
c
B
Y
J
E
I
r
t
V
H
k
u
E
5
r
1
X
Y
i
2
0
F
U
U
f
4
K
C
w
M
g
V
n
4
J
G
/
8
G
p
+
0
A
L
S
d
Z
O
t
2
9
p
3
e
+
K
G
V
U
a
d
f
9
t
t
b
W
N
z
a
3
t
i
s
7
1
d
2
9
/
d
q
B
X
W
8
8
q
C
S
T
m
P
g
4
Y
Y
n
s
R
U
g
R
R
g
X
x
N
d
W
M
9
F
J
J
E
I
8
Y
6
U
a
T
6
9
L
v
P
h
K
p
a
C
L
u
9
T
Q
l
A
U
c
j
Q
W
O
K
k
T
Z
S
a
D
c
G
H
O
m
x
5
H
n
O
i
y
L
M
9
Z
l
X
h
H
b
T
b
b
k
z
O
K
v
E
W
5
B
m
u
1
m
v
g
U
E
n
t
L
8
G
w
w
R
n
n
A
i
N
G
V
K
q
7
7
m
p
D
n
I
k
N
c
W
M
F
N
V
B
p
k
i
K
8
A
S
N
S
N
9
Q
g
T
h
R
Q
T
7
L
X
j
g
n
R
h
k
6
c
S
L
N
E
9
q
Z
q
b
8
3
c
s
S
V
m
v
L
I
T
J
Z
J
1
b
J
X
i
v
9
5
/
U
z
H
l
0
F
O
R
Z
p
p
I
v
D
8
U
J
w
x
R
y
d
O
W
Y
Q
z
p
J
J
g
z
a
a
G
I
C
y
p
y
e
r
g
M
Z
I
I
a
1
N
X
1
Z
T
g
L
X
9
5
l
f
j
n
r
a
u
W
e
2
f
K
u
I
E
5
K
n
A
E
x
3
A
K
H
l
x
A
G
2
6
h
A
z
5
g
e
I
J
n
e
I
U
3
q
7
B
e
r
H
f
r
Y
z
6
6
Z
i
1
2
D
u
E
P
r
M
8
f
s
o
G
V
H
Q
=
=
<
/
l
a
t
e
x
i
t
>
<
l
a
t
e
x
i
t
 
s
h
a
1
_
b
a
s
e
6
4
=
"
m
L
k
g
n
+
4
M
W
W
X
n
u
i
H
R
z
w
p
h
c
c
b
R
x
2
Q
=
"
>
A
A
A
B
+
n
i
c
b
V
C
7
T
s
M
w
F
H
X
K
q
5
R
X
W
k
a
W
Q
I
X
E
Q
p
W
w
A
F
s
F
D
I
x
F
I
r
R
S
G
0
W
O
6
7
R
W
b
S
e
y
b
x
B
V
l
F
9
h
Y
Q
D
E
y
p
e
w
8
T
e
4
j
w
F
a
j
m
T
p
6
J
x
7
d
Y
9
P
l
H
K
m
w
X
W
/
r
d
L
K
6
t
r
6
R
n
m
z
s
r
W
9
s
7
t
n
V
2
s
P
O
s
k
U
o
T
5
J
e
K
I
6
E
d
a
U
M
0
l
9
Y
M
B
p
J
1
U
U
i
4
j
T
d
j
S
6
n
v
j
t
R
6
o
0
S
+
Q
9
j
F
M
a
C
D
y
Q
L
G
Y
E
g
5
F
C
u
9
Y
T
G
I
Z
K
5
L
k
o
i
j
C
H
U
6
8
I
7
b
r
b
c
K
d
w
l
o
k
3
J
/
V
m
v
b
p
b
O
r
x
K
W
6
H
9
1
e
s
n
J
B
N
U
A
u
F
Y
6
6
7
n
p
h
D
k
W
A
E
j
n
B
a
V
X
q
Z
p
i
s
k
I
D
2
j
X
U
I
k
F
1
U
E
+
z
V
4
4
x
0
b
p
O
3
G
i
z
J
P
g
T
N
X
f
G
z
k
W
W
o
9
F
Z
C
Y
n
S
f
W
i
N
x
H
/
8
7
o
Z
x
B
d
B
z
m
S
a
A
Z
V
k
d
i
j
O
u
A
O
J
M
y
n
C
6
T
N
F
C
f
C
x
I
Z
g
o
Z
r
I
6
Z
I
g
V
J
m
D
q
q
p
g
S
v
M
U
v
L
x
P
/
r
H
H
Z
c
O
9
M
G
T
d
o
h
j
I
6
Q
E
f
o
B
H
n
o
H
D
X
R
L
W
o
h
H
x
H
0
h
J
7
R
K
3
q
z
C
u
v
F
e
r
c
+
Z
q
M
l
a
7
6
z
j
/
7
A
+
v
w
B
z
f
6
V
8
g
=
=
<
/
l
a
t
e
x
i
t
>
<
l
a
t
e
x
i
t
 
s
h
a
1
_
b
a
s
e
6
4
=
"
m
L
k
g
n
+
4
M
W
W
X
n
u
i
H
R
z
w
p
h
c
c
b
R
x
2
Q
=
"
>
A
A
A
B
+
n
i
c
b
V
C
7
T
s
M
w
F
H
X
K
q
5
R
X
W
k
a
W
Q
I
X
E
Q
p
W
w
A
F
s
F
D
I
x
F
I
r
R
S
G
0
W
O
6
7
R
W
b
S
e
y
b
x
B
V
l
F
9
h
Y
Q
D
E
y
p
e
w
8
T
e
4
j
w
F
a
j
m
T
p
6
J
x
7
d
Y
9
P
l
H
K
m
w
X
W
/
r
d
L
K
6
t
r
6
R
n
m
z
s
r
W
9
s
7
t
n
V
2
s
P
O
s
k
U
o
T
5
J
e
K
I
6
E
d
a
U
M
0
l
9
Y
M
B
p
J
1
U
U
i
4
j
T
d
j
S
6
n
v
j
t
R
6
o
0
S
+
Q
9
j
F
M
a
C
D
y
Q
L
G
Y
E
g
5
F
C
u
9
Y
T
G
I
Z
K
5
L
k
o
i
j
C
H
U
6
8
I
7
b
r
b
c
K
d
w
l
o
k
3
J
/
V
m
v
b
p
b
O
r
x
K
W
6
H
9
1
e
s
n
J
B
N
U
A
u
F
Y
6
6
7
n
p
h
D
k
W
A
E
j
n
B
a
V
X
q
Z
p
i
s
k
I
D
2
j
X
U
I
k
F
1
U
E
+
z
V
4
4
x
0
b
p
O
3
G
i
z
J
P
g
T
N
X
f
G
z
k
W
W
o
9
F
Z
C
Y
n
S
f
W
i
N
x
H
/
8
7
o
Z
x
B
d
B
z
m
S
a
A
Z
V
k
d
i
j
O
u
A
O
J
M
y
n
C
6
T
N
F
C
f
C
x
I
Z
g
o
Z
r
I
6
Z
I
g
V
J
m
D
q
q
p
g
S
v
M
U
v
L
x
P
/
r
H
H
Z
c
O
9
M
G
T
d
o
h
j
I
6
Q
E
f
o
B
H
n
o
H
D
X
R
L
W
o
h
H
x
H
0
h
J
7
R
K
3
q
z
C
u
v
F
e
r
c
+
Z
q
M
l
a
7
6
z
j
/
7
A
+
v
w
B
z
f
6
V
8
g
=
=
<
/
l
a
t
e
x
i
t
>
<
l
a
t
e
x
i
t
 
s
h
a
1
_
b
a
s
e
6
4
=
"
M
J
H
Y
R
z
q
L
S
Y
R
Z
D
s
O
I
Q
T
8
+
z
J
p
L
Z
5
M
=
"
>
A
A
A
B
+
H
i
c
b
V
B
N
S
8
N
A
F
H
y
p
X
7
V
+
R
b
0
I
X
h
a
L
4
K
k
k
X
t
R
b
Q
Q
8
e
K
x
h
b
a
E
P
Y
b
D
f
t
0
t
0
k
7
G
4
K
J
e
S
f
e
P
G
g
4
t
W
7
/
8
C
T
N
/
+
N
m
7
Y
H
b
R
1
Y
G
G
b
e
4
8
1
O
m
H
K
m
t
O
N
8
W
5
W
V
1
b
X
1
j
e
p
m
b
W
t
7
Z
3
f
P
3
j
9
4
U
E
k
m
C
f
V
I
w
h
P
Z
C
b
G
i
n
M
X
U
0
0
x
z
2
k
k
l
x
S
L
k
t
B
2
O
r
k
u
/
P
a
Z
S
s
S
S
+
1
5
O
U
+
g
I
P
Y
h
Y
x
g
r
W
R
A
t
v
u
C
a
y
H
U
u
S
5
K
I
o
g
1
0
V
g
1
5
2
G
M
w
V
a
J
u
6
c
1
J
t
H
n
x
9
g
0
A
r
s
r
1
4
/
I
Z
m
g
s
S
Y
c
K
9
V
1
n
V
T
7
O
Z
a
a
E
U
6
L
W
i
9
T
N
M
V
k
h
A
e
0
a
2
i
M
B
V
V
+
P
k
1
e
o
F
O
j
9
F
G
U
S
P
N
i
j
a
b
q
7
4
0
c
C
6
U
m
I
j
S
T
Z
U
6
1
6
J
X
i
f
1
4
3
0
9
G
l
n
7
M
4
z
T
S
N
y
e
x
Q
l
H
G
k
E
1
T
W
g
P
p
M
U
q
L
5
x
B
B
M
J
D
N
Z
E
R
l
i
i
Y
k
2
Z
d
V
M
C
e
7
i
l
5
e
J
d
9
6
4
a
j
h
3
p
o
w
b
m
K
E
K
x
3
A
C
Z
+
D
C
B
T
T
h
F
l
r
g
A
Y
E
x
P
M
I
z
v
F
i
5
9
W
S
9
W
m
+
z
0
Y
o
1
3
z
m
E
P
7
D
e
f
w
C
k
1
p
Y
K
<
/
l
a
t
e
x
i
t
>
<
l
a
t
e
x
i
t
 
s
h
a
1
_
b
a
s
e
6
4
=
"
J
v
9
G
M
L
8
L
6
2
d
h
8
V
v
X
/
/
H
6
y
M
A
V
c
F
w
=
"
>
A
A
A
B
+
H
i
c
b
V
C
9
T
s
M
w
G
H
T
K
X
y
l
/
o
S
x
I
L
F
Y
r
J
K
Y
q
Y
Q
G
2
S
n
R
g
L
B
K
h
l
d
o
o
c
l
y
n
t
W
o
7
k
e
1
U
q
q
K
8
C
Q
s
D
R
a
z
s
v
A
E
T
G
2
+
D
0
3
a
A
l
p
M
s
n
e
6
+
T
9
/
5
w
o
R
R
p
R
3
n
2
y
p
t
b
G
5
t
7
5
R
3
K
3
v
7
B
4
d
H
9
n
H
1
U
c
W
p
x
M
T
D
M
Y
t
l
N
0
S
K
M
C
q
I
p
6
l
m
p
J
t
I
g
n
j
I
S
C
c
c
3
x
Z
+
Z
0
K
k
o
r
F
4
0
N
O
E
+
B
w
N
B
Y
0
o
R
t
p
I
g
W
3
3
O
d
I
j
y
b
O
M
5
3
m
Q
6
T
y
w
6
0
7
D
m
Q
O
u
E
3
d
J
6
s
3
T
z
4
9
q
a
1
Z
r
B
/
Z
X
f
x
D
j
l
B
O
h
M
U
N
K
9
V
w
n
0
X
6
G
p
K
a
Y
k
b
z
S
T
x
V
J
E
B
6
j
I
e
k
Z
K
h
A
n
y
s
/
m
y
X
N
4
b
p
Q
B
j
G
J
p
n
t
B
w
r
v
7
e
y
B
B
X
a
s
p
D
M
1
n
k
V
K
t
e
I
f
7
n
9
V
I
d
X
f
s
Z
F
U
m
q
i
c
C
L
Q
1
H
K
o
I
5
h
U
Q
M
c
U
E
m
w
Z
l
N
D
E
J
b
U
Z
I
V
4
h
C
T
C
2
p
R
V
M
S
W
4
q
1
9
e
J
9
5
l
4
6
b
h
3
J
s
y
W
m
C
B
M
j
g
D
N
X
A
B
X
H
A
F
m
u
A
O
t
I
E
H
M
J
i
A
J
/
A
C
Z
l
Z
m
P
V
u
v
1
t
t
i
t
G
Q
t
d
0
7
A
H
1
j
v
P
y
I
w
l
y
g
=
<
/
l
a
t
e
x
i
t
>
<
l
a
t
e
x
i
t
 
s
h
a
1
_
b
a
s
e
6
4
=
"
J
v
9
G
M
L
8
L
6
2
d
h
8
V
v
X
/
/
H
6
y
M
A
V
c
F
w
=
"
>
A
A
A
B
+
H
i
c
b
V
C
9
T
s
M
w
G
H
T
K
X
y
l
/
o
S
x
I
L
F
Y
r
J
K
Y
q
Y
Q
G
2
S
n
R
g
L
B
K
h
l
d
o
o
c
l
y
n
t
W
o
7
k
e
1
U
q
q
K
8
C
Q
s
D
R
a
z
s
v
A
E
T
G
2
+
D
0
3
a
A
l
p
M
s
n
e
6
+
T
9
/
5
w
o
R
R
p
R
3
n
2
y
p
t
b
G
5
t
7
5
R
3
K
3
v
7
B
4
d
H
9
n
H
1
U
c
W
p
x
M
T
D
M
Y
t
l
N
0
S
K
M
C
q
I
p
6
l
m
p
J
t
I
g
n
j
I
S
C
c
c
3
x
Z
+
Z
0
K
k
o
r
F
4
0
N
O
E
+
B
w
N
B
Y
0
o
R
t
p
I
g
W
3
3
O
d
I
j
y
b
O
M
5
3
m
Q
6
T
y
w
6
0
7
D
m
Q
O
u
E
3
d
J
6
s
3
T
z
4
9
q
a
1
Z
r
B
/
Z
X
f
x
D
j
l
B
O
h
M
U
N
K
9
V
w
n
0
X
6
G
p
K
a
Y
k
b
z
S
T
x
V
J
E
B
6
j
I
e
k
Z
K
h
A
n
y
s
/
m
y
X
N
4
b
p
Q
B
j
G
J
p
n
t
B
w
r
v
7
e
y
B
B
X
a
s
p
D
M
1
n
k
V
K
t
e
I
f
7
n
9
V
I
d
X
f
s
Z
F
U
m
q
i
c
C
L
Q
1
H
K
o
I
5
h
U
Q
M
c
U
E
m
w
Z
l
N
D
E
J
b
U
Z
I
V
4
h
C
T
C
2
p
R
V
M
S
W
4
q
1
9
e
J
9
5
l
4
6
b
h
3
J
s
y
W
m
C
B
M
j
g
D
N
X
A
B
X
H
A
F
m
u
A
O
t
I
E
H
M
J
i
A
J
/
A
C
Z
l
Z
m
P
V
u
v
1
t
t
i
t
G
Q
t
d
0
7
A
H
1
j
v
P
y
I
w
l
y
g
=
<
/
l
a
t
e
x
i
t
>
cally, for each depth value, the projected feature vector at a
pixel location (x, y) is computed by ﬁrst obtaining the 3D
location it is projected from and then inserting bilinearly
interpolated value from the corresponding slice of the 4D
tensor m. In this way, we obtain d different projected maps,
each of dimension w × h × c. Depth ranges from D − 1 to
D + 1, where D is the distance to the center of the feature
map, and are equally spaced.

Note that we do not attempt to determine visibility of fea-
tures at this projection stage. The stack of projected maps
is processed by 2D convolutional operations and is decoded
using a residual convLSTM decoder, similar to the one pro-
posed in [6], to an RGB image. We do not supervise visi-
bility directly. The network implicitly learns to determine
visibility and to choose appropriate depth slices from the
stack of projected feature maps.

3.1. View prediction

Mobile agents have access to their egomotion, and can
observe sensory outcomes of their motions and interactions.
Training sensory representations to predict such outcomesis
a useful form of supervision, free of human annotations, of-
ten termed self-supervision since the “labels” are provided
by the embodied agent herself. Can spatial common sense,
the notion of objects and scenes, geometry, visibility and
occlusion relationships, emerge in a self-supervised way in
a mobile agent that moves around and observes the world?
We train GRNNs to predict the image the agent would
see from a novel viewpoint, given a short view sequence
as input. Given the 3D feature memory and a query view-
point, we orient the map to the query viewpoint, we project
it to 2D and decode it to an RGB image, as described
above. We train our view prediction using a standard cross-
entropy pixel matching loss, where the pixel intensity has
been squashed into the range [0, 1]. Our model is end-to-end
differentiable. For view prediction, we did not use depth as
input, nor did we use a 2D U-net to estimate it. We also
did not set the memory to be parallel top the ground plane.
We use only the RGB input and set the coordinate system
of the memory to match that of the ﬁrst camera view af-
ter unprojection, for a fair comparison with prior art. We
show in Section 4 that GRNNs greatly outperform alter-
native geometry-unaware RNN architectures in view pre-
diction and strongly generalize beyond the training set to
novel scenes with different number of objects, appearances
and arrangements. Training and implementation details are
included in the supplementary ﬁle.

3.2. 3D object detection and segmentation

We train GRNNs in a supervised manner to predict 3D
object bounding boxes and 3D object segmentation masks,
using groundtruth 3D object boxes and 3D voxel segmenta-
tions from a simulator. We adapt MaskRCNN [11], a state-

of-the-art object detector/segmentor, to have 3D input and
output, instead of 2D. Speciﬁcally, we consider every grid
location (X, Y, Z) in our 3D memory to be a candidate 3D
box centroid. At each time step, the 3D feature memory mt
is fed to a 3D region proposal network to predict positive
anchor centroids, as well as the corresponding adjustment
for the box center location and the box dimensions, width,
height and depth. Our 3D bounding box encoding is similar
to the one proposed in VoxelNet [33]. We ﬁlter the proposed
boxes using non-max suppression to reject highly overlap-
ping ones. We train with a combination of classiﬁcation and
regression loss, following well established detector training
schemes [21, 11]. The proposed 3D bounding boxes that
have Intersection of Union (IoU) above a speciﬁc threshold
with a corresponding groundtruth object box are denoted
as Regions of Interest (ROIs) and are used to pool features
from their interior to predict 3D object voxel occupancy, as
well as a second reﬁnement of the predicted 3D box loca-
tion and dimensions.

Object permanence Even when an object is not visible
in the current camera viewpoint, its features are present in
the 3D feature memory, and our detector detects and seg-
ments it, as we show in the second column of Figure 6.
In other words, object detections persist through occlusions
and changes of the ﬁeld of view caused by camera motion.
Applying the detector on the latent 3D model of the scene as
opposed to the 2D visual frame is beneﬁcial. The latent 3D
model follows the physical laws of 3D non-intersection and
object permanence, while 2D visual observations do not.

4. Experiments

The term “spatial common sense” is broad and concerns
the ability to perceive and understand properties and regu-
larities regarding spatial arrangements and motion that are
shared by (“common to”) nearly all people. Such common
sense includes the fact that objects have 3D shape as op-
posed to being ﬂoating 2D surfaces, the fact that scenes are
comprised of objects, the 3D non-intersection principle, the
fact that objects do not spontaneously disappear, and many
others [7]. The model we propose in this work targets un-
derstanding of static scenes, that is, scenes that do not con-
tain any independently moving objects, and that are viewed
under a potentially moving observer. Thus, we restrict the
term spatial common sense to refer to rules and regularities
that can be perceived in static worlds. Our experiments aim
to answer the following questions:

1. Do GRNNs learn spatial common sense?

2. Are geometric structural biases necessary for spatial

common sense to emerge?

3. How well do GRNNs perform on egomotion estima-

tion and 3D object detection?

2599

4.1. View prediction

We consider the following simulation datasets:

i) ShapeNet arrangement from [3] that contains scenes with
synthetic 3D object models from ShapeNet [2] arranged on
a table surface. The objects in this dataset belong to four
object categories, namely, cups, bowls, helmets and cam-
eras. We follow the same train/test split of ShapeNet [2]
so that object instances which appear in the training scenes
do not appear in the test scenes. Each scene contains two
objects, and each image is rendered from a viewing sphere
which has 3 × 18 possible views with 3 camera elevations
(20◦, 40◦, 60◦) and 18 azimuths (0◦, 20◦, . . . , 340◦). There
are 300 different scenes in the training set and 32 scenes
with novel objects in the test set.
ii) Shepard-metzler shapes dataset from [6] that contains
scenes with seven colored cubes stuck together in random
arrangements. We use the train and test split of [6].
iii) Rooms-ring-camera dataset from [6] that contains
rooms with random ﬂoor and wall colors, in which there
are variable numbers of objects with different shapes and
colors.

We compare GRNNs against the recent ”tower” archi-
tecture of Eslami et al. [6], a 2D network trained under a
similar view prediction loss. At each time step, the tower
architecture takes as input a 2D RGB image and performs
a series of convolutions on it. The camera pose from which
the image was taken is tiled along the width and height
axes and then concatenated with the feature map after the
third convolution. Finally, the feature maps from all views
are combined via average pooling. Both our model and
the baseline use the same autoregressive decoder network.
For fairness of comparison, we use groundtruth egomotion
rather than estimated egomotion in all view prediction ex-
periments, and only RGB input (no depth input of depth es-
timation) for both our model and the tower baseline. In both
the baseline and our model, we did not use any stochastic
units for simplicity and speed of training. Adding stochastic
units in both is part of our future work.

Test results from our model and baseline on test images
of ShapeNet arrangements and Shepard-metzler datasets
are shown in Figure 4. Reconstruction test error for the
ShapeNet arrangement test set is shown in Table 1. GRNNs
have a much lower reconstruction test error than the tower
baseline. In Figure 4, in the ﬁrst four rows, the distribu-
tion of the test scenes matches the training scene distribu-
tion. Our model outperforms the baseline in visual ﬁdelity.
In Figure 4, in the last four rows, the test scene distribu-
tion does not match the training one: we test our model and
baseline on scenes with four objects, while both models
are trained on scenes with exactly two objects.
In this
case, our model shows strong generalization and outper-
forms by a margin the geometry-unaware baseline of [6],
the latter refuses to see more than two objects present. We

input view v1, v2, v3

query 

gt

GRNNs 
(Ours)

Tower 

(Baseline)

i

t
s
e
t
/
t
n
s
e
a
r
t
t
/
 
n
s
i
c
a
i
r
t
s
t
 
i
s
t
a
c
t
i
S
t
s
 
e
i
t
m
a
t
a
S
S
e
m
a
S

 

j

 

s
t
c
e
b
o
e
r
o
m
h
t
i

 

w
 
s
n
e
o
n
i
t
e
a
c
z
s
i
 
l
o
a
t
r
 
e
n
n
o
e
i
t
g
a
z
 
g
n
a
r
o
e
r
n
t
S
e
g
g
n
o
r
t
S

i
l

 

Figure 4. View prediction results for the proposed GRNNs and
the tower model of Eslami et al. [6]. Columns from left to right
show the three input views, the groundtruth image from the query
viewpoint, the view predictions for GRNNs and for the tower base-
line. The ﬁrst two rows are from the ShapeNet arrangement test set
of [3], the next two rows are from the Shepard-Metzler test set of
[6], and the following two rows are from the Rooms-ring-camera
dataset also from [6]. The last four rows show generalization to
scenes with four objects from the ShapeNet arrangement dataset,
while both models were trained only on scenes with two objects.
GRNNs outperform the baseline by a large margin and strongly
generalize under a varying number of objects.

argue the ability to spatially reason should not be affected
by the number of objects present in the scene. Our re-
sults suggest that geometry-unaware models may be merely
memorizing views with small interpolation capabilities, as
opposed to learning to spatially reason.

Scene arithmetics The learnt representations of GRNNs
are capable of scene arithmetics, as we show in Figure 5.

2600

The ability to add and subtract individual objects from 3D
scenes just by adding and subtracting their corresponding
latent representations demonstrates that our model disentan-
gles what from where. In other words, our model learns to
store object-speciﬁc information in the regions of the mem-
ory which correspond to the spatial location of the corre-
sponding object in the scene. Implementation details and
more qualitative view prediction results are included in the
supplementary ﬁle.

(A)               (B)              (C)

query gt 
(A-B+C)

GRNNs 
(Ours)

Tower 

(Baseline)

Figure 5. Scene arithmetic with GRNNs and the model of Eslami
et al. [6] (tower). Each row is a separate ”equation”. We start
with the representation of the scene in the leftmost column, then
subtract (the representation of) the scene in the second column,
and add the (representation of the) scene in the third column. We
decode the resulting representation into an image. The groundtruth
image is shown in the forth column.
It is much more visually
similar to the prediction of GRNNs than to the tower baseline.

ShapeNet

Shepard-Metzler

Tower
(Baseline)
0.109 ± 0.029
0.081 ± 0.017

GRNNs
(Ours)
0.084 ± 0.017
0.073 ± 0.014

Table 1. View prediction loss and the standard deviation for
the ShapeNet arrangement test set for two-object test scenes. Our
model and baseline were trained on scenes that also contain two
objects with different object instances.

4.2. Egomotion estimation

In this section, we quantify the error of our egomotion
estimation component. We train our egomotion estimation

# views
GRNNs

one

two

three

avg.

8.6/17.8

5.6/16.8

5.6/6.6

6.6/13.7

Table 2. Egomotion estimation error of GRNNs in elevation
and azimuth angles for the ShapeNet arrangement test set using
different number of views. The error decreases with more views
integrated in the memory.

module using groundtruth egomotion from a simulator, us-
ing the ShapeNet arrangement dataset. In Table 2, we show
egomotion estimation error in elevation and azimuth an-
gles. Our model improves its egomotion estimates with
more views, since then a more complete feature memory
is compared against each input unprojected tensor.

4.3. 3D object detection and segmentation

We use the ShapeNet arrangement dataset, and the
train/test scene split of [3]. We use mean Average Precision
(mAP) to score the performance of our model and baselines
for 3D object detection and 3D segmentation. Mean aver-
age precision measures the area under the precision-recall
curve. We vary the cutoff threshold of Intersection over
Union (IoU) to be 0.33, 0.5 and 0.75 between our predic-
tions and the groundtruth 3D boxes and masks. We consider
four ablations for our model: predicted egomotion (pego)
versus groundtruth egomotion (gtego) used, and predicted
depth (pd) versus groundtruth depth (gtd) used as input. We
use sufﬁxes to indicate the model we use.

We compare against the following 2D baseline model,
which we call 2D-RNN: we remove the unprojection, ego-
motion estimation and stabilization and projection opera-
tions from our model. The baseline takes as input an image
and the corresponding depth map, feeds it to a 2D encoder-
decoder network with skip connections to obtain a 2D fea-
ture tensor. The camera parameters for this view are con-
catenated as additional channels to the 2D feature tensor
and altogether they are fed to another 2D encoder-decoder
network to obtain the 2D feature tensor for a 2D GRU mem-
ory update. We then feed the 2D memory feature tensor
to an additional 2D encoder-decoder network and reshape
the channel dimension of its output into d feature vector of
length 7 (one value for the anchor box prediction, six values
for the 3D bounding boxes adjustments) to form a 4D tensor
of size w × h × d × 7 as prediction.

We show mean average precision for 3D object detection
and 3D segmentation for our model and the baseline in Ta-
ble 3, and visualize predicted 3D bounding boxes and seg-
mentations from GRNNs (GRNN-gtego-gtd) in Figure 6.
GRNNs signiﬁcantly outperform the 2D-RNN. Groundtruth
depth input signiﬁcantly helps 3D segmentation. This sug-
gests that inferring depth using a cost volume as in [15]
would potentially help depth inference as opposed to rely-
ing on a per frame depthnet [5] that does not have access
to multiple views to improve its predictions. Implementa-

2601

1

2

3

t

t = 3

View1

View 1

Predicted 3D boxes and segmentation 

gt

View2

1

2

3

t

t = 3

View1

View 1

Predicted 3D boxes and segmentation 

gt

View2

gt

gt

Input 

views

Predicted 

3D boxes 

(top-view)

Input 

views

Predicted 

3D boxes 

(top-view)

Figure 6. 3D object detection and segmentation with GRNNs. In the ﬁrst and second row on the left we show the input images over
time, and their corresponding object detection results for a top view, respectively. Blue voxels denote groundtruth objects and the predicted
bounding boxes are shown in red and green . On the right, we show segmentation results for the third time step, visualizing the results from
two views. Predicted 3D boxes and their corresponding predicted masks are show in red and green, and we show in blue the corresponding
groundtruth. Best seen in color.

detection 2DRNN-

gtego-
gtd

mAPd
mAPd
mAPd

0.75 0.364
0.50 0.964
0.33 0.998

GRNN-
gtego-pd

0.471
0.964
0.994

GRNN-
gtego-
gtd
0.816
0.998
0.999

GRNN-
pego-gtd

0.549
0.983
0.999

segmentation 2DRNN-

gtego-
gtd
0.003
0.104
0.244

0.75

mAPm
mAPm
mAPm

0.50

0.33

GRNN-
gtego-pd

0.024
0.246
0.429

GRNN-
gtego-
gtd
0.058
0.338
0.485

GRNN-
pego-gtd

0.023
0.249
0.384

Table 3. Mean Average Precision (mAP) for 3D object detection and 3D segmentation for three different thresholds of Intersection over
Union (IoU) (0.75,0.5,0.33) on ShapeNet arrangement test set of [3].

tion details and more qualitative results are included in the
supplementary ﬁle.

5. Conclusion

We presented GRNNs,

recurrent neural networks
equipped with differentiable geometric operations to esti-
mate egomotion and build 3D deep feature maps for visual
scene understanding on mobile visual agents. GRNNs add
a new dimension to the latent space of previous recurrent
models and ensure a geometrically-consistent mapping be-
tween the latent state and the 3D world scene. We showed
spatial common sense emerges in GRNNs when trained in
a self-supervised manner for novel view prediction. They
can predict object arrangements, visibility and occlusion re-
lationships in scenes with novel number, appearance and
conﬁguration of objects. We also showed that view predic-
tion as a loss does not sufﬁce for spatial common sense to
emerge, since 2-dimensional models of previous works fail
to strongly generalize.

Thus far, GRNNs has been trained and tested on simu-
lated scenes. Deploying our model on more realistic envi-

ronmentsis a clear avenue for future work. We expect pre-
training in simulated environments to help performance in
the real world. Besides, one limitation of the current model
is that it operates on static scenes. Extending the proposed
architectures to dynamic scenes, scenes with independently
moving objects in addition to camera motion, is another
very useful direction of future work. Finally, exploiting the
sparsity of our 4D tensors to save GPU memory is an im-
portant direction for scaling up our model to large scenes.

GRNNs pave the way for embodied agents that learn vi-
sual representations and mental models by observing and
moving in the world: these agents learn autonomously and
develop the reasoning capabilities of young toddlers as op-
posed to merely mapping pixels to labels using human su-
pervision.

Acknowledgement

We would like to thank Xian Zhou for his help on train-
ing and testing the 3D MaskRCNN. This work is partly
funded by a Google faculty award.

2602

References

[1] P. Agrawal, J. Carreira, and J. Malik. Learning to see by

moving. CoRR, abs/1505.01596, 2015.

[2] A. X. Chang, T. Funkhouser, L. Guibas, P. Hanrahan,
Q. Huang, Z. Li, S. Savarese, M. Savva, S. Song, H. Su,
J. Xiao, L. Yi, and F. Yu. ShapeNet: An Information-Rich
3D Model Repository. Technical Report arXiv:1512.03012
[cs.GR], Stanford University — Princeton University —
Toyota Technological Institute at Chicago, 2015.

[3] R. Cheng, Z. Wang, and K. Fragkiadaki. Geometry-aware
In

recurrent neural networks for active visual recognition.
NIPS, 2018.

[4] K. Cho, B. van Merrienboer, C¸ . G¨ulc¸ehre, F. Bougares,
H. Schwenk, and Y. Bengio. Learning phrase representations
using RNN encoder-decoder for statistical machine transla-
tion. CoRR, abs/1406.1078, 2014.

[5] D. Eigen, C. Puhrsch, and R. Fergus. Depth map predic-
tion from a single image using a multi-scale deep network.
In Z. Ghahramani, M. Welling, C. Cortes, N. D. Lawrence,
and K. Q. Weinberger, editors, Advances in Neural Informa-
tion Processing Systems 27, pages 2366–2374. Curran Asso-
ciates, Inc., 2014.

[6] S. M. A. Eslami, D. Jimenez Rezende, F. Besse, F. Vi-
ola, A. S. Morcos, M. Garnelo, A. Ruderman, A. A. Rusu,
I. Danihelka, K. Gregor, D. P. Reichert, L. Buesing, T. We-
ber, O. Vinyals, D. Rosenbaum, N. Rabinowitz, H. King,
C. Hillier, M. Botvinick, D. Wierstra, K. Kavukcuoglu, and
D. Hassabis. Neural scene representation and rendering. Sci-
ence, 360(6394):1204–1210, 2018.

[7] C. E. Freer, D. M. Roy, and J. B. Tenenbaum. Towards
common-sense reasoning via conditional simulation: lega-
cies of turing in artiﬁcial intelligence. CoRR, abs/1212.4799,
2012.

[8] C. Godard, O. Mac Aodha, and G. J. Brostow. Unsuper-
vised monocular depth estimation with left-right consistency.
CoRR, abs/1609.03677, 2016.

[9] D. Gordon, A. Kembhavi, M. Rastegari, J. Redmon, D. Fox,
and A. Farhadi. IQA: visual question answering in interac-
tive environments. CoRR, abs/1712.03316, 2017.

[10] S. Gupta, J. Davidson, S. Levine, R. Sukthankar, and J. Ma-
lik. Cognitive mapping and planning for visual navigation.
In Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, pages 2616–2625, 2017.

[11] K. He, G. Gkioxari, P. Doll´ar, and R. B. Girshick. Mask

R-CNN. CoRR, abs/1703.06870, 2017.

[12] J. F. Henriques and A. Vedaldi. Mapnet: An allocentric
spatial memory for mapping environments. In proceedings
of the IEEE Conference on Computer Vision and Pattern
Recognition, 2018.

[13] D. Jayaraman and K. Grauman. Learning image represen-
tations equivariant to ego-motion. CoRR, abs/1505.02206,
2015.

[14] M. B. A. J. D. John McCormac, Ronald Clark and
S. Leutenegger. Fusion++: Volumetric object-level slam. In
arXiv:1808.08378. 2018.

[15] A. Kar, C. H¨ane, and J. Malik. Learning a multi-view stereo

machine. CoRR, abs/1708.05375, 2017.

[16] C. Kerl, J. Sturm, and D. Cremers. Dense visual SLAM for

RGB-D cameras. In IROS, 2013.

[17] M. Liang, B. Yang, S. Wang, and R. Urtasun. Deep con-
tinuous fusion for multi-sensor 3d object detection. In The
European Conference on Computer Vision (ECCV), Septem-
ber 2018.

[18] D. Novotn´y, D. Larlus, and A. Vedaldi. Learning 3d object
categories by looking around them. CoRR, abs/1705.03951,
2017.

[19] E. Parisotto and R. Salakhutdinov. Neural map: Struc-
tured memory for deep reinforcement learning. CoRR,
abs/1702.08360, 2017.

[20] L. Regolin and G. Vallortigara. Perception of partly occluded
Perception & Psychophysics,

objects by young chicks.
57(7):971–976, 1995.

[21] S. Ren, K. He, R. B. Girshick, and J. Sun. Faster R-CNN:
towards real-time object detection with region proposal net-
works. CoRR, abs/1506.01497, 2015.

[22] O. Ronneberger, P. Fischer, and T. Brox. U-net: Convolu-
tional networks for biomedical image segmentation. CoRR,
abs/1505.04597, 2015.

[23] T. Sch¨ops, J. Engel, and D. Cremers. Semi-dense visual

odometry for AR on a smartphone. In ISMAR, 2014.

[24] M. Tatarchenko, A. Dosovitskiy, and T. Brox. Single-view
to multi-view: Reconstructing unseen views with a convolu-
tional network. CoRR, abs/1511.06702, 2015.

[25] S. Tulsiani, T. Zhou, A. A. Efros, and J. Malik. Multi-view
supervision for single-view reconstruction via differentiable
ray consistency. CoRR, abs/1704.06254, 2017.

[26] H. F. Tung, A. Harley, W. Seto, and K. Fragkiadaki. Adver-
sarial inverse graphics networks: Learning 2d-to-3d lifting
and image-to-image translation with unpaired supervision.
ICCV, 2017.

[27] S. Vijayanarasimhan, S. Ricco, C. Schmid, R. Sukthankar,
and K. Fragkiadaki. Sfm-net: Learning of structure and mo-
tion from video. arXiv preprint arXiv:1704.07804, 2017.

[28] J. Wu, Y. Wang, T. Xue, X. Sun, W. T. Freeman, and J. B.
Tenenbaum. Marrnet: 3d shape reconstruction via 2.5d
sketches. CoRR, abs/1711.03129, 2017.

[29] J. Wu, T. Xue, J. J. Lim, Y. Tian, J. B. Tenenbaum, A. Tor-
ralba, and W. T. Freeman. 3d interpreter networks for viewer-
centered wireframe modeling. International Journal of Com-
puter Vision (IJCV), 2018.

[30] Y. Xiang and D. Fox. Da-rnn: Semantic mapping with data
associated recurrent neural networks. In Robotics: Science
and Systems (RSS). 2017.

[31] B. Yang, M. Liang, and R. Urtasun. Hdnet: Exploiting hd
maps for 3d object detection.
In A. Billard, A. Dragan,
J. Peters, and J. Morimoto, editors, Proceedings of The 2nd
Conference on Robot Learning, volume 87 of Proceedings of
Machine Learning Research, pages 146–155. PMLR, 29–31
Oct 2018.

[32] T. Zhou, M. Brown, N. Snavely, and D. G. Lowe. Unsu-
In

pervised learning of depth and ego-motion from video.
CVPR, 2017.

[33] Y. Zhou and O. Tuzel. Voxelnet: End-to-end learning for
point cloud based 3d object detection. IEEE Conference on
Computer Vision and PatternRecognition (CVPR), 2018.

2603

