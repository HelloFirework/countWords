Spatio-Temporal Dynamics and Semantic Attribute Enriched

Visual Encoding for Video Captioning

Nayyer Aafaq

Naveed Akhtar Wei Liu

Syed Zulqarnain Gilani

Ajmal Mian

Computer Science and Software Engineering,

The University of Western Australia.

nayyer.aafaq@research.uwa.edu.au,{naveed.akhtar, wei.liu, syed.gilani, ajmal.mian}@uwa.edu.au

Abstract

Automatic generation of video captions is a fundamen-
tal challenge in computer vision. Recent techniques typi-
cally employ a combination of Convolutional Neural Net-
works (CNNs) and Recursive Neural Networks (RNNs) for
video captioning. These methods mainly focus on tailor-
ing sequence learning through RNNs for better caption gen-
eration, whereas off-the-shelf visual features are borrowed
from CNNs. We argue that careful designing of visual fea-
tures for this task is equally important, and present a visual
feature encoding technique to generate semantically rich
captions using Gated Recurrent Units (GRUs). Our method
embeds rich temporal dynamics in visual features by hier-
archically applying Short Fourier Transform to CNN fea-
tures of the whole video. It additionally derives high level
semantics from an object detector to enrich the representa-
tion with spatial dynamics of the detected objects. The ﬁnal
representation is projected to a compact space and fed to a
language model. By learning a relatively simple language
model comprising two GRU layers, we establish new state-
of-the-art on MSVD and MSR-VTT datasets for METEOR
and ROUGEL metrics.

1. Introduction

Describing videos in natural language is trivial for hu-
mans, however it is a very complex task for machines. To
generate meaningful video captions, machines are required
to understand objects,
their interaction, spatio-temporal
order of events and other such minutiae in videos; yet,
have the ability to articulate these details in grammati-
cally correct and meaningful natural language sentences [1].
The bicephalic nature of this problem has recently led re-
searchers from Computer Vision and Natural Language Pro-
cessing (NLP) to combine efforts in addressing its chal-
lenges [3, 4, 5, 30]. Incidentally, wide applications of video
captioning in emerging technologies, e.g. procedure gener-
ation from instructional videos [2], video indexing and re-

trieval [45, 55]; have recently caused it to receive attention
as a fundamental task in Computer Vision.

Early methods in video captioning and description,
e.g. [26, 9] primarily aimed at generating the correct Sub-
ject, Verb and Object (a.k.a. SVO-Triplet) in the cap-
tions. More recent methods [50, 39] rely on Deep Learn-
ing [28] to build frameworks resembling a typical neural
machine translation system that can generate a single sen-
tence [57, 33] or multiple sentences [38, 43, 60] to describe
videos. The two-pronged problem of video captioning pro-
vides a default division for the deep learning methods to
encode visual contents of videos using Convolutional Neu-
ral Networks (CNNs) [44, 48] and decode those into cap-
tions using language models. Recurrent Neural Networks
(RNNs) [16, 14, 22] are the natural choice for the latter
component of the problem.

Since semantically correct sentence generation has a
longer history in the ﬁeld of NLP, deep learning based
captioning techniques mainly focus on language mod-
elling [51, 34]. For visual encoding, these methods for-
ward pass video frames through a pre-trained 2D CNN;
or a video clip through a 3D CNN, and extract features
from an inner layer of the network - referred as ‘extraction
layer’. Features of frames/clips are commonly combined
with mean pooling to compute the ﬁnal representation of
the whole video. This, and similar other visual encoding
techniques [33, 51, 18, 34] - due to the nascency of video
captioning research - grossly under-exploit the prowess of
visual representation for the captioning task. To the best of
our knowledge, this paper presents the ﬁrst work that con-
centrates on improving the visual encoding mechanism for
the captioning task.

We propose a visual encoding technique to compute rep-
resentations enriched with spatio-temporal dynamics of the
scene, while also accounting for the high-level semantic
attributes of the videos. Our visual code (‘v’ in Fig. 1)
fuses information from multiple sources. We process ac-
tivations of 2D and 3D CNN extraction layers by hierar-
chically applying Short Fourier Transform [31] to them,

112487

Figure 1. The ‘c’ clips and ‘f ’ frames of a video are processed with 3D and 2D CNNs respectively. Neuron-wise Short Fourier Transform
is applied hierarchically to the extraction layer activations of these networks (using the whole video). This results in spatio-temporal
dynamics enriched encodings α and β. Relevant high-level object semantics γ and action semantics η are derived using the intersection
of vocabulary from the language model dictionary with the labels of 3D CNN and an Object Detector. The output features of the Object
Detector are also used to embed spatial dynamics of the scene and plurality of the objects therein. The resulting codes are compressed with
a fully-connected layer and used to learn a multi-layer GRU as a language model.

where InceptionResNetv2 [46] and C3D [48] are used as
the 2D and 3D CNNs respectively. The proposed neuron-
wise activation transformation using whole videos results
in encoding ﬁne temporal dynamics of the scenes. We en-
code spatial dynamics by processing objects’ locations and
their multiplicity information extracted from an Object De-
tector (YOLO [37]). The semantics attached to the output
layers of the Object Detector and the 3D CNN are also ex-
ploited to embed high-level semantic attributes in our vi-
sual codes. We compress the visual codes and learn a lan-
guage model using the resulting representation. With highly
rich visual codes, a relatively simple Gated Recurrent Unit
(GRU) network is proposed for language modeling, com-
prising two layers, that already results in on-par or better
performance compared to the existing sophisticated mod-
els [52, 54, 34, 18] on multiple evaluation metrics. The
main contributions of this paper are as follows. We pro-
pose a visual encoding technique that effectively encapsu-
lates spatio-temporal dynamics of the videos and embeds
relevant high-level semantic attributes in the visual codes
for video captioning. The proposed visual features con-
tain the detected object attributes, their frequency of occur-
rences as well as the evolution of their locations over time.
We establish the effectiveness of the proposed encoding by
learning a GRU-based language model and perform thor-
ough experimentation on MSVD [11] and MSR-VTT [57]
datasets. Our method achieves up to 2.64% and 2.44% gain
in the state-of-the-art on METEOR and ROUGEL metrics
for these datasets.

2. Related Work

Classical methods in video captioning commonly use
template based techniques in which Subject (S), Verb (V),
and Object (O) are detected separately and then joined to-
gether in a sentence. However, the advancement of deep
learning research has also transcended to modern video cap-
tioning methods. The latest approaches in this direction
generally exploit deep learning for visual feature encoding
as well as its decoding into meaningful captions.

In template based approaches, the ﬁrst successful video
captioning method was proposed by Kojima et al. [26] that
focuses on describing videos of one person performing one
action only. Their heavy reliance on the correctness of
manually created activity concept hierarchy and state transi-
tion model prevented its extension to more complex videos.
Hanckmann et al. [21] proposed a method to automatically
describe events involving multiple actions (seven on aver-
age), performed by one or more individuals. Whilst most of
the prior work was restricted to constrained domains [25, 9],
Krishnamoorthy et al. [27] led the early works of describing
[20] proposed semantic hierarchies
open domain videos.
to establish relationships between actor, action and objects.
[40] used CRF to model the relationship between visual en-
tities and treated video description as a machine translation
problem. However, the aforementioned approaches depend
on predeﬁned sentence templates and ﬁll in the template by
detecting entities from classical methods. These approaches
are not sufﬁcient for the syntactically rich sentence genera-
tion to describe open domain videos.

12488

In contrast to the methods mentioned above, deep mod-
els directly generate sentences given a visual input. For ex-
ample LSTM-YT [51] feed in visual contents of video ob-
tained by average pooling all the frames into LSTM and
produce the sentences. LSTM-E [33] explores the rele-
vance between the visual context and sentence semantics.
The initial visual features in this framework were obtained
using 2D-CNN and 3D-CNN whereas the ﬁnal video rep-
resentation was achieved by average pooling the features
from frames / clips neglecting the temporal dynamics of
the video. TA [59] explored the temporal domain of video
by introducing an attention mechanism to assign weights
to the features of each frame and later fused them based
on attention weights. S2VT [50] incorporated optical ﬂow
to cater for the temporal information of the video. SCN-
LSTM [18] proposed semantic compositional network that
can detect the semantic concepts from mean pooled visual
content of the video and fed that information into a lan-
guage model to generate captions with more relevant words.
LSTM-TSA[34] proposed a transfer unit that extracts se-
mantic attributes from both images as well as mean pooled
visual content of videos and added it as a complementary
information to the video representation to further improve
the quality of caption generation. M3-VC [54] proposed a
multi-model memory network to cater for long term visual-
textual dependency and to guide the visual attention.

Even though the above methods have employed deep
learning, they have used mean pooled visual features or at-
tention based high level features from CNNs. These fea-
tures have been used directly in their framework in the lan-
guage model or by introducing additional unit in the stan-
dard framework. We argue that this technique under-utilizes
the state of the art CNN features in video captioning frame-
work. We propose features that are rich in visual content
and empirically show that this enrichment of visual features
alone when combined with a standard and simple language
model can outperform existing state of the art methods. Vi-
sual features are part of every video captioning framework.
Hence, instead of using high level or mean pooled features,
building on top of our visual features can further enhance
the video captioning frameworks’ performances.

3. Proposed Approach

Let V denote a video that has ‘f ’ frames or ‘c’ clips. The
fundamental task in automatic video captioning is to gener-
ate a textual sentence S = {W1, W2, ..., Ww} comprising
‘w’ words that matches closely to human generated captions
for the same video. Deep learning based video captioning
methods typically deﬁne an energy loss function of the fol-
lowing form for this task:

Ξ(v, S) = −

wX

t=1

log Pr (Wt|v, W1, ...Wt−1) ,

(1)

where Pr(.) denotes the probability, and v ∈ Rd is a vi-
sual representation of V. By minimizing the cost deﬁned as
the Expected value of the energy Ξ(.) over a large corpus of
videos, it is hoped that the inferred model M can automat-
ically generate meaningful captions for unseen videos.

In this formulation, ‘v’ is considered a training input,
that makes remainder of the problem a sequence learning
task. Consequently, the existing methods in video caption-
ing mainly focus on tailoring RNNs [16] or LSTMs [22] to
generate better captions, assuming effective visual encod-
ing of V to be available in the form of ‘v’. The represen-
tation prowess of CNNs has made them the default choice
for visual encoding in the existing literature. However, due
to the nascency of video captioning research, only primi-
tive methods of using CNN features for ‘v’ can be found
in the literature. These methods directly use 2D/3D CNN
features or their concatenations for visual encoding, where
the temporal dimension of the video is resolved by mean
pooling [33, 34, 18].

We acknowledge the role of apt sequence modeling for
video description, however, we also argue that designing
specialized visual encoding techniques for captioning is
equally important. Hence, we mainly focus on the operator
Q(.) in the mapping M(Q(V))) → S, where Q(V) → v.
We propose a visual encoding technique that, along harness-
ing the power of CNN features, explicitly encodes spatio-
temporal dynamics of the scene in the visual representation,
and embeds semantic attributes in it to further help the se-
quence modelling phase of video description to generate se-
mantically rich textual sentences.

3.1. Visual Encoding

For clarity, we describe the visual representation of a
video V as v = [α; β; γ; η], where α to γ are themselves
column-vectors computed by the proposed technique. We
explain these computations in the following.

3.1.1 Encoding Temporal Dynamics

In the context of video description,
features extracted
from pre-trained 2D-CNNs, e.g. VGG [44] and 3D-CNNs,
e.g. C3D [48] have been shown useful for visual encoding
of videos. The standard practice is to forward pass individ-
ual video frames through a 2D CNN and store activation
values of a pre-selected extraction layer of the network.
Then, perform mean pooling over those activations for all
the frames to compute the visual representation. A similar
procedure is adopted with 3D CNN with a difference that
video clips are used in forward passes instead of frames.

A simple mean pooling operation over activation values
is bound to fail in encoding ﬁne-grained temporal dynamics
of the video. This is true for both 2D and 3D CNNs, de-
spite the fact that the latter models video clips. We address
this shortcoming by deﬁning transformations Tf (F) → α

12489

Figure 2. Illustration of hierarchical application of Short Fourier
Transform Φ(.) to the activations ai
j of the jth neuron of the ex-
traction layer for the ith video.

2D

2D

2D

2D

3D

3D

3D

a1,

a1,

a2, ...,

a2, ...,

ac}. Here,

af } and
and Tc(C) → β, such that F = {
C = {
at denote the activa-
tion vectors of the extraction layers of 2D and 3D CNNs
for the tth video frame and video clip respectively. The aim
of these transformations is to compute α and β that encode
temporal dynamics of the complete video with high ﬁdelity.

at and

3D

2D

3D

layer of

netV2 [46] to compute

We use the last avg pool

InceptionRes-
ai, and the f c6 layer of C3D [48]
ai. The transformations Tf /c(.) are deﬁned over the
to get
activations of those extraction layers. Below, we explain
Tf (.) in detail. The transformation Tc(.) is similar, except
that it uses activations of clips instead of frames.

Let ai

j,1, ai

j = [ai

j,2, ..., ai

j ∈ Rh−f , where h = ⌊ f

j,f ] ∈ Rf and compute Ψ(1ai

j into two smaller vectors 21ai

j,t denote the activation value of the jth neuron of
the network’s extraction layer for the tth frame of the ith
training video. We leave out the superscript 2D for bet-
ter readability. To perform the transform, we ﬁrst deﬁne
1ai
j) →
ς 1 ∈ Rp, where the operator Ψ(.) computes the Short
Fourier Transform [31] of the vector in its argument and
stores the ﬁrst ‘p’ coefﬁcients of the transform. Then,
j ∈ Rh and
we divide 1ai
22ai
2 ⌋. We again apply the op-
erator Ψ(.) to these vectors to compute ς 21 and ς 22 in p-
dimensional space. We recursively perform the same op-
erations on ς 21 and ς 22 to get the p-dimensional vectors
ς 311, ς 312 , ς 321, and ς 322. We combine all these vectors
as ς(j) = [ς 1, ς 21, ς 22, ..., ς 322] ∈ R(p×7)×1. We also
illustrate this operation in Fig. 2. The same operation is
performed individually for each neuron of our extraction
layer. We then concatenate ς(j) : j ∈ {1, 2, ..., m} to
form α ∈ R(p×7×m)×1, where m denotes the number of
neurons in the extraction layer. As a result of performing
Tf (F) → α, we have computed a representation the video
while accounting for ﬁne temporal dynamics in the whole
sequence of video frames. Consequently, Tf (.) results in
a much more informative representation than that obtained
with mean pooling of the neuron activations.

We deﬁne Tc(.) in a similar manner for the set C of
video clip activations. This transformation results in β ∈
R(p×7×k)×1, where k denotes the number of neurons in the
extraction layer of the 3D CNN. It is worth mentioning that
a 3D CNN is already trained on short video clips. Hence, its

features account for the temporal dimension of V to some
extent. Nevertheless, accounting for the ﬁne temporal de-
tails in the whole video adds to our encoding signiﬁcantly
(see Section 4.3). It is noteworthy that exploiting Fourier
Transform in a hierarchical fashion to encode temporal dy-
namics has also been considered in human action recogni-
tion [53, 36]. However, this work is the ﬁrst to apply Short
Fourier Transform hierarchically for video captioning.

3.1.2 Encoding Semantics and Spatial Evolution

It is well-established that the latter layers of CNNs are able
to learn features at higher levels of abstraction due to hier-
archical application of convolution operations in the earlier
layers [28]. The common use of activations of e.g. fully-
connected layers as visual features for captioning is also
motivated by the fact that these representations are discrim-
inative transformations of high-level video features. We
take this concept further and argue that the output layers
of CNNs can themselves serve as discriminative encodings
of the highest abstraction level for video captioning. We de-
scribe the technique to effectively exploit these features in
the paragraphs to follow. Here, we brieﬂy emphasize that
the output layer of a network contains additional informa-
tion for video captioning beyond what is provided by the
commonly used extraction layers of networks, because:

1. The output labels are yet another transformation of
the extraction layer features, resulting from network
weights that are unaccounted for by extraction layer.

2. The semantics attached to the output layer are at the
same level of abstraction that is encountered in video
captions - a unique property of the output layers.

We use the output

layers of an Object Detector
(i.e. YOLO [37]) and a 3D CNN (i.e. C3D [48]) to extract
semantics pertaining to the objects and actions recorded in
videos. The core idea is to quantitatively embed object la-
bels, their frequencies of occurrence, and evolution of their
spatial locations in videos in the visual encoding vector.
Moreover, we also aim to enrich our visual encoding with
the semantics of actions performed in the video. The details
of materializing this concept are presented below.

Objects Information: Different from classiﬁers that only
predict labels of input images/frames, object detectors can
localize multiple objects in individual frames, thereby pro-
viding cues for ascertaining plurality of the same type of
objects in individual frames and evolution of objects’ lo-
cations in multiple frames. Effective embedding of such
high-level information in vector ‘v’ promises descriptions
that can clearly differentiate between e.g. ‘people running’
and ‘person walking’ in a video.

The sequence modeling component of a video captioning
system generates a textual sentence by selecting words from

12490

a large dictionary D. An object detector provides a set eL of
object labels at its output. We ﬁrst compute L = DT eL,
and deﬁne γ = [ζ1, ζ2, ..., ζ|L|], where |.| denotes the car-
dinality of a set. The vectors ζi, ∀i in γ are further de-
ﬁned with the help ‘q’ frames sampled from the original
video. We perform this sampling using a ﬁxed time interval
between the sampled frames of a given video. The sam-
ples are passed through the object detector and its output
is utilized in computing ζi, ∀i. A vector ζi is deﬁned as
ζi = [Pr(ℓi), Fr(ℓi), ν1
], where ℓi indicates
the ith element of L (i.e. an object name), Pr(.) and Fr(.) re-
spectively compute the probability and frequency of occur-
z represent
rence of the object corresponding to ℓi, and νi
the velocity of the object between the frames z and z + 1 (in
the sampled q frames).

i , ..., ν(q−1)

i , ν2

i

We deﬁne γ over ‘q’ frames, whereas the used object
detector processes individual frames that results in a proba-
bility and frequency value for each frame. We resolve this
and related mismatches by using the following deﬁnitions
of the components of ζi:

• Pr(.) = max

z

Prz(.) : z ∈ {1, ..., q}.

max

Frz(.)

z

• Fr(.) =

: z ∈ {1, ..., q}, where ‘N ’ is the
allowed maximum number of the same class of objects
detected in a frame. We let N = 10 in experiments.

N

• νz

x, δz

y] : δz

x = ˜xz+1 − ˜xz and δz

i = [δz
y = ˜yz+1 −
˜yz. Here, ˜x, ˜y denote the Expected values of the x and
y coordinates of the same type of objects in a given
frame, such that the coordinates are also normalized
by the respective frame dimensions.

We let q = 5 in our experiments, resulting in ζi ∈
R10, ∀i that compose γ ∈ R(10×|L|)×1. The indices of co-
efﬁcients in γ identify the object labels in videos (i.e. prob-
able nouns to appear in the description). Unless an object
is detected in the video, the coefﬁcients of γ corresponding
to it are kept zero. The proposed embedding of high level
semantics in γ contain highly relevant information about
objects in explicit form for a sequence learning module of
video description system.

Actions Information: Videos generally record objects
and their interaction. The latter is best described by the
actions performed in the videos. We already use a 3D
CNN that learns action descriptors for the videos. We
tap into the output layer of that network to further em-
bed high level action information in our visual encoding.

set of labels at the output of the 3D CNN. Then, we de-

To that end, we compute A = eAT D, where A is the
ﬁne η = (cid:2)[ϑ1, Pr(ℓ1)], [ϑ2, Pr(ℓ2)], ..., [ϑ|A|, Pr(ℓ|A|)](cid:3) ∈
R(2×|A|)×1, where ℓi is the ith element of A (an action la-
bel) and ϑ is a binary variable that is 1 only if the action is
predicted by the network.

We concatenate the above described vectors α, β, γ and
η to form our visual encoding vector v ∈ Rd, where d =
2×(p×7× m)+(10×|L|)+(2×|A|). Before passing this
vector to a sequence modelling component of our method,
we perform its compression using a fully connected layer,
as shown in Fig. 1. Using tanh activation function and ﬁxed
weights, this layer projects ‘v’ to a 2K-dimensional space.
The resulting projection ‘υ’ is used by our language model.

3.2. Sequence Modelling

We follow the common pipeline of video description
techniques that feeds visual representation of a video to a
sequence modelling component, see Fig. 1. Instead of re-
sorting to a sophisticated language model, we develop a rel-
atively simpler model employing multiple layers of Gated
Recurrent Units (GRUs) [14]. GRUs are known to be more
robust to vanishing gradient problem - an issue encountered
in long captions - due to their ability of remembering the
relevant information and forgetting the rest over time. A
GRU has two gates: reset Γr and update Γu, where the up-
date gate decides how much the unit updates its previous
memory and the reset gate determines how to combine the
new input with the previous memory. Concretely, our lan-
guage model computes the hidden state h<t> of a GRU as:

Γu = σ(Wu[h<t−1>, x<t>] + bu)

Γr = σ(Wr[h<t−1>, x<t>] + br)

˜h<t> = tanh (Wh[Γr ⊙ h<t−1>, x<t>] + bh

h<t> = Γu ⊙ ˜h<t> + (1 − Γu) ⊙ h<t−1>

where, ⊙ denotes the hadamard product, σ(.) is sigmoid ac-
tivation , Wq, ∀q are learnable weight matrices, and bu/r/h
denote the respective biases. In our approach, h<0> = υ
for a given video, whereas the signal x is the word em-
bedding vector. In Section 4.3, we report results using two
layers of GRUs, and demonstrate that our language model
under the proposed straightforward sequence modelling al-
ready provides highly competitive performance due to the
proposed visual encoding.

4. Experimental Evaluation

4.1. Datasets

We evaluate our technique using two popular benchmark
datasets from the existing literature in video description,
namely Microsoft Video Description (MSVD) dataset [11],
and MSR-Video To Text (MSR-VTT) dataset [57]. We ﬁrst
give details of these datasets and their processing performed
in this work, before discussing the experimental results.

12491

MSVD Dataset [11]: This dataset is composed of 1,970
YouTube open domain videos that predominantly show only
a single activity each. Generally, each clip is spanning over
10 to 25 seconds. The dataset provides multilingual human
annotated sentences as captions for the videos. We experi-
ment with the captions in English. On average, 41 ground
truth captions can be associated with a single video. For
benchmarking, we follow the common data split of 1,200
training samples, 100 samples for validation and 670 videos
for testing [59, 54, 18].

MSR-VTT Dataset [57]: This recently introduced open
domain videos dataset contains a wide variety of videos
for the captioning task. It consists of 7,180 videos that are
transformed into 10,000 clips. The clips are grouped into 20
different categories. Following the common settings [57],
we divide the 10,000 clips into 6,513 samples for training,
497 samples for validation and the remaining 2,990 clips
for testing. Each video is described by 20 single sentence
annotations by Amazon Mechanical Turk (AMT) workers.
This is one of the largest clips-sentence pair dataset avail-
able for the video captioning task, which is the main reason
of choosing this dataset for benchmarking our technique.

4.2. Dataset Processing & Evaluation Metrics

We converted the captions in both datasets to lower case,
and removed all punctuations. All the sentences were then
tokenized. We set the vocabulary size for MSVD to 9,450
and for MSR-VTT to 23,500. We employed “fasttext“ [10]
word embedding vectors of dimension 300. Embedding
vectors of 1,615 words for MSVD and 2,524 words for
MSR-VTT were not present in the pretrained set. Instead
of using randomly initialized vectors or ignoring the out of
vocabulary words entirely in the training set, we generated
embedding vectors for these words using character n-grams
within the word, and summing the resulting vectors to pro-
duce the ﬁnal vector. We performed dataset speciﬁc ﬁne-
tuning on the pretrained word embeddings.

In order to compare our technique with the existing
methods, we report results on the four most popular metrics,
including; Bilingual Evaluation Understudy (BLEU) [35],
Metric for Evaluation of Translation with Explicit Ordering
(METEOR) [7], Consensus based Image Description Eval-
uation (CIDErD) [49] and Recall Oriented Understudy of
Gisting Evaluation (ROUGEL) [29]. We refer to the origi-
nal works for the concrete deﬁnitions of these metrics. The
subscript ‘D’ in CIDEr indicates the metric variant that
inhibits higher values for inappropriate captions in human
judgment. Similarly, the subscript ‘L’ indicates the variant
of ROUGE that is based on recall-precision scores of the
longest common sequence between the prediction and the
ground truth. We used the Microsoft COCO server [12] to
compute our results.

4.3. Experiments

In our experiments reported below1, we use Inception-
ResnetV2 (IRV2) [46] as the 2D CNN, whereas C3D [48]
is used as the 3D CNN. The last ‘avg pool’ layer of the for-
mer, and the ‘f c6’ layer of the latter are considered as the
extraction layers. The 2D CNN is pre-trained on the popu-
lar ImageNet dataset [41], whereas Sports 1M dataset [24]
is used for the pre-training of C3D. To process videos, we
re-size the frames to match the input dimensions of these
networks. For the 3D CNN, we use 16-frame clips as inputs
with an 8-frame overlap. YOLO [37] is used as the ob-
ject detector in all our experiments. To train our language
model, we include a start and an end token to the captions to
deal with the dynamic length of different sentences. We set
the maximum sentence length to 30 words in the case of ex-
periments with MSVD dataset, and to 50 for the MSR-VTT
dataset. These length limits are based on the available cap-
tions in the datasets. We truncate a sentence if its length ex-
ceeds the set limit, and zero pad in the case of shorter length.
We tune the hyper-parameters of our language model on the
validation set. The results below use two layers of GRUs,
that employ 0.5 as the dropout value. We use the RMSProp
algorithm with a learning rate 2 × 10−4 to train the models.
A batch size of 60 is used for training in our experiments.
We performed training of our models for 50 epochs. We
used the sparse cross entropy loss to train our model. The
training is conducted using NVIDIA Titan XP 1080 GPU.
We used TensorFlow framework for development.

4.3.1 Results on MSVD dataset

We comprehensively benchmark our method against the
current state-of-the-art in video captioning. We report the
results of the existing methods and our approach in Table. 1.
For the existing techniques, recent best performing methods
are chosen and their results are directly taken from the ex-
isting literature (same evaluation protocol is ensured). The
table columns present scores for the metrics BLEU-4 (B-4),
METEOR (M), CIDErD (C) and ROUGEL (R).

The last seven rows of the Table report results of dif-
ferent variants of our method to highlight the contribution
of various components of the overall technique. GRU-MP
indicates that we use our two-layer GRU model, while the
common ‘Mean Pooling (MP)’ strategy is adopted to re-
solve the temporal dimension of videos. ‘C3D’ and ‘IRV2’
in the parentheses identify the networks used to compute
the visual codes. We abbreviate the joint use of C3D and
IRV2 as ‘CI’. We use ‘EVE’ to denote our Enriched Visual
Encoding that applies Hierarchical Fourier Transform - in-
dicated by the subscript ‘hft’ - on the activations of the net-
work extraction layers. The proposed ﬁnal technique, that

1Due to through evaluation, supplementary material also contains fur-

ther results. Only the best performing setting is discussed here.

12492

Table 1. Benchmarking on MSVD dataset [11] in terms of BLEU-
4 (B-4), METEOR (M), CIDErD (C) and ROUGEL (R). See the
text for the description of proposed method GRU-EVE’s variants.

Table 2. Performance comparison with single 2D-CNN based
methods on MSVD dataset [11].

Model

METEOR

Model

FGM [47]
S2VT [50]
LSTM-YT [51]
Temporal-Attention (TA) [59]
h-RNN [60]
MM-VDN [56]
HRNE [32]
GRU-RCN [6]
LSTM-E [33]
SCN-LSTM [18]
DMRM [58]
LSTM-TSA [34]
TDDF [61]
BAE [8]
PickNet [13]
aLSTMs [19]
M3-IC [54]
RecNetlocal [52]

GRU-MP - (C3D)
GRU-MP - (IRV2)
GRU-MP - (CI)
GRU-EVEhft - (C3D)
GRU-EVEhft - (IRV2)
GRU-EVEhft - (CI)
GRU-EVEhft+sem - (CI)

B-4

13.7

-

33.3
41.9
49.9
37.6
43.8
47.9
45.3
51.1
51.1
52.8
45.8
42.5
46.1
50.8
52.8
52.3

28.8
41.4
41.0
40.6
45.6
47.8
47.9

M

23.9
29.2
29.1
29.6
32.6
29.0
33.1
31.1
31.0
33.5
33.6
33.5
33.3
32.4
33.1
33.3
33.3
34.1

27.7
32.3
31.3
31.0
33.7
34.7
35.0

C

-
-
-

51.67
65.8

-
-

67.8

-

77.7
74.8
74.0
73.0
63.5
76.0
74.8

-

80.3

42.6
68.2
61.9
55.7
74.2
75.8
78.1

R

-
-
-
-
-
-
-
-
-
-
-
-

69.7

-

69.2

-
-

69.8

61.6
67.6
67.6
67.4
69.8
71.1
71.5

also incorporates the high-level semantic information - in-
dicated by the subscript ‘+sem’ - is mentioned in the last
row of the Table. We also follow the same notational con-
ventions for our method in the remaining Tables.

Our method achieves a strong 35 value of METEOR,
which provides a 35.0−34.1
34.1 × 100 = 2.64% gain over the
closest competitor. Similarly, gain over the current state-of-
the-art for ROUGEL is 2.44%. For the other metrics, our
scores remain competitive to the best performing methods.
It is emphasized, that our approach derives its main strength
from the visual encoding part in contrast to sophisticated
language model, which is generally the case for the existing
methods. Naturally, complex language models entail difﬁ-
cult and computationally expensive training process, which
is not a limitation of our approach.

We illustrate representative qualitative results of our
method in Fig. 3. We abbreviate our ﬁnal approach as
‘GRU-EVE’ in the ﬁgure for brevity. The semantic details
and accuracy of e.g. plurality, nouns and verbs is clearly
visible in the captions generated by the proposed method.
The ﬁgure also reports the captions for GRU-MP-(CI) and
GRU-EVEhft-(CI) to show the difference resulting from hi-
erarchical Fourier transform (hft) as compared to the Mean
Pooling (MP) strategy. These captions justify the noticeable
gain achieved by the proposed hft over the traditional MP

FGM [47]
S2VT [50]
LSTM-YT [51]
TA [59]
p-RNN [60]
HRNE [32]
BGRCN [6]
MAA [17]
RMA [23]
LSTM-E [33]
M3-inv3 [54]
mGRU [62]

GRU-EVEhft-(IRV2)

23.90
29.2
29.07
29.0
31.1
33.1
31.70
31.80
31.90
29.5
32.18
33.39

33.7

Table 3. Performance comparison on MSVD dataset [11] with the
methods using multiple features. The scores of existing methods
are taken from [54]. V denotes VGG19, C is C3D, Iv denotes
Inception-V3, G is GoogleNet and I denotes InceptionResNet-V2

Model

METEOR

SA-G-3C [59]
S2VT-RGB-Flow [50]
LSTM-E-VC [33]
p-RNN-VC [60]
M3-IvC [54]

GRU-EVEhft+sem - (CI)

29.6
29.8
31.0
32.6
33.3

35.0

in Table 1. We also observe in the table that our method
categorically outperforms the mean pool based methods,
i.e. LSTM-YT [51], LSTM-E [33], SCN-LSTM [18], and
LSTM-TSA[34] on METEOR, CIDEr and ROUGEL. Un-
der these observations, we safely recommend the proposed
hierarchical Fourier transformation as the substitute for the
‘mean pooling’ in video captioning.

In Table 2, we compare the variant of our method based
on a single CNN with the best performing single CNN
based existing methods. The results are directly taken
from [54] for the provided METEOR metric. As can be
seen, our method outperforms all these methods.
In Ta-
ble 3, we also compare our method on METEOR with the
state-of-the-art methods that necessarily use multiple visual
features to obtain the best performance. A signiﬁcant 5.1%
gain is achieved by our method to the closest competitor in
this regard.

4.3.2 Results on MSR-VTT dataset

MSR-VTT [57] is a recently released dataset. We com-
pare performance of our approach on this dataset with
the latest published models such as Alto [42], RUC-
UVA [15], TDDF [61], PickNet [13], M3-VC [54] and
RecNetlocal [52]. The results are summarized in Table 4.
Similar to the MSVD dataset, our method signiﬁcantly im-
proves the state-of-the-art on this dataset on METEOR and

12493

Figure 3. Illustration of caption generated for MSVD test set: The ﬁnal approach is abbreviated as GRU-EVE for brevity. A sentence from
ground truth captions is shown for reference.

Table 4. Benchmarking on MSR-VTT dataset [57] in terms of
BLEU-4 (B-4), METEOR (M), CIDErD (C) and ROUGEL (R).

Model
Alto [42]
RUC-UVA [15]
TDDF [61]
PickNet [13]
M3-VC [54]
RecNetlocal [52]

GRU-EVEhft - (IRV2)
GRU-EVEhft - (CI)
GRU-EVEhft+sem - (CI)

B-4
39.8
38.7
37.3
38.9
38.1
39.1

32.9
36.1
38.3

M
26.9
26.9
27.8
27.2
26.6
26.6

26.4
27.7
28.4

C

45.7
45.9
43.8
42.1

-

42.7

39.2
45.2
48.1

R

59.8
58.7
59.2
59.5

-

59.3

57.2
59.9
60.7

ROUGEL metrics, while achieving strong results on the re-
maining metrics. These result ascertain the effectiveness
of the proposed enriched visual encoding for visual cap-
tioning. We provide examples of qualitative results on this
dataset in the supplementary material of the paper.

5. Discussion

We conducted a through empirical evaluation of the pro-
posed method to explore its different aspects. Below we dis-
cuss and highlight few of these aspects in the text. Where
necessary, we also provide results in the supplementary ma-
terial of the paper to back the discussion.

For the settings discussed in the previous section, we
generally observed semantically rich captions generated by
the proposed approach.
In particular, these captions well
captured the plurality of objects and their motions/actions.
Moreover,
the captions generally described the whole
videos instead of its partial clips. Instead of only two, we
also tested different number of GRU layers, and observed
that increasing the number of GRU layers deteriorated the
BLEU-4 score. However, there were improvements in all
the remaining metrics. We retained only two GRU layers in
the ﬁnal method mainly for computational gains. Moreover,

we also tested different architectures of GRU, e.g. with state
sizes 512, 1024, 2048 and 4096. We observed a trend of per-
formance improvement until 2048 states. However, further
states did not improve the performance. Hence, 2048 were
ﬁnally used in the results reported in the previous section.

Whereas all the components of the proposed technique
contributed to the overall ﬁnal performance, the biggest rev-
elation of our work is the use of hierarchical Fourier Trans-
form to capture the temporal dynamics of videos. As com-
pared to the ‘nearly standard’ mean pooling operation per-
formed in the existing captioning pipeline, the proposed use
of Fourier Transform promises a signiﬁcant performance
gain for any method. Hence, we safely recommend replac-
ing the mean pooling operation with our transformation for
the future techniques.

6. Conclusion

We presented a novel technique for visual encoding of
videos to generate semantically rich captions. Besides cap-
italizing on the representation power of CNNs, our method
explicitly accounts for the spatio-temporal dynamics of the
scene, and high-level semantic concepts encountered in the
video. We applying Short Fourier Transform to 2D and 3D
CNN features of the videos in a hierarchical manner, and
account for the high-level semantics by processing output
layer features of an Object Detector and the 3D CNN. Our
enriched visual representation is used to learn a relatively
simple GRU based language model that performs on-par or
better than the existing video description methods on popu-
lar MSVD and MSR-VTT datasets.

Acknowledgment This
supported by
ARC Discovery Grant DP160101458 and partially by
DP190102443. The Titan XP GPU used in our experiments
was donated by NVIDIA corporation.

research was

12494

References

[1] N. Aafaq, A. Mian, W. Liu, S. Z. Gilani, and M. Shah. Video
description: A survey of methods, datasets and evaluation
metrics. arXiv preprint arXiv:1806.00186, 2018. 1

[2] J.-B. Alayrac, P. Bojanowski, N. Agrawal, J. Sivic, I. Laptev,
and S. Lacoste-Julien. Unsupervised learning from narrated
instruction videos. In IEEE CVPR, 2016. 1

[3] B. Andrei, E. Georgios, H. Daniel, M. Krystian, N. Sid-
dharth, X. Caiming, and Z. Yibiao. A Workshop on Lan-
guage and Vision at CVPR 2015. 1

[4] B. Andrei, M. Tao, N. Siddharth, Z. Quanshi, S. Nishant,
L. Jiebo, and S. Rahul. A Workshop on Language and Vision
at CVPR 2018. http://languageandvision.com/.
1

[5] R. Anna, T. Atousa, R. Marcus, P. Christopher, L. Hugo,
C. Aaron, and S. Bernt. The Joint Video and Language Un-
derstanding Workshop at ICCV 2015. 1

[6] N. Ballas, L. Yao, C. Pal, and A. Courville. Delving deeper
into convolutional networks for learning video representa-
tions. In ICLR, 2016. 7

[7] S. Banerjee and A. Lavie. Meteor: An automatic metric for
mt evaluation with improved correlation with human judg-
ments. In Proceedings of the ACL workshop on intrinsic and
extrinsic evaluation measures for machine translation and/or
summarization, pages 65–72, 2005. 6

[8] L. Baraldi, C. Grana, and R. Cucchiara. Hierarchical
In

boundary-aware neural encoder for video captioning.
IEEE CVPR, 2017. 7

[9] A. Barbu, A. Bridge, Z. Burchill, D. Coroian, S. Dickin-
son, S. Fidler, A. Michaux, S. Mussman, S. Narayanaswamy,
D. Salvi, et al. Video in sentences out. In UAI, 2012. 1, 2

[10] P. Bojanowski, E. Grave, A. Joulin, and T. Mikolov. Enrich-
ing word vectors with subword information. In TACL, pages
135–146, 2017. 6

[11] D. L. Chen and W. B. Dolan. Collecting highly parallel
data for paraphrase evaluation. In ACL: Human Language
Technologies-Volume 1, pages 190–200. ACL, 2011. 2, 5, 6,
7

[12] X. Chen, H. Fang, T.-Y. Lin, R. Vedantam, S. Gupta,
P. Doll´ar, and C. L. Zitnick. Microsoft coco captions:
Data collection and evaluation server.
arXiv preprint
arXiv:1504.00325, 2015. 6

[13] Y. Chen, S. Wang, W. Zhang, and Q. Huang. Less is more:
Picking informative frames for video captioning. In ECCV,
2018. 7, 8

[14] K. Cho, B. Van Merri¨enboer, C. Gulcehre, D. Bahdanau,
F. Bougares, H. Schwenk, and Y. Bengio. Learning phrase
representations using rnn encoder-decoder for statistical ma-
In EMNLP, pages 1724–1734, 2014. 1,
chine translation.
5

[15] J. Dong, X. Li, W. Lan, Y. Huo, and C. G. Snoek. Early
embedding and late reranking for video captioning. In Pro-
ceedings of the 2016 ACM on Multimedia Conference, pages
1082–1086. ACM, 2016. 7, 8

[16] J. L. Elman. Finding structure in time. Cognitive science,

14(2):179–211, 1990. 1, 3

[17] R. Fakoor, A.-r. Mohamed, M. Mitchell, S. B. Kang, and
P. Kohli. Memory-augmented attention modelling for videos.
arXiv preprint arXiv:1611.02261, 2016. 7

[18] Z. Gan, C. Gan, X. He, Y. Pu, K. Tran, J. Gao, L. Carin,
and L. Deng. Semantic Compositional Networks for visual
captioning. In IEEE CVPR, 2017. 1, 2, 3, 6, 7

[19] L. Gao, Z. Guo, H. Zhang, X. Xu, and H. T. Shen. Video cap-
tioning with attention-based lstm and semantic consistency.
IEEE Transactions on Multimedia, 19(9):2045–2055, 2017.
7

[20] S. Guadarrama, N. Krishnamoorthy, G. Malkarnenkar,
S. Venugopalan, R. Mooney, T. Darrell, and K. Saenko.
Youtube2text: Recognizing and describing arbitrary activi-
ties using semantic hierarchies and zero-shot recognition. In
Proceedings of the IEEE international conference on com-
puter vision, pages 2712–2719, 2013. 2

[21] P. Hanckmann, K. Schutte, and G. J. Burghouts. Automated
textual descriptions for a wide range of video events with 48
human actions. In ECCV, pages 372–380, 2012. 2

[22] S. Hochreiter and J. Schmidhuber. Long short-term memory.

Neural computation, 9(8):1735–1780, 1997. 1, 3

[23] A. K. Jain, A. Agarwalla, K. K. Agrawal, and P. Mitra. Re-
current memory addressing for describing videos. In CVPR
Workshops, 2017. 7

[24] A. Karpathy, G. Toderici, S. Shetty, T. Leung, R. Sukthankar,
and L. Fei-Fei. Large-scale video classiﬁcation with convo-
lutional neural networks. In Proceedings of the IEEE con-
ference on Computer Vision and Pattern Recognition, pages
1725–1732, 2014. 6

[25] M. U. G. Khan, L. Zhang, and Y. Gotoh. Human focused
In IEEE International Conference on

video description.
Computer Vision Workshops (ICCV Workshops), 2011. 2

[26] A. Kojima, T. Tamura, and K. Fukunaga. Natural language
description of human activities from video images based on
concept hierarchy of actions. IJCV, 50(2):171–184, 2002. 1,
2

[27] N. Krishnamoorthy, G. Malkarnenkar, R. J. Mooney,
K. Saenko, and S. Guadarrama. Generating natural-language
video descriptions using text-mined knowledge.
In AAAI,
volume 1, page 2, 2013. 2

[28] Y. LeCun, Y. Bengio, and G. Hinton. Deep learning. nature,

521(7553):436, 2015. 1, 4

[29] C.-Y. Lin. Rouge: A package for automatic evaluation of
summaries. In Text summarization branches out: Proceed-
ings of the ACL-04 workshop, volume 8. Barcelona, Spain,
2004. 6

[30] M. Margaret, M. Ishan, H. Ting-Hao, and F. Frank. Story
Telling Workshop and Visual Story Telling Challenge at
NAACL 2018. 1

[31] A. V. Oppenheim. Discrete-time signal processing. Pearson

Education India, 1999. 1, 4

[32] P. Pan, Z. Xu, Y. Yang, F. Wu, and Y. Zhuang. Hierarchical
recurrent neural encoder for video representation with ap-
plication to captioning. In IEEE CVPR, pages 1029–1038,
2016. 7

[33] Y. Pan, T. Mei, T. Yao, H. Li, and Y. Rui. Jointly modeling
embedding and translation to bridge video and language. In

12495

[49] R. Vedantam, C. Lawrence Zitnick, and D. Parikh. Cider:
In IEEE

Consensus-based image description evaluation.
CVPR, 2015. 6

[50] S. Venugopalan, M. Rohrbach, J. Donahue, R. Mooney,
T. Darrell, and K. Saenko. Sequence to sequence-video to
text. In Proceedings of the IEEE international conference on
computer vision, pages 4534–4542, 2015. 1, 3, 7

[51] S. Venugopalan, H. Xu,

J. Donahue, M. Rohrbach,
R. Mooney, and K. Saenko. Translating videos to natural
language using deep recurrent neural networks. In NAACL,
pages 1494–1504, 2015. 1, 3, 7

[52] B. Wang, L. Ma, W. Zhang, and W. Liu. Reconstruction net-
work for video captioning. In Proceedings of the IEEE Con-
ference on Computer Vision and Pattern Recognition, pages
7622–7631, 2018. 2, 7, 8

[53] J. Wang, Z. Liu, Y. Wu, and J. Yuan. Learning actionlet en-
semble for 3d human action recognition. IEEE transactions
on pattern analysis and machine intelligence, 36(5):914–
927, 2014. 4

[54] J. Wang, W. Wang, Y. Huang, L. Wang, and T. Tan. M3:
Multimodal memory modelling for video captioning. In Pro-
ceedings of the IEEE Conference on Computer Vision and
Pattern Recognition, pages 7512–7520, 2018. 2, 3, 6, 7, 8

[55] J. Wang, T. Zhang, N. Sebe, H. T. Shen, et al. A survey on
learning to hash. IEEE transactions on pattern analysis and
machine intelligence, 40(4):769–790, 2018. 1

[56] H. Xu, S. Venugopalan, V. Ramanishka, M. Rohrbach, and
K. Saenko. A multi-scale multiple instance video description
network, A Workshop on Closing the Loop Between Vision
and Language at ICCV 2015. 7

[57] J. Xu, T. Mei, T. Yao, and Y. Rui. Msr-vtt: A large video
description dataset for bridging video and language. In IEEE
CVPR, 2016. 1, 2, 5, 6, 7, 8

[58] Z. Yang, Y. Han, and Z. Wang. Catching the temporal
regions-of-interest for video captioning. In 25th ACM Mul-
timedia, pages 146–153, 2017. 7

[59] L. Yao, A. Torabi, K. Cho, N. Ballas, C. Pal, H. Larochelle,
and A. Courville. Describing videos by exploiting temporal
structure. In Proceedings of the IEEE international confer-
ence on computer vision, pages 4507–4515, 2015. 3, 6, 7

[60] H. Yu, J. Wang, Z. Huang, Y. Yang, and W. Xu. Video
paragraph captioning using hierarchical recurrent neural net-
works. In IEEE CVPR, 2016. 1, 7

[61] X. Zhang, K. Gao, Y. Zhang, D. Zhang, J. Li, and Q. Tian.
Task-driven dynamic fusion: Reducing ambiguity in video
description. In IEEE CVPR, 2017. 7, 8

[62] L. Zhu, Z. Xu, and Y. Yang. Bidirectional multirate recon-
struction for temporal modeling in videos. In IEEE CVPR,
pages 2653–2662, 2017. 7

Proceedings of the IEEE conference on computer vision and
pattern recognition, pages 4594–4602, 2016. 1, 3, 7

[34] Y. Pan, T. Yao, H. Li, and T. Mei. Video captioning with
transferred semantic attributes. In IEEE CVPR, 2017. 1, 2,
3, 7

[35] K. Papineni, S. Roukos, T. Ward, and W.-J. Zhu. Bleu: a
method for automatic evaluation of machine translation. In
Proceedings of the 40th annual meeting on ACL, pages 311–
318, 2002. 6

[36] H. Rahmani and A. Mian. 3d action recognition from novel
viewpoints. In Proceedings of the IEEE Conference on Com-
puter Vision and Pattern Recognition, pages 1506–1515,
2016. 4

[37] J. Redmon and A. Farhadi. Yolo9000: better, faster, stronger.

In IEEE CVPR, 2017. 2, 4, 6

[38] A. Rohrbach, M. Rohrbach, W. Qiu, A. Friedrich, M. Pinkal,
and B. Schiele. Coherent multi-sentence video description
with variable level of detail. In German Conference on Pat-
tern Recognition, 2014. 1

[39] A. Rohrbach, A. Torabi, M. Rohrbach, N. Tandon, C. Pal,
H. Larochelle, A. Courville, and B. Schiele. Movie descrip-
tion. IJCV, 123(1):94–120, 2017. 1

[40] M. Rohrbach, W. Qiu, I. Titov, S. Thater, M. Pinkal, and
B. Schiele. Translating video content to natural language
descriptions. In Proceedings of the IEEE International Con-
ference on Computer Vision, pages 433–440, 2013. 2

[41] O. Russakovsky, J. Deng, H. Su, J. Krause, S. Satheesh,
S. Ma, Z. Huang, A. Karpathy, A. Khosla, M. Bernstein,
et al.
Imagenet large scale visual recognition challenge.
International Journal of Computer Vision, 115(3):211–252,
2015. 6

[42] R. Shetty and J. Laaksonen. Frame-and segment-level fea-
tures and candidate pool evaluation for video caption gen-
eration.
In Proceedings of the 2016 ACM on Multimedia
Conference, pages 1073–1076. ACM, 2016. 7, 8

[43] A. Shin, K. Ohnishi, and T. Harada. Beyond caption to nar-
rative: Video captioning with multiple sentences. In IEEE
International Conference on Image Processing (ICIP), 2016.
1

[44] K. Simonyan and A. Zisserman. Very deep convolutional
networks for large-scale image recognition. In ICLR, 2015.
1, 3

[45] J. Song, L. Gao, L. Liu, X. Zhu, and N. Sebe. Quantization-
based hashing: a general framework for scalable image and
video retrieval. Pattern Recognition, 75:175–187, 2018. 1

[46] C. Szegedy, S. Ioffe, V. Vanhoucke, and A. A. Alemi.
Inception-v4, inception-resnet and the impact of residual
connections on learning. In AAAI, volume 4, page 12, 2017.
2, 4, 6

[47] J. Thomason, S. Venugopalan, S. Guadarrama, K. Saenko,
and R. J. Mooney. Integrating language and vision to gen-
erate natural language descriptions of videos in the wild. In
Coling, volume 2, page 9, 2014. 7

[48] D. Tran, L. Bourdev, R. Fergus, L. Torresani, and M. Paluri.
Learning spatiotemporal features with 3d convolutional net-
works. In Proceedings of the IEEE international conference
on computer vision, pages 4489–4497, 2015. 1, 2, 3, 4, 6

12496

