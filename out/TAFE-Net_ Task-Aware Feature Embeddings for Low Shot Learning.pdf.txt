TAFE-Net: Task-Aware Feature Embeddings for Low Shot Learning

Xin Wang Fisher Yu Ruth Wang Trevor Darrell

Joseph E. Gonzalez

UC Berkeley

Abstract

Task embedding: Dog

Task embedding: Cat

Learning good feature embeddings for images often re-
quires substantial training data. As a consequence, in set-
tings where training data is limited (e.g., few-shot and zero-
shot learning), we are typically forced to use a generic fea-
ture embedding across various tasks. Ideally, we want to
construct feature embeddings that are tuned for the given
task. In this work, we propose Task-Aware Feature Embed-
ding Networks (TAFE-Nets1) to learn how to adapt the image
representation to a new task in a meta learning fashion. Our
network is composed of a meta learner and a prediction
network. Based on a task input, the meta learner generates
parameters for the feature layers in the prediction network
so that the feature embedding can be accurately adjusted for
that task. We show that TAFE-Net is highly effective in gener-
alizing to new tasks or concepts and evaluate the TAFE-Net
on a range of benchmarks in zero-shot and few-shot learning.
Our model matches or exceeds the state-of-the-art on all
tasks. In particular, our approach improves the prediction
accuracy of unseen attribute-object pairs by 4 to 15 points
on the challenging visual attribute-object composition task.

1. Introduction

Feature embeddings are central to computer vision. By
mapping images into semantically rich vector spaces, feature
embeddings extract key information that can be used for
a wide range of prediction tasks. However, learning good
feature embeddings typically requires substantial amounts of
training data and computation. As a consequence, a common
practice [8, 14, 53] is to re-use existing feature embeddings
from convolutional networks (e.g., ResNet [18], VGG [37])
trained on large-scale labeled training datasets (e.g., Ima-
geNet [36]); to achieve maximum accuracy, these generic
feature embedding are often ﬁne-tuned [8, 14, 53] or trans-
formed [19] using additional task speciﬁc training data.

In many settings, the training data are insufﬁcient to learn
or even adapt generic feature embeddings to a given task.
For example, in zero-shot and few-shot prediction tasks, the

1Pronounced taffy-nets

Cat

Dog

P
o
s
i
t
i
v
e

e
v
i
t
a
g
e
N

Figure 1: A cartoon illustration of Task-aware Feature Em-
beddings (TAFEs). In this case there are two binary pre-
diction tasks: hasCat and hasDog. Task-aware feature
embeddings mean that the same image can have different
embeddings for each task. As a consequence, we can adopt a
single task independent classiﬁcation boundary for all tasks.

scarcity of training data forces the use of generic feature em-
beddings [26, 49, 55]. As a consequence, in these situations,
much of the research instead focuses on the design of joint
task and data embeddings [4, 12, 55] that can be generalized
to unseen tasks or tasks with fewer examples. Some have pro-
posed treating the task embedding as linear separators and
learning to generate them for new tasks [42, 29]. Others have
proposed hallucinating additional training data [50, 17, 45].
However, in all cases, a common image embedding is shared
across tasks. Therefore, the common image embedding may
be out of the domain or sub-optimal for any individual pre-
diction task and may be even worse for completely new tasks.
This problem is exacerbated in settings where the number
and diversity of training tasks is relatively small [11].

In this work, we explore the idea of dynamic feature rep-
resentation by introducing the task-aware feature embedding
network (TAFE-Net) with a meta-learning based parameter
generator to transform generic image features to task-aware
feature embeddings (TAFEs). As illustrated in Figure 1, the
representation of TAFEs is adaptive to the given semantic
task description, and thus able to accommodate the need
of new tasks at testing time. The feature transformation is
realized with a task-aware meta learner, which generates the
parameters of feature embedding layers within the classi-

11831

i

s
g
n
d
o
c
n
E
 
k
s
a
T
e
g
a
m

/

I

s
e
g
a
m

I

i

g
n
d
d
e
b
m
E

k
r
o
w
e
N

t

t

e
r
u
a
e
F

k
r
o
w
e
N

t

Task

Embeddings

Task-aware Meta Learner

Embedding

Loss

Task

Embeddings

Generator K

Generator 1

Generator 2

Generator K

Params. 1

Params. 2

Params. K

Task-Specific

Weights

*

Params. K

s
d
t
e
h
r
g
a
e
h
S W

i

Prediction Network

Image

Features

Layer 1

Layer 2

Layer K

Task-aware

Feature

Embeddings

Classifier

Classification Loss

Labels

Figure 2: TAFE-Net architecture design. TAFE-Net has a task-aware meta learner that generates the parameters of the feature
layers within the classiﬁcation subnetwork to transform the generic image features to TAFEs. The generated weights are
factorized into low-dimensional task-speciﬁc weights and high-dimensional shared weights across all tasks to reduce the
complexity of the parameter generation. A single classiﬁer is shared across all tasks taking the resulting TAFEs as inputs.

ﬁcation subnetwork shown in Figure 2. Through the use
of TAFEs, we can adopt a simple binary classiﬁer to learn
a task-independent linear boundary that can separate the
positive and negative examples and generalize to new tasks.

We further propose two design innovations to address the
challenges due to the limited number of training tasks [11]
and the complexity of the parameter generation [3]. Deal-
ing with the limited tasks, we couple the task embedding
to the task aware feature embeddings with a novel embed-
ding loss based on metric learning. The resulting coupling
improves generalization across tasks by jointly clustering
both images and tasks. Moreover, the parameter generation
requires predicting a large number of weights from a low
dimensional task embedding (e.g., a 300-dimensional vector
extracted with GloVe [33]), which can be complicated and
even infeasible to train in practice, we therefore introduce a
novel decomposition to factorize the weights into a small set
of task-speciﬁc weights needed for generation on the ﬂy and
a large set of static weights shared across all tasks.

We conduct an extensive experimental evaluation in Sec-
tion 4. The proposed TAFE-Net exceeds the state-of-the-art
zero-shot learning approaches on three out of ﬁve standard
benchmarks (Section 4.1) without the need of additional
data generation, a complementary approach that has shown
boosted performance compared to mere discriminative mod-
els by the recent work [50]. On the newly proposed unseen
attribute-object composition recognition task [31], we are
able to achieve an improvement of 4 to 15 points over the
state-of-the-art (Section 4.2). Furthermore, the proposed
architecture can be naturally applied to few-shot learning
(Section 4.3), achieving competitive results on the ImageNet
based benchmark introduced by Hariharan et al. [17]. The
code is available at https://github.com/ucbdrive/tafe-net.

2. Related Work

Our work is related to several lines of research in zero-
shot learning as well as parameter generation, dynamic neu-
ral network designs, and feature modulation. Built on top of
the rich prior works, to the best of our knowledge, we are
the ﬁrst to study dynamic image feature representation for
zero-shot and few-shot learning.

Zero-shot learning falls into the multimodal learning
regime which requires a proper leverage of multiple sources
(e.g.,
image features and semantic embeddings of the
tasks). Many [23, 52, 42, 55, 4, 12] have studied metric
learning based objectives to jointly learn the task embed-
dings and image embeddings, resulting in a similarity or
compatibility score that can later be used for classiﬁca-
tion [31, 42, 26, 1, 2, 12, 39]. Conceptually, our approach
shares the matching spirit with the introduction of a binary
classiﬁer which predicts whether or not the input image
matches the task description. In contrast to prior works, we
transform the image features according to the task and thus
we only need to learn a task-independent decision boundary
to separate the positive and negative examples similar to the
classic supervised learning. The proposed embedding loss
in our work also adopts metric learning for joint embedding
learning but with the main goal to address the limited num-
ber of training tasks in meta learning [11]. More recently,
data hallucination has been used in the zero-shot [50, 57]
and few-shot [17, 45] learning which indicate that the addi-
tional synthetic data of the unseen tasks are useful to learn
the classiﬁer and can be augmented with the discriminative
models [50, 45]. Our (discriminative) model does not utilize
additional data points and we show in experiments that our
model can match or outperform the generative models on a
wide range of benchmarks. We believe the approaches re-

1832

quiring additional data generation can beneﬁt from a stronger
base discriminative model.

detailed in Section 3.4) and generates the weights of the
feature layers in the prediction network.

TAFE-Net uses a task-aware meta learner to generate pa-
rameters of the feature layers. Several efforts [3, 16, 7] have
studied the idea of adopting one meta network to generate
weights of another network. Our task-aware meta learner
serves a similar role for the weight generation but in a more
structured and constrained manner. We study different mech-
anisms to decompose the weights of the prediction network
so that it can generate weights for multiple layers at once. In
contrast, Bertinetton et al. [3] focus on generating weights
for a single layer and Denil et al. [7] can generate only up to
95% parameters of a single layer due to the quadratic size of
the output space.

The TAFE-Net design is also related to works on dynamic
neural networks [44, 48, 43, 27] which focus on dynamic
execution at runtime. SkipNet [44] proposed by Wang et
al. introduces recurrent gating to dynamically control the
network activations based on the input. In contrast, TAFE-
Net dynamically re-conﬁgures the network parameters rather
than the network structure as in the prior works [44, 48]
aiming to learn adaptive image features for the given task.

In the domain of visual question answering, previous
works [34, 6] explore the use of a question embedding net-
work to modulate the features of the primary convolutional
network. Our factorized weight generation scheme for con-
volutional layers can also be viewed as channel-wise feature
modulation. However, the proposed parameter generation
framework is more general than feature modulation which
can host different factorization strategies [3].

3. Task-Aware Feature Embedding

As already widely recognized, feature embeddings are
the fundamental building blocks for many applications [24,
28, 13] in computer vision. In this work, we introduce task-
aware feature embeddings (TAFEs), a type of dynamic image
feature representation that adapts to the given task. We
demonstrate that such dynamic feature representation has
applications in the zero-shot learning, few-shot learning and
unseen attribute-object pair recognition.

We start with the TAFE-Net model design in Section 3.1
and then introduce the weight factorization (Section 3.2)
and the embedding loss (Section 3.3) to address the chal-
lenges with the weight generation and the limited number
of training tasks. We delay the speciﬁcations of different
task descriptions and the setup of various applications to
Section 3.4.

3.1. TAFE Net Model

There are two sub-networks in TAFE-Net as shown in
Figure 2: a task-aware meta leaner G and a prediction net-
work F . The task-aware meta learner takes a task description
t ∈ T (e.g., word2vec [30] encoding or example images,

For an input image x ∈ X , the prediction network:

F(x; θt) = y,

(1)

predicts a binary label y ∈ Y indicating whether or not
the input image x is compatible with the task description t.
More speciﬁcally, we adopt a pre-trained feature extractor on
ImageNet (e.g., ResNet [18], VGG [37] whose parameters
are frozen during training) to produce generic features of the
input images and then feed the generic features to a sequence
of dynamic feature layers whose parameters denoted by θt
are generated by G(t). The output of the dynamic feature
layers is named as task-aware feature embedding (TAFE) in
the sense that the feature embedding of the same image can
be different under different task descriptions. Though not
directly used as the input to F , the task description t controls
the parameters of the feature layers in F and further injects
the task information to the image feature embeddings.

We are now able to introduce a simple binary classiﬁer in
F , which takes TAFEs as inputs, to learn a task-independent
decision boundary. When multi-class predictions are needed,
we can leverage the predictions of F(x) under different
tasks descriptions and use them as probability scores. The
objective formulation is presented in Section 3.3.

The task-aware meta learner G paramterized by η is com-
posed of an embedding network T (t) to generate a task em-
bedding et and a set of weight generators gi, i = {1...K}
that generate parameters for K dynamic feature layers in F
conditioned on the same task embedding et.

3.2. Weight Generation via Factorization

We now present the weight generation scheme for the
feature layers in F . The feature layers that produce the task
aware feature embeddings (TAFE) can either be convolu-
tional layers or fully-connected (FC) layers. To generate the
feature layer weights, we will need the output dimension
of gi (usually a FC layer) to match the weight size of the
i-th feature layer in F . As noted by Bertinetto et al. [3], the
number of weights required for the meta-learner estimation
is often much greater than that of the task descriptions There-
fore, it is difﬁcult to learn weight generation from a small
number of example tasks. Moreover, the parametrization
of the weight generators g can consume a large amount of
memory, which makes the training costly and even infeasi-
ble.

To make our meta learner generalize effectively, we pro-
pose a weight factorization scheme along the output dimen-
sion of each FC layer and the output channel dimension of
a convolutional layer. This is distinct from the low-rank
decomposition used in prior meta-learning works [3]. The
channel-wise factorization builds on the intuition that chan-

1833

nels of a convolutional layer may have different or even
orthogonal functionality.

Weight factorization for convolutions. Given an input ten-
sor xi ∈ Rw×h×cin for the i-th feature layer in F whose
weight is Wi ∈ Rk×k×cin×cout (k is the ﬁlter support size
and cin and cout are the number of input and output channels)
and bias is bi ∈ Rcout , the output xi+1 ∈ Rw′
×cout of the
convolutional layer is given by

×h′

xi+1 = Wi ∗ xi + bi,

(2)

where ∗ denotes convolution. Without loss of generality, we
remove the bias term of the convolutional layer as it is often
followed by batch normalization [20]. Wi = gi(t) is the
output of the i-th weight generator in G in the full weight
generation setting. We now decompose the weight Wi into

Wi = Wi

s ∗cout Wi
t,

(3)

s ∈ Rk×k×cin×cout is a shared parameter aggre-
where Wi
gating all tasks {t1, ...tT } and Wt ∈ R1×1×cout is a task-
speciﬁc parameter depending on the current task input. ∗cout
denotes the grouped convolution along the output channel
dimension, i.e. each channel of x∗cout y is simply the convolu-
tion of the corresponding channels in x and y. The parameter
generator gi only needs to generate Wi
t which reduces the
output dimension of gi from k × k × cin × cout to cout.

Weight factorization for FCs. Similar to the factorization
of the convolution weights, the FC layer weights Wi ∈
Rm×n can be decomposed into

Wi = Wi

s · diag(Wi

t),

(4)

where Wi
s ∈ Rm×n is the shared parameters for all tasks
t ∈ Rn is the task-speciﬁc parameter. Note that this
and Wi
factorization is equivalent to the feature activation modula-
tion, that is, for an input x ∈ R1×m,

x · (Wi

s · diag(Wi

t)) = (x · Wi

s) ⊙ Wi
t,

(5)

where ⊙ denotes element-wise multiplication.

As a consequence, the weight generators only need to gen-
erate low-dimensional task-speciﬁc parameters for each task
in lower dimension and learn one set of high dimensional
parameters shared across all tasks.

3.3. Embedding Loss for Meta Learner

The number of task descriptions used for training the task-
aware meta learner is usually much smaller than the number
of images available for training the prediction network. The
data scarcity issue may lead to a degenerate meta learner. We,
therefore, propose to add a secondary embedding loss Lemb
for the meta learner alongside the classiﬁcation loss Lcls used
for the prediction network. Recall that we adopt a shared

binary classiﬁer in F to predict the compatibility of the task
description and the input image. To be able to distinguish
which task (i.e., class) the image belong to, instead of using
a binary cross-entropy loss directly, we adopt a calibrated
multi-class cross-entropy loss [52] deﬁned as

Lcls = −

1
N

N

T

Xi=1

Xt=1

log" exp(F(xi; θt)) · yi

j=1 exp(F(xi; θj))# ,
PT

t

where xi is the i-th sample in the dataset with size N and
yi ∈ {0, 1}T is the one-hot encoding of the ground-truth
labels. T is the number of tasks either in the whole dataset
or in the minibatch during training.

(6)

For the embedding loss, the idea is to project the latent
task embedding et = T (t) into a joint embedding space
with the task-aware feature embedding (TAFE). We adopt a
metric learning approach that for positive inputs of a given
task, the corresponding TAFE is closer to the task embed-
ding et while for negative inputs, the corresponding TAFE
is far from the task embedding as illustrated in Figure 1.
We use a hinged cosine similarity as the distance measure-
ment (i.e. φ(p, q) = max(cosine_sim(p, q), 0)) and the
embedding loss is deﬁned as

Lemb =

1
N T

N

T

Xi

Xt

||φ(TAFE(xi; θt), et) − yi

t||2
2.

(7)

We ﬁnd in experiments this additional supervision helps
training the meta learner especially under the case where the
number of training tasks is extremely limited. So far, we can
deﬁne the overall objective as

min
θ,η

L = min
θ,η

Lcls + β · Lemb,

(8)

where β is the hyper-parameter to balance the two terms. We
use β as 0.1 in our experiments if not speciﬁed.

3.4. Applications

We now describe how TAFE-Net design can be utilized
in various applications (e.g., zero-shot learning, unseen
attribute-object recognition and few shot learning) and spec-
ify the task descriptions adopted in this work.

Zero-shot learning. In the zero-shot learning (ZSL) setting,
the set of classes seen during training and evaluated during
testing are disjoint [26, 1]. Speciﬁcally, let the training set
be Ds = {(x, t, y)|x ∈ X , t ∈ T , y ∈ Y}, and the testing
set be Du = {(x, u, z)|x ∈ X , u ∈ U , z ∈ Z}, where
T ∩ U = φ, |T | = |Y | and |U | = |Z|.
In benchmark
datasets (e.g., CUB [46], AWA [25]), each image category is
associated with an attribute vector, which can be used as the
task description in our work. The goal is to learn a classiﬁer
fzsl : X → Z. More recently, Xian et al. [49] proposed
the generalized zero-shot learning (GZSL) setting which is

1834

more realistic compared to ZSL. The GZSL setting involves
classifying test examples from both seen and unseen classes,
with no prior distinction between them. The classiﬁer in
GZSL maps X to Y ∪ Z. We consider both the ZSL and
GZSL settings in our work.

Unseen attribute-object pair recognition. Motivated by
the human capability to compose and recognize novel vi-
sual concepts, Misra et al. [31] recently proposed a new
recognition task to predict unseen compositions of a given
set of attributes (e.g., red, modern, ancient, etc) and objects
(e.g., banana, city, car, etc) during testing and only a sub-
set of attribute-object pairs are seen during training. This
can be viewed as a zero-shot learning problem but requires
more understanding of the contextuality of the attributes.
In our work, the attribute-object pairs are used as the task
descriptions.

Few-shot Learning. In few-shot learning, there are one or a
few examples from the novel classes and plenty of examples
in the base classes [17]. The goal is to learn a classiﬁer that
can classify examples from both the novel and base classes.
The sample image features from different categories can be
used as the task descriptions for TAFE-Nets.

4. Experiments

We evaluate our TAFE-Nets on three tasks: zero-shot
learning (Section 4.1), unseen attribute-object composition
(Section 4.2 and few-shot learning (Section 4.3). We observe
that TAFE-Net is highly effective in generalizing to new
tasks or concepts and is able to match or exceed the state-of-
the-art on all the tasks.

Model conﬁgurations. We ﬁrst describe the network con-
ﬁgurations. The task embedding network T is a 3-layer FC
network with the hidden unit size of 2048 except for the
aPY dataset [9] where we choose T as a 2-layer FC network
with the hidden size of 2048 to avoid overﬁtting. The weight
generator gi is a single FC layer with the output dimension
matching the output dimension of the corresponding feature
layer in F . For the prediction network F , the TAFE is gen-
erated through a 3-layer FC network with the hidden size of
2048 with input image features extracted from different pre-
trained backbones (e.g., ResNet-18, ResNet-101, VGG-16,
VGG-19, etc.)

4.1. Zero shot Learning

Datasets and evaluation metrics. We conduct our exper-
iments on 5 benchmark datasets: SUN [51], CUB [47],
AWA1 [25], AWA2 [49] and aPY [9], which have different
numbers of categories and granularity. In particular, there are
only 20 classes (i.e. tasks) available in the aPY dataset while
645 classes are available for training in the SUN dataset. The
dataset statistics are shown in Table 1.

Table 1: Datasets used in GZSL

Dataset

SUN

CUB

AWA1 AWA2

aPY

No. of Images
Attributes Dim.

Y

Y seen

Y unseen

Granularity

14,340

11,788

30,475

37,322

15,339

102
717
645
72
ﬁne

312
200
150
50
ﬁne

85
50
40
10

85
50
40
10

64
32
20
12

coarse

coarse

coarse

Following the settings proposed by Xian et al., we con-
sider both the generalized zero-shot learning (GZSL) and
the conventional zero-shot learning (ZSL). For GZSL, we
report the average per class top-1 accuracy of both un-
seen accu and seen classes accs and the harmonic mean
H = 2 × (accu × accs)/(accu + accs). For conventional
ZSL, we report the average per-class top-1 accuracy of the
unseen classes and adopt the new split provided by Xian et
al. [49].

Training details. We set the batch size to 32 and use
Adam [22] as the optimizer with the initial learning rate
of 10−4 for the prediction network and weight generators,
and 10−5 for the task embedding network. We reduce the
learning rate by 10× at epoch 30 and 45, and train the net-
work for 60 epochs. For AWA1, we train the network for 10
epochs and reduce the learning rate by 10× at epoch 5.

Baselines. We compare our model with two lines of prior
works in our experiments.
(1) Discriminative baselines
which focus on mapping the images into a rich seman-
tic embedding space. We include the recent competitive
baselines: LATEM [55], ALE [1], DeViSE [12], SJE [2],
SYNC [4], DEM [54] and the newly proposed Relation-
Net [52]. (2) Generative models that tackle the data scarcity
problem by generating synthetic images for the unseen
classes using a GAN [15, 56] based approach. The gen-
erative models can combine different discriminative models
as base networks [50, 45]. We conduct comparison with f-
CLSWGAN [50], SE [41], SP-AEN [5] in this category. Our
model falls into the discriminative model category requiring
no additional synthetic data.

Quantitative results. We compare the performance of
TAFE-Net to the prior works in Table 2. Overall, our model
outperforms existing approaches including the generative
models on the AWA1, AWA2 and aPY datasets under the
ZSL setting and on the AWA1 and aPY datasets under the
GZSL setting. TAFE-Net outperforms the discriminative
models (denoted in blue in Table 2) by a large margin (e.g.,
roughly 16 points improvement on AWA1 and 17 points
on aPY) on the GZSL test. For the more challenging ﬁne-
grained SUN and CUB datasets, we are able to improve the
results by 7 and 2 points. The results indicate that better
embeddings can aid in model generalization.

1835

Table 2: Evaluate TAFE-Net on ﬁve standard benchmarks under the ZSL and the GZSL settings. Models with † (f-CLSWGAN, SE and
SP-AEC) generate additional data for training while the remaining models do not. Red denotes the best performing model on each dataset
and blue denotes the prior art of discriminative models. Our model is better than all the other discriminative models and also competitive
compared to models with additional synthetic data.

Zero-shot Learning

Generalized Zero-shot Learning

SUN

CUB

AWA1

AWA2

u

s

H

u

s

H

u

s

H

u

s

H

Method

SUN CUB AWA1 AWA2
T1

T1

T1

T1

LATEM [55]
ALE [1]
DeViSE[12]
SJE [2]
ESZSL [35]
SYNC [4]
RelationNet [52]
DEM [54]

f-CLSWGAN† [50]
SE† [41]
SP-AEN† [5]

55.3
58.1
56.5
53.7
54.5
56.3

-

61.9

60.8
63.4
59.2

49.3
54.9
52
53.9
53.9
55.6
55.6
51.7

57.3
59.6
55.4

55.1
59.9
54.2
65.6
58.2
54.0
68.2
68.4

68.2
69.5

-

55.8
62.5
59.7
61.9
58.6
46.6
64.2
67.1

-

69.2
58.5

aPY
T1

35.2
39.7
39.8
32.9
38.3
23.9

-

14.7
21.8
16.9
14.7
11.0
7.9

-

28.8
33.1
27.4
80.5
27.9
43.3

-

19.5
26.3
20.9
19.8
15.8
13.4

-

35.0

20.5

34.3

25.6

-
-

24.1

42.6
40.9
24.9

36.6
30.5
38.6

39.4
34.9
30.3

15.2
23.7
23.8
23.5
12.6
11.5
38.1
19.6

57.7
53.3
34.7

57.3
62.8
53.0
59.2
63.8
70.9
61.1
57.9

43.7
41.5
70.6

24.0
34.4
32.8
33.6
21.0
19.8
47.0
29.2

49.7
46.7
46.6

7.3
16.8
13.4
11.3
6.6
8.9
31.4
32.8

61.4
67.8

-

71.7
76.1
68.7
74.6
75.6
87.3
91.3
84.7

57.9
56.3

-

13.3
27.5
22.4
19.6
12.1
16.2
46.7
47.3

59.6
61.5

-

11.5
14.0
17.1
8.0
5.9
10.0
30.0
30.5

-

58.3
23.3

77.3
81.8
74.7
73.9
77.8
90.5
93.4
86.4

-

68.1
90.9

20.0
23.9
27.8
14.4
11.0
18.0
45.3
45.1

-

62.8
37.1

aPY
s

73.0
73.7
76.9
55.7
70.1
66.3

-

u

0.1
4.6
4.9
3.7
2.4
7.4

-

H

0.2
8.7
9.2
6.9
4.6
13.3

-

11.1

75.1

19.4

-
-

-
-

-
-

13.7

63.4

22.6

TAFE-Net

60.9

56.9

70.8

69.3

42.2

27.9

40.2

33.0

41.0

61.4

49.2

50.5

84.4

63.2

36.7

90.6

52.2

24.3

75.4

36.8

Table 3: Ablation of the embedding loss on the ﬁve benchmarks
under GZSL. Harmonic mean (H) is reported.

Method

SUN CUB AWA1 AWA2

aPY

TAFE-Net w/o EmbLoss
TAFE-Net

33.1
33.0

45.4
49.2

58.8
63.2

47.2
52.2

30.5
36.8

Embedding loss ablation. We provide the harmonic mean
of our models with and without the embedding loss under
the GZSL setting on ﬁve benchmark datasets in Table 3.
In general, models with the embedding loss outperform
those without the embedding loss except for the SUN dataset
whose number of categories is about 3 to 22× larger than
the other datasets. This observation matches our assumption
that the additional supervision on the joint embedding better
addresses the data scarcity (i.e. fewer class descriptions than
the visual inputs) of training the controller model.

Embedding visualization. In Figure 3, we visualize the
task-aware feature embeddings of images from the aPY
dataset under different task descriptions. As we can see,
image embeddings of the same image are projected into
different clusters conditioned on the task descriptions.

4.2. Unseen Visual attribute Composition

Besides the standard zero-shot learning benchmarks, we
evaluate our model on the visual-attribute composition task
proposed by Misra et al. [31]. The goal is to compose a set
of visual concept primitives like attributes and objects (e.g.
large elephant, old building, etc.) to obtain
new visual concepts for a given image. This is a more chal-
lenging “zero-shot” learning task, which requires the model
not only to predict unseen visual concept compositions but
also to model the contextuality of the concepts.

Datasets and evaluation metrics. We conduct the experi-

Figure 3: Task-aware Image Feature Embedding projected
into two dimensions using t-SNE [40] for two tasks (Zebra
and Donkey). Note that changing the task produces different
embeddings for the same data.

ments on two datasets: MITStates [21] (image samples in
Figure 5) and the modiﬁed StanfordVRD [29] (image sam-
ples in Figure 4). The setup is the same as Misra et al. [31].
Each image in the MITStates dataset is assigned a pair of
(attribute, object) as its label. The model is trained on 34K
images with 1,292 label pairs and tested on 19K images
with 700 unseen pairs. The second dataset is constructed
based on the bounding box annotations of the StanfordVRD
dataset. Each sample has an SPO (subject, predicate, object)
tuple as the ground truth label. The dataset has 7,701 SPO
triplets and 1,029 of them are seen only in the test split. We

1836

Table 5: Ablation study with different task encoding and base
network features. The variance of performance of TAFE-Net under
different settings is minimal.

Task Encoding

Features

AP

Top-k Accuracy

1

2

3

Word2vec

ResNet-101

Onehot

ResNet-101

Word2vec

Onehot

Word2vec

Onehot

VGG16

VGG16

VGG19

VGG19

16.2

16.1

16.3

16.3

15.6

16.3

17.2

16.1

16.4

16.4

16.2

16.4

27.8

26.8

26.4

25.9

26.0

26.0

35.7

33.8

33.0

32.5

32.4

33.1

For fair comparison, we use the same ResNet-18 features
and obtain the top-1 accuracy of 15.1%.

Ablation on the feature extractor and task description.
We consider different feature extractors (ResNet-101, VGG-
16 and 19) and task encodings (word2vec and one-hot en-
coding) for ablation and summarize the results in Table 5.
The average precision difference between different feature
extractors are very minimal (within 0.1%) and the largest
gap in Top-3 accuracy is within 2%. This indicates that
TAFE-Net is robust in transforming the generic features into
task-aware feature embeddings. For the task encoding, the
one-hot encoding is comparable to the word2vec encoding
and even stronger when using VGG-19 features. This shows
that the task transformer network T is very expressive to
extract rich semantic information simply from the task IDs.

Visualization. In Figure 5, we show the top retrievals of
unseen attribute-object pairs from the MITStates dataset.
Our model can learn to compose new concepts from the
existing attributes and objects while respecting their context.

4.3. Few shot Image Classiﬁcation

Our model naturally ﬁts the few-shot learning setting
where one or few images of a certain category are used as
the task descriptions. Unlike prior work on meta-learning
which experiments with few classes and low resolution im-
ages [42, 38, 10], we evaluate our model on the challenging
benchmark proposed by Hariharan and Girshick [17]. The
benchmark is based on the ImageNet images and contains
hundreds of classes that are divided into base classes and
novel classes. At inference time, the model is provided with
one or a few examples from the novel classes and hundreds
of examples from the base classes. The goal is to obtain
high accuracy on the novel classes without sacriﬁcing the
performance on the base classes.

Baselines. In our experiments, the baselines we consider are
the state-of-the-art meta learning models: Matching Network
(MN) [42] and Prototypical Network (PN) [38]. We also

1837

Figure 4: Samples in StanfordVRD. Each image is described by a
Subject-Verb-Object triplet. From top left to the bottom right: (ele-
phant, on, grass), (giraffe, in, street), (person, walk, dog), (pillow,
behind, person), (person, wears, jeans), (dog, has, shirt).

Table 4: Evaluation on 700 unseen (attribute, object) pairs on 19K
images of the MITStates Dataset and 1029 unseen SPO triplets on
1000 images of the StanfordVRD Dataset. TAFE-Net improves
over the baselines by a large margin.

Method

Visual Product [31]
Label Embed (LE) [31]
LEOR [31]
LE + R [31]
Red Wine [31]

MITStates
Top-k Accuracy
1
3

2

9.8
11.2
4.5
9.3
13.1

16.1
17.6
6.2
16.3
21.2

20.6
22.4
11.8
20.8
27.6

StanfordVRD

Top-k Accuracy
1
3

2

3.2
4.1
1.1
3.9
6.3

5.6
7.2
1.3
7.1
9.2

7.6
10.6
1.3
10.4
12.7

AP

4.9
4.3
0.9
3.9
5.7

AP

8.8
7.9
4.1
6.7
10.4

TAFE-Net

16.3

16.4

26.4

33.0

12.2

12.3

19.7

27.5

evaluate our models only on examples with unseen labels.
We extract the image features with pre-trained models on
ImageNet. We use VGG-16 and ResNet-101 as our main
feature extractors and also test features extracted with VGG-
19 and ResNet-18 for ablation. For the task descriptions, we
concatenate the word embeddings of the attributes and ob-
jects with word2vec [30] trained with GoogleNews. We also
consider one-hot encoding for the task ID in the ablation.

For evaluation metrics, we report the mean Average Pre-
cision (mAP) of images with unseen labels in the test set
together with the top-k accuracy where k = 1, 2, 3. We
follow the same training schedule as that used in the zero
shot learning experiments.

Quantitative results. We compare our model with several
baselines provided by Misra et al. [31] and summarize the
results in Table 4 on both the MITStates and StanfordVRD
datasets. Our model surpasses the state-of-the-art models
with an improvement of more than 6 points in mAP and 4
to 15 points in top-k accuracy. Nagarajan and Grauman [32]
recently proposed an embedding learning framework for
visual-attribute composition. They report the top-1 accuracy
of 12.0% on the MITStates dataset with ResNet-18 features.

Modern City

Ancient Town

Modern Clock

Ancient Clock

Sunny Valley

Sunny Creek

Figure 5: Top retrievals on the unseen pairs of the MITStates dataset. Our model can learn to compose new concepts from the
existing attributes and objects while respecting their context. The second row shows some of the failure cases.

Table 6: Few-shot ImageNet Classiﬁcation on ImageNet.
Our model is competitive compared to the state-of-the-art
meta learning model without hallucinator.

Method

LogReg [17]
PN [38]
MN [42]

TAFE-Net

LogReg w/ Analogies [17]
PN w/ G [45]

Novel Top-5 Acc All Top-5 Acc
n=1
n=2

n=1

n=2

38.4
39.3
43.6

43.0

40.7
45.0

51.1
54.4
54.0

53.9

50.8
55.9

40.8
49.5
54.4

55.7

52.2
56.9

49.9
61.0
61.0

61.9

59.4
63.2

compare the logistic regression (LogReg) baseline provided
by Hariharan and Girshick [17]. Another line of research [45,
17] for few-shot learning is to combine the meta-learner with
a “hallucinator” to generate additional training data. We
regard these works as complementary approaches to our
meta-learning model.

Experiment details. We follow the prior works [17, 45] to
run ﬁve trials for each setting of n (the number of examples
per novel class, n = 1 and 2 in our experiments) on the ﬁve
different data splits and report the average top-5 accuracy of
both the novel and all classes. We use the features trained
with ResNet-10 using SGM loss provided by Hariharan and
Girshick [17] as inputs. For training, we sample 100 classes
in each iteration and use SGD with momentum of 0.9 as the
optimizer. The initial learning rate is set to 0.1 except for the
task embedding network (set to 0.01) and the learning rate
is reduced by 10× every 8k iterations. The model is trained
for 30k iterations in total. Other hyper-paramters are set to
the same as Hariharan and Girshick [17] if not mentioned.

Quantitative results. As shown in Table 6, our model is on
par with state-of-the-art meta learning models on the novel
classes while outperforming them on all categories. Attach-
ing a “hallucinator” to the meta learning model improves
performance in general. Our model can be easily attached
with a hallucinator and we leave the detailed study as future
work due to the time constraint.

5. Conclusion

In this work, we explored a meta learning based approach
to generate task aware feature embeddings for settings with
little or no training data. We proposed TAFE-Net, a net-
work that generates task aware feature embeddings (TAFE)
conditioned on the given task descriptions. TAFE-Net has
a task-aware meta learner that generates weights for the
feature embedding layers in a standard prediction network.
To address the challenges in training the meta learner, we
introduced two key innovations: (1) adding an additional
embedding loss to improve the generalization of the meta
learner; (2) a novel weight factorization scheme to generate
parameters of the prediction network more effectively. We
demonstrated the general applicability of the proposed net-
work design on a range of benchmarks in zero-/few- shot
learning, and matched or exceeded the state-of-the-art.

Acknowledgments

This work was supported by Berkeley AI Research, RISE
Lab and Berkeley DeepDrive. In addition to NSF CISE Ex-
peditions Award CCF-1730628, this research is supported
by gifts from Alibaba, Amazon Web Services, Ant Finan-
cial, Arm, CapitalOne, Ericsson, Facebook, Google, Huawei,
Intel, Microsoft, Nvidia, Scotiabank, Splunk and VMware.

1838

References

[1] Zeynep Akata, Florent Perronnin, Zaid Harchaoui, and
Cordelia Schmid. Label-embedding for image classiﬁca-
tion. IEEE transactions on pattern analysis and machine
intelligence, 38(7):1425–1438, 2016. 2, 4, 5, 6

[2] Zeynep Akata, Scott Reed, Daniel Walter, Honglak Lee, and
Bernt Schiele. Evaluation of output embeddings for ﬁne-
grained image classiﬁcation.
In Proceedings of the IEEE
Conference on Computer Vision and Pattern Recognition,
pages 2927–2936, 2015. 2, 5, 6

[3] Luca Bertinetto, João F Henriques, Jack Valmadre, Philip Torr,
and Andrea Vedaldi. Learning feed-forward one-shot learners.
In Advances in Neural Information Processing Systems, pages
523–531, 2016. 2, 3

[4] Soravit Changpinyo, Wei-Lun Chao, Boqing Gong, and Fei
Sha. Synthesized classiﬁers for zero-shot learning. In The
IEEE Conference on Computer Vision and Pattern Recogni-
tion (CVPR), June 2016. 1, 2, 5, 6

[5] Long Chen, Hanwang Zhang, Jun Xiao, Wei Liu, and Shih-
Fu Chang. Zero-shot visual recognition using semantics-
preserving adversarial embedding networks. In Proceedings
of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 1043–1052, 2018. 5, 6

[6] Harm De Vries, Florian Strub, Jérémie Mary, Hugo
Larochelle, Olivier Pietquin, and Aaron C Courville. Mod-
ulating early visual processing by language. In Advances in
Neural Information Processing Systems, pages 6594–6604,
2017. 3

[7] Misha Denil, Babak Shakibi, Laurent Dinh, Nando De Freitas,
et al. Predicting parameters in deep learning. In Advances
in neural information processing systems, pages 2148–2156,
2013. 3

[8] Jeff Donahue, Yangqing Jia, Oriol Vinyals, Judy Hoffman,
Ning Zhang, Eric Tzeng, and Trevor Darrell. Decaf: A deep
convolutional activation feature for generic visual recognition.
In International conference on machine learning, pages 647–
655, 2014. 1

[9] Ali Farhadi, Ian Endres, Derek Hoiem, and David Forsyth.
Describing objects by their attributes. In Computer Vision and
Pattern Recognition, 2009. CVPR 2009. IEEE Conference on,
pages 1778–1785. IEEE, 2009. 5

[10] Chelsea Finn, Pieter Abbeel, and Sergey Levine. Model-
agnostic meta-learning for fast adaptation of deep networks.
ICML, 2017. 7

[11] Chelsea Finn, Tianhe Yu, Tianhao Zhang, Pieter Abbeel, and
Sergey Levine. One-shot visual imitation learning via meta-
learning. In Conference on Robot Learning, pages 357–368,
2017. 1, 2

[12] Andrea Frome, Greg S Corrado, Jon Shlens, Samy Bengio,
Jeff Dean, Tomas Mikolov, et al. DeViSe: A deep visual-
semantic embedding model. In Advances in neural informa-
tion processing systems, pages 2121–2129, 2013. 1, 2, 5,
6

[13] Ross Girshick. Fast r-cnn. In Proceedings of the IEEE inter-
national conference on computer vision, pages 1440–1448,
2015. 3

[14] Ross Girshick, Jeff Donahue, Trevor Darrell, and Jitendra
Malik. Rich feature hierarchies for accurate object detection
and semantic segmentation.
In Proceedings of the IEEE
conference on computer vision and pattern recognition, pages
580–587, 2014. 1

[15] Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing
Xu, David Warde-Farley, Sherjil Ozair, Aaron Courville, and
Yoshua Bengio. Generative adversarial nets. In Advances
in neural information processing systems, pages 2672–2680,
2014. 5

[16] David Ha, Andrew Dai, and Quoc V Le. Hypernetworks.

arXiv preprint arXiv:1609.09106, 2016. 3

[17] Bharath Hariharan and Ross Girshick. Low-shot visual recog-
nition by shrinking and hallucinating features. In 2017 IEEE
International Conference on Computer Vision (ICCV), pages
3037–3046. IEEE, 2017. 1, 2, 5, 7, 8

[18] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun.
Deep residual learning for image recognition. In Proceed-
ings of the IEEE conference on computer vision and pattern
recognition, pages 770–778, 2016. 1, 3

[19] Judy Hoffman, Eric Tzeng, Taesung Park, Jun-Yan Zhu,
Phillip Isola, Kate Saenko, Alexei A. Efros, and Trevor Dar-
rell. Cycada: Cycle consistent adversarial domain adaptation.
In International Conference on Machine Learning (ICML),
2018. 1

[20] Sergey Ioffe and Christian Szegedy. Batch normalization:
Accelerating deep network training by reducing internal co-
variate shift. arXiv preprint arXiv:1502.03167, 2015. 4

[21] Phillip Isola, Joseph J. Lim, and Edward H. Adelson. Dis-
covering states and transformations in image collections. In
CVPR, 2015. 6

[22] Diederik P Kingma and Jimmy Ba. Adam: A method for
stochastic optimization. arXiv preprint arXiv:1412.6980,
2014. 5

[23] Gregory Koch. Siamese neural networks for one-shot image

recognition. 2015. 2

[24] Alex Krizhevsky, Ilya Sutskever, and Geoffrey E Hinton. Im-
agenet classiﬁcation with deep convolutional neural networks.
In Advances in neural information processing systems, pages
1097–1105, 2012. 3

[25] Christoph H Lampert, Hannes Nickisch, and Stefan Harmel-
ing. Learning to detect unseen object classes by between-class
attribute transfer. In Computer Vision and Pattern Recogni-
tion, 2009. CVPR 2009. IEEE Conference on, pages 951–958.
IEEE, 2009. 4, 5

[26] Christoph H Lampert, Hannes Nickisch, and Stefan Harmel-
ing. Attribute-based classiﬁcation for zero-shot visual object
categorization. IEEE Transactions on Pattern Analysis and
Machine Intelligence, 36(3):453–465, 2014. 1, 2, 4

[27] Ji Lin, Yongming Rao, Jiwen Lu, and Jie Zhou. Runtime neu-
ral pruning. In Advances in Neural Information Processing
Systems, pages 2178–2188, 2017. 3

[28] Jonathan Long, Evan Shelhamer, and Trevor Darrell. Fully
convolutional networks for semantic segmentation. In Pro-
ceedings of the IEEE conference on computer vision and
pattern recognition, pages 3431–3440, 2015. 3

1839

[29] Cewu Lu, Ranjay Krishna, Michael Bernstein, and Li Fei-
Fei. Visual relationship detection with language priors. In
European Conference on Computer Vision, 2016. 1, 6

[30] Tomas Mikolov, Kai Chen, Greg Corrado, and Jeffrey Dean.
Efﬁcient estimation of word representations in vector space.
ICLR, 2013. 3, 7

[31] Ishan Misra, Abhinav Gupta, and Martial Hebert. From red
wine to red tomato: Composition with context. In CVPR,
volume 2, page 6, 2017. 2, 5, 6, 7

[32] Tushar Nagarajan and Kristen Grauman. Attributes as opera-

tors. ECCV, 2018. 7

[33] Jeffrey Pennington, Richard Socher, and Christopher Man-
ning. Glove: Global vectors for word representation.
In
Proceedings of the 2014 conference on empirical methods
in natural language processing (EMNLP), pages 1532–1543,
2014. 2

[34] Ethan Perez, Florian Strub, Harm de Vries, Vincent Dumoulin,
and Aaron C. Courville. Film: Visual reasoning with a general
conditioning layer. In AAAI, 2018. 3

[35] Bernardino Romera-Paredes and Philip Torr. An embarrass-
ingly simple approach to zero-shot learning. In International
Conference on Machine Learning, pages 2152–2161, 2015. 6
[36] Olga Russakovsky, Jia Deng, Hao Su, Jonathan Krause, San-
jeev Satheesh, Sean Ma, Zhiheng Huang, Andrej Karpathy,
Aditya Khosla, Michael Bernstein, et al.
Imagenet large
scale visual recognition challenge. International Journal of
Computer Vision, 115(3):211–252, 2015. 1

[37] Karen Simonyan and Andrew Zisserman. Very deep convo-
lutional networks for large-scale image recognition. arXiv
preprint arXiv:1409.1556, 2014. 1, 3

[38] Jake Snell, Kevin Swersky, and Richard Zemel. Prototypi-
cal networks for few-shot learning. In Advances in Neural
Information Processing Systems, pages 4077–4087, 2017. 7,
8

[39] Richard Socher, Milind Ganjoo, Christopher D Manning, and
Andrew Ng. Zero-shot learning through cross-modal transfer.
In Advances in neural information processing systems, pages
935–943, 2013. 2

[40] Laurens van der Maaten and Geoffrey Hinton. Visualizing
data using t-SNE. Journal of Machine Learning Research,
9:2579–2605, 2008. 6

[41] Vinay Kumar Verma, Gundeep Arora, Ashish Mishra, and
Piyush Rai. Generalized zero-shot learning via synthesized
examples. 5, 6

[42] Oriol Vinyals, Charles Blundell, Tim Lillicrap, Daan Wierstra,
et al. Matching networks for one shot learning. In Advances
in Neural Information Processing Systems, pages 3630–3638,
2016. 1, 2, 7, 8

[43] Xin Wang, Yujia Luo, Daniel Crankshaw, Alexey Tumanov,
Fisher Yu, and Joseph E Gonzalez. Idk cascades: Fast deep
learning by learning not to overthink. Conference on Uncer-
tainty in Artiﬁcial Intelligence (UAI), 2018. 3

[44] Xin Wang, Fisher Yu, Zi-Yi Dou, Trevor Darrell, and Joseph E
Gonzalez. Skipnet: Learning dynamic routing in convolu-

tional networks. In Proceedings of the European Conference
on Computer Vision (ECCV), pages 409–424, 2018. 3

[45] Yu-Xiong Wang, Ross Girshick, Martial Hebert, and Bharath
Hariharan. Low-shot learning from imaginary data. CVPR,
2018. 1, 2, 5, 8

[46] P. Welinder, S. Branson, T. Mita, C. Wah, F. Schroff, S. Be-
longie, and P. Perona. Caltech-UCSD Birds 200. Technical
Report CNS-TR-2010-001, California Institute of Technol-
ogy, 2010. 4

[47] Peter Welinder, Steve Branson, Takeshi Mita, Catherine Wah,
Florian Schroff, Serge Belongie, and Pietro Perona. Caltech-
ucsd birds 200. 2010. 5

[48] Zuxuan Wu, Tushar Nagarajan, Abhishek Kumar, Steven
Rennie, Larry S Davis, Kristen Grauman, and Rogerio Feris.
Blockdrop: Dynamic inference paths in residual networks.
2018. 3

[49] Yongqin Xian, Christoph H Lampert, Bernt Schiele, and
Zeynep Akata. Zero-shot learning-a comprehensive eval-
uation of the good, the bad and the ugly. IEEE transactions
on pattern analysis and machine intelligence, 2018. 1, 4, 5

[50] Yongqin Xian, Tobias Lorenz, Bernt Schiele, and Zeynep
Akata. Feature generating networks for zero-shot learning.
In Proc. of the IEEE Conference on Computer Vision and
Pattern Recognition (CVPR), Salt Lake City, UT, USA, 2018.
1, 2, 5, 6

[51] Jianxiong Xiao, James Hays, Krista A Ehinger, Aude Oliva,
and Antonio Torralba. Sun database: Large-scale scene recog-
nition from abbey to zoo. In Computer vision and pattern
recognition (CVPR), 2010 IEEE conference on, pages 3485–
3492. IEEE, 2010. 5

[52] Flood Sung Yongxin Yang, Li Zhang, Tao Xiang, Philip HS
Torr, and Timothy M Hospedales. Learning to compare: Rela-
tion network for few-shot learning. In Proc. of the IEEE Con-
ference on Computer Vision and Pattern Recognition (CVPR),
Salt Lake City, UT, USA, 2018. 2, 4, 5, 6

[53] Matthew D Zeiler and Rob Fergus. Visualizing and under-
standing convolutional networks. In European conference on
computer vision, pages 818–833. Springer, 2014. 1

[54] Li Zhang, Tao Xiang, and Shaogang Gong. Learning a deep
embedding model for zero-shot learning.
In Proceedings
of the IEEE Conference on Computer Vision and Pattern
Recognition, 2017. 5, 6

[55] Ziming Zhang and Venkatesh Saligrama. Zero-shot learning
via joint latent similarity embedding. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 6034–6042, 2016. 1, 2, 5, 6

[56] Jun-Yan Zhu, Taesung Park, Phillip Isola, and Alexei A Efros.
Unpaired image-to-image translation using cycle-consistent
adversarial networks. arXiv preprint, 2017. 5

[57] Yizhe Zhu, Mohamed Elhoseiny, Bingchen Liu, Xi Peng, and
Ahmed Elgammal. A generative adversarial approach for zero-
shot learning from noisy texts. In Proceedings of the IEEE
Conference on Computer Vision and Pattern Recognition,
pages 1004–1013, 2018. 2

1840

