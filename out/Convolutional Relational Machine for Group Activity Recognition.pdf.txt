Convolutional Relational Machine for Group Activity Recognition

Sina Mokhtarzadeh Azar1 ∗, Mina Ghadimi Atigh1 ∗, Ahmad Nickabadi1, Alexandre Alahi2

1 Amirkabir University of Technology (AUT), SML lab

424 Hafez Ave, Tehran, Iran

{sinamokhtarzadeh,minaghadimi}@aut.ac.ir

2 ´Ecole Polytechnique F´ed´erale de Lausanne (EPFL), VITA lab

CH-1015 Lausanne, Switzerland

Abstract

Activity Map

Individual Activity Map

Group Activity Map

We present an end-to-end deep Convolutional Neural
Network called Convolutional Relational Machine (CRM)
for recognizing group activities that utilizes the information
in spatial relations between individual persons in image or
video. It learns to produce an intermediate spatial repre-
sentation (activity map) based on individual and group ac-
tivities. A multi-stage reﬁnement component is responsible
for decreasing the incorrect predictions in the activity map.
Finally, an aggregation component uses the reﬁned infor-
mation to recognize group activities. Experimental results
demonstrate the constructive contribution of the informa-
tion extracted and represented in the form of the activity
map. CRM shows advantages over state-of-the-art models
on Volleyball and Collective Activity datasets.

1. Introduction

Human activities can be categorized into two types: ei-
ther individual actions involving a single person e.g., Run-
ning/Jumping, or group activities involving multiple hu-
mans e.g., Talking/Queuing. Recognizing group activity re-
quires understanding individual actions as well as the joint
modeling of the group of individuals. It is important in ap-
plications like sports video analysis, surveillance, and even
social robots that need to operate in a socially-aware manner
around humans (e.g., not crossing two individuals talking to
each other). In this work, we propose to classify the group
activity given single or few consecutive images of a scene.
We do not explicitly detect nor track any individual.

There are multiple sources of information that can be
helpful in recognizing activities. One source is the appear-
ance features of individuals. Many activities are recogniz-
able by knowing how the persons look like. Temporal infor-

∗Equal contribution

Right Spike

Figure 1. Group activity recognition using the proposed spatial
representation (activity map). Our model learns to encode spatial
relations in the form of the activity map and uses it to recognize
the group activity (“Right Spike” in this example). Different indi-
vidual and group activity ﬁelds are shown with different colors.

mation between consecutive frames of a video also plays an
important role in understanding complex activities. Another
recently explored source of information in reasoning over
group activities is the relationships between individuals in
a scene. Some of the existing approaches use various pool-
ing strategies to extract a part of relational cues [2, 20, 13].
In [12], a more complex approach is used to extract rela-
tional information from the neighbouring individuals. Yet,
existing methods are not fully exploiting all the available
information to model spatial relationships between persons.
One may expect a Convolutional Neural Network (CNN) to
extract these relations. Our experiments show that it is very
difﬁcult for a CNN to learn high-level relationships. Hence,
we introduce a mechanism to jointly consider the relation-
ships between individuals.

In this paper, we propose a Convolutional Neural Net-
work model for group activity recognition, referred to as
Convolutional Relational Machine (CRM), where we intro-
duce an intermediate activity-based representation – an ac-
tivity map– as a means of extracting the spatial relations be-

7892

tween activities of persons. Along with this representation
scheme, we train our architecture with a multi-stage method
similar to [27]. Our method generates an initial activity map
from the input image or video and then reﬁnes it through
few steps. The reﬁned activity map is combined with the
image or video features and a ﬁnal aggregation module is
responsible for classifying the group activity (see Figure 1).
Our experiments show that we outperform previous works
on two publicly available datasets.

Considering the recent success of deep neural networks
in the ﬁeld of computer vision, various works studied the
group activity recognition using deep learning. Deng et
al. [7] produces unary potentials using CNN classiﬁers and
develops a neural network that performs message passing
to reﬁne the initial predictions. In [6], message passing is
performed in a graph with the person and group nodes by a
Recurrent Neural Networks (RNN). The connections of this
graph are controlled by some gating functions.

2. Related Works

First, we present an overview of the works in action
recognition. Then, some of the key works on group activity
recognition are reviewed.

2.1. Action Recognition

Many of the recent works in action recognition utilize a
two-stream CNN model with input RGB and handcrafted
optical ﬂow features extracted from consecutive frames of a
video [22, 9, 25, 3]. The two-stream approach was ﬁrst used
in [22] by training a CNN on the single RGB frame to ex-
tract the appearance cues and another CNN on stacked opti-
cal ﬂow ﬁelds to consider the temporal information. These
streams are combined using simple fusion methods. Feicht-
enhofer et al. [9] study more complex fusion strategies for
combining the two streams.
In [25], Temporal Segment
Network is proposed to model long-range temporal cues
by dividing the video into segments and applying a multi-
stream model on the snippets sampled from these segments.
In a different approach, [3] converts existing 2D CNNs to
the ones with 3D ﬁlters to be able to process multiple RGB
frames together. Interestingly, they still ﬁnd it useful to ap-
ply their model to multiple optical ﬂow ﬁelds and fuse the
results with the RGB stream. Some other works use recur-
rent approaches to model the actions in video [8, 18, 19, 17]
or even a single CNN [11]. Donahue et al. [8] propose the
Long-term Recurrent Convolutional Networks model that
combines the CNN features from multiple frames using an
LSTM to recognize actions. In another work [17], VideoL-
STM is developed for action classiﬁcation and localization.
A spatial attention mechanism is used in this model which
utilizes the motion information from optical ﬂow ﬁelds be-
tween frames.

2.2. Group Activity Recognition

Initial approaches for group activity recognition were
based on probabilistic graphical models. [15] models the
person-person and person-group relations in a graphical
model. The optimal graph connectivity and the best set of
individual actions and group activity labels are inferred in
this approach. A joint probabilistic framework is proposed
in [4] for tracking individuals and inferring their group ac-
tivity.

Many of the recent deep learning based works on group
activity recognition utilize the power of RNN to model
the activity recognition considering the temporal domain
[13, 20, 24, 26, 21, 2, 16, 12]. The idea of using RNNs for
group activity recognition started with [13] that uses Long
Short-Term Memory (LSTM) networks to model individual
persons and pools the representations from them to a spe-
ciﬁc LSTM for modeling group activity. In [20], attention
pooling is utilized to give higher importance to key actors.
Person-centered features are introduced in [24] as input to a
hierarchical LSTM. Wang et al. [26] introduce a three-level
model based on person, group and scene representations.
An LSTM models every person similar to previous mod-
els. The output representations of these LSTMS are spatio-
temporally grouped and processed to form the group rep-
resentations which are then used to make scene-level pre-
dictions. In [21], a new energy layer is used instead of the
softmax layer which also considers the p-values of predic-
tions. Bagautdinov et al. [2] introduce an end-to-end frame-
work for joint detection, individual action classiﬁcation and
group activity recognition. In a different work, authors in
[16] develop a model that recognizes group activity based
on the semantic information in the form of automatically
generated captions. Most recently, Ibrahim et al. [12] pro-
pose a hierarchical relational network to produce represen-
tations based on the relations of persons. Our work has a
similar goal to [12].

3. Proposed Model

The goal of our approach is to improve the group activ-
ity recognition performance by introducing an intermediate
activity-based representation that we call activity map as a
means of extracting the spatial relations between activities
of persons. Along with this representation scheme, a multi-
stage neural network model is proposed for generating an
initial activity map from the input image or video and then
reﬁning it in consequent steps. The ﬁnal activity map is
used to conduct the higher level reasoning for predicting
the group activity. In the following subsection, we ﬁrst re-
view the overall outline of the model and then discuss the
important components of the model in more details.

7893

G

I

A

A

A

p

L

L

L

A

A

A

1

2

T

L

G

Input 

K × H × W × C

 

CNN 

(2D or 3D) 

Feature Map 

′

′

H

×

W

× D

ϕ

ψ

ψ

ζ

^

p

^

^

^

A

A

A

1

T −1

1

2

T

 

Figure 2. Overview of our proposed model. Input image or video is processed by a 2D or 3D CNN to produce the preliminary feature
map F which is then used in both activity map prediction and group activity recognition steps. The initial activity map ˆA1 that contains
individual and group activity maps in a spatial representation is generated by φ. Next, the activity map is reﬁned in multiple stages using
ψt. Finally, the aggregation component ζ combines the information from F and reﬁned activity map ˆAT to predict the ﬁnal group activity
label ˆp. LAt is the Euclidean loss between predicted and ground truth activity maps in stage t and LG is the cross entropy loss for group
activity. The ground truth activity map A is composed of group activity map AG and individual activity map AI .

F ∈ RH

3.1. Overview

An overview of our model is presented in Figure 2. De-

note X ∈ RK×H×W ×C as the input to the CRM where H
and W are the height and width of the input and K and C
are the number of frames and channels, respectively. The
input is compatible with both 3D CNNs on 4-dimensional
input sequences of frames and regular CNNs on the 3-
dimensional RGB single frames after squeezing the ﬁrst di-
mension when K = 1. A feature map is extracted by a
CNN and spatially resized to H
. A 3-dimensional
feature map is used in this work. Therefore, in the case of
using a 3D CNN, the average of feature map from different
time dimensions is calculated to form the input feature map
×D for the remaining parts of the model. D

× W

×W

′

′

′

′

is the number of ﬁlters in the chosen layer of the CNN.

′

′

×W

Given the feature map F as input to the CRM, it pro-
duces the activity map ˆAt ∈ RH
×N in every stage t
with N = NI + NG where NI and NG are the number of
individual and group activity classes, respectively. These
reﬁnement stages will result in a ﬁnal reﬁned activity map
ˆAT where T is the number of stages. The corrected activity
map ˆAT along with the feature map F are given as input to
the aggregation component (ζ) of CRM to make a ﬁnal de-
cision for the group activity based on the relations between
the activities of all the persons in the scene.

3.2. Activity map

Activity map is deﬁned as a set of 2D ﬁelds represent-
ing individual and group activities considering the bound-
ing boxes of persons. This means there is a map for every
individual and group activity in the activity map. Each map

has higher values inside the bounding boxes of persons with
the speciﬁc individual action or group activity label. Ac-
tivity map makes it possible for the model to extract the
information from spatial relations between persons. There-
×N is gen-
fore, the ground truth activity map A ∈ RH
erated as a combination of individual activity map AI ∈
×NG .
RH
Particularly, a 2D Gaussian probability density function is
used based on the bounding boxes of persons and their in-
dividual and group activities to construct the activity map.
During the training, considering M persons in the input,
the activity map is created by getting the ground truth per-

×NI and group activity map AG ∈ RH

×W

×W

×W

′

′

′

′

′

′

son bounding boxes B ∈ RM ×4, their individual action
classes I ∈ {1, . . . , NI}M , and the group activity class
G ∈ {1, . . . , NG}. For each person m with bounding box
Bm = (x1
m), individual action i, and group
activity g, a person speciﬁc activity map Am is produced
as:

m, x2

m, y2

m, y1

fm(z) =

1

2π√det Σm

exp(cid:18)−1

2

(z − µm)T Σm

−1 (z − µm)(cid:19) ,

(1)

µm = (µx

m, µy

m), µx

m =

x1
m + x2
m

y1
m + y2
m

, µy

m =

2

Σm = (cid:20)σx

m
0

0
σy
m

2(cid:21) , σx

m =

2
x2
m − x1

m

4

, σy

m =

, (2)

2
y2
m − y1

m

,

4

(3)
where fm(z) is calculated for every point z in the ﬁelds i
and NI + g of the person-speciﬁc activity map Am. µm is

7894

the middle of the bounding box for the person m. Σm is
a covariance matrix calculated for the bounding box based
on the width and height of it. Bounding boxes are along
the vertical and horizontal lines which makes the covariance
matrices diagonal. A bivariate Gaussian map will be created
on the location of the person’s bounding box in the individ-
ual action and group activity ﬁelds of the person-speciﬁc ac-
tivity map. Each ﬁeld is separately normalized by dividing
the values by the maximum value in the ﬁeld. Finally, all the
person-speciﬁc activity maps (Ams) are aligned and com-
bined by taking the maximum value for the aligned points
to form the ﬁnal activity map A. As a result, for a sin-
gle input, persons will have 2D Gaussian maps in various
individual activity ﬁelds in the activity map depending on
the individual activity label of each person but in the group
activity map only one of the ﬁelds will have 2D Gaussian
maps for all the persons and the other group activity ﬁelds
will be zero. At test time, the model will have to produce
the activity map based on the input feature map F . It should
be noted that in the cases where the segmentation masks for
the persons are available, there won’t be a need for the 2D
Gaussian maps and the person segmentation masks can be
a better choice.

3.3. Convolutional Relational Machine

Convolutional Relational Machine has two major parts
of reﬁnement and aggregation. In the reﬁnement part, sim-
ilar to convolutional pose machine [27], the CRM produces
an initial prediction in the ﬁrst stage and reﬁnes it in the
next stages. After reﬁnement, an aggregation component
is responsible to aggregate the information from the whole
scene and the reﬁned activity map to produce the group ac-
tivity label.

3.3.1 Reﬁnement

Given the input feature map F , a function φ works on it to
produce the initial activity map ˆA1 in the ﬁrst stage. In the
following step, another function ψ1 works on the combina-
tion of F and ˆA1 to produce the reﬁned activity map ˆA2.
The reﬁnement component of the CRM can be written as
follows:

ˆA1 = φ(F ),
ˆAt = ψt−1(F ⊕ ˆAt−1), 1 < t <= T,

(4)

where T is the number of stages and ⊕ shows the concatena-
tion. φ and ψs are made of a series of convolutional layers.
Denote conv(x) as a convolutional layer with kernel size x
and stride 1. φ is composed of three conv(3) followed by
two conv(1). All the ψts have the same layers which is dif-
ferent from the layers in φ. Three conv(7) and two conv(1)
are used to construct the ψt. See the supplementary material
for the details of these layers.

3.3.2 Aggregation

Given the reﬁned activity map ˆAT as a rich representation
for spatial relations between activities of persons alongside
the feature map F , the aggregation part aims to aggregate
the information from all the persons to produce a ﬁnal group
activity label. The group activity is predicted by jointly pro-
cessing the input features and the ﬁnal activity map as:

ˆp = ζ(F ⊕ ˆAT ),

(5)

where ˆp ∈ RNG is the predicted probability vector of group
activity classes. ζ uses convolutional and pooling layers on
the concatenation of feature map and activity map to pro-
duce the ﬁnal group activity predictions.
If we denote a
pooling layer with kernel size x and stride 2 as pool(x),
ζ is composed of the sequence of layers conv(7), pool(2),
conv(7), pool(2), conv(7), pool(2), conv(1) followed by a
global average pooling layer. This way the model will be
able to globally extract the cues and predict the group ac-
tivity. It is important for ζ to reason over the feature map
and activity map jointly. If the activity map was the only
input to the ζ, it wouldn’t be able to consider the matching
between visual representations and corresponding activity
map for the goal of recognizing the group activity.

3.3.3 Training

CRM has a multi-task objective. It has to learn to predict the
activity map At for stage t as accurate as possible. More-
over, it needs to produce the correct group activity label.
Having the ground truth activity map A for the individual
and group activities, the loss functions are deﬁned as fol-
lows;

L = wALA + wGLG,

LG = −

1
NG

NG

Xi=1

ˆpilog (pi) ,

LA = LA1 + LAt + ··· + LAT ,

LAt =

′

H

′

W

N

Xh=1

Xw=1

Xn=1

(Ah,w,n

t

− ˆAh,w,n

t

)

2

,

(6)

(7)

(8)

(9)

where LA is the total activity map loss, LAt is the loss for
the activity map of stage t, LG is the group activity loss
and, L is the total multi-task loss of the model. Also, p
denotes the one-hot-encoded group activity label. wA and
wG control the importance of total activity map and group
activity losses, respectively.

To make the model’s job in training the multi-task loss
easier, a two-step training strategy is used. In the ﬁrst step,
the wG is set to 0. Therefore, the model concentrates on
learning to produce the true activity map. After the ﬁrst
step, wG and wA are both given nonzero values to let all the

7895

weights optimize together. As the main goal is to predict
the group activity, wA should be set smaller than wG so that
more emphasis goes for the accurate group activity class
prediction.

4. Experiments

In this section, we present experiments on two of the
most important group activity datasets: Volleyball [13] and
Collective Activity [5]. Comparisons with baselines and
state-of-the-art group activity recognition methods are pro-
vided to show the role of different components of the model
and its superiority over the existing models.

4.1. Datasets

Volleyball Dataset. In this dataset, there are 55 videos
of volleyball matches. A number of short length clips are la-
beled in each video. 39 videos are used for training and the
other 16 videos are used for testing. All the clips are con-
sisted of 41 frames where only the middle frame is labeled
with the bounding boxes and actions of persons along with
the group activity label. Possible individual action labels
are spiking, blocking, setting, jumping, digging, standing,
falling, waiting, and moving. Group activity labels are right
spike, left spike, right set, left set, right pass, left pass, right
winpoint, and left winpoint.

Collective Activity Dataset. This dataset consists of 44
videos with different number of frames in each video. The
number of videos selected for train and test set are 31 and
13, respectively. Every 10th frame of all the videos is la-
beled with the bounding boxes of persons and their indi-
vidual actions. The most frequent individual action label is
considered as the group activity label in the labeled frame.
The possible individual action and group activity labels are
talking, queuing, waiting, crossing, and walking.

4.2. Baselines

We conduct experiments on various baselines to show
the impact of each part of our model. Here, the reported
results are on Volleyball dataset. The evaluated baselines
are as follows.

1. Feature-Map-Only: Only the feature map is fed into

the aggregation component (ζ).

2. Activity-Map-Only: ζ sees the stage 4 activity map

without having access to the feature map.

3. Stage1-Activity-Map: In this baseline, the initial ac-
tivity map extracted by φ without further reﬁnement is
concatenated with the feature map to form the input of
ζ.

4. Stage2-Activity-Map: The concatenation of stage 2
activity map and the feature map is used as the input
of ζ.

5. Stage3-Activity-Map: The same as the previous base-
lines, except that the concatenation of stage 3 activity
map and the feature map is used.

6. Stage4-Activity-Map: Our complete model for single
frame case which is similar to previous three baselines,
but with reﬁned activity map from the output of stage
4.

7. Stage4-Group-Activity-Map: Similar to the previous

baselines without the maps for individual activities.

8. Stage4-Activity-Map-Pool: In this baseline the ag-
gregation component is replaced with a simple pool-
ing mechanism in which the group activity with the
highest sum over the boxes of the persons in the group
activity ﬁelds is selected as the ﬁnal group activity la-
bel.

9. Stage4-Activity-Map-I3D-RGB:

In this baseline,
RGB video frames are given to an I3D CNN backbone.
Also, stage 4 reﬁned activity map is used as input to ζ.

10. Stage4-Activity-Map-I3D-Flow: This baseline is
similar to the previous baseline except that a stack of
optical ﬂow ﬁelds between the frames is the input of
I3D.

11. Stage4-Activity-Map-I3D-Fusion: This is our ﬁnal
model for multi-frame input which is the average fu-
sion of the results of two previous baselines.

4.3. Implementation Details

We use Tensorﬂow [1] to implement our model. Adam
optimizer [14] with different learning rates is used to train
our models. Inception-V3 [23] and I3D [3] are the back-
bone CNN architectures used for the single and multi-frame
cases, respectively. To extract the feature map using the
Inception-V3, the output of the Mixed 7c layer is utilized.
The Mixed 4f layer is the feature map extraction layer for
the I3D. The extracted feature maps of Inception-V3 and
× D feature map. Addi-
I3D are resized to form a H
tional to RGB stream of the I3D, we use stacked optical ﬂow
ﬁelds as input to another stream of I3D in the multi-frame
setting and combine the results of group activity probabili-
ties with the RGB I3D stream using simple averaging of the
predictions. We use TVL1 algorithm [28] to compute these
optical ﬂow ﬁelds. In the multi-frame scenario, we use the
middle frame, 5 frames before it and 4 frames after it as the
input to the model in both datasets.

× W

′

′

Volleyball Dataset. Input frames are resized to 720 ×
1280. We also consider the size of 43 × 78 for the activity
map and therefore resize the feature map to this size. In the
ﬁrst step of the training, we train the model using wG = 0
and wA = 1 for 10 epochs with the learning rate of 0.00001

7896

Method

Accuracy

Feature-Map-Only
Activity-Map-Only
Stage1-Activity-Map
Stage2-Activity-Map
Stage3-Activity-Map
Stage4-Activity-Map
Stage4-Group-Activity-Map
Stage4-Activity-Map-Pool
Stage4-Activity-Map-I3D-RGB
Stage4-Activity-Map-I3D-Flow
Stage4-Activity-Map-I3D-Fusion

75.99
82.72
89.82
90.72
90.42
90.80
88.85
87.80
92.07
91.47
93.04

Table 1. Various baselines and our ﬁnal models in the single frame
and multiple frame settings. The volleyball dataset is used in these
experiments.

and another 10 epochs with the decreased learning rate of
0.000001. In the joint training step, the wG = 1 and wA =
0.0001 so that the model concentrates on the group activity
recognition. This time the model is trained with learning
rate 0.00005 for 10 epochs then it is trained for another 10
epochs with the learning rate of 0.000005.

Collective Activity Dataset. Resized images are 240 ×
360 for the RGB inputs and 480 × 720 for the optical ﬂow
ﬁelds. The resized feature maps are 30 × 45. For both
modalities, the ﬁrst step of the training (the ﬁrst 20 epochs)
is the same as the training procedure for Volleyball dataset
described above.
In the second step, the model for opti-
cal ﬂow modality is trained for two consecutive 10 epochs
with the learning rates of 0.00001 and 0.000001, respec-
tively. The Second step of training for the RGB modality
consists of 3 and 2 epochs of training with the learning rates
of 0.00005 and 0.000005, respectively. In the training pro-
cedure of models for both modalities, we set wG = 1 and
wA = 0.001 in the second step.

4.4. Analysis

To fully understand the impact of every module of our
proposed model, different variants of this model listed
above as the baselines are applied to the Volleyball dataset.
The results of all baselines are reported in Table 1. As ex-
pected, Feature-Map-Only baseline has the lowest accuracy
because it does not have access to additional information of
activity map in any form. The Activity-Map-Only baseline
with access to only the activity map performs better than the
Feature-Map-Only showing that the activity map is a richer
representation than the feature map for group activity recog-
nition. However, as shown in the following a combination
of both maps provides much better results.

To consider the joint use of feature and activity map,
we compare the effect of their combination in two settings.
First, we observe that using the stage 1 activity map pro-

duced by φ without further reﬁnement boosts the perfor-
mance of the model from 75.99% in the Feature-Map-Only
model to 89.82%. This shows that even without the re-
ﬁnement stages, the presence of the activity map greatly
improves the performance of the proposed model in rec-
ognizing the group activity. This is due to the fact that
in our model ζ learns to aggregate the visual and tem-
poral information from the feature map with the spatial
relations between the activities of persons presented by
the activity map. Second, the stage 1 activity map is re-
ﬁned in multiple consecutive stages. The reﬁnement stages
(ψt) will correct the predictions of φ by applying addi-
tional convolutional layers whose effective receptive ﬁelds
increase with t. This enables the model to consider the
spatial information in a larger neighborhood and provide
more accurate activity maps. As the results of Table 1
show, for the case of Volleyball dataset, the performance
of Stage2-Activity-Map has an improvement of 1% com-
pared to Stage1-Activity-Map. The performance of Stage3-
Activity-Map and Stage4-Activity-Map models are at the
same level as that of Stage2-Activity-Map. Although we
use 4 stages, it is also possible to consider only two stages
with the cost of about 0.1% accuracy in the cases where the
computational efﬁciency is important.

Labeling individual actions for every person in a scene
is a time consuming task and it may not be available in
every dataset. Therefore, in the Stage4-Group-Activity-
Map baseline, we evaluate the performance of our model
by constructing the activity map using only the group activ-
ity ﬁelds. Achieving an accuracy of 88.85% shows that the
activity map representation still offers valuable information
even without the individual activities. However, the inclu-
sion of individual activities in Stage4-Activity-Map model
shows 2% improvement of accuracy compared to Stage4-
Group-Activity-Map.

It is possible to extract group activities from the activ-
ity map without using the aggregation component ζ. In the
Stage4-Activity-Map-Pool baseline, to infer the group ac-
tivity label, sum of the values inside the location of bound-
ing boxes of all persons are calculated for all the group ac-
tivity ﬁelds inside the activity map. This results in scores
for each group activity class and the class with the highest
score is chosen as the ﬁnal prediction. The accuracy of this
baseline is 87.80% which is lower than the complete model
with the aggregation part ζ. Without the ζ model is not
able to do a global aggregation on the scene features and
the activities that are happening in it. Therefore, it is neces-
sary to have another reasoning component over the activity
map to be able to make robust predictions. It is possible to
extract individual activities from the activity map in a sim-
ilar approach to Stage4-Activity-Map-Pool. After inferring
individual activities in this way, an accuracy of 78.59% is
achieved. Better performance can be accomplished by in-

7897

troducing individual aggregation components for activities
of persons but it is not the focus of our work.

Temporal information is very important in activity recog-
nition. The I3D CNN is able to extract some of this infor-
mation. Changing the backbone to I3D CNN with multiple
frames as input in Stage4-Activity-Map-I3D-RGB leads to
a better model with 92.07% accuracy. The motion feature
is a special kind of temporal information. 3D CNNs can
also work on stacked optical ﬂow ﬁelds to extract motion
speciﬁc information. Stage4-Activity-Map-I3D-Flow is an-
other baseline model in which I3D is applied to the optical
ﬂow ﬁelds instead of the RGB frames leading to an accu-
racy of 91.47%. Predictions of stacked RGB and optical
ﬂow models can be fused to make a stronger model (Stage4-
Activity-Map-I3D-Fusion). Here, we simply take the aver-
age of predicted probabilities by the models to produce the
ﬁnal probability vectors. The accuracy of the fused model is
93.04% which shows the positive effect of the fusion step.

To analyze the impact of the reﬁnement stages, the losses
of different stages on the test data during different epochs
of training for the I3D with RGB inputs are shown in the
Figure 3. During the ﬁrst step of the training where the
model is only concentrated on the task of minimizing the
activity map loss, each stage decreases the loss and makes
a better activity map. However, in the second step of the
training starting from the 21st epoch, the losses of all stages
are better than the ﬁrst stage activity map but due to the dif-
ﬁculties of the model in minimizing two losses related to
activity map and the group activity, the behaviour of losses
become less stable. However, it is guaranteed that the stage
2, 3 and 4 losses are better than stage 1 but there may be
small unexpected differences between the losses of reﬁne-
ment stages. The small value of wA is one of the reasons
for this minor problem because less importance is given to
the accurate activity map prediction and the focus is on pre-
dicting the group activity. Therefore, the gradients of ζ can
be harmful to the task of activity map prediction. The gra-
dient ﬂow from ζ to the reﬁnement stages can have larger
impacts on the ﬁnal stages. This effect is slightly reduced
by reaching the earlier stages. This explains why the losses
in the middle stages got closer to the stage 4 loss. This
problem is inevitable and it can happen with less or more
stages. Here, the ultimate goal is to predict group activity
labels as accurately as possible and after the ﬁrst stage, the
small inconsistencies can be ignored.

A visualization of the generated activity map in differ-
ent stages is provided in Figure 4. There are noticeable er-
rors in the ﬁrst stage of both individual and group activity
ﬁelds in the activity map. Starting from the second stage,
the effect of the reﬁnement stages is visible. For example,
the model in the ﬁrst stage considers wrong group activi-
ties for two persons but the reﬁnement stages are able to
ﬁx these errors after observing the predictions made for the

Figure 3. Activity map losses of stages 1 to 4 during the two-step
training procedure for the Stage4-Activity-Map-I3D-RGB base-
line.

other neighbouring persons. Both the individual and group
activity ﬁelds are visible to the reﬁnement stages in a spe-
ciﬁc local area based on the receptive ﬁelds of the layers
which helps them reﬁne the predictions based on the other
local predictions.

4.5. Comparison to the State of the Art

Volleyball Dataset. The results of our model in both
multi-frame and single frame cases are compared with other
methods in the Table 2. Not only does the single frame
CRM outperform previous approaches in the single frame
case by a large margin but also achieves better results than
the temporal versions of those approaches.
In the single
frame scenario, CRM is about 2.5% better than [12]. Al-
though their model includes the relational information be-
tween the individuals, it doesn’t use all the information in
spatial relations including the spatial location of individu-
als relative to each other. Therefore, our model is able to
outperform it. Considering the accuracy of 93.04% for the
temporal version of our model, a signiﬁcant improvement
of about 2.4% is achieved compared to the previous best
performing model of [2] (about 26% of possible improve-
ment to achieve 100% accuracy). In [2], the group activity
representation is generated by a simple pooling strategy dis-
regarding most of the relational cues. However, our model
tries to extract all the relational information in the scene.

Collective Activity Dataset.

For Collective Activity
dataset, group activity performance of the CRM is evalu-
ated in two different settings. First, the Multi-class Clas-
siﬁcation Accuracy (MCA) of our model on the Collective
Activity dataset is compared with other approaches in the
Table 3. As the reported results of this table show, the
proposed model has competitive results with the best per-
forming methods of [21] and [16] and outperforms other
approaches. Although the [21] is about 1.5% better than our

7898

0510152025303540Epoch60708090100110LossStage 1Stage 2Stage 3Stage 4Stage 1

Stage 2

Stage 3

Stage 4

Ground Truth

Figure 4. Samples of the generated activity map in different reﬁnement stages. Top row includes the combined individual activity map with
different colors for each individual activity class (9 distinct colors). Also, the separated group activity map is visualized in the bottom row
considering different colors for the group activity classes. Similar colors in the top and bottom row do not represent the same class. Best
viewed in color.

Method
HDTM [13]
CERN [21]
Social Scene [2]
HRN [12]
CRM

Multiple Frames

Single Frame

81.90
83.30
90.60
89.50
93.04

-
-

83.80
88.30
90.80

Table 2. Comparison of our results with those of the state-of-the-
art methods in multiple or single frame cases.

model in Collective Activity dataset, it falls far behind CRM
on Volleyball dataset with about 10%. Walking and Cross-
ing activities in the Collective Activity dataset are simply
the same activities performed at different locations. There-
fore, similar to [26], we combine their predictions into the
new activity of Moving. The Mean per Class Accuracy
(MPCA) for the new setting is reported in Table 4. The con-
fusion matrix is needed for calculating the MPCA for the
new 4 classes. Therefore, due to the lack of confusion ma-
trix in [21], we couldn’t report their results in this part. Ac-
cording to the results, CRM outperforms other approaches
including [16] in this setting considering the MPCA as the
evaluation metric. It is due to the fact that most of its in-
correct predictions were because of the natural confusion
between Walking and Crossing activities. Therefore, it is
evident that CRM is able to achieve notable performance in
Collective Activity dataset.

5. Conclusions

We propose a Convolutional Relational Machine for
group activity recognition by extracting the relationships
between persons. We show that the activity map is a useful
representation that effectively encodes the spatial relations.
We also show that an aggregation method is necessary for
the reﬁned activity map to produce reliable group activity

Method
[4]
[10]
[15]
HDTM [13]
SBGAR [16]
CERN [21]
CRM-RGB
CRM-Flow
CRM

Accuracy

80.40
83.40
79.70
81.50
86.10
87.20
83.41
85.44
85.75

Table 3. Comparison of the MCA of CRM with the other ap-
proaches on Collective Activity dataset.

Method
[4]
[10]
[15]
HDTM [13]
SBGAR [16]
[26]
CRM

M
90.0
87.0
92.0
95.9
90.8
94.4
91.7

W
82.9
75.0
69.0
66.4
81.4
63.6
86.3

Q

95.4
92.0
76.0
96.8
99.2
100.0
100.0

T

MPCA

94.9
99.0
99.0
99.5
84.6
99.5
98.91

90.8
88.3
84.0
89.7
89.0
89.4
94.2

Table 4. The mean per class accuracies (MPCA) and per class ac-
curacies of our model in comparison to other methods on Collec-
tive Activity dataset. M, W, Q, T are the abbreviations for Moving,
Waiting, Queuing, and Talking, respectively.

labels. Future work can adapt this model to extract the spa-
tial relations in person-object scenarios.

7899

References

[1] Mart´ın Abadi, Paul Barham, Jianmin Chen, Zhifeng Chen,
Andy Davis, Jeffrey Dean, Matthieu Devin, Sanjay Ghe-
mawat, Geoffrey Irving, Michael Isard, et al. Tensorﬂow:
A system for large-scale machine learning.
In OSDI, vol-
ume 16, pages 265–283, 2016.

[2] Timur Bagautdinov, Alexandre Alahi, Franc¸ois Fleuret, Pas-
cal Fua, and Silvio Savarese. Social scene understanding:
End-to-end multi-person action localization and collective
activity recognition. In Conference on Computer Vision and
Pattern Recognition, volume 2, 2017.

[3] Joao Carreira and Andrew Zisserman. Quo vadis, action
recognition? a new model and the kinetics dataset. In 2017
IEEE Conference on Computer Vision and Pattern Recogni-
tion (CVPR), pages 4724–4733. IEEE, 2017.

[4] Wongun Choi and Silvio Savarese. A uniﬁed framework for
multi-target tracking and collective activity recognition. In
European Conference on Computer Vision, pages 215–230.
Springer, 2012.

[5] Wongun Choi, Khuram Shahid, and Silvio Savarese. What
are they doing?: Collective activity classiﬁcation using
spatio-temporal relationship among people. In Computer Vi-
sion Workshops (ICCV Workshops), 2009 IEEE 12th Inter-
national Conference on, pages 1282–1289. IEEE, 2009.

[6] Zhiwei Deng, Arash Vahdat, Hexiang Hu, and Greg Mori.
Structure inference machines: Recurrent neural networks for
analyzing relations in group activity recognition. In Proceed-
ings of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 4772–4781, 2016.

[7] Zhiwei Deng, Mengyao Zhai, Lei Chen, Yuhao Liu, Srikanth
Muralidharan, Mehrsan Javan Roshtkhari, and Greg Mori.
Deep structured models for group activity recognition. arXiv
preprint arXiv:1506.04191, 2015.

[8] Jeffrey Donahue, Lisa Anne Hendricks, Sergio Guadarrama,
Marcus Rohrbach, Subhashini Venugopalan, Kate Saenko,
and Trevor Darrell. Long-term recurrent convolutional net-
works for visual recognition and description.
In Proceed-
ings of the IEEE conference on computer vision and pattern
recognition, pages 2625–2634, 2015.

[9] Christoph Feichtenhofer, Axel Pinz, and AP Zisserman.
Convolutional two-stream network fusion for video action
recognition. 2016.

[10] Hossein Hajimirsadeghi, Wang Yan, Arash Vahdat, and Greg
Mori. Visual recognition by counting instances: A multi-
instance cardinality potential kernel. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 2596–2605, 2015.

[11] Albert Haque, Michelle Guo, Alexandre Alahi, Serena Ye-
ung, Zelun Luo, Alisha Rege, Jeffrey Jopling, Lance Down-
ing, William Beninati, Amit Singh, et al. Towards vision-
based smart hospitals: A system for tracking and monitoring
hand hygiene compliance. Machine Learning for Healthcare
(MLHC), 2017.

[12] Mostafa S Ibrahim and Greg Mori. Hierarchical relational
networks for group activity recognition and retrieval. In Pro-
ceedings of the European Conference on Computer Vision
(ECCV), pages 721–736, 2018.

[13] Mostafa S Ibrahim, Srikanth Muralidharan, Zhiwei Deng,
Arash Vahdat, and Greg Mori. A hierarchical deep tempo-
ral model for group activity recognition. In Computer Vision
and Pattern Recognition (CVPR), 2016 IEEE Conference on,
pages 1971–1980. IEEE, 2016.

[14] Diederik P Kingma and Jimmy Ba. Adam: A method for
arXiv preprint arXiv:1412.6980,

stochastic optimization.
2014.

[15] Tian Lan, Yang Wang, Weilong Yang, Stephen N Robi-
novitch, and Greg Mori. Discriminative latent models for
recognizing contextual group activities. IEEE Transactions
on Pattern Analysis and Machine Intelligence, 34(8):1549–
1562, 2012.

[16] Xin Li and Mooi Choo Chuah. Sbgar: Semantics based
group activity recognition. In Proceedings of the IEEE Con-
ference on Computer Vision and Pattern Recognition, pages
2876–2885, 2017.

[17] Zhenyang Li, Kirill Gavrilyuk, Efstratios Gavves, Mihir Jain,
and Cees GM Snoek. Videolstm convolves, attends and ﬂows
for action recognition. Computer Vision and Image Under-
standing, 166:41–50, 2018.

[18] Zelun Luo, Boya Peng, De-An Huang, Alexandre Alahi, and
Li Fei-Fei. Unsupervised learning of long-term motion dy-
namics for videos.
In The IEEE Conference on Computer
Vision and Pattern Recognition (CVPR), July 2017.

[19] Katsuyuki Nakamura, Serena Yeung, Alexandre Alahi, and
Jointly learning energy expenditures and ac-
Li Fei-Fei.
In The IEEE
tivities using egocentric multimodal signals.
Conference on Computer Vision and Pattern Recognition
(CVPR), July 2017.

[20] Vignesh Ramanathan, Jonathan Huang, Sami Abu-El-Haija,
Alexander Gorban, Kevin Murphy, and Li Fei-Fei. Detect-
ing events and key actors in multi-person videos.
In Pro-
ceedings of the IEEE Conference on Computer Vision and
Pattern Recognition, pages 3043–3053, 2016.

[21] Tianmin Shu, Sinisa Todorovic, and Song-Chun Zhu. Cern:
conﬁdence-energy recurrent network for group activity
recognition. Proc. of CVPR, Honolulu, Hawaii, 2017.

[22] Karen Simonyan and Andrew Zisserman. Two-stream con-
volutional networks for action recognition in videos. In Ad-
vances in neural information processing systems, pages 568–
576, 2014.

[23] Christian Szegedy, Vincent Vanhoucke, Sergey Ioffe, Jon
Shlens, and Zbigniew Wojna. Rethinking the inception archi-
tecture for computer vision. In Proceedings of the IEEE Con-
ference on Computer Vision and Pattern Recognition, pages
2818–2826, 2016.

[24] Takamasa Tsunoda, Yasuhiro Komori, Masakazu Matsugu,
and Tatsuya Harada. Football action recognition using hi-
erarchical lstm.
In Computer Vision and Pattern Recogni-
tion Workshops (CVPRW), 2017 IEEE Conference on, pages
155–163. IEEE, 2017.

[25] Limin Wang, Yuanjun Xiong, Zhe Wang, Yu Qiao, Dahua
Lin, Xiaoou Tang, and Luc Van Gool. Temporal segment
networks: Towards good practices for deep action recogni-
tion.
In European Conference on Computer Vision, pages
20–36. Springer, 2016.

7900

[26] Minsi Wang, Bingbing Ni, and Xiaokang Yang. Recurrent
modeling of interaction context for collective activity recog-
nition. In Proceedings of the Conference on Computer Vision
and Pattern Recognition (CVPR), page 8, 2017.

[27] Shih-En Wei, Varun Ramakrishna, Takeo Kanade, and Yaser
Sheikh. Convolutional pose machines. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 4724–4732, 2016.

[28] Christopher Zach, Thomas Pock, and Horst Bischof. A du-
ality based approach for realtime tv-l 1 optical ﬂow. In Joint
Pattern Recognition Symposium, pages 214–223. Springer,
2007.

7901

