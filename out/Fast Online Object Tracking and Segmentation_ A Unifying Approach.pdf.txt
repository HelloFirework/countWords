Fast Online Object Tracking and Segmentation: A Unifying Approach

Qiang Wang∗

CASIA

Li Zhang∗

University of Oxford

Luca Bertinetto∗

Five AI

qiang.wang@nlpr.ia.ac.cn

lz@robots.ox.ac.uk

luca.bertinetto@five.ai

Weiming Hu

CASIA

Philip H.S. Torr

University of Oxford

wmhu@nlpr.ia.ac.cn

philip.torr@eng.ox.ac.uk

Abstract

In this paper we illustrate how to perform both visual object
tracking and semi-supervised video object segmentation,
in real-time, with a single simple approach. Our method,
dubbed SiamMask, improves the ofﬂine training procedure
of popular fully-convolutional Siamese approaches for ob-
ject tracking by augmenting their loss with a binary seg-
mentation task. Once trained, SiamMask solely relies on a
single bounding box initialisation and operates online, pro-
ducing class-agnostic object segmentation masks and ro-
tated bounding boxes at 55 frames per second. Despite its
simplicity, versatility and fast speed, our strategy allows us
to establish a new state-of-the-art among real-time track-
ers on VOT-2018, while at the same time demonstrating
competitive performance and the best speed for the semi-
supervised video object segmentation task on DAVIS-2016
and DAVIS-2017. The project website is http://www.
robots.ox.ac.uk/˜qwang/SiamMask.

1. Introduction

Tracking is a fundamental task in any video applica-
tion requiring some degree of reasoning about objects of
interest, as it allows to establish object correspondences be-
tween frames [38]. It ﬁnds use in a wide range of scenarios
such as automatic surveillance, vehicle navigation, video la-
belling, human-computer interaction and activity recogni-
tion. Given the location of an arbitrary target of interest in
the ﬁrst frame of a video, the aim of visual object tracking
is to estimate its position in all the subsequent frames with
the best possible accuracy [69, 65, 55].

For many applications, it is important that tracking can
be performed online, while the video is streaming. In other
words, the tracker should not make use of future frames to

∗Equal contribution.

Init

Estimates

Figure 1. Our method aims at the intersection between the tasks
of visual tracking and video object segmentation to achieve high
practical convenience. Like conventional object trackers, it relies
on a simple bounding box initialisation (blue) and operates online.
Differently from state-of-the-art trackers such as ECO [14] (red),
SiamMask (green) is able to produce binary segmentation masks,
which can more accurately describe the target object.

reason about the current position of the object [30]. This
is the scenario portrayed by visual object tracking bench-
marks, which represent the target object with a simple axis-
aligned [62, 34, 42, 59, 43] or rotated [30] bounding box.
Such a simple annotation helps to keep the cost of data la-
belling low; what is more, it allows a user to perform a quick
and simple initialisation of the target.

Similar to object tracking, the task of semi-supervised
video object segmentation (VOS) requires estimating the
position of an arbitrary target speciﬁed in the ﬁrst frame
of a video. However, in this case the object represen-
tation consists of a binary segmentation mask which ex-
presses whether or not a pixel belongs to the target [46].
Such a detailed representation is more desirable for appli-
cations that require pixel-level information, like video edit-
ing [44] and rotoscoping [41]. Understandably, produc-
ing pixel-level estimates requires more computational re-

1328

sources than a simple bounding box. As a consequence,
VOS methods have been traditionally slow, often requir-
ing several seconds per frame (e.g. [61, 57, 45, 2]). Very
recently, there has been a surge of interest in faster ap-
proaches [66, 40, 63, 10, 9, 24, 23]. However, even the
fastest still cannot operate in real-time.

In this paper, we aim at narrowing the gap between ar-
bitrary object tracking and VOS by proposing SiamMask,
a simple multi-task learning approach that can be used
to address both problems. Our method is motivated by
the success of fast tracking approaches based on fully-
convolutional Siamese networks [4] trained ofﬂine on mil-
lions of pairs of video frames (e.g. [31, 71, 17, 67]) and by
the very recent availability of YouTube-VOS [64], a large
video dataset with pixel-wise annotations. We aim at retain-
ing the ofﬂine trainability and online speed of these meth-
ods while at the same time signiﬁcantly reﬁning their rep-
resentation of the target object, which is limited to a simple
axis-aligned bounding box.

To achieve this goal, we simultaneously train a Siamese
network on three tasks, each corresponding to a different
strategy to establish correspondances between the target ob-
ject and candidate regions in the new frames. As in the
fully-convolutional approach of Bertinetto et al. [4], one
task is to learn a measure of similarity between the target
object and multiple candidates in a sliding window fashion.
The output is a dense response map which only indicates the
location of the object, without providing any information
about its spatial extent. To reﬁne this information, we si-
multaneously learn two further tasks: bounding box regres-
sion using a Region Proposal Network [53, 31] and class-
agnostic binary segmentation [49]. Notably, binary labels
are only required during ofﬂine training to compute the seg-
mentation loss and not online during segmentation/tracking.
In our proposed architecture, each task is represented by
a different branch departing from a shared CNN and con-
tributes towards a ﬁnal loss, which sums the three outputs
together.

Once trained, SiamMask solely relies on a single bound-
ing box initialisation, operates online without updates and
produces object segmentation masks and rotated bound-
ing boxes at 55 frames per second. Despite its simplicity
and fast speed, SiamMask establishes a new state-of-the-art
on VOT-2018 for the problem of real-time object tracking.
Moreover, the same method is also very competitive against
recent semi-supervised VOS approaches on DAVIS-2016
and DAVIS-2017, while being the fastest by a large mar-
gin. This result is achieved with a simple bounding box
initialisation (as opposed to a mask) and without adopting
costly techniques often used by VOS approaches such as
ﬁne-tuning [39, 45, 2, 60], data augmentation [25, 33] and
optical ﬂow [57, 2, 45, 33, 10].

The rest of this paper is organised as follows. Section 2

brieﬂy outlines some of the most relevant prior work in vi-
sual object tracking and semi-supervised VOS; Section 3
describes our proposal; Section 4 evaluates it on four bench-
marks and illustrates several ablative studies; Section 5 con-
cludes the paper.

2. Related Work

In this section, we brieﬂy cover the most representative

techniques for the two problems tackled in this paper.

Visual object tracking. Arguably, until very recently,
the most popular paradigm for tracking arbitrary objects
has been to train online a discriminative classiﬁer exclu-
sively from the ground-truth information provided in the
ﬁrst frame of a video (and then update it online). This
strategy has often been referred to as tracking-by-detection
(e.g. [1, 55]).
In the past few years, the Correlation Fil-
ter, a simple algorithm that allows to discriminate between
the template of an arbitrary target and its 2D translations,
rose to prominence as particularly fast and effective strategy
for tracking-by-detection thanks to the pioneering work of
Bolme et al. [6]. Performance of Correlation Filter-based
trackers has then been notably improved with the adop-
tion of multi-channel formulations [26, 22], spatial con-
straints [27, 15, 37, 32] and deep features (e.g. [14, 58]).

Recently, a radically different approach has been intro-
duced [4, 21, 56]. Instead of learning a discrimative clas-
siﬁer online, these methods train ofﬂine a similarity func-
tion on pairs of video frames. At test time, this function
can be simply evaluated on a new video, once per frame.
In particular, evolutions of the fully-convolutional Siamese
approach [4] considerably improved tracking performance
by making use of region proposals [31], hard negative min-
ing [71], ensembling [17] and memory networks [67].

Most modern trackers, including all the ones mentioned
above, use a rectangular bounding box both to initialise the
target and to estimate its position in the subsequent frames.
Despite its convenience, a simple rectangle often fails to
properly represent an object, as it is evident in the examples
of Figure 1. This motivated us to propose a tracker able to
produce binary segmentation masks while still only relying
on a bounding box initialisation.

Interestingly, in the past it was not uncommon for track-
ers to produce a coarse binary mask of the target object
(e.g. [13, 48, 5]). However, to the best of our knowledge,
the only recent tracker that, like ours, is able to operate on-
line and produce a binary mask starting from a bounding
box initialisation is the superpixel-based approach of Yeo et
al. [68]. However, at 4 frames per seconds (fps), its fastest
variant is signiﬁcantly slower than our proposal. Further-
more, when using CNN features, its speed is affected by a
60-fold decrease, plummeting below 0.1 fps. Finally, it has
not demonstrated to be competitive on modern tracking or
VOS benchmarks Similar to us, the methods of Perazzi et

1329

al. [45] and Ci et al. [12] can also start from a rectangle and
output per-frame masks. However, they require ﬁne-tuning
at test time, which makes them slow.

Semi-supervised video object segmentation.
Bench-
marks for arbitrary object tracking (e.g. [55, 30]) assume
that trackers receive input frames in a sequential fashion.
This aspect is generally referred to with the attributes on-
line or causal [30]. Moreover, methods are often focused
on achieving a speed that exceeds the ones of typical video
framerates [29]. Conversely, semi-supervised VOS algo-
rithms have been traditionally more concerned with an ac-
curate representation of the object of interest [44, 46].

In order to exploit consistency between video frames,
several methods propagate the supervisory segmentation
mask of the ﬁrst frame to the temporally adjacent ones via
graph labeling approaches (e.g. [61, 47, 57, 40, 2]).
In
particular, Bao et al. [2] recently proposed a very accurate
method that makes use of a spatio-temporal MRF in which
temporal dependencies are modelled by optical ﬂow, while
spatial dependencies are expressed by a CNN.

Another popular strategy is to process video frames in-
dependently (e.g. [39, 45, 60]), similarly to what happens
in most tracking approaches. For example, in OSVOS-S
Maninis et al. [39] do not make use of any temporal in-
formation. They rely on a fully-convolutional network pre-
trained for classiﬁcation and then, at test time, they ﬁne-
tune it using the ground-truth mask provided in the ﬁrst
frame. MaskTrack [45] instead is trained from scratch on
individual images, but it does exploit some form of tempo-
rality at test time by using the latest mask prediction and
optical ﬂow as additional input to the network.

Aiming towards the highest possible accuracy, at test
time VOS methods often feature computationally intensive
techniques such as ﬁne-tuning [39, 45, 2, 60], data augmen-
tation [25, 33] and optical ﬂow [57, 2, 45, 33, 10]. There-
fore, these approaches are generally characterised by low
framerates and the inability to operate online. For example,
it is not uncommon for methods to require minutes [45, 11]
or even hours [57, 2] for videos that are just a few seconds
long, like the ones of DAVIS.

Recently, there has been an increasing interest in the
VOS community towards faster methods [40, 63, 10, 9, 24,
23]. To the best of our knowledge, the fastest approaches
with a performance competitive with the state of the art
are the ones of Yang et al. [66] and Wug et al. [63]. The
former uses a meta-network “modulator” to quickly adapt
the parameters of a segmentation network during test time,
while the latter does not use any ﬁne-tuning and adopts an
encoder-decoder Siamese architecture trained in multiple
stages. Both these methods run below 10 frames per sec-
ond, while we are more than six times faster and only rely
on a bounding box initialisation.

3. Methodology

To allow online operability and fast speed, we adopt
the fully-convolutional Siamese framework of Bertinetto et
al. [4]. Moreover, to illustrate that our approach is agnostic
to the speciﬁc fully-convolutional method used as a start-
ing point (e.g. [4, 31, 71, 67, 18]), we consider the popular
SiamFC [4] and SiamRPN [31] as two representative ex-
amples. We ﬁrst introduce them in Section 3.1 and then
describe our approach in Section 3.2.

3.1. Fully convolutional Siamese networks

SiamFC. Bertinetto et al. [4] propose to use, as a fun-
damental building block of a tracking system, an ofﬂine-
trained fully-convolutional Siamese network that compares
an exemplar image z against a (larger) search image x to
obtain a dense response map. z and x are, respectively, a
w×h crop centered on the target object and a larger crop
centered on the last estimated position of the target. The
two inputs are processed by the same CNN fθ, yielding two
feature maps that are cross-correlated:

gθ(z, x) = fθ(z) ⋆ fθ(x).

(1)

In this paper, we refer to each spatial element of the re-
sponse map (left-hand side of Eq. 1) as response of a can-
didate window (RoW). For example, gn
θ (z, x), encodes a
similarity between the examplar z and n-th candidate win-
dow in x. For SiamFC, the goal is for the maximum value of
the response map to correspond to the target location in the
search area x. Instead, in order to allow each RoW to en-
code richer information about the target object, we replace
the simple cross-correlation of Eq. 1 with depth-wise cross-
correlation [3] and produce a multi-channel response map.
SiamFC is trained ofﬂine on millions of video frames with
the logistic loss [4, Section 2.2], which we refer to as Lsim.
SiamRPN. Li et al. [31] considerably improve the perfor-
mance of SiamFC by relying on a region proposal network
(RPN) [53, 16], which allows to estimate the target location
with a bounding box of variable aspect ratio. In particular,
in SiamRPN each RoW encodes a set of k anchor box pro-
posals and corresponding object/background scores. There-
fore, SiamRPN outputs box predictions in parallel with
classiﬁcation scores. The two output branches are trained
using the smooth L1 and the cross-entropy losses [31, Sec-
tion 3.2]. In the following, we refer to them as Lbox and
Lscore respectively.

3.2. SiamMask

Unlike existing tracking methods that rely on low-
ﬁdelity object representations, we argue the importance of
producing per-frame binary segmentation masks. To this
aim we show that, besides similarity scores and bound-
ing box coordinates, it is possible for the RoW of a fully-

1330

𝑓"	

15*15*256

17*17*(63*63)

ℎ%	

1*1*(63*63)

127*127*1

mask

17*17*(63*63)

mask

ℎ%	

17*17*256

⋆’

𝑏) 	

17*17*4k

box

17*17*256

1*1*(63*63)

RoW:	1*1*256

RoW:	1*1*256

𝑝-	

17*17*1

score

𝑓"	

31*31*256

𝑠+	

17*17*2k

score

(a) three-branch variant architecture

(b) two-branch variant head

127*127*3

255*255*3

Figure 2. Schematic illustration of SiamMask variants: (a) three-branch architecture (full), (b) two-branch architecture (head). ⋆d denotes
depth-wise cross correlation. For simplicity, upsampling layer and mask reﬁnement module are omitted here and detailed in Appendix.

convolutional Siamese network to also encode the informa-
tion necessary to produce a pixel-wise binary mask. This
can be achieved by extending existing Siamese trackers with
an extra branch and loss.

We predict w×h binary masks (one for each RoW) using
a simple two-layers neural network hφ with learnable pa-
rameters φ. Let mn denote the predicted mask correspond-
ing to the n-th RoW,

mn = hφ(gn

θ (z, x)).

(2)

From Eq. 2 we can see that the mask prediction is a function
of both the image to segment x and the target object in z. In
this way, z can be used as a reference to guide the segmen-
tation process, such that objects of any arbitrary class can be
tracked. This clearly means that, given a different reference
image z, the network will produce a different segmentation
mask for x.

Loss function. During training, each RoW is labelled with
a ground-truth binary label yn ∈ {±1} and also associated
with a pixel-wise ground-truth mask cn of size w×h. Let
cij
n ∈ {±1} denote the label corresponding to pixel (i, j) of
the object mask in the n-th candidate RoW. The loss func-
tion Lmask (Eq. 3) for the mask prediction task is a binary
logistic regression loss over all RoWs:

Lmask(θ, φ) = X

(

n

1 + yn
2wh X

ij

log(1 + e−cij

n mij

n )).

(3)

Thus, the classiﬁcation layer of hφ consists of w×h classi-
ﬁers, each indicating whether a given pixel belongs to the
object in the candidate window or not. Note that Lmask is
considered only for positive RoWs (i.e. with yn = 1).
Mask representation.
In contrast to semantic segmenta-
tion methods `a-la FCN [36] and Mask R-CNN [19], which
maintain explicit spatial information throughout the net-
work, our approach follows the spirit of [49, 50] and gen-
erates masks starting from a ﬂattened representation of the

object. In particular, in our case this representation corre-
sponds to one of the (17×17) RoWs produced by the depth-
wise cross-correlation between fθ(z) and fθ(x).
Impor-
tantly, the network hφ of the segmentation task is composed
of two 1×1 convolutional layers, one with 256 and the other
with 632 channels (Figure 2). This allows every pixel clas-
siﬁer to utilise information contained in the entire RoW and
thus to have a complete view of its corresponding candidate
window in x, which is critical to disambiguate between in-
stances that look like the target (e.g. last row of Figure 4),
also known as distractors [52, 71]. With the aim of pro-
ducing a more accurate object mask, we follow the strategy
of [50], which merges low and high resolution features us-
ing multiple reﬁnement modules made of upsampling layers
and skip connections (See Appendix).

Two variants. For our experiments, we augment the ar-
chitectures of SiamFC [4] and SiamRPN [31] with our seg-
mentation branch and the loss Lmask, obtaining what we
call the two-branch and three-branch variants of SiamMask.
These respectively optimise the multi-task losses L2B and
L3B, deﬁned as:

L2B = λ1 · Lmask + λ2 · Lsim,

L3B = λ1 · Lmask + λ2 · Lscore + λ3 · Lbox.

(4)

(5)

We refer the reader to [4, Section 2.2] for Lsim and to [31,
Section 3.2] for Lbox and Lscore. For L3B, a RoW is con-
sidered positive (yn = 1) if one of its anchor boxes has
IOU with the ground-truth box of at least 0.6 and negative
(yn = −1) otherwise. For L2B, we adopt the same strat-
egy of [4] to deﬁne positive and negative samples. We did
not search over the hyperparameters of Eq. 4 and Eq. 5 and
simply set λ1 = 32 like in [49] and λ2 = λ3 = 1. The task-
speciﬁc branches for the box and score outputs are consti-
tuted by two 1×1 convolutional layers. Figure 2 illustrates
the two variants of SiamMask.

Box generation. Note that, while VOS benchmarks re-
quire binary masks, typical tracking benchmarks such as

1331

Figure 3.
In order to generate a bounding box from binary mask
(in yellow), we experiment with three different methods. Min-
max: Axis-aligned box (red), MBR: minimum bounding rectan-
gle (green) and Opt: the optimisation strategy proposed in VOT-
2016 [28] (blue).

VOT [30] require a bounding box as ﬁnal representation
of the target object. We consider three different strategies
to generate a bounding box from a binary mask (Figure 3):
(1) axis-aligned bounding rectangle (Min-max), (2) rotated
minimum bounding rectangle (MBR) and (3) the optimisa-
tion strategy used for the automatic bounding box gener-
ation proposed in VOT-2016 [28] (Opt). We empirically
evaluate these alternatives in Section 4 (Table 1).

3.3. Implementation details

Network architecture.
For both our variants, we use a
ResNet-50 [20] until the ﬁnal convolutional layer of the 4-th
stage as our backbone fθ. In order to obtain a high spatial
resolution in deeper layers, we reduce the output stride to 8
by using convolutions with stride 1. Moreover, we increase
the receptive ﬁeld by using dilated convolutions [8]. In our
model, we add to the shared backbone fθ an unshared adjust
layer (1×1 conv with 256 outputs). For simplicity, we omit
it in Eq. 1. We describe the network architectures in more
detail in Appendix.

Training. Like SiamFC [4], we use examplar and search
image patches of 127×127 and 255×255 pixels respec-
tively. During training, we randomly jitter examplar and
search patches. Speciﬁcally, we consider random transla-
tions (up to ±8 pixels) and rescaling (of 2±1/8 and 2±1/4
for examplar and search respectively).

is

on

The

network

backbone

pre-trained

the
ImageNet-1k classiﬁcation task. We use SGD with a
ﬁrst warmup phase in which the learning rate increases
linearly from 10−3 to 5×10−3 for the ﬁrst 5 epochs
and then descreases logarithmically until 5×10−4 for 15
more epochs. We train all our models using COCO [35],
ImageNet-VID [54] and YouTube-VOS [64].

Inference. During tracking, SiamMask is simply evalu-
ated once per frame, without any adaptation. In both our
variants, we select the output mask using the location attain-
ing the maximum score in the classiﬁcation branch. Then,
after having applied a per-pixel sigmoid, we binarise the
output of the mask branch with a threshold 0.5. In the two-
branch variant, for each video frame after the ﬁrst one, we
ﬁt the output mask with the Min-max box and use it as ref-
erence to crop the next frame search region. Instead, in the

three-branch variant, we ﬁnd more effecitve to exploit the
highest-scoring output of the box branch as reference.

4. Experiments

In this section, we evaluate our approach on two related
tasks: visual object tracking (on VOT-2016 and VOT-2018)
and semi-supervised video object segmentation (on DAVIS-
2016 and DAVIS-2017). We refer to our two-branch and
three-branch variants with SiamMask-2B and SiamMask
respectively.

4.1. Evaluation for visual object tracking

Datasets and settings. We adopt two widely used bench-
marks for the evaluation of the object tracking task: VOT-
2016 [28] and VOT-2018 [29], both annotated with rotated
bounding boxes. We use VOT-2016 to conduct an exper-
iment to understand how different types of representation
affect the performance. For this ﬁrst experiment, we use
mean intersection over union (IOU) and Average Precision
(AP)@{0.5, 0.7} IOU. We then compare against the state-
of-the-art on VOT-2018, using the ofﬁcial VOT toolkit and
the Expected Average Overlap (EAO), a measure that con-
siders both accuracy and robustness of a tracker [29].

How much does the object representation matter?
Existing tracking methods typically predict axis-aligned
bounding boxes with a ﬁxed [4, 22, 15, 37] or variable [31,
21, 71] aspect ratio. We are interested in understanding to
which extent producing a per-frame binary mask can im-
prove tracking. In order to focus on representation accuracy,
for this experiment only we ignore the temporal aspect and
sample video frames at random. The approaches described
in the following paragraph are tested on randomly cropped
search patches (with random shifts within ±16 pixels and
scale deformations up to 21±0.25) from the sequences of
VOT-2016.

In Table 1, we compare our three-branch variant using
the Min-max, MBR and Opt approaches (described at the
end of Section 3.2 and in Figure 3). For perspective, we also
report results for SiamFC and SiamRPN as representative
of the ﬁxed and variable aspect-ratio approaches, together
with three oracles that have access to per-frame ground-
truth information and serve as upper bound for the differ-
ent representation strategies. (1) The ﬁxed aspect-ratio or-
acle uses the per-frame ground-truth area and center loca-
tion, but ﬁxes the aspect reatio to the one of the ﬁrst frame
and produces an axis-aligned bounding box. (2) The Min-
max oracle uses the minimal enclosing rectangle of the ro-
tated ground-truth bounding box to produce an axis-aligned
bounding box. (3) Finally, the MBR oracle uses the rotated
minimum bounding rectangle of the ground-truth. Note that
(1), (2) and (3) can be considered, respectively, the per-
formance upper bounds for the representation strategies of

1332

mIOU (%) mAP@0.5 IOU mAP@0.7 IOU

Fixed a.r. Oracle
Min-max Oracle
MBR Oracle
SiamFC [4]
SiamRPN [71]
SiamMask-Min-max
SiamMask-MBR
SiamMask-Opt

73.43
77.70
84.07
50.48
60.02
65.05
67.15
71.68

90.15
88.84
97.77
56.42
76.20
82.99
85.42
90.77

62.52
65.16
80.68
9.28
32.47
43.09
50.86
60.47

Table 1. Performance for different bounding box representation
strategies on VOT-2016.

SiamFC, SiamRPN and SiamMask.

Table 1 shows that our method achieves the best mIOU,
no matter the box generation strategy used (Figure 3). Al-
beit SiamMask-Opt offers the highest IOU and mAP, it re-
quires signiﬁcant computational resources due to its slow
optimisation procedure [28]. SiamMask-MBR achieves a
mAP@0.5 IOU of 85.4, with a respective improvement of
+29 and +9.2 points w.r.t.
the two fully-convolutional
baselines. Interestingly, the gap signiﬁcantly widens when
considering mAP at the higher accuracy regime of 0.7 IOU:
+41.6 and +18.4 respectively. Notably, our accuracy re-
sults are not far from the ﬁxed aspect-ratio oracle. More-
over, comparing the upper bound performance represented
by the oracles, it is possible to notice how, by simply chang-
ing the bounding box representation, there is a great room
of improvement (e.g. +10.6% mIOU improvement between
the ﬁxed aspect-ratio and the MBR oracles).

Overall, this study shows how the MBR strategy to obtain
a rotated bounding box from a binary mask of the object
offers a signiﬁcant advantage over popular strategies that
simply report axis-aligned bounding boxes.

Results on VOT-2018 and -2016.
In Table 2 we com-
pare the two variants of SiamMask with MBR strategy and
SiamMask–Opt against ﬁve recently published state-of-the-
art trackers on the VOT-2018 benchmark. Unless stated oth-
erwise, SiamMask refers to our three-branch variant with
MBR strategy. Both the variant of SiamMask achieve out-
standing performance and run in real-time.
In particular,
our three-branch variant signiﬁcantly outperforms the very
recent and top performing DaSiamRPN [71], achieving a
EAO of 0.380 and runs at 55fps. Even without box regres-
sion branch, our simpler two-branch variant (SiamMask-
2B) achieves a high EAO of 0.334, which is in par with
SA Siam R [17] and superior to any other real-time method
in the published literature. Moreover, SiamMask–Opt can
achieve the best performance with EAO of 0.387, but runs
at only 5fps. This is expected, as the box optimisation
strategy requires more computation to offer a higher IOU.
Our model is particularly strong under the accuracy metric,
showing a signiﬁcant advantage with respect to the Correla-
tion Filter-based trackers CSRDCF [37], STRCF [32]. This

is not surprising, as SiamMask relies on a richer object rep-
resentation, as outlined in Table 1. Interestingly, similarly
to us, He et al. (SA Siam R) [17] are motivated to achieve
a more accurate target representation by considering mul-
tiple rotated and rescaled bounding boxes. However, their
representation is still constrained to a ﬁxed aspect-ratio box.
Table 3 gives further results of SiamMask with dif-
ferent box generation strategies on VOT-2018 and -2016.
SiamMask-box means the box branch of SiamMask is
adopted for inference despite the mask branch has been
trained. We can observe clear improvements on all evalua-
tion metrics by using the mask branch for box generation.

4.2. Evaluation for semi supervised VOS

Our model, once trained, can also be used for the task
of VOS to achieve competitive performance without requir-
ing any adaptation at test time. Importantly, differently to
typical VOS approaches, ours can operate online, runs in
real-time and only requires a simple bounding box initiali-
sation.

Datasets and settings. We report the performance of
SiamMask on DAVIS-2016 [46], DAVIS-2017 [51] and
YouTube-VOS [64] benchmarks. For both DAVIS datasets,
we use the ofﬁcial performance measures: the Jaccard index
(J ) to express region similarity and the F-measure (F ) to
express contour accuracy. For each measure C ∈ {J , F},
three statistics are considered: mean CM, recall CO, and
decay CD, which informs us about the gain/loss of perfor-
mance over time [46]. Following [64], ﬁnal result O on
YouTube-VOS is the average of four metrics: J for seen
categories, F for seen categories, J for unseen categories,
and F for unseen categories.

To initialise SiamMask, we extract

the axis-aligned
bounding box (Min-max strategy, Figure 3) from the mask
provided in the ﬁrst frame. Similarly to most VOS methods,
in case of multiple objects in the same video (DAVIS-2017)
we simply perform multiple inferences.

Results on DAVIS and YouTube-VOS.
In the semi-
supervised setting, VOS methods are initialised with a
binary mask [44] and many of them require computa-
tionally intensive techniques at test time such as ﬁne-
tuning [39, 45, 2, 60], data augmentation [25, 33], inference
on MRF/CRF [61, 57, 40, 2] and optical ﬂow [57, 2, 45,
33, 10]. As a consequence, it is not uncommon for VOS
techniques to require several minutes to process a short se-
quence. Clearly, these strategies make the online applica-
bility (which is our focus) impossible. For this reason, in
our comparison (Table 4, 5 and 6) we mainly concentrate
on fast state-of-the-art approaches.

The three tables show how SiamMask can be considered
as a strong baseline for online VOS. First, it is almost two
orders of magnitude faster than accurate approaches such
as OnAVOS [60] or SFL [11]. Second, it is competitive

1333

SiamMask-Opt

SiamMask SiamMask-2B DaSiamRPN [71] SiamRPN [31] SA Siam R [17] CSRDCF [37] STRCF [32]

EAO ↑
Accuracy ↑
Robustness ↓
Speed (fps) ↑

0.387
0.642
0.295

5

0.380
0.609
0.276

55

0.334
0.575
0.304

60

0.326
0.569
0.337
160

0.244
0.490
0.460
200

0.337
0.566
0.258
32.4

0.263
0.466
0.318
48.9

0.345
0.523
0.215

2.9

Table 2. Comparison with the state-of-the-art under EAO, Accuracy, and Robustness on the VOT-2018 benchmark.

EAO ↑ A ↑

R ↓ EAO ↑ A ↑

R ↓

Speed ↑

AN RN

EAO ↑ JM↑ FM↑ Speed (fps)

SiamMask-box 0.363 0.584 0.300 0.412 0.623 0.233

SiamMask

0.380 0.609 0.276 0.433 0.639 0.214

SiamMask-Opt 0.387 0.642 0.295 0.442 0.670 0.233

76

55

5

Table 3. Results on VOT-2018 benchmark (left) and VOT-2016
benchmark (right). Speed is measured in frames per second (fps).

FT M JM↑ JO↑ JD↓ FM↑ FO↑ FD↓ Speed

OnAVOS [60] ✔ ✔ 86.1

MSK [45]

✔ ✔ 79.7

96.1

93.1

MSKb [45]

✔ ✘ 69.6

-

5.2

8.9

-

84.9

75.4

-

89.7

87.1

-

5.8

9.0

-

SFL [11]

✔ ✔ 76.1

90.6

12.1

76.0

85.5

10.4

FAVOS [10]

✘ ✔ 82.4

RGMP [63]

✘ ✔ 81.5

PML [9]

✘ ✔ 75.5

OSMN [66]

✘ ✔ 74.0

PLM [70]

VPN [24]

✘ ✔ 70.2

✘ ✔ 70.2

SiamMask

✘ ✘ 71.7

96.5

91.7

89.6

87.6

86.3

82.3

86.8

4.5

10.9

8.5

9.0

11.2

12.4

79.5

82.0

79.3

72.9

62.5

65.5

89.4

90.8

93.4

84.0

73.2

69.0

5.5

10.1

7.8

10.6

14.7

14.4

3.0

67.8

79.8

2.1

0.08

0.1

0.1

0.1

0.8

8

3.6

8.0

6.7

1.6

55

Table 4. Results on DAVIS 2016 (validation set). FT and M re-
spectively denote if the method requires ﬁne-tuning and whether
it is initialised with a mask (✔) or a bounding box (✘). Speed is
measured in frames per second (fps).

FT M JM↑ JO↑ JD↓ FM↑ FO↑ FD↓ Speed

OnAVOS [60] ✔ ✔ 61.6

OSVOS [7]

✔ ✔ 56.6

FAVOS [10]

✘ ✔ 54.6

OSMN [66]

✘ ✔ 52.5

67.4

63.8

61.1

60.9

27.9

26.1

14.1

21.5

69.1

63.9

61.8

57.1

75.4

73.8

72.3

66.1

26.6

27.0

18.0

24.3

SiamMask

✘ ✘ 54.3

62.8

19.3

58.5

67.5

20.9

0.1

0.1

0.8

8.0

55

Table 5. Results on DAVIS 2017 (validation set).

FT M JS↑ JU ↑ FS↑ FU ↑ O ↑

Speed ↑

OnAVOS [60] ✔ ✔ 60.1

OSVOS [7]

✔ ✔ 59.8

OSMN [66]

✘ ✔ 60.0

46.6

54.2

40.6

62.7

60.5

60.1

51.4

60.7

44.0

55.2

58.8

51.2

SiamMask

✘ ✘ 60.2

45.1

58.2

47.7

52.8

0.1

0.1

8.0

55

Table 6. Results on YouTube-VOS (validation set).

with recent VOS methods that do not employ ﬁne-tuning,
while being four times more efﬁcient than the fastest ones
(i.e. OSMN [66] and RGMP [63]). Interestingly, we note
that SiamMask achieves low decay [46] for region similar-
ity (JD,) and contour accuracy (FD) on both DAVIS-2016
and DAVIS-2017. This suggests that our method is robust

SiamFC

SiamFC

SiamRPN

SiamRPN

SiamMask-2B w/o R

SiamMask w/o R

SiamMask-2B-score

SiamMask-box

SiamMask-2B

SiamMask

✔

✔

0.188

✔ 0.251

0.243

✔ 0.359

✔ 0.326

✔ 0.375

✔ 0.265

✔ 0.363

✔ 0.334

✔ 0.380

-

-

-

-

-

-

-

-

62.3

68.6

55.6

57.8

-

-

-

-

67.4

71.7

63.5

67.8

86

40

200

76

43

58

40

76

60

55

Table 7. Ablation studies on VOT-2018 and DAVIS-2016.

over time and thus it is indicated for particularly long se-
quences.

Qualitative results of SiamMask for both VOT and
DAVIS sequences are shown in Figure 4 and Appendix. De-
spite the high speed, SiamMask produces accurate segmen-
tation masks even in presence of distractors.

4.3. Further analysis

In this section, we illustrate ablation studies, failure

cases and timings of our methods.

Network architecture.
In Table 7, AN and RN denote
whether we use AlexNet or ResNet-50 as the shared back-
bone fθ (Figure 2), while with “w/o R” we mean that the
method does not use the reﬁnement strategy of Pinheiro et
al. [50]. From the results of Table 7, it is possible to make
several observations.
(1) The ﬁrst set of rows in Table 7
shows that, by simply updating the architecture of fθ, it
is possible to achieve an important performance improve-
ment. However, this comes at the cost of speed, especially
for SiamRPN. (2) SiamMask-2B and SiamMask consider-
ably improve over their baselines (with same fθ) SiamFC
and SiamRPN. (3) Interestingly, the reﬁnement approach of
Pinheiro et al. [50] is very important for the contour accu-
racy FM, but less so for the other metrics.

Multi-task training. We conducted two further experi-
ments to disentangle the effect of multi-task training. Re-
sults are reported in Table 7 and and Table 3. To achieve
this, we modiﬁed the two variants of SiamMask during in-
ference so that, respectively, they report an axis-aligned
bounding box from the score branch (SiamMask-2B-score)
or the box branch (SiamMask-box). Therefore, despite hav-
ing been trained, the mask branch is not used during in-

1334

l
l
a
b
t
e
k
s
a
B

e
r
u
t
a
N

w
o
d
a
h
S
-
r
a
C

p
m
u
J
-
s
g
o
D

s
g
i

P

Figure 4. Qualitative results of our method for sequences belonging to both object tracking and video object segmentation benchmarks.
Basketball and Nature are from VOT-2018 [29]; Car-Shadow is from DAVIS-2016 [46]; Dogs-Jump and Pigs are DAVIS-2017 [51].

is focused on objects that can be unambiguously segmented
from the foreground.

5. Conclusion

We introduced SiamMask, a simple approach that en-
ables fully-convolutional Siamese trackers to produce class-
agnostic binary segmentation masks of the target object.
We show how it can be applied with success to both tasks
of visual object tracking and semi-supervised video object
segmentation, showing better accuracy than state-of-the-art
trackers and, at the same time, the fastest speed among VOS
methods. The two variants of SiamMask we proposed are
initialised with a simple bounding box, operate online, run
in real-time and do not require any adaptation to the test se-
quence. We hope that our work will inspire further studies
that consider the two problems of visual object tracking and
video object segmentation together.

Figure 5. Failure cases: motion blur and “non-object” pattern.

ference. We can observe how both variants obtain an im-
provement with respect to their no-mask-branch counter-
parts (SiamFC and SiamRPN): from 0.251 to 0.265 EAO
for the two-branch and from 0.359 to 0.363 for the three-
branch on VOT2018. The gaps are therefore due solely to
the beneﬁts of multi-task training.

Timing. SiamMask operates online without any adapta-
tion to the test sequence. On a single NVIDIA Titan X GPU,
we measured an average speed of 55 and 60 frames per
second, respectively for the two-branch and three-branch
variants. Note that the highest computational burden comes
from the feature extractor fθ.

Failure cases. Finally, we discuss two scenarios in which
SiamMask fails: motion blur and “non-object” pattern (Fig-
ure 5). Despite being different in nature, these two cases
arguably arise from the complete lack of similar training
samples in a training set such as YouTube-VOS [64], which

Acknowledgement This work was supported by the
ERC grant ERC-2012-AdG 321162-HELIOS, EPSRC
grant Seebibyte EP/M013774/1 and EPSRC/MURI grant
EP/N019474/1. We would also like to acknowledge the
Royal Academy of Engineering and FiveAI.

1335

References

[1] B. Babenko, M.-H. Yang, and S. Belongie. Visual tracking
with online multiple instance learning. In IEEE Conference
on Computer Vision and Pattern Recognition, 2009. 2

[2] L. Bao, B. Wu, and W. Liu. Cnn in mrf: Video object seg-
mentation via inference in a cnn-based higher-order spatio-
temporal mrf. In IEEE Conference on Computer Vision and
Pattern Recognition, 2018. 2, 3, 6

[3] L. Bertinetto, J. F. Henriques, J. Valmadre, P. H. S. Torr, and
A. Vedaldi. Learning feed-forward one-shot learners. In Ad-
vances in Neural Information Processing Systems, 2016. 3

[4] L. Bertinetto, J. Valmadre, J. F. Henriques, A. Vedaldi, and
P. H. Torr. Fully-convolutional siamese networks for object
tracking. In European Conference on Computer Vision work-
shops, 2016. 2, 3, 4, 5, 6

[5] C. Bibby and I. Reid. Robust Real-Time Visual Tracking us-
ing Pixel-Wise Posteriors. In European Conference on Com-
puter Vision, 2008. 2

[6] D. S. Bolme, J. R. Beveridge, B. A. Draper, and Y. M. Lui.
Visual object tracking using adaptive correlation ﬁlters. In
IEEE Conference on Computer Vision and Pattern Recogni-
tion, 2010. 2

[7] S. Caelles, K.-K. Maninis, J. Pont-Tuset, L. Leal-Taix´e,
D. Cremers, and L. Van Gool. One-shot video object seg-
mentation.
In IEEE Conference on Computer Vision and
Pattern Recognition, 2017. 7

[8] L.-C. Chen, G. Papandreou, I. Kokkinos, K. Murphy, and
A. L. Yuille. Deeplab: Semantic image segmentation with
deep convolutional nets, atrous convolution, and fully con-
nected crfs. IEEE Transactions on Pattern Analysis and Ma-
chine Intelligence, 2018. 5

[9] Y. Chen, J. Pont-Tuset, A. Montes, and L. Van Gool. Blaz-
ingly fast video object segmentation with pixel-wise metric
learning. In IEEE Conference on Computer Vision and Pat-
tern Recognition, 2018. 2, 3, 7

[10] J. Cheng, Y.-H. Tsai, W.-C. Hung, S. Wang, and M.-H. Yang.
Fast and accurate online video object segmentation via track-
ing parts. In IEEE Conference on Computer Vision and Pat-
tern Recognition, 2018. 2, 3, 6, 7

[11] J. Cheng, Y.-H. Tsai, S. Wang, and M.-H. Yang. Segﬂow:
Joint learning for video object segmentation and optical
ﬂow. In IEEE International Conference on Computer Vision,
2017. 3, 6, 7

[12] H. Ci, C. Wang, and Y. Wang. Video object segmentation by
learning location-sensitive embeddings. In European Con-
ference on Computer Vision, 2018. 3

[13] D. Comaniciu, V. Ramesh, and P. Meer. Real-time tracking
of non-rigid objects using mean shift. In IEEE Conference
on Computer Vision and Pattern Recognition, 2000. 2

[14] M. Danelljan, G. Bhat, F. S. Khan, M. Felsberg, et al. Eco:
Efﬁcient convolution operators for tracking. In IEEE Con-
ference on Computer Vision and Pattern Recognition, 2017.
1, 2

[15] M. Danelljan, G. H¨ager, F. S. Khan, and M. Felsberg. Learn-
ing spatially regularized correlation ﬁlters for visual track-
ing. In IEEE International Conference on Computer Vision,
2015. 2, 5

[16] C. Feichtenhofer, A. Pinz, and A. Zisserman. Detect to track
In IEEE International Conference on

and track to detect.
Computer Vision, 2017. 3

[17] A. He, C. Luo, X. Tian, and W. Zeng. Towards a better match
in siamese network based visual object tracker. In European
Conference on Computer Vision workshops, 2018. 2, 6, 7

[18] A. He, C. Luo, X. Tian, and W. Zeng. A twofold siamese
network for real-time object tracking. In IEEE Conference
on Computer Vision and Pattern Recognition, 2018. 3

[19] K. He, G. Gkioxari, P. Doll´ar, and R. Girshick. Mask r-
cnn. In IEEE International Conference on Computer Vision,
2017. 4

[20] K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learning
In IEEE Conference on Computer

for image recognition.
Vision and Pattern Recognition, 2016. 5

[21] D. Held, S. Thrun, and S. Savarese. Learning to track at 100
fps with deep regression networks. In European Conference
on Computer Vision, 2016. 2, 5

[22] J. F. Henriques, R. Caseiro, P. Martins, and J. Batista. High-
speed tracking with kernelized correlation ﬁlters.
IEEE
Transactions on Pattern Analysis and Machine Intelligence,
2015. 2, 5

[23] Y.-T. Hu, J.-B. Huang, and A. G. Schwing. Videomatch:
In European

Matching based video object segmentation.
Conference on Computer Vision, 2018. 2, 3

[24] V. Jampani, R. Gadde, and P. V. Gehler. Video propagation
networks. In IEEE Conference on Computer Vision and Pat-
tern Recognition, 2017. 2, 3, 7

[25] A. Khoreva, R. Benenson, E. Ilg, T. Brox, and B. Schiele.
Lucid data dreaming for object tracking.
In IEEE Con-
ference on Computer Vision and Pattern Recognition work-
shops, 2017. 2, 3, 6

[26] H. Kiani Galoogahi, T. Sim, and S. Lucey. Multi-channel
In IEEE International Conference on

correlation ﬁlters.
Computer Vision, 2013. 2

[27] H. Kiani Galoogahi, T. Sim, and S. Lucey. Correlation ﬁlters
with limited boundaries. In IEEE Conference on Computer
Vision and Pattern Recognition, 2015. 2

[28] M. Kristan, A. Leonardis,

J. Matas, M. Felsberg,
R. Pﬂugfelder, L. ˇCehovin, T. Voj´ır, G. H¨ager, A. Lukeˇziˇc,
G. Fern´andez, et al. The visual object tracking vot2016 chal-
lenge results. In European Conference on Computer Vision,
2016. 5, 6

[29] M. Kristan, A. Leonardis,

J. Matas, M. Felsberg,
R. Pfugfelder, L. C. Zajc, T. Vojir, G. Bhat, A. Lukezic,
A. Eldesokey, G. Fernandez, and et al. The sixth visual object
tracking vot-2018 challenge results. In European Conference
on Computer Vision workshops, 2018. 3, 5, 8

[30] M. Kristan, J. Matas, A. Leonardis, T. Voj´ıˇr, R. Pﬂugfelder,
G. Fernandez, G. Nebehay, F. Porikli, and L. ˇCehovin. A
novel performance evaluation methodology for single-target
trackers.
IEEE Transactions on Pattern Analysis and Ma-
chine Intelligence, 2016. 1, 3, 5

[31] B. Li, J. Yan, W. Wu, Z. Zhu, and X. Hu. High performance
visual tracking with siamese region proposal network.
In
IEEE Conference on Computer Vision and Pattern Recogni-
tion, 2018. 2, 3, 4, 5, 7

1336

[32] F. Li, C. Tian, W. Zuo, L. Zhang, and M.-H. Yang. Learn-
ing spatial-temporal regularized correlation ﬁlters for visual
tracking. In IEEE Conference on Computer Vision and Pat-
tern Recognition, 2018. 2, 6, 7

[33] X. Li and C. C. Loy. Video object segmentation with joint
In

re-identiﬁcation and attention-aware mask propagation.
European Conference on Computer Vision, 2018. 2, 3, 6

[34] P. Liang, E. Blasch, and H. Ling. Encoding color information
In IEEE

for visual tracking: Algorithms and benchmark.
Transactions on Image Processing, 2015. 1

[35] T.-Y. Lin, M. Maire, S. Belongie, J. Hays, P. Perona, D. Ra-
manan, P. Doll´ar, and C. L. Zitnick. Microsoft coco: Com-
mon objects in context. In European Conference on Com-
puter Vision, 2014. 5

[36] J. Long, E. Shelhamer, and T. Darrell. Fully convolutional
networks for semantic segmentation. In IEEE Conference on
Computer Vision and Pattern Recognition, 2015. 4

[37] A. Lukezic, T. Vojir, L. C. Zajc, J. Matas, and M. Kristan.
Discriminative correlation ﬁlter with channel and spatial reli-
ability. In IEEE Conference on Computer Vision and Pattern
Recognition, 2017. 2, 5, 6, 7

[38] T. Makovski, G. A. Vazquez, and Y. V. Jiang. Visual learning

in multiple-object tracking. PLoS One, 2008. 1

[39] K.-K. Maninis, S. Caelles, Y. Chen, J. Pont-Tuset, L. Leal-
Taix´e, D. Cremers, and L. Van Gool. Video object segmen-
tation without temporal information. In IEEE Transactions
on Pattern Analysis and Machine Intelligence, 2017. 2, 3, 6
[40] N. M¨arki, F. Perazzi, O. Wang, and A. Sorkine-Hornung. Bi-
In IEEE Conference on

lateral space video segmentation.
Computer Vision and Pattern Recognition, 2016. 2, 3, 6

[41] O. Miksik, J.-M. P´erez-R´ua, P. H. Torr, and P. P´erez. Roam:
a rich object appearance model with application to rotoscop-
ing.
In IEEE Conference on Computer Vision and Pattern
Recognition, 2017. 1

[42] M. Mueller, N. Smith, and B. Ghanem. A benchmark and
simulator for uav tracking. In European Conference on Com-
puter Vision, 2016. 1

[43] M. M¨uller, A. Bibi, S. Giancola, S. Al-Subaihi, and
B. Ghanem. Trackingnet: A large-scale dataset and bench-
mark for object tracking in the wild. In European Conference
on Computer Vision, 2018. 1

[44] F. Perazzi. Video Object Segmentation. PhD thesis, ETH

Zurich, 2017. 1, 3, 6

[45] F. Perazzi, A. Khoreva, R. Benenson, B. Schiele, and
A. Sorkine-Hornung. Learning video object segmentation
from static images. In IEEE Conference on Computer Vision
and Pattern Recognition, 2017. 2, 3, 6, 7

[46] F. Perazzi, J. Pont-Tuset, B. McWilliams, L. Van Gool,
M. Gross, and A. Sorkine-Hornung. A benchmark dataset
and evaluation methodology for video object segmentation.
In IEEE Conference on Computer Vision and Pattern Recog-
nition, 2017. 1, 3, 6, 7, 8

[47] F. Perazzi, O. Wang, M. Gross, and A. Sorkine-Hornung.
Fully connected object proposals for video segmentation. In
IEEE International Conference on Computer Vision, 2015. 3
[48] P. P´erez, C. Hue, J. Vermaak, and M. Gangnet. Color-Based
In European Conference on Com-

Probabilistic Tracking.
puter Vision, 2002. 2

[49] P. O. Pinheiro, R. Collobert, and P. Doll´ar. Learning to seg-
ment object candidates. In Advances in Neural Information
Processing Systems, 2015. 2, 4

[50] P. O. Pinheiro, T.-Y. Lin, R. Collobert, and P. Doll´ar. Learn-
In European Conference on

ing to reﬁne object segments.
Computer Vision, 2016. 4, 7

[51] J. Pont-Tuset, F. Perazzi, S. Caelles, P. Arbel´aez, A. Sorkine-
The 2017 davis chal-
arXiv preprint

Hornung, and L. Van Gool.
lenge on video object segmentation.
arXiv:1704.00675, 2017. 6, 8

[52] H. Possegger, T. Mauthner, and H. Bischof.

color-based model-free tracking.
Computer Vision and Pattern Recognition, 2015. 4

In defense of
In IEEE Conference on

[53] S. Ren, K. He, R. Girshick, and J. Sun. Faster r-cnn: Towards
real-time object detection with region proposal networks. In
Advances in Neural Information Processing Systems, 2015.
2, 3

[54] O. Russakovsky, J. Deng, H. Su, J. Krause, S. Satheesh,
S. Ma, Z. Huang, A. Karpathy, A. Khosla, M. Bernstein,
et al. Imagenet large scale visual recognition challenge. In-
ternational Journal of Computer Vision, 2015. 5

[55] A. W. Smeulders, D. M. Chu, R. Cucchiara, S. Calderara,
A. Dehghan, and M. Shah. Visual tracking: An experimental
survey. IEEE Transactions on Pattern Analysis and Machine
Intelligence, 2014. 1, 2, 3

[56] R. Tao, E. Gavves, and A. W. Smeulders. Siamese instance
search for tracking. In IEEE Conference on Computer Vision
and Pattern Recognition, 2016. 2

[57] Y.-H. Tsai, M.-H. Yang, and M. J. Black. Video segmenta-
tion via object ﬂow. In IEEE Conference on Computer Vision
and Pattern Recognition, 2016. 2, 3, 6

[58] J. Valmadre, L. Bertinetto, J. Henriques, A. Vedaldi, and
P. H. S. Torr. End-to-end representation learning for correla-
tion ﬁlter based tracking. In IEEE Conference on Computer
Vision and Pattern Recognition, 2017. 2

[59] J. Valmadre*, L. Bertinetto*, J. F. Henriques, R. Tao,
A. Vedaldi, A. Smeulders, P. H. S. Torr, and E. Gavves*.
Long-term tracking in the wild: A benchmark. In European
Conference on Computer Vision, 2018. 1

[60] P. Voigtlaender and B. Leibe. Online adaptation of convo-
lutional neural networks for video object segmentation. In
British Machine Vision Conference, 2017. 2, 3, 6, 7

[61] L. Wen, D. Du, Z. Lei, S. Z. Li, and M.-H. Yang. Jots: Joint
In IEEE Conference on

online tracking and segmentation.
Computer Vision and Pattern Recognition, 2015. 2, 3, 6

[62] Y. Wu, J. Lim, and M.-H. Yang. Online object tracking: A
In IEEE Conference on Computer Vision and

benchmark.
Pattern Recognition, 2013. 1

[63] S. Wug Oh, J.-Y. Lee, K. Sunkavalli, and S. Joo Kim. Fast
video object segmentation by reference-guided mask propa-
gation. In IEEE Conference on Computer Vision and Pattern
Recognition, 2018. 2, 3, 7

[64] N. Xu, L. Yang, Y. Fan, J. Yang, D. Yue, Y. Liang, B. Price,
S. Cohen, and T. Huang. Youtube-vos: Sequence-to-
sequence video object segmentation.
In European Confer-
ence on Computer Vision, 2018. 2, 5, 6, 8

1337

[65] H. Yang, L. Shao, F. Zheng, L. Wang, and Z. Song. Recent
advances and trends in visual tracking: A review. Neurocom-
puting, 2011. 1

[66] L. Yang, Y. Wang, X. Xiong, J. Yang, and A. K. Katsaggelos.
Efﬁcient video object segmentation via network modulation.
In IEEE Conference on Computer Vision and Pattern Recog-
nition, June 2018. 2, 3, 7

[67] T. Yang and A. B. Chan. Learning dynamic memory net-
works for object tracking. In European Conference on Com-
puter Vision, 2018. 2, 3

[68] D. Yeo, J. Son, B. Han, and J. H. Han. Superpixel-based
tracking-by-segmentation using markov chains.
In IEEE
Conference on Computer Vision and Pattern Recognition,
2017. 2

[69] A. Yilmaz, O. Javed, and M. Shah. Object tracking: A sur-

vey. Acm computing surveys (CSUR), 2006. 1

[70] J. S. Yoon, F. Rameau, J. Kim, S. Lee, S. Shin, and I. S.
Kweon. Pixel-level matching for video object segmentation
using convolutional neural networks. In IEEE International
Conference on Computer Vision, 2017. 7

[71] Z. Zhu, Q. Wang, B. Li, W. Wu, J. Yan, and W. Hu.
Distractor-aware siamese networks for visual object track-
ing. In European Conference on Computer Vision, 2018. 2,
3, 4, 5, 6, 7

1338

