Improving the Performance of Unimodal Dynamic Hand-Gesture Recognition

with Multimodal Training

Mahdi Abavisani
Rutgers University

Hamid Reza Vaezi Joze

Vishal M. Patel

Microsoft

Johns Hopkins University

mahdi.abavisani@rutgers.edu

hava@microsoft.com

vpatel36@jhu.edu

Abstract

Training

Testing

We present an efﬁcient approach for leveraging the
knowledge from multiple modalities in training unimodal
3D convolutional neural networks (3D-CNNs) for the task
of dynamic hand gesture recognition. Instead of explicitly
combining multimodal information, which is commonplace
in many state-of-the-art methods, we propose a different
framework in which we embed the knowledge of multiple
modalities in individual networks so that each unimodal
network can achieve an improved performance. In partic-
ular, we dedicate separate networks per available modal-
ity and enforce them to collaborate and learn to develop
networks with common semantics and better representa-
tions. We introduce a “spatiotemporal semantic alignment”
loss (SSA) to align the content of the features from differ-
ent networks. In addition, we regularize this loss with our
proposed “focal regularization parameter” to avoid neg-
ative knowledge transfer. Experimental results show that
our framework improves the test time recognition accu-
racy of unimodal networks, and provides the state-of-the-art
performance on various dynamic hand gesture recognition
datasets.

1. Introduction

Recent advances in computer vision and pattern recog-
nition have made hand gesture recognition an accessible
and important interaction tool for different types of applica-
tions including human-computer interaction [36], sign lan-
guage recognition [7], and gaming and virtual reality con-
trol [22].
In particular, recent developments in deep 3-D
convolutional neural networks (3D-CNNs) with video se-
quences have signiﬁcantly improved the performance of dy-
namic hand gesture recognition [27, 24, 26].

Most state-of-the-art hand gesture recognition methods
exploit multiple sensors such as visible RGB cameras, depth
camera or compute an extra modality like optical ﬂow
to improve their performances [21, 50, 47, 23]. Multi-

Multimodal 
 Learning

Multimodal 

 Testing

(a) Multimodal recognition

Unimodal 
 Learning

(b) Unimodal recognition

Multimodal 
 Learning

Unimodal 

Testing

Unimodal 

Testing

(c) Multimodal-training /unimodal-testing procedure (proposed).

Figure 1. Training and testing schemes of different types of recog-
nition systems. (a) The system is trained and tested with multi-
ple modalities. (b) The system is trained and tested with a sin-
gle modality. (c) The system leverages the beneﬁts of multimodal
training but can be ran as a unimodal system during testing.

modal recognition systems offer signiﬁcant improvements
to the accuracy of hand gesture recognition [25]. A multi-
modal recognition system is trained with multiple streams
of data and classiﬁes the multimodal observations during
testing [35, 4] (Figure 1 (a)). On the other hand, a uni-
modal recognition system is trained and tested using only a
single modality data (Figure 1 (b)). This paper introduces
a third type of framework which leverages the knowledge
from multimodal data during training and improves the per-
formance of a unimodal system during testing. Figure 1 (c)
gives an overview of the proposed framework.

The proposed approach uses separate 3D-CNNs per each
stream of modality for primarily training them to recognize
the dynamic hand gestures based on their input modality
streams. The streams of modalities that are available in
dynamic hand gesture recognition systems are often spa-
tially and temporally aligned. For instance, the RGB and

11165

depth maps captured with motion sensing devices and the
optical ﬂow calculated from the RGB streams are usually
aligned. Hence, we encourage the individual modality net-
works to derive a common understanding for the spatiotem-
poral contents of different modalities. We do this by sharing
their knowledge throughout the learning process by mini-
mizing the introduced spatiotemporal semantic alignment
(SSA) loss.

We further improve the learning process by regularizing
the SSA loss with an adaptive regularization parameter. We
call this regularization parameter, the focal regularization
parameter. This parameter prevents the transfer of negative
knowledge. In other words, it makes sure that the knowl-
edge is transferred from more accurate modality networks
to less accurate networks and not the other way. Once the
networks are trained, during inference, each network has
learned to recognize the hand gestures from its dedicated
modality, but also has gained the knowledge transferred
from the other modalities that assists in providing the better
performance.

In summary, this paper makes the following contribu-
tions. First, we propose a new framework for single modal-
ity networks in dynamic hand gesture recognition task to
learn from multiple modalities. This framework results in a
Multimodal Training / Unimodal Testing (MTUT) scheme.
Second, we introduce the SSA loss to share the knowledge
of single modality networks. Third, we develop the focal
regularization parameter for avoiding negative transfer. In
our experiments, we show that learning with our method
improves the test time performance of unimodal networks.

2. Related Work

Dynamic Hand Gesture Recognition: Dynamic hand-
gesture recognition methods can be categorized on the ba-
sis of the video analysis approaches they use. Many hand-
gesture methods have been developed based on extracting
handcrafted features [48, 37, 42, 29]. These methods often
derive properties such as appearance, motion cues or body-
skeleton to perform gesture classiﬁcation. Recent advances
in action recognition methods and the introduction of vari-
ous large video datasets have made it possible to efﬁciently
classify unprocessed streams of visual data with spatiotem-
poral deep neural network architectures [9, 44, 38].

Various 3D-CNN-based hand gesture recognition meth-
ods have been introduced in the literature. A 3D-CNN-
based method was introduced in [24] that integrates nor-
malized depth and image gradient values to recognize dy-
namic hand gestures.
In [25], a 3D-CNN was proposed
that fuses streams of data from multiple sensors including
short-range radar, color and depth sensors for recognition.
A real-time method is proposed in [26] that simultane-
ously detects and classiﬁes gestures in videos. Camgoz et
al. [6] suggested a user-independent system based on the

spatiotemporal encoding of 3D-CNNs. Miao et al. pro-
posed ResC3D [23], a 3D-CNN architecture that combines
multimodal data and exploits an attention model. Further-
more, some CNN-based models also use recurrent architec-
tures to capture the temporal information [50, 8, 11, 52].

The main focus of this paper is to improve the perfor-
mance of hand gesture recognition methods that are built
upon 3D-CNNs. As will be described later, we assume that
our networks have 4-D feature maps that contain positional,
temporal and channel dimensions.
Transfer Learning: In transfer learning, ﬁrst, an agent is
independently trained on a source task, then another agent
uses the knowledge of the source agent by repurposing the
learned features or transferring them to improve its learning
on a target task [32, 43]. This technique has been shown
to be successful in many different types of applications
[5, 30, 19, 17, 49, 34]. While our method is closely related
to transfer learning, our learning agents (i.e. modality net-
works) are trained simultaneously, and the transfer occurs
both ways among the networks. Thus, it is better catego-
rized as a multi-task learning framework [10, 31], where
each network has three tasks of providing the knowledge to
the other networks, receiving the knowledge from them, and
ﬁnally classifying based on their dedicated input streams.
Multimodal Fusion:
the model
explicitly receives the data from multiple modalities and
learns to fuse them [28, 3, 33]. The fusion can be achieved
at feature level (i.e. early fusion), decision level (i.e. late
fusion) or intermediately [35, 2]. Once the model is trained,
during testing, it receives the data from multiple modali-
ties for classiﬁcation [35, 28]. While our method is re-
lated to multimodal fusion, it is not a fusion method. We do
not explicitly fuse the representations from different modal-
ities. Instead, we improve the representation learning of our
individual modality networks by leveraging the knowledge
from different modalities. During inference, we do not nec-
essarily need multiple modalities but rather each individual
modality network works independently to classify data.

In multimodal fusion,

3. Proposed Method

In our proposed model, per each modality, one 3D-CNN
is trained. Assuming that the stream of data is available
in M modalities, we have M classiﬁer networks with sim-
ilar architectures that classify based on their correspond-
ing input. During training, while each network is primar-
ily trained with the data from its corresponding modality,
we aim to improve the learning process by transferring the
knowledge among the networks of different modalities. The
transferred knowledge works as an extra supervision in ad-
dition to the class labels.

We share the knowledge of networks by aligning the se-
mantics of the deep representations they provide for the in-
puts. We do this by selecting an in-depth layer in the net-

1166

B
G
R

 
 
l
a
c
i
t
p
O

w
o
l
F

Time

Figure 2. An example of the RGB and optical ﬂow streams from the NVGesture Dataset [26]. As can be seen, while for the stationary
frames RGB provides better representation, optical ﬂow provides better representation for the dynamic frames.

works and enforcing them to share a common correlation
across the in-depth layers of all the modality networks. This
is done by minimizing the distance between their correla-
tion matrices in the training stage. In addition, we regular-
ize this loss by an adaptive parameter which ensures that
the loss is serving as a one-way gate that only transfers the
knowledge from more accurate modality networks to those
with less accuracy, and not the other way.

3.1. Spatiotemporal Semantic Alignment

In an ideal case, all the M classiﬁer modality networks
of our model should have the same understanding for an in-
put video. Even though they are coming in different modal-
ities, their inputs are representing the same phenomena. In
addition, since we assume that different modalities of the
input videos are aligned over the time and spatial positions,
in an ideal case the networks are expected to have the same
understanding and share semantics for spatial positions and
frames of the input videos across the different modalities.
However, in practice, some spatiotemporal features may be
better captured in one modality as compared to some other
modalities. For instance, in the stream of visible RGB and
optical ﬂow frames shown in Figure 2, it can be observed
that for static frames the RGB modality provides better in-
formation, while for dynamic frames optical ﬂow has less
noisy information. This results in different semantic under-
standing across the individual modality networks.

Thus, it is desirable to design a collaborative frame-
work that encourages the networks to learn a common un-
derstanding across different modalities for the same input
scene. This way, if in a training iteration one of the net-
works cannot learn a proper representation for a certain re-
gion or time in its feature maps, it can use the knowledge
from the other networks to improve its representations. An
iterative occurrence of this event during the training pro-
cess leads the networks to develop better representations in
a collaborative manner.

Let Fm, Fn ∈ RW ×H×T ×C be the in-depth feature
maps of two networks corresponding to the mth modal-
ity and nth modality, where W, H, T and C denote width,
heights, the number of frames and channels of the feature
maps, respectively. An in-depth feature map should contain

high-level content representations (semantics) [16]. The el-
ement f m
i,j,t ∈ RC in Fm represents the content for a certain
block of time and spatial position. It is reasonable to expect
the network m to develop correlated elements in Fm for
spatiotemporal blocks with similar contents and semantics
in the input. Thus, in an ideal case, the correlated elements
in Fm should have correlated counterpart elements in Fn.

The correlations between all the elements of Fm is ex-

pressed by its correlation matrix deﬁned as follows

corr(Fm) = ˆFm

ˆFT

m ∈ Rd×d,

(1)

i,j,t is normalized as ˆf m

i,j,tk is the magnitude of ˜f m
i,j,t =

where ˆFm ∈ Rd×C contains the normalized elements of
Fm in its rows, and d = W HT is the number of ele-
ments in Fm. The element f m
i,j,t =
˜f m
i,j,tk where k˜f m
i,j,t/k˜f m
i,j,t, and
i,j,t is calculated by ˆf m
˜f m
, where µi,j,t and
σi,j,t are respectively the sample mean and variance of the
element. We encourage the networks of the mth and the
nth modalities to share a common correlation matrix for the
feature maps of Fm and Fn so that they can have similar
understanding for the input video while being free to have
different styles. We do this by minimizing their spatiotem-
poral semantic alignment loss deﬁned as

−µi,j,t

f m
i,j,t

σi,j,t

ℓm,n
SSA = ρm,nkcorr(Fm) − corr(Fn)k2
F ,

(2)

where ρm,n is an adaptive regularization parameter deﬁned
in Section 3.2.

The spatiotemporal semantic alignment loss is closely
related to the covariance matrix alignment of the source and
target feature maps in domain adaptation methods [41, 40].
In addition, in some style transfer methods, the Gram ma-
trices of feature maps are aligned [15, 16]. Aligning the
Gram matrices, as opposed to our approach, discards the
positional information and aligns the styles. In contrast, our
method aligns the positional and temporal information and
discards the style.

3.2. Avoiding Negative Transfer

As discussed earlier, some modalities may provide weak
features as compared to the others.
In addition, even the
strong modalities may sometimes have corrupted or hard

1167

1.6

1.4

1.2

1

0.8

0.6

0.4

0.2

0

0

0.2

0.4

0.6

0.8

1

1.2

1.4

1.6

1.8

2

Figure 3. The value of focal regularization parameter (ρm,n) when
β = 2 for different values of classiﬁcation losses, ℓm
cls.
Proportional to the classiﬁcation performances of networks m and
n, this parameter scales the SSA loss to focus on transferring pos-
itive knowledge.

cls and ℓn

examples in their training set. In these cases, aligning the
spatiotemporal semantics of the representations from the
other networks to the semantics of a week network may lead
to a decrease in the performance. In such a case, a negative
transfer has occurred. It is desirable to develop a method
that produces positive knowledge transfer between the net-
works while avoiding negative transfer. Such a method in
our framework should enforce the networks to only mimic
the semantics of more accurate networks in learning the rep-
resentations for their hard examples. To address this issue,
we regularize our SSA loss with an adaptive regularization
parameter termed as focal regularization parameter. This
parameter is denoted as ρm,n in equation (2).

cls − ℓn

cls and ℓn

In order to measure the performance of the network
modalities, we can use their classiﬁcation loss values. As-
sume ℓm
cls are the classiﬁcation losses of the net-
works m and n that respectively correspond to the mth and
nth modalities. In addition, let ∆ℓ = ℓm
cls be their
difference. A positive ∆ℓ indicates that network n works
better than network m. Hence, in training the network m,
for large positive values of ∆ℓ, we want large values for
ρm,n to enforce the network to mimic the representations of
the network n. As ∆ℓ → 0+, network n becomes less an
assist. Hence, we aim to have smaller ρm,ns to focus more
on the classiﬁcation task. Finally, negative ∆ℓ indicates that
the network n does not have better representations than the
network m, and therefore ρm,n should be zero to avoid the
negative transfer. To address these properties, we deﬁne the
focal regularization parameter as follows

ρm,n = S(eβ∆ℓ − 1) = (cid:26) eβ∆ℓ − 1 ∆ℓ > 0

∆ℓ ≤ 0

0

(3)

where β is a positive focusing parameter, and S(·) is the
thresholding function at zero.

Figure 3 visualizes values of ρm,n for various ℓn

clss and
ℓm
cls ∈ [0, 2], when β = 2. As can be seen, the parameter
is dynamically scaled, where the scaling factor decays to

 

m
y
t
i
l
a
d
o
M

 

n
y
t
i
l
a
d
o
M

Network m

T

…

W

H

)
}

C Channels

in Fm

losses, `m
cls

cls.
m and

and `n

networks
Classification 

Loss 

SSA Loss 

, ρm,n
overvie

in Fn.
The
T

W

…

Network n

H

)
}

C Channels

Classification 

Loss 

and `n

cls.
m and

cls), but comparing with ℓn

Figure 4. Training network m with the knowledge of network n.
Training network m, is primarily done with respect to its classiﬁer
loss (ℓm
cls, ρm,n determines if involving
the SSA loss is necessary, and if yes, it regularizes this loss with re-
spect to the difference between the performances of two networks.
Note that in the test time, both networks perform independently.

zero as conﬁdence in the classiﬁcation performance of the
current network modality increases (measured using ∆ℓ).
This scaling factor can automatically down-weight the con-
tribution of the shared knowledge if the performance of the
modality network n is degraded (measured by ℓn

The focal regularization parameter ρm,n is used as the
regularization factor when aligning the correlation matrix
of Fm in mth modality network to the correlation matrix of
Fn in nth modality network.

cls).

3.3. Full Objective of the Modality Networks

Combining the aforementioned objectives, our full ob-
jective for training the network corresponding to the mth
modality in an M -modality task is as follows

ℓm = ℓm

cls + λ

M

Xn=1

ℓm,n
SSA

(4)

where λ is a positive regularization parameter. Note that for
n = m, ρm,n = 0 and thus ℓm,n

SSA = 0.

Figure 4 shows an overview of how the representations
for the nth modality affects on learning the representation in
the mth modality. Since ρm,n is differentiable, the training
can be done in an end-to-end manner.

Our model encourages the networks to improve their rep-
resentation learning in the training stage. During testing,
each network performs separately. Thus, once the networks
are trained, one can use an individual modality network to
acquire efﬁcient recognition. However, it is worth men-
tioning that with our framework, applying a decision level
modality fusion in the test stage is also possible. In fact,
our experiments show that the proposed method not only
improves the performance of unimodal networks, but it can
also improve the fusion performance.

1168

B
G
R

h
t
p
e
D

time

(a)

B
G
R

h
t
p
e
D

 
l
a
c
i
t
p
O

w
o
l
F

time

time

(b)

B
G
R

h
t
p
e
D

time

(c)

Figure 5. Sample sequences from different modalities of used datasets. (a) VIVA hand gesture dataset [29]. (b) NVGesture dataset [26].
(c) EgoGesture [8, 51]. As can be seen, the modalities in VIVA and EgoGesture datasets are well-aligned, while the depth map is not quite
aligned with RGB and Optical ﬂow maps in NVGesture.

4. Experimental Results

In this section, we evaluate our method against state-of-
the-art dynamic hand gesture methods. We conduct our ex-
periments on three publicly available multimodal dynamic
hand gesture datasets. The following datasets are used in
our experiments.

• VIVA hand gestures dataset [29] is a multimodal dy-
namic hand gesture dataset speciﬁcally designed with
difﬁcult settings of cluttered background, volatile illu-
mination, and frequent occlusion for studying natural
human activities in real-world driving settings. This
dataset was captured using a Microsoft Kinect device,
and contains 885 visible RGB and depth video se-
quences (RGB-D) of 19 hand gesture classes, collected
from 8 subjects.

• EgoGesture dataset [8, 51] is a large multimodal hand
gesture dataset collected for the task of egocentric ges-
ture recognition. This dataset contains 24,161 hand
gesture clips of 83 classes of gestures, performed by
50 subjects. Videos in this dataset include both static
and dynamic gestures captured with an Intel RealSense
SR300 device in RGB-D modalities across multiple in-
door and outdoor scenes.

• NVGestures dataset [26] has been captured with mul-
tiple sensors and from multiple viewpoints for study-
ing human-computer interfaces. It contains 1532 dy-
namic hand gestures recorded from 20 subjects inside
a car simulator with artiﬁcial lighting conditions. This
dataset includes 25 classes of hand gestures. The ges-
tures were recorded with SoftKinetic DS325 device
as the RGB-D sensor and DUO-3D for the infrared
streams. In addition, the optical ﬂow and infrared dis-
parity map modalities can be calculated from the RGB
and infrared streams, respectively. We use RGB, depth
and optical ﬂow modalities in our experiments. Note
that IR streams in this dataset do not share the same
view with RGB, depth and optical ﬂow modalities.
The optical ﬂow is calculated using the method pre-
sented in [14].

Figure 5 (a), (b), and (c) show sample frames from the
different modalities of these datasets that are used in our

experiments. Note that the RGB and depth modalities are
well-aligned in the VIVA and EgoGesture datasets, but are
not completely aligned in the NVGestures dataset.

For all the datasets, we compare our method against two
state-of-the-art action recognition networks, I3D [9] and
C3D [44], as well as state-of-the-art dynamic hand gesture
recognition methods that were reported on the used datasets.
In the tables, we report the results of our method as “Multi-
modal Training Unimodal Testing” (MTUT).

Implementation Details: In the design of our method, we
adopt the architecture of I3D network as the backbone net-
work of our modality networks, and employ its suggested
implementation details [9]. This network is an inﬂated ver-
sion of Inception-V1 [18], which contains several 3D con-
volutional layers followed with 3D max-pooling layers and
inﬂated Inception-V1 submodules. The detailed architec-
ture can be found in [9]. We select the output of the last in-
ﬂated Inception submodule, “Mixed 5c”, as the in-depth
feature map in our modality networks for applying the SSA
loss (2). In all the experiments λ is set to 50 × 10−3, and
β = 2. The threshold function in the focal regularization
parameter is implemented by a ReLu layer. For all the ex-
periments with our method and I3D benchmarks, unless
otherwise stated, we start with the publicly available Ima-
geNet [12] + Kinetics [20] pre-trained networks.

We set the momentum to 0.9, and optimize the objective
function with the standard SGD optimizer. We start with
the base learning rate of 10−2 with a 10× reduction when
the loss is saturated. We use a batch size of 6 containing
64-frames snippets in the training stage. The models were
implemented in Tensor-Flow 1.9 [1]. For our method, we
start with a stage of pretraining with only applying the clas-
siﬁcation losses on the modality networks for 60 epochs,
and then continue training with the SSA loss for another 15
epochs.

We employ the following spacial and temporal data aug-
mentations during the training stage. For special augmen-
tation, videos are resized to have the smaller video size of
256 pixels, and then randomly cropped with a 224 × 224
patch. In addition, the resulting video is randomly but con-
sistently ﬂipped horizontally. For temporal augmentation,

1169

Method
HOG+HOG2 [29]
CNN:LRN [24]
C3D [44]
I3D [9]
MTUT (ours)

Testing modality
RGB Depth
58.6
52.3
65.0
57.0
71.26
68.32
74.46
78.25
81.33
81.31

Table 1. 8-fold cross-subject average accuracies of different hand
gesture methods on the VIVA hand gesture dataset [29]. The top
performer is denoted by boldface.

64 consecutive frames are picked randomly from the videos.
Shorter videos are randomly padded with zero frames on
both sides to obtain 64 frames. During testing, we use
224 × 224 center crops, apply the models convolutionally
over the full video, and average predictions.

Note that we follow the above mentioned implementa-
tion details identically for the experiments with both the I3D
method [9], and our method. The only difference between
the I3D method and our MTUT is in their learning objec-
tive. In our case, it consists of the introduced constraints as
well.

4.1. VIVA Hand Gestures Dataset

In this set of experiments, we compare our method
on the VIVA dataset against a hand-crafted approach
(HOG+HOG2 [29]),
a recurrent CNN-based method
(CNN:LRN [24]), a C3D [44] model which were pre-
trained on Sports-1M dataset [19] as well as the I3D method
that currently holds the best results in action recognition [9].
All the results are reported by averaging the classiﬁcation
accuracies over 8-fold cross-subject cross-validation.

Table 1 shows the performance of the dynamic hand ges-
ture methods tested on the visible and depth modalities of
the VIVA dataset. As can be seen from this table, the I3D
network performs signiﬁcantly better than HOG+HOG2
and CNN:LRN. This is in part due to the knowledge that
I3D contains from its pretraining on ImageNet and Kine-
matic datasets. Nonetheless, we observe that our method
that shares the same architecture and settings with the I3D
networks and only differs in the learning procedure has sig-
niﬁcantly improved the I3D method by a 3.08% boost in the
performance of RGB’s network and 6.85% improvement on
the performance of the depth’s network. This experiment
shows that our method is able to integrate the complemen-
tary information between two different modalities to learn
efﬁcient representations that can improve their individual
performances.

4.2. EgoGesture Dataset

We assess the performance of our method along with
various hand gesture recognition methods published on the

Method
VGG16 [39]
VGG16 + LSTM [13]
C3D [44]
C3D+LSTM+RSTTM [8]
I3D [9]
MTUT (ours)

Testing modality
RGB Depth
62.3
62.5
77.7
74.7
86.4
88.1
90.6
89.3
89.47
90.33
92.48
91.96

Table 2. Accuracies of different hand gesture methods on the
EgoGesture dataset [8]. The top performer is denoted by boldface.

large-scale hand gesture dataset, EgoGesture [8]. Table 2
compares unimodal test accuracies of different hand ges-
ture methods. VGG16 [39] is a frame-based recognition
method, and VGG16+LSTM [13] combines this method
with a recurrent architecture to leverage the temporal infor-
mation as well. As can be seen, the 3D-CNN-based meth-
ods, C3D, C3D+LSTM+RSTMM [8], and I3D, outperform
the VGG16-based methods. However, among the 3D-CNN-
based methods, our method outperforms the top performers
in the RGB domain by 2.15% and in the Depth domain by
1.09%.

Depth SSA

Depth SSA

Depth SSA

B
G
R

h
t
p
e
D

1

2

3

4

5

6

7

1

2

3

4

5

6

7

2

4

6

RGB SSA

1

2

3

4

5

6

7

1

2

3

4

5

6

7

7

Depth SSA

1

2

3

4

5

6

7

7

1

2

3

4

5

6

7

2

4

RGB SSA

6

2

time

4

6

2

4

6

RGB SSA

RGB SSA

1

2

3

4

5

6

7

1

2

3

4

5

6

7

7

RGB I3D

2

4

6

Depth I3D

7

RGB I3D

RGB I3D

RGB I3D

B
G
R

h
t
p
e
D

1

2

3

4

5

6

7

1

2

3

4

5

6

7

2

4

6

Depth I3D

1

2

3

4

5

6

7

1

2

3

4

5

6

7

1

2

3

4

5

6

7

2

4

6

Depth I3D

2

time

4

6

Depth I3D

1

2

3

4

5

6

7

1

2

3

4

5

6

7

1

2

3

4

5

6

7

2

4

6

2

4

6

2

4

6

2

4

6

2

4

6

2

4

6

2

4

6

2

4

6

(a) MTUT (ours)

(b) I3D

Figure 6. Visualization of the feature maps corresponding to the
layer “Mixed 5c” in different networks for a sample input from
EgoGesture dataset. These ﬁgures show the sequence of average
feature maps (over 1024 channels) in (a) the RGB and depth net-
works trained with the I3D method. (b) the RGB and depth net-
works trained with our method. Intensity displays the magnitude.

In Figure 6, we visualize a set of feature maps from
the RGB and depth networks trained with the I3D and our
method. We feed a given input from the EgoGesture dataset
to different networks and calculate the average of feature
maps over the channels in the layer “Mixed 5c”. We dis-
play the resulting sequence in four 7 × 7 blocks. Here the
temporal dimension is four and the spatial content is 7 × 7.
Layer “Mixed 5c” is the layer in the I3D architecture in
which we apply the SSA loss to. We observe that the net-
works trained with our model have learned to detect sim-
ilar structures for the given input (Figure 6 (a)). On the
other hand, the networks trained with the I3D model are not
bounded to develop similar structures. Thus, even though
the input of the two modalities represent the same content,
the feature maps may detect different structures (Figure 6
(b)).

1170

(a)

(b)

Figure 7. The confusion matrices obtained by comparing the
grand-truth labels and the predicted labels from the RGB network
trained on the NVGesture dataset by (a) I3D [9] model, and (b)
our model. Best seen on the computer, in color and zoomed in.

4.3. NVGesture Dataset

In order to test our method on tasks with more than two
modalities, in this section, we report the classiﬁcation re-
sults on the RGB, depth and optical ﬂow modalities of the
NVGesture dataset [26]. The RGB and optical ﬂow modali-
ties are well-aligned in this dataset, however, the depth map
includes a larger ﬁeld of view (see Figure 5 (b)).

Table 3 tabulates the results of our method in comparison
with the recent state-of-the-art methods: HOG+HOG2, im-
proved dense trajectories (iDT) [46], R3DCNN [26], two-
stream CNNs [38], and C3D as well as human labeling ac-
curacy. The iDT [46] method is often recognized as the best
performing hand-crafted method [45]. However, we ob-
serve that similar to the previous experiments the 3D-CNN-
based methods outperform the other hand gesture recogni-
tion methods, and among them, our method provides the top
performance in all the modalities. This table conﬁrms that
our method can improve the unimodal test performance by
leveraging the knowledge from multiple modalities in the
training stage. This is despite the fact that the depth map
in this dataset is not completely aligned with the RGB and
optical ﬂow maps.

Figure 7 evaluates the coherence between the predicted
labels and ground-truths in our method and compares it with
I3D for the RGB modality of the NVGesture dataset. This
coherence is calculated by their confusion matrices. We ob-
serve that our method has less confusion between the input
classes and provides generally a more diagonalized confu-
sion matrix. This improvement is better observed in the ﬁrst
six classes.

4.4. Effect of Unimodal Improvements on Multi 

modal Fusion

As previously discussed, our method is designed for em-
bedding knowledge from multiple modalities in unimodal
networks for improving their unimodal test performance. In
this section, we examine if the enhanced unimodal networks
trained by our approach can also improve the accuracy of a

Method
HOG+HOG2 [29]
Two Stream CNNs [38]
C3D [44]
iDT [46]
R3DCNN [26]
I3D [9]
MTUT (ours)

Testing modality

-

-

36.3

68.0

RGB Depth Opt. Flow
24.5
54.6
69.3
59.1
74.1
78.42
81.33

76.8
77.8
83.19
83.40

80.3
82.28
84.85

78.8

-

-

Human labeling accuracy:

88.4

Table 3. Accuracies of different unimodal hand gesture methods
on the NVGesture dataset [26]. The top performer is denoted by
boldface.

decision level fusion that is calculated from the average of
unimodal predictions. The decision level fusion of differ-
ent modality streams is currently the most common fusion
technique in the top performer dynamic action recognition
methods [9, 44, 38].

In Table 4 and Table 5 we compare the multimodal-
fusion versions of our method (MTUTF) to state-of-the-art
multimodal hand gesture recognition systems tested on the
VIVA hand gesture and EgoGesture datasets, respectively.
As can be seen, our method shows the top multimodal fu-
sion performance on both datasets. These tables show that
if multiple modalities are available at the test time, the im-
proved performance of unimodal networks gained by train-
ing with our model can also result in an improved multi-
modal fusion performance in the test time.

Similarity, in Table 6 we report the multimodal fusion
results on the NVGesture dataset. Note that since this
dataset includes three modalities, based on the modalities
we include in the training stage, we report multiple ver-
sions of our method. We report the version of our method
that includes all three modalities in the training stage as
MTUTF
all, and the versions that only involve (RGB+Depth)
and (RGB+Optical-Flow) in their training as MTUTF
RGB-D
and MTUTF
RGB-OF, respectively. While all versions of our
method outperform the other multimodal fusion methods in
Table 6, the performances of MTUTF
all in
the fusion of RGB+Depth is worth highlighting. MTUTF
all
in this experiment has also been trained on the absent
modality, the optical ﬂow, while MTUTF
RGB-D has been only
trained on the RGB and Depth modalities. We observe that
MTUTF
all has successfully integrated the knowledge of the
absent modality and provided a better performance at the
test time.

RGB-D and MTUTF

4.5. Analysis of the Network

To understand the effects of some of our model choices,
we explore the performance of some variations of our model
on the VIVA dataset. In particular, we compare our method
with and without the focal regularization parameter and the

1171

Method
HOG+HOG2 [29]
CNN:LRN [24]
CNN:LRN:HRN [24]
C3D [44]
I3D [9]
MTUTF (ours)

Fused modalities Accuracy

RGB+Depth
RGB+Depth
RGB+Depth
RGB+Depth
RGB+Depth
RGB+Depth

64.5
74.4
77.5
77.4
83.10
86.08

Table 4. Accuracies of different multimodal fusion-based hand
gesture methods on the VIVA dataset [29]. The top performer is
denoted by boldface.

Method
VGG16 [39]
VGG16 + LSTM [13]
C3D [44]
C3D+LSTM+RSTTM [8]
I3D [9]
MTUTF (ours)

Fused modalities Accuracy

RGB+Depth
RGB+Depth
RGB+Depth
RGB+Depth
RGB+Depth
RGB+Depth

66.5
81.4
89.7
92.2
92.78
93.87

Table 5. Accuracies of different multimodal fusion hand gesture
methods on the EgoGesture dataset [26]. The top performer is
denoted by boldface.

RGB-D (ours)
all (ours)

Method
HOG+HOG2 [29]
I3D [9]
MTUTF
MTUTF
Two Stream CNNs [38]
iDT [46]
I3D [9]
MTUTF
RGB-OF (ours)
MTUTF
all (ours)
R3DCNN [26]
I3D [9]
MTUTF

all (ours)

Human labeling accuracy:

Fused modalities

Accuracy

RGB+Depth
RGB+Depth
RGB+Depth
RGB+Depth

RGB+Opt. ﬂow
RGB+Opt. ﬂow
RGB+Opt. ﬂow
RGB+Opt. ﬂow
RGB+Opt. ﬂow

RGB+Depth+Opt. ﬂow
RGB+Depth+Opt. ﬂow
RGB+Depth+Opt. ﬂow

36.9
83.82
85.48
86.10
65.6
73.4
84.43
85.48
85.48
83.8
85.68
86.93

88.4

Table 6. Accuracies of different multimodal fusion hand gesture
methods on the NVGesture dataset [8]. The top performer is de-
noted by boldface.

SSA loss. Beside our I3D-based method, we analyze these
variations on a different backbone network, C3D [44] as
well. C3D is another recently proposed activity recognition
architecture. We name this method MTUTC3D. Besides,
we use C3D+SSA and I3D+SSA to refer to versions of our
method with C3D and I3D backbones that contain a vari-
ation of the SSA loss that does not have the focal regular-
ization parameter. For MTUTC3D and C3D+SSA, we apply
the SSA loss on feature maps of the last maxpooling layer
(“MaxPool3d 5” ).

To provide a fair comparison setting, we train these net-
works from scratch on the VIVA dataset, and report their
performances in Table 7. As can be seen, the top performer
is our I3D-based network with both SSA and focal regular-

Testing modality
RGB Depth
Method
55.65
C3D
53.05
54.52
C3D+SSA 53.73
56.56
58.71
MTUTC3D
67.30
65.72
I3D
66.96
65.83
I3D+SSA
68.43
71.26
MTUT

Table 7. Comparison of variations of MTUT with C3D and I3D
backbones trained from scratch.

ization parameter. Several interesting observations can be
made from the results in Table 7. As the table reveals, the
I3D-based methods generally perform better than the C3D-
based methods. This coincides with the previous reports [9].
In addition, C3D+SSA and I3D+SSA methods in the case of
RGB networks show improvements and in the case of depth
modality have comparable results as compared to their base
networks C3D and I3D, respectively. However, the top per-
formers in both modalities are the full version of our method
applied on these base networks. This clearly shows the im-
portance of our focal regularization parameter in avoiding
negative transfer when transferring the knowledge between
the modalities. Note that C3D, I3D and MTUT are trained
from scratch in this experiment, while in the Table 1 we re-
ported their performance on the networks trained with pre-
trained weights.

5. Conclusion

We presented a new framework to leverage the knowl-
edge of multiple modalities when training unimodal net-
works that can independently work at the test time infer-
ence with improved accuracy. Our model trains separate
3D-CNNs per available modalities, and shares their knowl-
edge by the introduced spatiotemporal semantic alignment
loss. We also regularized this loss with a focal regulariza-
tion parameter that ensures that only positive knowledge
is transferred between the modality networks, and nega-
tive transfer is avoided. Our experiments conﬁrmed that
our method can provide remarkable improvements to the
unimodal networks at the test time. We also showed that
the enhanced unimodal networks that are trained with our
method can contribute to an improved multimodal fusion
performance at test time as well.

The incorporation of our method for multimodal learning

in other applications is a topic of further research.

References

[1] Mart´ın Abadi, Paul Barham, Jianmin Chen, Zhifeng Chen,
Andy Davis, Jeffrey Dean, Matthieu Devin, Sanjay Ghe-
mawat, Geoffrey Irving, Michael Isard, et al. Tensorﬂow:
a system for large-scale machine learning. In Operating Sys-

1172

tems Design and Implementation, volume 16, pages 265–
283, 2016.

[2] Mahdi Abavisani and Vishal M Patel. Deep multimodal sub-
space clustering networks. IEEE Journal of Selected Topics
in Signal Processing, 12(6):1601–1614, 2018.

[3] Mahdi Abavisani and Vishal M Patel. Multimodal sparse and
low-rank subspace clustering. Information Fusion, 39:168–
177, 2018.

[4] Behnam Babagholami-Mohamadabadi, Seyed Mahdi Roost-
aiyan, Ali Zarghami, and Mahdieh Soleymani Baghshah.
Multi-modal distance metric learning: Abayesian non-
parametric approach. In European Conference on Computer
Vision, pages 63–77. Springer, 2014.

[5] Yoshua Bengio. Deep learning of representations for un-
supervised and transfer learning.
In Proceedings of ICML
Workshop on Unsupervised and Transfer Learning, pages
17–36, 2012.

[6] Necati Cihan Camgoz, Simon Hadﬁeld, Oscar Koller, and
Richard Bowden. Using convolutional 3d neural networks
for user-independent continuous gesture recognition. In Pat-
tern Recognition (ICPR), 2016 23rd International Confer-
ence on, pages 49–54. IEEE, 2016.

[7] Necati Cihan Camgoz, Simon Hadﬁeld, Oscar Koller, and
Richard Bowden. Subunets: End-to-end hand shape and
continuous sign language recognition.
In Computer Vi-
sion (ICCV), 2017 IEEE International Conference on, pages
3075–3084. IEEE, 2017.

[8] Congqi Cao, Yifan Zhang, Yi Wu, Hanqing Lu, and Jian
Cheng. Egocentric gesture recognition using recurrent 3d
convolutional neural networks with spatiotemporal trans-
former modules.
In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, pages 3763–
3771, 2017.

[9] Joao Carreira and Andrew Zisserman. Quo vadis, action
recognition? a new model and the kinetics dataset. In Com-
puter Vision and Pattern Recognition (CVPR), 2017 IEEE
Conference on, pages 4724–4733. IEEE, 2017.

[10] Rich Caruana. Multitask learning. Machine learning,

28(1):41–75, 1997.

[11] Runpeng Cui, Hu Liu, and Changshui Zhang. Recurrent
convolutional neural networks for continuous sign language
recognition by staged optimization. In IEEE Conference on
Computer Vision and Pattern Recognition (CVPR), 2017.

[12] Jia Deng, Wei Dong, Richard Socher, Li-Jia Li, Kai Li,
and Li Fei-Fei.
Imagenet: A large-scale hierarchical im-
age database. In Computer Vision and Pattern Recognition,
2009. CVPR 2009. IEEE Conference on, pages 248–255.
Ieee, 2009.

[13] Jeffrey Donahue, Lisa Anne Hendricks, Sergio Guadarrama,
Marcus Rohrbach, Subhashini Venugopalan, Kate Saenko,
and Trevor Darrell. Long-term recurrent convolutional net-
works for visual recognition and description.
In Proceed-
ings of the IEEE conference on computer vision and pattern
recognition, pages 2625–2634, 2015.

[14] Gunnar Farneb¨ack. Two-frame motion estimation based on
polynomial expansion. In Scandinavian conference on Im-
age analysis, pages 363–370. Springer, 2003.

[15] Leon Gatys, Alexander S Ecker, and Matthias Bethge. Tex-
ture synthesis using convolutional neural networks. In Ad-
vances in Neural Information Processing Systems, pages
262–270, 2015.

[16] Leon A Gatys, Alexander S Ecker, and Matthias Bethge. Im-
age style transfer using convolutional neural networks.
In
Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, pages 2414–2423, 2016.

[17] Jui-Ting Huang, Jinyu Li, Dong Yu, Li Deng, and Yifan
Gong. Cross-language knowledge transfer using multilin-
gual deep neural network with shared hidden layers.
In
Acoustics, Speech and Signal Processing (ICASSP), 2013
IEEE International Conference on, pages 7304–7308. IEEE,
2013.

[18] Sergey Ioffe and Christian Szegedy. Batch normalization:
Accelerating deep network training by reducing internal co-
variate shift. In International Conference on Machine Learn-
ing, pages 448–456, 2015.

[19] Andrej Karpathy, George Toderici, Sanketh Shetty, Thomas
Leung, Rahul Sukthankar, and Li Fei-Fei. Large-scale video
classiﬁcation with convolutional neural networks.
In Pro-
ceedings of the IEEE conference on Computer Vision and
Pattern Recognition, pages 1725–1732, 2014.

[20] Will Kay, Joao Carreira, Karen Simonyan, Brian Zhang,
Chloe Hillier, Sudheendra Vijayanarasimhan, Fabio Viola,
Tim Green, Trevor Back, Paul Natsev, et al. The kinetics hu-
man action video dataset. arXiv preprint arXiv:1705.06950,
2017.

[21] Chenyang Li, Xin Zhang, and Lianwen Jin. Lpsnet: A novel
log path signature feature based hand gesture recognition
framework. In Computer Vision Workshop (ICCVW), 2017
IEEE International Conference on, pages 631–639. IEEE,
2017.

[22] Zhihan Lv, Alaa Halawani, Shengzhong Feng, Shaﬁq
Ur R´ehman, and Haibo Li. Touch-less interactive augmented
reality game on vision-based wearable device. Personal and
Ubiquitous Computing, 19(3-4):551–567, 2015.

[23] Qiguang Miao, Yunan Li, Wanli Ouyang, Zhenxin Ma, Xin
Xu, Weikang Shi, Xiaochun Cao, Zhipeng Liu, Xiujuan
Chai, Zhuang Liu, et al. Multimodal gesture recognition
based on the resc3d network.
In ICCV Workshops, pages
3047–3055, 2017.

[24] Pavlo Molchanov, Shalini Gupta, Kihwan Kim, and Jan
Kautz. Hand gesture recognition with 3d convolutional neu-
ral networks. In Proceedings of the IEEE conference on com-
puter vision and pattern recognition workshops, pages 1–7,
2015.

[25] Pavlo Molchanov, Shalini Gupta, Kihwan Kim, and Kari
Pulli. Multi-sensor system for driver’s hand-gesture recogni-
tion. In Automatic Face and Gesture Recognition (FG), 2015
11th IEEE International Conference and Workshops on, vol-
ume 1, pages 1–8. IEEE, 2015.

[26] Pavlo Molchanov, Xiaodong Yang, Shalini Gupta, Kihwan
Kim, Stephen Tyree, and Jan Kautz. Online detection and
classiﬁcation of dynamic hand gestures with recurrent 3d
convolutional neural network. In Proceedings of the IEEE
Conference on Computer Vision and Pattern Recognition,
pages 4207–4215, 2016.

1173

[27] Natalia Neverova, Christian Wolf, Graham W Taylor, and
Florian Nebout. Multi-scale deep learning for gesture detec-
tion and localization. In Workshop at the European confer-
ence on computer vision, pages 474–490. Springer, 2014.

[28] Jiquan Ngiam, Aditya Khosla, Mingyu Kim, Juhan Nam,
Honglak Lee, and Andrew Y Ng. Multimodal deep learn-
ing. In Proceedings of the 28th international conference on
machine learning (ICML-11), pages 689–696, 2011.

[29] Eshed Ohn-Bar and Mohan Manubhai Trivedi. Hand gesture
recognition in real time for automotive interfaces: A multi-
modal vision-based approach and evaluations. IEEE trans-
actions on intelligent transportation systems, 15(6):2368–
2377, 2014.

[30] Maxime Oquab, Leon Bottou, Ivan Laptev, and Josef Sivic.
Learning and transferring mid-level image representations
using convolutional neural networks. In Proceedings of the
IEEE conference on computer vision and pattern recogni-
tion, pages 1717–1724, 2014.

[31] Poojan Oza and Vishal M Patel. Deep cnn-based multi-
arXiv preprint

task learning for open-set recognition.
arXiv:1903.03161, 2019.

[32] Sinno Jialin Pan, Qiang Yang, et al. A survey on transfer
learning. IEEE Transactions on knowledge and data engi-
neering, 22(10):1345–1359, 2010.

[33] Pramuditha Perera, Mahdi Abavisani, and Vishal M Patel.
In2i: Unsupervised multi-image-to-image translation using
generative adversarial networks. In 2018 24th International
Conference on Pattern Recognition (ICPR), pages 140–146.
IEEE, 2018.

[34] Pramuditha Perera and Vishal Patel. Deep transfer learning
for multiple class novelty detection. In The IEEE Conference
on Computer Vision and Pattern Recognition (CVPR), June
2019.

[35] Dhanesh Ramachandram and Graham W Taylor. Deep mul-
timodal learning: A survey on recent advances and trends.
IEEE Signal Processing Magazine, 34(6):96–108, 2017.

[36] Siddharth S Rautaray and Anupam Agrawal. Vision based
hand gesture recognition for human computer interaction: a
survey. Artiﬁcial Intelligence Review, 43(1):1–54, 2015.

[37] Xiaohui Shen, Gang Hua, Lance Williams, and Ying Wu.
Dynamic hand gesture recognition: An exemplar-based ap-
proach from motion divergence ﬁelds.
Image and Vision
Computing, 30(3):227–235, 2012.

[38] Karen Simonyan and Andrew Zisserman. Two-stream con-
volutional networks for action recognition in videos. In Ad-
vances in neural information processing systems, pages 568–
576, 2014.

[39] Karen Simonyan and Andrew Zisserman. Very deep convo-
lutional networks for large-scale image recognition. arXiv
preprint arXiv:1409.1556, 2014.

[40] Baochen Sun, Jiashi Feng, and Kate Saenko. Correlation
alignment for unsupervised domain adaptation. In Domain
Adaptation in Computer Vision Applications, pages 153–
171. Springer, 2017.

[41] Baochen Sun and Kate Saenko. Deep coral: Correlation
alignment for deep domain adaptation.
In European Con-
ference on Computer Vision, pages 443–450. Springer, 2016.

[42] Amir Tamrakar, Saad Ali, Qian Yu, Jingen Liu, Omar Javed,
Ajay Divakaran, Hui Cheng, and Harpreet Sawhney. Evalua-
tion of low-level features and their combinations for complex
event detection in open source videos. In Computer Vision
and Pattern Recognition (CVPR), 2012 IEEE Conference on,
pages 3681–3688. IEEE, 2012.

[43] Lisa Torrey and Jude Shavlik. Transfer learning. In Hand-
book of Research on Machine Learning Applications and
Trends: Algorithms, Methods, and Techniques, pages 242–
264. IGI Global, 2010.

[44] Du Tran, Lubomir Bourdev, Rob Fergus, Lorenzo Torresani,
and Manohar Paluri. Learning spatiotemporal features with
3d convolutional networks. In Proceedings of the IEEE inter-
national conference on computer vision, pages 4489–4497,
2015.

[45] Du Tran, Heng Wang, Lorenzo Torresani, Jamie Ray, Yann
LeCun, and Manohar Paluri. A closer look at spatiotemporal
convolutions for action recognition.
In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 6450–6459, 2018.

[46] Heng Wang, Dan Oneata, Jakob Verbeek, and Cordelia
Schmid. A robust and efﬁcient video representation for ac-
tion recognition. International Journal of Computer Vision,
119(3):219–238, 2016.

[47] Huogen Wang, Pichao Wang, Zhanjie Song, and Wanqing
Li. Large-scale multimodal gesture recognition using hetero-
geneous networks. In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, pages 3129–
3137, 2017.

[48] Jiang Wang, Zicheng Liu, Jan Chorowski, Zhuoyuan Chen,
and Ying Wu. Robust 3d action recognition with random
occupancy patterns. In Computer vision–ECCV 2012, pages
872–885. Springer, 2012.

[49] Jason Yosinski, Jeff Clune, Yoshua Bengio, and Hod Lipson.
How transferable are features in deep neural networks? In
Advances in neural information processing systems, pages
3320–3328, 2014.

[50] Liang Zhang, Guangming Zhu, Peiyi Shen, Juan Song,
Syed Afaq Shah, and Mohammed Bennamoun. Learning
spatiotemporal features using 3dcnn and convolutional lstm
for gesture recognition.
In Proceedings of the IEEE Con-
ference on Computer Vision and Pattern Recognition, pages
3120–3128, 2017.

[51] Yifan Zhang, Congqi Cao, Jian Cheng, and Hanqing Lu.
Egogesture: A new dataset and benchmark for egocentric
hand gesture recognition.
IEEE Transactions on Multime-
dia, 20(5):1038–1050, 2018.

[52] Guangming Zhu, Liang Zhang, Peiyi Shen, and Juan Song.
Multimodal gesture recognition using 3-d convolution and
convolutional lstm. IEEE Access, 5:4517–4524, 2017.

1174

