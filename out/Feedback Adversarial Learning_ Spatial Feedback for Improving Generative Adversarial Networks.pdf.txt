Feedback Adversarial Learning:

Spatial Feedback for Improving Generative Adversarial Networks

Minyoung Huh∗

UC Berkeley

Shao-Hua Sun∗

University of Southern California

Ning Zhang

Vaitl Inc.

minyoungg@berkeley.edu

shaohuas@usc.edu

ning@vaitl.ai

Input

t=1

t=2

t=3

Image-to-image Translation

s
e
p
a
c
s
y
t
i

C

h
t
p
e
D
U
Y
N

-

A
b
e
e
C

l

Image Generation

Voxel Generation

t=1

t=2

t=3

t=1

t=2

t=3

t
e
N
e
p
a
h
S

Figure 1: Results using feedback adversarial learning on various generative adversarial learning tasks. Our model learns to
utilize the feedback signal from the discriminator and iteratively improve the generation quality with more generation steps.

Abstract

We propose feedback adversarial learning (FAL) frame-
work that can improve existing generative adversarial net-
works by leveraging spatial feedback from the discrimina-
tor. We formulate the generation task as a recurrent frame-
work, in which the discriminator’s feedback is integrated
into the feedforward path of the generation process. Specif-
ically, the generator conditions on the discriminator’s spa-
tial output response, and its previous generation to im-

∗Authors contributed equally.

prove generation quality over time – allowing the genera-
tor to attend and ﬁx its previous mistakes. To effectively
utilize the feedback, we propose an adaptive spatial trans-
form (AST) layer, which learns to spatially modulate feature
maps from its previous generation and the feedback sig-
nal from the discriminator. We demonstrate that one can
easily adapt our method to improve existing adversarial
learning frameworks on a wide range of tasks, including
image generation, image-to-image translation, and voxel
generation. The project website can be found at https:
//minyoungg.github.io/feedbackgan.

11476

1. Introduction

A masterpiece is not created in a day. Even with count-
less hours of training, an expert can still make a mistake and
learn how to improve. The key to success is an endless cy-
cle of feedback and revision between an artist and a critic,
where the artist can reﬁne its existing work together with
the critic’s feedback – something that is missing in the cur-
rent generative adversarial network (GAN) training frame-
works. In traditional GAN setting, the discriminator acts
as a critic, providing only gradient signals to the genera-
tor; however, the generator does not get the second chance
to look at its own generation along with the feedback from
the discriminator to improve upon. The generation task be-
comes notoriously difﬁcult with increasing data complexity
(e.g. image dimension, data variations). Therefore, to alle-
viate the difﬁculty of the generation task, we propose feed-
back adversarial learning (FAL) framework for integrating
the discriminator’s feedback in the feed-forward path of the
generation process, allowing the generator to iteratively im-
prove its generation.

A generative adversarial network consists of 2 networks:
a generator (G) and a discriminator (D), where the goal
of the generator G is to generate a sample ˆy from a latent
noise vector z ∈ Rzd sampled from a known distribution
(e.g. N (0, I)). These generated samples ˆy should be indis-
tinguishable to the discriminator from real samples y. Since
the introduction of GANs, there has been extensive interest
in improving generation quality. Due to the instability of
training GANs, different optimization methods [3, 19], nor-
malization [53], and advanced training techniques such as
progressive generation [28] have been proposed.

For all adversarial learning paradigms, the discrimina-
tor provides gradients as a learning signal for the generator
and is discarded during testing time. To successfully train
a model, the designer has to ﬁnd the right equilibrium be-
tween the discriminator being too powerful and being an in-
formative signal. Even in successfully trained models, the
discriminator easily outperforms the generator, an indica-
tion that there exists information in the discriminator that
the generator could still utilize. This motivates the idea of
allowing the generator to leverage additional information
from the discriminator during generation. As shown in Fig-
ure 2, the generator looks at the previous generation and
the discriminator’s response to drive the generation for the
next time step. In fact, the idea of using the feedback orig-
inates from well-established control theory, where one uses
the error signals to propagate adjustments for the input sig-
nal. Similarly, we demonstrate that using the discriminator
signal as an error propagation signal allows the generator
to attend to the regions that look unrealistic and iteratively
generate higher quality samples over time.

To effectively leverage the discriminator’s feedback, we
propose adaptive spatial transform (AST) module, which

allows the generator to spatially modulate input features
based on the feedback signal. We demonstrate the fea-
sibility and effectiveness of applying feedback adversarial
learning to several frameworks on a wide range of tasks, in-
cluding image generation, image-to-image translation, and
voxel generation, as well as provide qualitative and quanti-
tative results on various datasets. As shown in Figure 1, the
models trained with FAL learn to improve their generation
using the discriminator’s feedback. We extensively evaluate
the generated samples with a variety of metrics, including
FID, segmentation score, depth prediction, LPIPS, and clas-
siﬁcation accuracy.

2. Related Works

Generative adversarial networks Generative adversar-
ial networks [18] use a discriminator to model the data dis-
tribution, which acts as a loss function to provide the gen-
erator a learning signal to generate realistic samples. GANs
have continued to show impressive results in various ap-
plications such as image generation [46, 15, 63, 8], text to
image synthesis [47, 26], future frame prediction [40, 55],
image editing [67], novel view synthesis [52, 43], domain
adaptation [7, 51], 3D modeling [59, 27], video genera-
tion [66], video re-targeting [4], text generation [61, 20],
audio generation [16, 17, 22], etc.

Image generation Synthesizing images using convolu-
tional neural networks has been popularized by GANs but
the history goes far back. The community has explored
variational auto-encoders [29], auto-regressive models [1],
etc. More recently, [12] demonstrated that using perceptual-
loss and coarse-to-ﬁne generation can be used to synthesize
photo-realistic images without having a discriminator.

Image-to-image translation [25] demonstrated GANs
can also be applied on paired image-to-image translation.
This sparked the vision and graphics community to ap-
ply adversarial image translation on various tasks. With
the difﬁculty of collecting interesting paired data, many
works [68, 35, 60, 34, 6, 48] have proposed alternative
methods to translate images. This task is now known as
unpaired image-to-image translation — a task of learning
a mapping from two arbitrary domains without having any
paired images.

Optimization and training frameworks With the difﬁ-
culty that arises when training GANs, the community has
been trying to improve GANs through different methods
of optimization and normalization. Few to mention are
least-squares [37] and Wasserstein-distance loss [3] and its
follow-up work using gradient penalty [19]. Beyond op-
timization, many have also found that weight normaliza-
tion [53, 50] helps stabilize training and generate better re-
sults. Moreover, many training paradigms have been pro-
posed to stabilize training, where the use of coarse-to-ﬁne

21477

Discriminator Manifold

Fake

Real

Discriminator Manifold

Fake

t=1

t=2

t=3

Real

Figure 2: Feedback adversarial learning: On the left is a typical GAN setup, and on the right we have our feedback
adversarial learning setup. At each time step, the generator generates a single image. Our method uses the discriminator
output decision map and the previously generated image to drive the generation for the next time step. The discriminator
manifold is a visualization of the discriminator’s belief of whether a sample looks generated or real. The blue circle indicates
the generated image in the discriminator’s manifold. The trailing empty blue circles are previous generations and the curved
lines indicate the discriminator’s decision boundary. For the task of generating images from latent vector, input x is replaced
with latent code z.

and unrolled predictions [41, 64, 58, 28, 20, 24] have shown
promising results.

the following formulation, although the latent noise vector
z is often not used:

Feedback learning Leveraging feedback to iteratively
improve the performance has been explored on classiﬁca-
tion [62], object recognition [32], and human pose estima-
tion [9, 5].

In our approach, we propose a simple yet effective
method that uses the discriminator’s spatial output and the
previous generation as a signal for the generator to improve.
The output of the discriminator indicates which regions of
a sample look real or fake; hence, the generator can attend
to those unrealistic regions and improve them. Our method
can be applied to any existing architectures and optimiza-
tion methods to generate higher quality samples.

3. Generative Adversarial Networks

A generative adversarial network (GAN) consists of 2
networks: a generator G and a discriminator D. The goal of
the generator is to generate realistic samples from a noise
vector z, G : z → ˆy, such that the discriminator cannot
disambiguate a real sample y from a generated sample ˆy.
An unconditional GAN can be formulated as:

ˆy = G(z).

(1)

In conditional GANs, the generator conditions its gener-
ation on additional information x, G : (z, x) → ˆy, where x
is a conditional input such as an image (e.g. segmentation
map, depth map) or class information (e.g. ImageNet class,
face attributes); in the latter case the task is called class-
conditional image generation. When the input and the out-
put domains are images, this task is referred to as image-to-
image translation. In image-to-image translation, we have

ˆy = G(z, x).

(2)

The goal of the discriminator is to discriminate generated
samples from real samples. Hence, the objective function of
the generator is to maximize the log-likelihood of fooling
the discriminator with the generated samples. The overall
objective can be written as:

min

G

max

D

Ey∼qdata [log D(y)] + Ez∼pz [log(1 − D(G(z))], (3)

where qdata is the real data distribution and pz is the sam-
ple distribution such as the normal distribution N (0, I). For
the task of image-to-image translation, the sample distribu-
tion comes from x ∼ px and an additional reconstruction
loss on ˆy is incurred on the generator: Lrec = kˆy − ykp for
some norm p. Other works have explored using perceptual
loss or cycle-consistency loss instead.

4. Method

In a standard adversarial learning setting, the generator
only gets a single attempt to generate the image, and the dis-
criminator only provides gradients as a learning signal for
the generator. Instead, we propose a feedback adversarial
learning (FAL) framework which leverages the discrimina-
tor’s spatial output as feedback to allow the generator to
locally attend to and improve its previous generation. The
proposed method can be easily adapted to any GAN frame-
work on a variety of tasks. We introduce our method in
the following sections. First, we decompose the generation
procedure as a two-stage process, in Section 4.1. In Sec-
tion 4.2, we deﬁne the formulation of feedback adversarial

31478

learning. In Section 4.3, we propose a method that allows
the generator to effectively utilize the spatial feedback in-
formation.

ht−1

4.1. Reformulation

To simplify describing the idea of feedback learning in
GANs, we ﬁrst reformulate a generator G as a 2-part model:
an encoder Ge which encodes input information and a de-
coder Gd which then decodes the intermediate encoding
into the target domain. This is well demonstrated in condi-
tional image-to-image translation GANs where an encoder
network Ge maps information x (e.g. image) into some en-
coded features h, Ge : x → h, and a decoder Gd maps the
intermediate representation h back into the image space y,
Gd : h → y. Note that the choice of where to re-deﬁne the
generator as an encoder and decoder can be chosen arbitrar-
ily. We can write the generation process as:

ˆy = G(x) = Gd(Ge(x)),

(4)

γ ◦ ht−1 + β

ht

ˆyt−1

rt−1

Fe

Fd

Concatenate

γ, β

Figure 3: Adaptive Spatial Transform: We propose to uti-
lize feedback information by predicting afﬁne parameters γ
and β to locally modulate the input feature ht1 . The pre-
viously generated image ˆyt−1 and the discriminator’s re-
sponse rt−1 are passed through the feedback encoder Fe,
and is concatenated with ht−1 to predict afﬁne parameters γ
and β using the feedback decoder Fd. The predicted afﬁne
parameters have the same dimension as h and is used to
scale and bias the existing features per-element.

where ˆy denotes an output image. For the case of un-
conditional GANs, this can be described as ˆy = G(z) =
Gd(Ge(z)).

F , explained in the next section, to inject feedback infor-
mation into the input encoding ht. We now redeﬁne the
generator Equation 4 for time step t as:

4.2. Feedback Adversarial Learning

We now deﬁne our feedback adversarial learning frame-
work, where the generator aims to iteratively improve its
generations by using discriminator’s feedback information.
To enable the generator to attend to speciﬁc regions of its
generation, we utilize local discriminators [30, 25] which
output a response map instead of a scalar, where each pixel
corresponds to the decision made from a set of input pix-
els in a local receptive ﬁeld. We formulate the generation
task as a recurrent process, where the generator is trained to
ﬁx the mistakes of its previous generation by leveraging the
discriminator’s response map and produce a better image.

We denote the generated image for some arbitrary time
step t as ˆyt and the encoding at time step t as ht. Then, the
discriminator response map of the generated image at time
step t can be written as:

rt = D(ˆyt),

(5)

where rt ∈ RH/c×W/c is the output of the discrimina-
tor with dimension scaling constant c corresponding to the
choice of the discriminator architecture. Here, H and W
indicate the original image height and width. This can be
generalized to other data domains such as voxels, where
rt ∈ RH/c×W/c×Dep/c with Dep representing depth. This
response map is indicative of whether certain regions in the
image look fake or real to the discriminator.

To leverage the previous image generation ˆyt−1 and its
discriminator response rt−1, we design a feedback network

yt = Gd(F (ht−1, yt−1, rt−1)) = Gd(ht).

(6)

At time step t = 1, the input embedding Ge(x) or Ge(z)
is computed once to initialize h0, while y0 and r0 are ini-
tialized as zero tensors. To train both the generator and the
discriminator, we compute the same loss in Equation 3 at
every time step and compute the mean across all the time
steps.

4.3. Adaptive Spatial Transform

We propose Adaptive Spatial Transform (AST) to effec-
tively utilize the information from the previous time step to
modulate the encoded features h. Our method is inspired
by [21, 23, 45, 56], which uses external information to pre-
dict scalar afﬁne parameters γ and β per channel to linearly
transform the features:

ˆh = γ · h + β,

(7)

where γ, β ∈ RC with C indicating the number of chan-
nels. These methods result in a global transformation on
the whole feature map. Instead, to allow the generator to
modulate features locally, we propose adaptive spatial trans-
form layer, which spatially scales and bias the individual el-
ements as shown in Figure 3. This allows for a controlled
spatial transformation. A similar idea has been explored in
a concurrent work [44].

To implement this idea, we decompose the feedback net-
work F into 2 sub-networks: a feedback encoder Fe and a
feedback decoder Fd. We ﬁrst use the previously generated

41479

Adaptive Spatial Transformimage and the discriminator decision map to predict feed-
back feature ft−1 using the feedback encoder Fe:

ft−1 = Fe(ˆyt−1, rt−1).

(8)

The encoded feedback information ft−1 ∈ RH ′

×W ′

×C

has the same dimension as the encoded input feature ht−1,
with H ′ and W ′ indicating the spatial dimension of the en-
coding ht−1. Note that the response map rt−1 is bilinearly
upsampled to match the dimension of the generated image
ˆyt−1 and is concatenated to yt−1 across the channel dimen-
sion. Finally, the encoded input features and feedback fea-
tures are concatenated and used to predict transformation
parameters using the feedback decoder Fd:

γ, β = Fd(ht−1, ft−1).

(9)

The predicted afﬁne parameters γ, β have the same di-
mension as h (i.e. with spatial dimensions) and are used to
spatially scale and bias the input features:

ht = γ ◦ ht−1 + β,

(10)

where ◦ and + denote the Hadamard product and an ele-
ment wise addition. The transformed encoding ht is then
used as an input to the decoder to produce an improved im-
age yt = Gd(ht). The scale parameter γ is one-centered
and the bias parameter β is zero-centered. We keep track
of the transformed input encoding for future feedback gen-
erations. We demonstrate the effectiveness of the proposed
adaptive spatial transform in Section 5.

5. Experiments

We demonstrate how to leverage the proposed feedback
adversarial learning technique on a variety of tasks to im-
prove existing GAN frameworks.

5.1. Experimental Setup

Image generation We ﬁrst demonstrate our method on
the image generation task, where the goal of the genera-
tor is to generate an image from a latent vector sampled
from a known distribution. We take inﬂuences from the
recent state-of-the-art architecture BigGAN-deep [8] and
constructed our own GAN. We made some modiﬁcation
to make the network feasible to ﬁt on a commercial GPU.
Speciﬁcally, we removed self-attention layer [57, 63] and
reduced the generator and discriminator depth by half. We
use 64 ﬁlters for both the generator and the discrimina-
tor instead of 128, and use instance norm and adaptive in-
stance norm [23] instead of batch norm and conditional
batch norm [21]. Furthermore, we do not pool over the
last layer to preserve the spatial output of the discrimina-
tor. We train the model to optimize the hinge version of the
adversarial loss [33, 53, 54] with a batch size of 16. Further
architecture details can be found in the appendix.

further

translation We

Image-to-Image
apply our
method to the image-to-image translation task, where the
goal of the generator is to map images from one domain
to another. We use a generator consisting of 9-Residual
blocks, identical to the one from [68]. We train the model to
optimize the least-squares loss proposed in [38] and scale
the reconstruction loss by 10. We made some modiﬁcations
to improve the overall performance, and further details can
be found in the appendix.

Voxel Generation To investigate if the proposed feed-
back adversarial learning mechanism can generalize beyond
2D images, we demonstrate our method on the task of voxel
generation [59, 14, 31]. The goal of the generator is to pro-
duce realistic voxels, represented by a binary occupancy
cube V ∈ RH×W ×Dep, from a randomly sampled latent
vector z. Similar to image-generation, the goal of the dis-
criminator is to distinguish between generated voxels from
real voxels.

We adopt a similar architecture proposed in Voxel-
GAN [59], where G consists of 3D-deconvolutional layers
and D consists of a stack of 3D-convolutional layers. To
produce the spatial output as a feedback signal, the discrim-
inator does not globally pool over the spatial dimension, re-
sulting in a response cube of shape H/c × W/c × Dep/c.
We use Wasserstein loss with gradient penalty for both Vox-
elGAN trained with and without feedback. The details of
architectures and training can be found in the appendix.

5.2. Results

Image generation We train our model on CelebA
dataset [36], consiting of over 100K celebrity faces with
wide-range of attributes. We use a latent vector of dimen-
sion 128 to generate an image of size 128×128×3. The dis-
criminator outputs a response map of size 8×8. In Figure 4,
we show images sampled with and without feedback adver-
sarial learning. In Table 1, we compute the FID score [39]
on the last feature layer.

use

and

[13]

both

translation We
dataset

Image-to-image
the
the NYU-depth-V2
Cityscapes
dataset [42]. For Cityscapes,
the goal of our network
is to generate photos from class segmentation maps. We
resize the images to 256 × 512.
In Figure 5, we show
qualitative results and in Table 2, we use an image segmen-
tation model [11] to compute the segmentation score on the
generated images. We also provide the LPIPS [65] distance
from the ground truth image for both the training and
validation set. The perceptual score, although indicative
of the similarity between the generated image and the
ground truth, may penalize images that look realistic but is
perceptually different

For NYU-depth-V2, we train our model to generate in-
door images. We combine the depth-map, coarse class label

51480

GAN

GAN + FAL

A
b
e
e
C

l

Figure 4: Image Generation: Results using feedback adversarial learning on 256 × 256 CelebA dataset. These images are
randomly sampled from truncated N (0, I).

Input

Ground Truth

Pix2Pix

Pix2Pix + FAL

s
e
p
a
c
s
y
t
i

C

 
)
a

(

2
V
-
h
t
p
e
D
-
U
Y
N

 
)

b

(

Figure 5: Image-to-image translation: Results using feedback adversarial learning. We train the models on 256 × 512
Cityscapes images that map segmentation map to photos. For NYU-depth-v2, the models are trained to map 240 × 360 depth,
coarse-class, and edges to photo. We train our model with 3 generation steps and show our results on the last generation step.

map to construct a 2-channel input. To create this input data,
we labeled the top 37 most occurring classes (out of around
1000 classes) and mapped the classes to the ﬁrst input chan-
nel, where the classes are equidistant from each other. Next,

we use the depth map as the second channel of the image.
The resulting image is of size 240 × 320 × 2. In Figure 5 we
visualize our results, and on Table 3 we quantify our result
using a network trained to predict depth from monocular

61481

Model

GAN

GAN w/ Feedback (t=1)
GAN w/ Feedback (t=2)
GAN w/ Feedback (t=3)

CelebA-FID ↓

22.56

26.49
20.65
18.52

Table 1: Image generation (CelebA): FID score computed
between the generated and real CelebA images. We com-
pute the score using the pretrained Inception-V3 model.
Lower FID score is better.

Model

Cat IOU ↑ Cls IOU ↑ LPIPS ↓ LPIPS ↓

Val

Train

Ground Truth

Pix2Pix

Pix2Pix + Feedback (t=1)
Pix2Pix + Feedback (t=2)
Pix2Pix + Feedback (t=3)

76.2

0.380

0.383
0.417
0.418

0.21

0.655

0.646
0.687
0.692

0.0

0.0

0.428

0.431
0.428
0.429

0.320

0.265
0.254
0.254

Table 2: Image-to-image translation (Cityscapes): We
use a pretrained segmentation model trained on real images
to compute the segmentation score. The pretrained model
is trained on real image. We also provide LPIPS distance
score using the generated and the ground truth image.

RGB image [2]. We also provide the LPIPS distance to the
ground truth image.

Voxel Generation We train the VoxelGAN with and with-
out Feedback on ShapeNet [10]. ShapeNet consists of a
large number of synthetic objects where the voxels are gen-
erated from. We select three different object categories with
varying numbers of voxels: airplane (4k), car (8k), and ves-
sel (2k) and train a model for each category. The genera-
tor consists of 7 3D-deconvolutional layers, which produces
64 × 64 × 64 voxels from a sampled latent vector of dimen-
sion 100. The discriminator consists of 6 3D-convolutional
layers and outputs 4 × 4 × 4 response cube.

To quantitatively evaluate the quality of the generated
voxels, we train a voxel classiﬁer – with the assumption that
realistically generated voxels will have a higher classiﬁca-
tion probability, similar to the idea of Inception Score [49].
We use 10 object categories with a sufﬁcient number of
voxels to train a 10-way classiﬁer. The trained classi-
ﬁer achieves an overall 95.9% accuracy on the testing set
(95.9% on airplanes, 99.6% on cars, and 98.8% on ves-
sels). The details on the voxel classiﬁer can be found in
the appendix.

We randomly sample 1k generated voxels and measure
the accuracy of the voxels using the trained classiﬁer. The
quantitative results are shown in Table. 4 and the qualitative

Model

REL↓

δ1 ↑

δ2 ↑ LPIPS ↓ LPIPS ↓

Val

Train

Ground Truth

0.191 0.846 0.974

0.0

0.0

Pix2Pix

0.191 0.892 0.961

0.483

0.337

Pix2Pix + Feedback (t = 1) 0.179 0.702 0.904
Pix2Pix + Feedback (t = 2) 0.178 0.706 0.906
Pix2Pix + Feedback (t = 3) 0.181 0.701 0.908

0.473
0.469
0.473

0.281
0.275
0.284

Table 3: Image-to-image translation (NYU Depth): Us-
ing a pre-trained monocular depth prediction model, we
compute the scores on the generated images. The depth
prediction model is trained on real images. We also provide
LPIPS distance score using the generated and the ground
truth image.

VoxelGAN

VoxelGAN + FAL

t=0

t=1

t=2

Airplane

Car

Vessel

Figure 6: Voxel generation (ShapeNet):. Voxels are col-
orized based on the depth using the Viridis colormap. Our
model is able to progressively generate better quality voxels
with compared to the baseline.

results are shown in Figure. 6. We demonstrate that the Vox-
elGAN trained with feedback outperforms the baseline by
progressively improving the generated voxels and achieving
higher accuracy with more feedback steps. The classiﬁca-
tion accuracy on real testing voxels is shown in the ﬁrst row.

5.3. Ablation Study

To investigate the essentials of utilizing both the discrim-
inator response map and previous generation as feedback,
we conduct an ablation study where only either of them is
fed back to the generator. Furthermore, to verify the effec-
tiveness of the proposed AST layer, we experiment with a
variety of ways to merge the input feature h and feedback
feature f . These ablation studies can be found in the ap-
pendix.

71482

Model

Classiﬁcation accuracy ↑
Airplane
Vessel

Car

Ground Truth

95.9% 99.6% 98.8%

VoxelGAN

93.0% 98.1% 89.2%

VoxelGAN + Feedback (t = 1)
VoxelGAN + Feedback (t = 2)
VoxelGAN + Feedback (t = 3)

93.0% 98.2% 91.0%
94.0% 98.9% 96.2%
95.6% 99.1% 97.1%

Table 4: Voxel Classiﬁcation Scores: Classiﬁcation score
on the generated voxels. The accuracy measures whether
the generated voxels are correctly classiﬁed to the category
that the generator was trained from.

0.4

0.3

0.2

0.1

0.0

l

a
e
R

 
f

o

 
y
t
i
l
i

b
a
b
o
r
P

Image Generation - CelebA
Image-to-image - NYU-Depth
Image-to-image - Cityscapes

1

2

3

Number of image generation steps

Figure 7: Fooling likelihood over-time: We plot the like-
lihood the discriminator believes the generated sample is
correct. We show that the likelihood of fooling the discrim-
inator increases over generation steps.

5.4. Discriminator response visualization

To visualize whether the generator can produce better re-
sults that can fool the discriminator, we visualize the dis-
criminator’s response across various generation time steps
in Figure 7. In Figure 8, we plot the likelihood of fooling
the discriminator across various generation time step.

5.5. Generalization to more generation steps

Although we trained our model with 3 generation steps,
our model can progressively improve the generation quality
with an increasing number of feedback steps. We quan-
tify the output of the discriminator by taking the mean of
the response. On Cityscapes, if we take the average of
the discriminator output across the whole training set, we
have the following fooling probabilities for 5 generation
steps (in increasing order of generation): 17.1%, 28.7%,
36.8%, 40.3%, 43.4%. This illustrates that the generator
has learned to continually leverage the discriminator output
beyond the trained generation steps.

Figure 8: Response visualization: We visualize the out-
put of the discriminator overtime for various datasets. Red
indicating fake and blue indicating real. We show that the
discriminator predicts more real regions over time.

6. Conclusion

We demonstrated that feedback adversarial learning –
leveraging discriminator information into the feed-forward
path of the generation process – is a simple yet effective
method to improve existing generative adversarial frame-
works. We demonstrated that our approach is not restricted
to a speciﬁc domain by applying it to the tasks of image gen-
eration, image-to-image translation, and voxel generation.
We extensively evaluated models trained with and without
feedback on a variety of datasets with various metrics to
verify the effectiveness of our proposed method.

81483

References

[1] O. V. L. E. A. G. K. K. Aaron van den Oord, Nal Kalchbren-
ner. Conditional image generation with pixelcnn decoders. In
Advances in Neural Information Processing Systems, 2016.
High quality monocular
arXiv e-prints,

[2] I. Alhashim and P. Wonka.

depth estimation via transfer learning.
abs/1812.11941, 2018.

[3] M. Arjovsky, S. Chintala, and L. Bottou. Wasserstein gen-
erative adversarial networks. In International Conference on
Machine Learning, 2017.

[4] A. Bansal, S. Ma, D. Ramanan, and Y. Sheikh. Recycle-gan:
Unsupervised video retargeting. In European Conference on
Computer Vision, 2018.

[5] V. Belagiannis and A. Zisserman. Recurrent human pose
estimation. In IEEE International Conference on Automatic
Face & Gesture Recognition, 2017.

[6] S. Benaim and L. Wolf. One-sided unsupervised domain
In Advances in Neural Information Processing

mapping.
Systems, 2017.

[7] K. Bousmalis, N. Silberman, D. Dohan, D. Erhan, and D. Kr-
ishnan. Unsupervised pixel-level domain adaptation with
generative adversarial networks.
In IEEE Conference on
Computer Vision and Pattern Recognition, 2017.

[8] A. Brock, J. Donahue, and K. Simonyan. Large scale gan
training for high ﬁdelity natural image synthesis. In Interna-
tional Conference on Learning Representations, 2019.

[9] J. Carreira, P. Agrawal, K. Fragkiadaki, and J. Malik. Human
pose estimation with iterative error feedback. In IEEE Con-
ference on Computer Vision and Pattern Recognition, 2016.
[10] A. X. Chang, T. Funkhouser, L. Guibas, P. Hanrahan,
Q. Huang, Z. Li, S. Savarese, M. Savva, S. Song, H. Su,
et al. Shapenet: An information-rich 3d model repository.
arXiv preprint arXiv:1512.03012, 2015.

[11] L. Chen, G. Papandreou, F. Schroff, and H. Adam. Re-
thinking atrous convolution for semantic image segmenta-
tion. arXiv e-prints, abs/1706.05587, 2017.

[12] Q. Chen and V. Koltun. Photographic image synthesis with
cascaded reﬁnement networks. In International Conference
on Computer Vision, 2017.

[13] M. Cordts, M. Omran, S. Ramos, T. Rehfeld, M. Enzweiler,
R. Benenson, U. Franke, S. Roth, and B. Schiele. The
cityscapes dataset for semantic urban scene understanding.
In IEEE Conference on Computer Vision and Pattern Recog-
nition, 2016.

[14] A. Dai, C. R. Qi, and M. Nießner. Shape completion us-
ing 3d-encoder-predictor cnns and shape synthesis. In IEEE
Conference on Computer Vision and Pattern Recognition,
2017.

[15] E. L. Denton, S. Chintala, A. Szlam, and R. Fergus. Deep
generative image models using a laplacian pyramid of adver-
sarial networks. In Advances in Neural Information Process-
ing Systems, 2015.

[16] C. Donahue, J. McAuley, and M. Puckette. Synthesizing au-

dio with gans, 2018.

[18] I. Goodfellow,

J. Pouget-Abadie, M. Mirza, B. Xu,
D. Warde-Farley, S. Ozair, A. Courville, and Y. Bengio. Gen-
erative adversarial nets. In Advances in Neural Information
Processing Systems, 2014.

[19] I. Gulrajani, F. Ahmed, M. Arjovsky, V. Dumoulin, and A. C.
In Ad-

Courville.
vances in Neural Information Processing Systems, 2017.

Improved training of wasserstein gans.

[20] J. Guo, S. Lu, H. Cai, W. Zhang, Y. Yu, and J. Wang. Long
text generation via adversarial training with leaked informa-
tion. 2018.

[21] J. M. H. L. O. P. A. C. Harm de Vries, Florian Strub. Mod-
ulating early visual processing by language. In Advances in
Neural Information Processing Systems, 2017.

[22] W.-N. Hsu, Y. Zhang, R. J. Weiss, Y.-A. Chung, Y. Wang,
Y. Wu, and J. Glass. Disentangling correlated speaker and
noise for speech synthesis via data augmentation and adver-
sarial factorization. In NIPS 2018 Interpretability and Ro-
bustness for Audio, Speech and Language Workshop, 2018.

[23] X. Huang and S. Belongie. Arbitrary style transfer in real-
time with adaptive instance normalization. In International
Conference on Computer Vision, 2017.

[24] D. J. Im, C. D. Kim, H. Jiang, and R. Memisevic. Gener-
ating images with recurrent adversarial networks. In ICLR
Workshop, 2016.

[25] P. Isola, J.-Y. Zhu, T. Zhou, and A. A. Efros.

Image-to-
image translation with conditional adversarial networks. In
IEEE Conference on Computer Vision and Pattern Recogni-
tion, 2017.

[26] L. F.-F. Justin Johnson, Agrim Gupta. Image generation from
scene graphs. In IEEE Conference on Computer Vision and
Pattern Recognition, 2016.

[27] A. Kanazawa, M. J. Black, D. W. Jacobs, and J. Malik. End-
to-end recovery of human shape and pose. In IEEE Confer-
ence on Computer Vision and Pattern Recognition, 2018.

[28] T. Karras, T. Aila, S. Laine, and J. Lehtinen. Progressive
growing of gans for improved quality, stability, and varia-
tion. In International Conference on Learning Representa-
tions, 2018.

[29] D. P. Kingma and M. Welling. Auto-encoding variational
bayes. In International Conference on Learning Representa-
tions, 2014.

[30] C. Li and M. Wand. Precomputed real-time texture synthesis
In Euro-

with markovian generative adversarial networks.
pean Conference on Computer Vision, 2016.

[31] J. Li, K. Xu, S. Chaudhuri, E. Yumer, H. Zhang, and
L. Guibas. Grass: Generative recursive autoencoders for
shape structures. ACM Transactions on Graphics, 2017.

[32] M. Liang and X. Hu. Recurrent convolutional neural network
In IEEE Conference on Computer

for object recognition.
Vision and Pattern Recognition, 2015.

[33] J. H. Lim and J. C. Ye. Geometric gan. arXiv preprint

arXiv:1705.02894, 2017.

[34] M. Liu, T. Breuel, and J. Kautz. Unsupervised image-to-
image translation networks. In Advances in Neural Informa-
tion Processing Systems, 2017.

[17] C. Donahue, J. McAuley, and M. Puckette. Adversarial audio
synthesis. In International Conference on Learning Repre-
sentations, 2019.

[35] M. Liu and O. Tuzel. Coupled generative adversarial net-
works. In Advances in Neural Information Processing Sys-
tems, 2016.

91484

[36] Z. Liu, P. Luo, X. Wang, and X. Tang. Deep learning face
attributes in the wild. In International Conference on Com-
puter Vision, 2015.

[53] M. K.-Y. Y. Takeru Miyato, Toshiki Kataoka. Spectral nor-
malization for generative adversarial networks. In Interna-
tional Conference on Learning Representations, 2018.

[37] X. Mao, Q. Li, H. Xie, R. Y. Lau, and Z. Wang. Multi-
class generative adversarial networks with the l2 loss func-
tion. arXiv preprint arXiv:1611.04076, 2016.

[38] X. Mao, Q. Li, H. Xie, R. Y. Lau, and Z. Wang. Multi-
class generative adversarial networks with the l2 loss func-
tion. arXiv preprint arXiv:1611.04076, 2016.

[54] D. Tran, R. Ranganath, and D. Blei. Hierarchical implicit
models and likelihood-free variational inference.
In Ad-
vances in Neural Information Processing Systems 30, 2017.
[55] C. Vondrick, H. Pirsiavash, and A. Torralba. Generating
videos with scene dynamics. In Advances in Neural Infor-
mation Processing Systems, 2016.

[39] T. U.-B. N. Martin Heusel, Hubert Ramsauer. Gans trained
by a two time-scale update rule converge to a local nash equi-
librium. 2017.

[56] R. Vuorio, S.-H. Sun, H. Hu, and J. J. Lim.

Toward
multimodal model-agnostic meta-learning. arXiv preprint
arXiv:1812.07172, 2018.

[40] M. Mathieu, C. Couprie, and Y. LeCun. Deep multi-scale
video prediction beyond mean square error. In International
Conference on Learning Representations, 2016.

[57] X. Wang, R. Girshick, A. Gupta, and K. He. Non-local neu-
ral networks. In IEEE Conference on Computer Vision and
Pattern Recognition, 2018.

[41] L. Metz, B. Poole, D. Pfau, and J. Sohl-Dickstein. Unrolled
generative adversarial networks. In International Conference
on Learning Representations, 2017.

[58] X. Wang and A. Gupta. Generative image modeling using
style and structure adversarial networks. In European Con-
ference on Computer Vision, 2016.

[42] P. K. Nathan Silberman, Derek Hoiem and R. Fergus. Indoor
In

segmentation and support inference from rgbd images.
European Conference on Computer Vision, 2012.

[43] E. Park, J. Yang, E. Yumer, D. Ceylan, and A. C.
Berg. Transformation-grounded image generation network
for novel 3d view synthesis. In IEEE Conference on Com-
puter Vision and Pattern Recognition, 2017.

[59] J. Wu, C. Zhang, T. Xue, W. T. Freeman, and J. B. Tenen-
baum. Learning a probabilistic latent space of object shapes
via 3d generative-adversarial modeling. In Advances in Neu-
ral Information Processing Systems, 2016.

[60] Z. Yi, H. Zhang, and M. Gong. Dualgan: Unsupervised dual
In International

learning for image-to-image translation.
Conference on Computer Vision, 2017.

[44] T. Park, M.-Y. Liu, T.-C. Wang, and J.-Y. Zhu. Semantic
image synthesis with spatially-adaptive normalization. arXiv
preprint arXiv:1903.07291, 2019.

[61] L. Yu, W. Zhang, J. Wang, and Y. Yu. Seqgan: Sequence gen-
erative adversarial nets with policy gradient. In Association
for the Advancement of Artiﬁcial Intelligence, 2017.

[45] E. Perez, F. Strub, H. De Vries, V. Dumoulin, and
A. Courville. Film: Visual reasoning with a general con-
ditioning layer. In Association for the Advancement of Arti-
ﬁcial Intelligence, 2018.

[46] A. Radford, L. Metz, and S. Chintala. Unsupervised rep-
resentation learning with deep convolutional generative ad-
versarial networks. In International Conference on Learning
Representations, 2016.

[47] S. Reed, Z. Akata, X. Yan, L. Logeswaran, B. Schiele, and
H. Lee. Generative adversarial text-to-image synthesis. In
International Conference on Machine Learning, 2016.

[48] F. S.-L. Z.-M. Roey Mechrez, Itamar Talmi. The contextual

loss. In European Conference on Computer Vision, 2018.

[49] T. Salimans, I. J. Goodfellow, W. Zaremba, V. Cheung,
A. Radford, and X. Chen. Improved techniques for training
gans.
In Advances in Neural Information Processing Sys-
tems, 2016.

[50] T. Salimans and D. P. Kingma. Weight normalization: A
simple reparameterization to accelerate training of deep neu-
ral networks. In Advances in Neural Information Processing
Systems, 2016.

[51] A. Shrivastava, T. Pﬁster, O. Tuzel, J. Susskind, W. Wang,
and R. Webb. Learning from simulated and unsupervised
images through adversarial training. In IEEE Conference on
Computer Vision and Pattern Recognition, 2017.

[52] S.-H. Sun, M. Huh, Y.-H. Liao, N. Zhang, and J. J. Lim.
Multi-view to novel view: Synthesizing novel views with
self-learned conﬁdence. In European Conference on Com-
puter Vision, 2018.

[62] A. R. Zamir, T. Wu, L. Sun, W. B. Shen, J. Malik, and
In IEEE Conference on

S. Savarese. Feedback network.
Computer Vision and Pattern Recognition, 2017.

[63] H. Zhang, I. J. Goodfellow, D. N. Metaxas, and A. Odena.
Self-attention generative adversarial networks. In Neural In-
formation Processing Systems, 2018.

[64] H. Zhang, T. Xu, H. Li, S. Zhang, X. Huang, X. Wang, and
D. N. Metaxas. Stackgan: Text to photo-realistic image syn-
thesis with stacked generative adversarial networks. In Inter-
national Conference on Computer Vision, 2017.

[65] R. Zhang, P. Isola, A. A. Efros, E. Shechtman, and O. Wang.
The unreasonable effectiveness of deep networks as a per-
ceptual metric. In IEEE Conference on Computer Vision and
Pattern Recognition, 2018.

[66] Y. Zhou and T. L. Berg. Learning temporal transformations
from time-lapse videos. In European Conference on Com-
puter Vision, 2016.

[67] J.-Y. Zhu, P. Kr¨ahenb¨uhl, E. Shechtman, and A. A. Efros.
Generative visual manipulation on the natural image mani-
fold. In European Conference on Computer Vision, 2016.

[68] J.-Y. Zhu, T. Park, P. Isola, and A. A. Efros. Unpaired image-
to-image translation using cycle-consistent adversarial net-
works.
In International Conference on Computer Vision,
2017.

101485

