Associatively Segmenting Instances and Semantics in Point Clouds

Xinlong Wang1

Shu Liu2 Xiaoyong Shen2 Chunhua Shen1

Jiaya Jia2

3

,

1University of Adelaide, Australia

2Youtu Lab, Tencent

3The Chinese University of Hong Kong

e-mail: wangxinlon@gmail.com

Abstract

A 3D point cloud describes the real scene precisely and
intuitively. To date how to segment diversiﬁed elements
in such an informative 3D scene is rarely discussed.
In
this paper, we ﬁrst introduce a simple and ﬂexible frame-
work to segment instances and semantics in point clouds
simultaneously. Then, we propose two approaches which
make the two tasks take advantage of each other, lead-
ing to a win-win situation. Speciﬁcally, we make instance
segmentation beneﬁt from semantic segmentation through
learning semantic-aware point-level instance embedding.
Meanwhile, semantic features of the points belonging to
the same instance are fused together to make more accu-
rate per-point semantic predictions. Our method largely
outperforms the state-of-the-art method in 3D instance seg-
mentation along with a signiﬁcant improvement in 3D se-
mantic segmentation. Code has been made available at:
https://github.com/WXinlong/ASIS.

1. Introduction

Both instance segmentation and semantic segmentation
aim to detect speciﬁc informative region represented by
sets of smallest units in the scenes. For example, a point
cloud can be parsed into groups of points, where each
group corresponds to a class of stuff or an individual in-
stance. The two tasks are related and both have wide ap-
plications in real scenarios, e.g., autonomous driving and
augmented reality. Though great progress has been made in
recent years [10, 6, 21, 34, 16] for each single task, no prior
method tackles these two tasks associatively.

In fact, instance segmentation and semantic segmenta-
tion conﬂict with each other in some respects. The for-
mer one distinguishes different instances of the same class
clearly, while the latter one wants them to have the same la-
bel. However, the two tasks could cooperate with each other
through seeking common grounds. Semantic segmentation
distinguishes points of different classes, which is also one
of the purposes of instance segmentation, as points of differ-
ent classes must belong to different instances. Furthermore,

Figure 1: Instance segmentation and semantic segmentation re-
sults using ASIS. Our method takes raw point clouds as inputs and
outputs instance labels and semantic labels for each point.

instance segmentation assigns the same label to points be-
longing to the same instance, which is also consistent with
semantic segmentation, as points of the same instance must
belong to the same category. This observation makes one
wonder how the two tasks could be associated together to
lead to a win-win solution?

There may be two straightforward approaches. The ﬁrst
one is that, given the semantic labels, we could run instance
segmentation independently on every semantic class to bet-
ter distinguish individual instances. Thus, different class
instances are separated simply but naively.

However, the instance segmentation would greatly de-
pend on performance of semantic segmentation as incor-
rect semantic predictions would inevitably result in incor-
rect instance predictions. Otherwise, given the instance la-
bels, one could classify each instance and assign the pre-
dicted class label to each point of this instance. Thus, the
problem is transformed to an easier instance recognition
problem. However, inaccurate instance predictions would
deeply confuse the downstream object classiﬁers. Both
these two approaches are in step-wise paradigm, which can
be sub-optimal and inefﬁcient. In this work, we integrate
the two tasks altogether into an end-to-end parallel train-
ing framework, which shares the same beneﬁts in a soft and
learnable fashion.

We ﬁrst introduce a simple baseline to segment instances

14096

EncoderIns. DecoderSem. DecoderASISand semantics simultaneously. It is similar to the method
in [6] for 2D images, but we tailor it for 3D point cloud.
The network of the baseline has two parallel branches: one
for per-point semantic predictions; the other outputs point-
level instance embeddings, where the embeddings of points
belonging to the same instance stay close while those of dif-
ferent instances are apart. Our baseline method can already
achieve better performance than the recent state-of-the-art
method, SGPN [35], as well as faster training and inference.
Based on this ﬂexible baseline, a novel technique is further
proposed to associate instance segmentation and semantic
segmentation closely together, termed ASIS (Associatively
Segmenting Instances and Semantics).

With the proposed ASIS method, we are able to learn
semantic-aware instance embeddings, where the embed-
dings of points belonging to different semantic classes are
further separated automatically through feature fusion. As
shown in Figure 2, the boundaries between different class
points are clearer (chair & table, window & wall). More-
over, the semantic features of points belonging to the same
instance are exploited and fused together to make more ac-
curate per-point semantic predictions. The intuition behind
it is that during semantic segmentation a point being as-
signed to one of the categories is because the instance con-
taining that point belongs to that category. Thus, the two
tasks can take advantage of each other to further boost their
performance. Our method is demonstrated to be effective
and general on different backbone networks, e.g., the Point-
Net [26] and hierarchical architecture PointNet++ [28]. The
method can also be used to tackle the panoptic segmenta-
tion [14] task, which uniﬁes the semantic and instance seg-
mentation. To summarize, our main contributions are as
follows.

• We propose a fast and efﬁcient simple baseline for si-
multaneous instance segmentation and semantic seg-
mentation on 3D point clouds.

• We propose a new framework, termed ASIS, to asso-
ciate instance segmentation and semantic segmenta-
tion closely together. Speciﬁcally, two types of part-
nerships are proposed—semantics awareness for in-
stance segmentation and instance fusion for semantic
segmentation—to make these two tasks cooperate with
each other.

• With the proposed ASIS,

the model containing
semantics-aware instance segmentation and instance-
fused semantic segmentation are trained end-to-end,
which outperforms state-of-the-art 3D instance seg-
mentation methods on the S3DIS dataset [1] along
with a signiﬁcant improvement on the 3D semantic
segmentation task. Furthermore, our experiments on
the ShapeNet dataset [39] show that ASIS is also ben-
eﬁcial for the task of part segmentation.

Figure 2: 1D embeddings of learned point-level instance embed-
dings.
t-SNE [22] technique is used to visualize the learned in-
stance embeddings for the points on S3DIS test data. Three close-
up pairs are shown. Of each pair the left patch is from our baseline
method, while the right one is from ASIS. Differences in color
shade represent distances in instance embedding space.

2. Related Work

Instance Segmentation. 2D instance segmentation has at-
tracted much research attention recently, leading to various
top-performing methods. Inspired by the effectiveness of
region-based CNN (R-CNN) [8] in object detection prob-
lem, [25, 4] learn to segment instances by proposing seg-
ment candidates. The mask proposals are further classiﬁed
to obtain the ﬁnal instance masks. Dai et al. [5] predict
segment proposals based on bounding box proposals. He
et al. [10] propose the simpler and ﬂexible Mask R-CNN
which predicts masks and class labels simultaneously. Dif-
ferent from the top-down detector-based approaches above,
bottom-up methods learn to associate per-pixel predictions
to object instances. Newell et al. [24] group pixels into in-
stances using the learned associative embedding. Braban-
dere et al. [6] propose a discriminative loss function which
enables to learn pixel-level instance embedding efﬁciently.
Liu et al. [20] decompose the instance segmentation prob-
lem into a sequence of sub-grouping problems. However,
3D instance segmentation is rarely researched. Wang et
al. [35] learn the similarity matrix of a point cloud to get
instance proposals.
In this work, we introduce a simple
and ﬂexible method that learns effective point-level instance
embedding with the help of semantic features in 3D point
clouds.

Semantic Segmentation. With the recent development of
convolutional neural networks (CNNs) [15, 32], tremen-
dous progress has been made in semantic segmentation.
Approaches [18, 2, 19] based on fully convolutional net-
works (FCN) [21] dominate the semantic segmentation on
2D images. As for 3D segmentation, Huang et al. [11] pro-
pose 3D-FCNN which predict coarse voxel-level semantic
label. PointNet [26] and following works [7, 38] use multi-
layer perceptron (MLP) to produce ﬁne-grained point-level

4097

213segmentation. Very recently, Landrieu et al. [16] introduce
superpoint graph (SPG) to segment large-scale point clouds.
In fact, few of previous works segment semantics taking ad-
vantages of the instance embedding, either in 2D images or
3D point clouds.

Deep Learning on Point Clouds. To take advantage of
the strong representation capability of classic CNNs, a 3D
point cloud is ﬁrst projected into multiview rendering im-
ages in [33, 31, 27, 9], on which the well-designed CNNs
for 2D images can be applied. But part of contextual infor-
mation in point cloud is left behind during the projection
process. Another popular representation for point cloud
data is voxelized volumes. The works of [37, 23, 12, 30]
convert point cloud data into regular volumetric occupancy
grids, then train 3D CNNs or the varieties to perform voxel-
level predictions. A drawback of volumetric representations
is being both computationally and memory intensive, due
to the sparsity of point clouds and the heavy computation
of 3D convolutions. Therefore those methods are limited
to deal with large-scale 3D scenes. To process raw point
cloud directly, PointNet [26] is proposed to yield point-level
predictions, achieving strong performance on 3D classiﬁca-
tion and segmentation tasks. The following works Point-
Net++ [28], RSNet [13], DGCNN [36] and PointCNN [17]
further focus on exploring the local context and hierarchi-
cal learning architectures. In this work, we build a novel
framework to associatively segment instances and seman-
tics in point clouds, and demonstrate that it is effective and
general on different backbone networks.

3. Our Method

3.1. A Simple Baseline

Here we introduce a simple yet effective framework. It
is composed of a shared encoder and two parallel decoders.
One of the decoders is for point-level semantic predictions,
while the other one aims to handle the instance segmenta-
tion problem. Speciﬁcally, a point cloud of size Np is ﬁrst
extracted and encoded into a feature matrix through the fea-
ture encoder (e.g., stacked PointNet layers). This shared
feature matrix refers to the concatenation of local features
and global features in PointNet architecture, or the output of
the last set abstraction module for the PointNet++ architec-
ture. The two parallel branches then fetch the feature ma-
trix and proceed with their following predictions separately.
The semantic segmentation branch decodes the shared fea-
ture matrix into NP × NF shaped semantic feature matrix
FSEM, and then outputs the semantic predictions PSEM with
shape of NP × NC where NC is the number of semantic
categories. The instance segmentation branch has the same
architecture except the last output layer. The NP × NF
instance feature matrix FINS is used to predict per-point in-
stance embedding EINS with shape of NP × NE where NE

is the dimension of the embedding. The embeddings of a
point cloud represent the the instance relationship between
points in it: the points belonging to the same instance are
close to each other in embedding space, while those points
of different instances are apart.

At training time, the semantic segmentation branch is
supervised by the classical cross entropy loss. As for the
instance segmentation, the discriminative loss function for
2D image in [6] is adopted to supervise the instance em-
bedding learning. We modify it and make it suitable for
point clouds. The loss used in [6] is class-speciﬁc: the in-
stance embeddings of different semantic class are learned
separately, which means the semantic class should be given
ﬁrst. This step-wise paradigm is highly dependent on the
quality of semantic prediction, as incorrect semantic pre-
diction would inevitably result in incorrect instance recog-
nition. Thus, we adopt the class-agnostic instance embed-
ding learning strategy, where embeddings are in charge of
distinguishing different instances and are blind to their cat-
egories. The loss function is formulated as follows:

L = Lvar + Ldist + α · Lreg,

(1)

where Lvar aims to pull embeddings towards the mean em-
bedding of the instance, i.e. the instance center, Ldist make
instances repel each other, and Lreg is a regularization term
to keep the embedding values bounded. α is set to 0.001 in
our experiments. Speciﬁcally, each term can be written as
follows:

Lvar =

1
I

I

X

i=1

1
Ni

Ni

X

j=1

(cid:2)kµi − ejk1 − δv(cid:3)2
+ ,

(2)

Ldist =

1

I(I − 1)

I

X

I

X

[2δd − kµiA − µiB k1]2

+ , (3)

iA=1

iB =1

iA6=iB

Lreg =

1
I

I

X

i=1

kµik1,

(4)

where I is the number of ground-truth instances; Ni is the
number of points in instance i; µi is the mean embedding of
instance i; k·k1 is the ℓ1 distance; ej is an embedding of a
point; δv and δd are margins; [x]+ = max(0, x) means the
hinge.

During the test, ﬁnal instance labels are obtained using
mean-shift clustering [3] on instance embeddings. We as-
sign the mode of the semantic labels of the points within
the same instance as its ﬁnal category. The pipeline is illus-
trated in Figure 3(a).

3.2. Mutual Aid

As depicted in Figure 3(b), beneﬁting from the simple
and ﬂexible framework described above, we are able to

4098

Encode

NP

Instance Seg.

NF

F

INS

F

SEM

NF

Semantic Seg.

(a)

NE

Clustering

E

INS

ASIS

P

SEM

Argmax

NC

1

1

:  Element-wise addition

A

:  Aggregation

F

INS

F

SINS

C
F

E

INS

Adaptation

kNN

F

SEM

F

ISEM

A

C
F

P

SEM

(b)

Figure 3: Illustration of our method for point cloud instance segmentation and semantic segmentation. (a) Full pipeline of the system. (b)
Illustration of the ASIS module.

build upon it the novel ASIS module and achieve semantic-
aware instance segmentation and instance-fused semantic
segmentation.

Semantic-aware Instance Segmentation. Semantic fea-
tures of a point cloud construct a new and high-level feature
space, where points are naturally positioned according to
their categories. In that space, points of the same semantic
class lie close together while different classes are separated.
We abstract the semantic awareness (SA) from semantic
features and integrate it into the instance features, produc-
ing semantic-aware instance features. Firstly, the semantic
feature matrix FSEM is adapted to instance feature space
as F ′
SEM through a point independent fully connected layer
(FC) with batch normalization and ReLU activation func-
tion. F ′
SEM has the same shape with FSEM. Then, We add
the adapted semantic feature matrix F ′
SEM to instance fea-
ture matrix FINS element-wise, producing semantic-aware
instance feature matrix FSINS . The procedure can be for-
mulated as:

FSINS = FINS + F C(FSEM).

(5)

In this soft and learnable way, points belonging to different
category instances are further repelled in instance feature
space, whereas same category instances are rarely affected.
The feature matrix FSINS is used to generate ﬁnal instance
embeddings.

Instance-fused Semantic Segmentation. Given the in-
stance embeddings, we use K nearest neighbor (kNN)
search to ﬁnd a ﬁxed number of neighboring points for
each point (including itself) in instance embedding space.
To make sure the K sampled points belonging to the same
instance, we ﬁlter the outliers according to the margin δv
used in Equation 2. As described in Section 3.1, the hinged

loss term Lvar supervises the instance embedding learn-
ing through drawing each point embedding close to the
the mean embedding within a distance of δv. The out-
put of the kNN search is an index matrix with shape of
NP × K. According to the index matrix, the semantic fea-
tures (FSEM) of those points are grouped to a NP ×K ×NF
shaped feature tensor, which is groups of semantic feature
matrix where each group corresponds to a local region in
instance embedding space neighboring its centroid point.
Inspired by the effectiveness of channel-wise max aggre-
gation in [26, 36, 38], semantic features of each group
are fused together through a channel-wise max aggregation
operation, as the reﬁned semantic feature of the centroid
point. The instance fusion (IF) can be formulated as be-
low. For the NP × NF shaped semantic feature matrix
FSEM = {x1, ..., xNP } ⊆ RNF , instance-fused semantic
features are calculated as:

x′
i = Max(xi1, xi2, ..., xik),

(6)

where {xi1, ..., xik} represent the semantic features of K
neighboring points centered point i in instance embedding
space, and Max is an element-wise maximum operator
which takes K vectors as input and output a new vector.
After the instance fusion, the output is a NP × NF feature
matrix FISEM, the ﬁnal semantic features to be fed into the
last semantic classiﬁer.

4. Experiments

4.1. Experiment Settings

Datasets. We carry out experiments on two public datasets:
Stanford 3D Indoor Semantics Dataset (S3DIS) [1] and
ShapeNet [39]. S3DIS contains 3D scans from Matterport
Scanners in 6 areas that in total have 272 rooms. Each point

4099

in the scene point cloud is associated with an instance label
and one of the semantic labels from 13 categories. Besides
the large real scene benchmark S3DIS, we also evaluate our
methods on the ShapeNet part dataset. This dataset contains
16, 881 3D shapes from 16 categories. Each point sampled
from the shapes is assigned with one of the 50 different
parts. The instance annotations from [35] are used as the
instance ground-truth labels.

Evaluation Metrics. Our experiments involved S3DIS are
conducted following the same k-fold cross validation with
micro-averaging as in [26]. We also report the performance
on the ﬁfth fold following [34], as Area 5 is not present in
other folds. For evaluation of semantic segmentation, over-
all accuracy (oAcc), mean accuracy (mAcc) and mean IoU
(mIoU) across all the categories are calculated along with
the detailed scores of per class IoU. As for instance segmen-
tation, (weighted) coverage (Cov, WCov) [29, 20, 40] are
adopted. Cov is the average instance-wise IoU of prediction
matched with ground-truth. The score is further weighted
by the size of the ground-truth instances to get WCov. For
ground-truth regions G and predicted regions O, these val-
ues are deﬁned as

Cov(G, O) =

|G|

X

i=1

1
|G|

max

j

IoU(rG

i , rO

j ),

WCov(G, O) =

|G|

X

i=1

wi max

j

IoU(rG

i , rO

j ),

wi =

|rG
i |
Pk |rG
k |

,

(7)

(8)

(9)

where |rG
i | is the number of points in ground-truth region
i. Besides, the classical metrics mean precision (mPrec)
and mean recall (mRec) with IoU threshold 0.5 are also re-
ported.

Training and Inference Details. For the S3DIS dataset,
each point is represented by a 9-dim feature vector (XYZ,
RGB and normalized coordinates as to the room). Dur-
ing training, we follow the procedure in [26] and split the
rooms into 1m×1m overlapped blocks on the ground plane,
each containing 4096 points. For the instance segmentation
branch, we train the network with σv = 0.5, σd = 1.5,
and 5 output embedding dimensions. For the kNN search
in instance fusion, K is set to 30. We train the network for
50 epochs and 100 epochs for PointNet and PointNet++ re-
spectively, with batch size 24, base learning rate set to 0.001
and divided by 2 every 300k iterations. The Adam solver is
adopted to optimize the network on a single GPU. Momen-
tum is set to 0.9. At test time, bandwidth is set to 0.6 for
mean-shift clustering. BlockMerging algorithm [35] is used
to merge instances from different blocks. For ShapeNet

dataset, each shape is represented by a point cloud with
2048 points, as in [26]. Each point is represented by a 3-
dim vector (XY Z).

Backbone

Method

mCov mWCov mPrec mRec

Test on Area 5

SGPN [35]

PN

ASIS (vanilla)

PN++

ASIS

ASIS (vanilla)

ASIS

32.7
38.0
40.4
42.6
44.6

35.5
40.6
43.3
45.7
47.8

Test on 6-fold CV

SGPN [35]

PN

ASIS (vanilla)

PN++

ASIS

ASIS (vanilla)

ASIS

37.9
43.0
44.7
49.6
51.2

40.8
46.3
48.2
53.4
55.1

36.0
42.3
44.5
53.4
55.3

38.2
50.6
53.2
62.7
63.6

28.7
34.9
37.4
40.6
42.4

31.2
39.2
40.7
45.8
47.5

Table 1: Instance segmentation results on S3DIS dataset.

Backbone

Method

mAcc mIoU oAcc

Test on Area 5

PN (RePr)

PN

ASIS (vanilla)

ASIS

ASIS (vanilla)

ASIS

52.1
52.9
55.7
58.3
60.9

Test on 6-fold CV

PN [26]

PN (RePr)

ASIS (vanilla)

ASIS

ASIS (vanilla)

ASIS

-

60.3
60.7
62.3
69.0
70.1

PN++

PN

PN++

43.4
44.7
46.4
50.8
53.4

47.7
48.9
49.5
51.1
58.2
59.3

83.5
83.7
84.5
86.7
86.9

78.6
80.3
80.4
81.7
85.9
86.2

Table 2: Semantic segmentation results on S3DIS dataset.

4.2. S3DIS Results

We conduct experiments on S3DIS dataset using Point-
Net and PointNet++ (single-scale grouping) as our back-
bone networks.
If no extra notes, our main analyses are
based on PointNet.

4.2.1 Baseline Method

We report instance segmentation results of our baseline
method in Table 1. Based on PointNet backbone, our
method achieves 46.3 mWCov when evaluate by 6-fold
cross validation, which shows an absolute 5.5-point im-

4100

provement over the state-of-the-art method SGPN1. The su-
periority is consistent across the four evaluation metrics.
Semantic segmentation results are shown in Table 2. The
mIoU of training without instance segmentation branch is
48.9, which can be regarded as the result of pure backbone
PointNet. Equipped with instance segmentation training,
our semantic segmentation baseline result achieves 49.5
mIoU, which is slightly better.
It indicates that the su-
pervision of instance segmentation helps learn more gen-
eral shared feature representation. As for the training time,
SGPN needs 16 ∼ 17 hours (excluding pre-training) to con-
verge, while it only takes 4 ∼ 5 hours for our method to
train from scratch, both on a single GPU. More computation
time comparisons can be referred to Table 5. Our baseline
method is demonstrated to be effective and efﬁcient.

4.2.2 ASIS

Semantic Segmentation. In Table 1, we report the results
of ASIS on instance segmentation task. ASIS yields 48.2
mWCov, which outperforms our baseline by 1.9-point. In
terms of another metric mean precision, a larger 2.6-point
gain is observed. When evaluated on Area 5, the improve-
ments are more signiﬁcant: 2.7 mWCov and 2.2 mPrec.
Through visualizations in Figure 4, our baseline method
tends to group two nearby different class instances together
into one instance (e.g., board & wall). With ASIS, they
are well distinguished as semantic awareness helps repel
them in instance embedding space. Per class performance
changes are in accordance with our observations. Shown
in Table 4, ASIS yields 5.0 WCov and 2.4 WCov gains on
class “board” and class “wall” on instance segmentation.

Instance Segmentation. Table 2 reports the results of ASIS
on semantic segmentation task. ASIS improves the mIoU
by 1.6-point. We obseve more signiﬁcant improvements of
2.8 mAcc and 1.7 mIoU when evaluating on Area 5. In Fig-
ure 5 we show some comparison examples on semantic seg-
mentation. ASIS performs better on complicated categories
(e.g., bookcase) and is aware of instance integrity (e.g., ta-
ble, window) as instance fusion aggregates points belong-
ing to the same instance to produce more accurate predic-
tions. Table 4 shows that ASIS outperforms the baseline by
3.5 IoU and 2.2 IoU on class “table” and class “bookcase”,
which are in line with our analysis.

Stronger Backbone. Both the two tasks beneﬁt largely
from our novel method. When adopt the stronger archi-
tecture PointNet++ as our backbone network, we observe
consistent improvements: 2.1 mWCov and 2.6 mIoU gains
on Area 5; 1.7 mWCov and 1.1 mIoU gains for 6-fold
cross validation. The results on PointNet++ indicate that

1We reproduced the results of SGPN using the code at github, published

by the authors.

Method

+IF

+SA mIoU mWCov

Baseline

X

X

X

X

49.5
50.0
49.8
51.1

46.3
47.0
47.4
48.2

Table 3: Ablation study on the S3DIS dataset. IF refers to instance
fusion; SA refers to semantic awareness.

Figure 4: Comparison of our baseline method and ASIS on
instance segmentation. Different colors represent different in-
stances.

Figure 5: Comparison of our baseline method and ASIS on se-
mantic segmentation.

our ASIS is a general framework and can be built upon dif-
ferent backbone networks.

4.2.3 Analysis

Ablative Analysis. Equipped with only instance fusion
for semantic segmentation, our method achieves 50.0 mIoU
and 47.0 mWCov. Compared to the baseline, there is a 0.5-
point gain on mIoU. Furthermore, better semantic predic-
tions assign more correct class labels to instances, improv-
ing the instance segmentation performance. When adopt
semantic awareness alone, we achieve an improvement of
1.1 mWCov (from 46.3 to 47.4). The improvement of one
task also helps the other one, as better shared features are
learned. Applying instance fusion and semantic awareness
together, the performance boost is larger than using only

4101

Real SceneBaselineASISGround Truth23411342Real SceneBaselineASISGround TruthFigure 6: Qualitative results of ASIS on the S3DIS test fold.

one of them. On the basis of instance fusion, semantic
awareness could bring additional 1.1 mIoU and 1.2 mWCov
gains. The semantic awareness strengthens the instance seg-
mentation, as well as improving the semantic segmentation.
It is because that the improved instance embedding predic-
tions could amplify the improvements brought by instance
fusion, thus leading to a further 1.1 mIoU gain. The sim-
ilar results can also be observed when add instance fusion
on semantic awareness. To conclude, the two components
not only perform their own duty well, but also enlarge the
function of the other one.

(a)

(b)

Figure 7: Per class performance changes. (a) Changes of instance
segmentation performance compared to our baseline method. (b)
Changes of semantic segmentation performance compared to our
baseline method.

Category-based Analysis. We show how the performance
of each category changes in Figure 7.
Interestingly the
categories being helped by ASIS module are different for
instance segmentation and semantic segmentation. On in-
stance segmentation, our ASIS module largely helps the cat-
egories in which instances often surround with instances of
other classes (e.g., beam, board and window). For example,
board is hung on the wall. The board is easily being ignored
during instance segmentation, as the body of the board has
similar color and shape with the wall. Our semantic aware-
ness in ASIS module shows great superiority on these cases:
5.0 WCov and 2.4 WCov improvements on class “board”
and class “wall”. Some visualization examples of the com-
parison are illustrated in Figure 4. On semantic segmenta-
tion, ASIS module signiﬁcantly boosts the performance of
the categories in which instances have complicated shapes
(e.g., table, chair and bookcase), because they beneﬁt much
from instance fusion.

4.2.4 Qualitative Results

Figure 6 shows some visualization examples of ASIS. For
instance segmentation, different colors represent different
instances, while the color itself does not mean anything.
Either same class instances or different class instances are
distinguished properly. For example, the points of the ta-
bles and the surrounding chairs are grouped into distinct in-
stances. As for semantic segmentation, speciﬁc color refers
to particular class (e.g., yellow for wall, purple for window).
We also show some failure cases in Figure 6. In the scenes

4102

(a)Input(b)Ins.(c)Ins. GT(d)Sem.(e)Sem. GT-101234567beamboardwindowcolumnwalldoorchairbookcaseceilingcluttertablesofafloorChange in WCov→  -101234beamtablechairbookcasefloorwindowclutterceilingcolumnwalldoorsofaboardChange in IoU→  WCov

mean ceiling ﬂoor wall beam column window door
47.5
46.3
48.2
49.8

55.6
58.8

79.2
80.1

63.7
66.1

47.6
53.4

77.0
76.4

6.6
9.2

table chair
57.3
50.5
50.6
59.4

sofa bookcase board clutter
9.9
41.5
9.9
42.0

31.3
32.3

33.7
38.7

Sem IoU

49.5
51.1

90.1
91.3

87.8
89.7

69.2
69.8

42.3
45.8

26.0
27.0

50.4
51.9

54.9
55.1

57.5
61.0

45.8
49.3

8.9
9.1

38.0
40.2

33.4
33.5

39.2
40.7

Table 4: Per class results on the S3DIS dataset.

Method

SGPN

ASIS (vanilla)

ASIS

ASIS (vanilla.PN++)

ASIS (PN++)

Inference Time (ms)

Overall Network Grouping

mWCov

726
212
205
150
179

18
11
20
35
54

708
201
185
115
125

35.5
41.4
43.6
45.7
47.8

Table 5: Comparisons of computation speed and performance. In-
ference time is estimated and averaged on Area 5, which is the
time to process a point cloud with size 4096 × 9. The instance
segmentation results on Area 5 are reported.

of the second and third row, two nearby chairs are mistak-
enly segmented together as a single instance. Though our
method does not draw the point embeddings of the same
class instances close, we yet do not contribute on better dis-
tinguishing this kind of cases. We leave it to future works
to explore better solutions.

4.2.5 Computation Time

In Table 5, we report computation time measured on a sin-
gle Tesla P40 GPU. The inference procedure can be divided
in to two steps: the network inference, and point grouping
which groups points into individual instances. For SGPN,
the grouping step refers to their GroupMerge algorithm. In
our ASIS, it is the mean-shift clustering. We achieve com-
parable speed with SGPN on network inference, while our
grouping step is much faster. Overall, it takes 205ms for
ASIS to process an input point cloud with size 4096 × 9 and
output the ﬁnal labels, which is 3.5× faster than SGPN.

Figure 8: Qualitative results of ASIS on ShapeNet test split. (a)
Instance segmentation results of ASIS. (b) Generated ground truth
for instance segmentation. (c) Semantic segmentation results of
ASIS. (d) Semantic segmentation ground truth.

Method

PointNet [26]

PointNet (RePr)
PointNet++ [28]*

ASIS (PN)

ASIS (PN++)

mIoU
83.7
83.4
84.3
84.0
85.0

Table 6: Semantic segmentation results on ShapeNet datasets.
RePr is our reproduced PointNet. PointNet++* denotes the Point-
Net++ trained by us without extra normal information.

4.3. ShapeNet Results

5. Conclusion

We conduct experiments on ShapeNet dataset using in-
stance segmentation annotations generated by [35], which
are not “real” ground truths. Following [35], only qualita-
tive results of part instance segmentation are provided. As
shown in Figure 8, tires of the car and legs of the chair are
well grouped into individual instances. Semantic segmen-
tation results are reported in Table 6. Using PointNet as
backbone, we achieve a 0.6-point improvement. Based on
PointNet++, ASIS outperforms the baseline by 0.7 mIoU.
These results demonstrate that our method is also beneﬁcial
for part segmentation problem.

In this paper, a novel segmentation framework, namely
ASIS, is proposed for associating instance segmentation
and semantic segmentation on point clouds. The relation-
ships between the two tasks are explicitly explored and di-
rectly guide our method design. Our experiments on S3DIS
dataset and ShapeNet part dataset demonstrate the effec-
tiveness and efﬁciency of ASIS. We expect wide applica-
tion of the proposed method in 3D instance segmentation
and 3D semantic segmentation, as well as hoping the novel
design provides insights to future works on segmentation
tasks, e.g., panoptic segmentation, and beyond.

4103

(a)Ins.(b)Ins. GT(c)Sem.(d)Sem. GTReferences

[1] Iro Armeni, Ozan Sener, Amir R. Zamir, Helen Jiang, Ioan-
nis Brilakis, Martin Fischer, and Silvio Savarese. 3d seman-
tic parsing of large-scale indoor spaces. In Proc. IEEE Conf.
Comp. Vis. Patt. Recogn., 2016. 2, 4

[2] Liang-Chieh Chen, George Papandreou, Florian Schroff, and
Hartwig Adam. Rethinking atrous convolution for semantic
image segmentation. arXiv: Comp. Res. Repository, 2017. 2
[3] Dorin Comaniciu and Peter Meer. Mean shift: A robust ap-
proach toward feature space analysis. IEEE Trans. Pattern
Anal. Mach. Intell., 2002. 3

[4] Jifeng Dai, Kaiming He, Yi Li, Shaoqing Ren, and Jian Sun.
In Proc.

Instance-sensitive fully convolutional networks.
Eur. Conf. Comp. Vis., 2016. 2

[5] Jifeng Dai, Kaiming He, and Jian Sun. Instance-aware se-
In

mantic segmentation via multi-task network cascades.
Proc. IEEE Conf. Comp. Vis. Patt. Recogn., 2016. 2

[6] Bert De Brabandere, Davy Neven, and Luc Van Gool.
Semantic instance segmentation with a discriminative loss
function. arXiv: Comp. Res. Repository, 2017. 1, 2, 3

[7] Engelmann Francis, Kontogianni Theodora, Hermans
Alexander, and Leibe Bastian. Exploring spatial context for
3d semantic segmentation of point clouds. In Proc. 3DRMS
Workshop of Int. Conf. Computer Vision, 2017. 2

[8] Ross Girshick, Jeff Donahue, Trevor Darrell, and Jitendra
Malik. Rich feature hierarchies for accurate object detection
and semantic segmentation. In Proc. IEEE Conf. Comp. Vis.
Patt. Recogn., 2014. 2

[9] Joris Guerry, Alexandre Boulch, Bertrand Le Saux, Julien
Moras, Aur´elien Plyer, and David Filliat. Snapnet-r: Consis-
tent 3d multi-view semantic labeling for robotics. In Proc.
Workshop of Int. Conf. Computer Vision, 2017. 3

[10] Kaiming He, Georgia Gkioxari, Piotr Doll´ar, and Ross Gir-
In Proc. IEEE Int. Conf. Comp. Vis.,

shick. Mask r-cnn.
2017. 1, 2

[11] Jing Huang and Suya You. Point cloud labeling using 3d con-
volutional neural network. In Proc. Int. Conf. Patt. Recogn.,
2016. 2

[12] Jing Huang and Suya You. Point cloud labeling using 3d con-
volutional neural network. In Proc. Int. Conf. Patt. Recogn.,
2016. 3

[13] Qiangui Huang, Weiyue Wang, and Ulrich Neumann. Recur-
rent slice networks for 3d segmentation of point clouds. In
Proc. IEEE Conf. Comp. Vis. Patt. Recogn., 2018. 3

[14] Alexander Kirillov, Kaiming He, Ross Girshick, Carsten
Rother, and Piotr Doll´ar. Panoptic segmentation. arXiv:
Comp. Res. Repository, 2018. 2

[15] Alex Krizhevsky, Ilya Sutskever, and Geoffrey E Hinton.
Imagenet classiﬁcation with deep convolutional neural net-
works. In Proc. Advances in Neural Inf. Process. Syst., 2012.
2

[16] Loic Landrieu and Martin Simonovsky. Large-scale point
In

cloud semantic segmentation with superpoint graphs.
Proc. IEEE Conf. Comp. Vis. Patt. Recogn., 2018. 1, 3

[17] Yangyan Li, Rui Bu, Mingchao Sun, and Baoquan Chen.

Pointcnn. arXiv: Comp. Res. Repository, 2018. 3

[18] Guosheng Lin, Anton Milan, Chunhua Shen, and Ian D
Reid. Reﬁnenet: Multi-path reﬁnement networks for high-
resolution semantic segmentation.
In Proc. IEEE Conf.
Comp. Vis. Patt. Recogn., 2017. 2

[19] Guosheng Lin, Chunhua Shen, Anton van den Hengel, and
Ian Reid. Exploring context with deep structured models for
semantic segmentation.
IEEE Trans. Pattern Anal. Mach.
Intell., 2017. 2

[20] Shu Liu, Jiaya Jia, Sanja Fidler, and Raquel Urtasun. Se-
In

quential grouping networks for instance segmentation.
Proc. IEEE Int. Conf. Comp. Vis., 2017. 2, 5

[21] Jonathan Long, Evan Shelhamer, and Trevor Darrell. Fully
convolutional networks for semantic segmentation. In Proc.
IEEE Conf. Comp. Vis. Patt. Recogn., 2015. 1, 2

[22] Laurens van der Maaten and Geoffrey Hinton. Visualizing

data using t-sne. J. Mach. Learn. Res., 2008. 2

[23] Daniel Maturana and Sebastian Scherer. Voxnet: A 3d con-
volutional neural network for real-time object recognition.
In Proc. IEEE/RSJ Int. Conf. Intelligent Robots & Systems,
2015. 3

[24] Alejandro Newell, Zhiao Huang, and Jia Deng. Associa-
tive embedding: End-to-end learning for joint detection and
grouping.
In Proc. Advances in Neural Inf. Process. Syst.
2017. 2

[25] Pedro O. Pinheiro, Ronan Collobert, and Piotr Dollr. Learn-
ing to segment object candidates. In Proc. Advances in Neu-
ral Inf. Process. Syst., 2015. 2

[26] Charles R. Qi, Hao Su, Kaichun Mo, and Leonidas J. Guibas.
Pointnet: Deep learning on point sets for 3d classiﬁcation
and segmentation.
In Proc. IEEE Conf. Comp. Vis. Patt.
Recogn., 2017. 2, 3, 4, 5, 8

[27] Charles R Qi, Hao Su, Matthias Nießner, Angela Dai,
Mengyuan Yan, and Leonidas J Guibas. Volumetric and
multi-view cnns for object classiﬁcation on 3d data. In Proc.
IEEE Conf. Comp. Vis. Patt. Recogn., 2016. 3

[28] Charles Ruizhongtai Qi, Li Yi, Hao Su, and Leonidas J
Guibas. Pointnet++: Deep hierarchical feature learning on
point sets in a metric space. In Proc. Advances in Neural Inf.
Process. Syst., 2017. 2, 3, 8

[29] Mengye Ren and Richard S. Zemel. End-to-end instance
segmentation with recurrent attention. In Proc. IEEE Conf.
Comp. Vis. Patt. Recogn., 2017. 5

[30] Gernot Riegler, Ali Osman Ulusoy, and Andreas Geiger.
Octnet: Learning deep 3d representations at high resolutions.
In Proc. IEEE Conf. Comp. Vis. Patt. Recogn., 2017. 3

[31] B. Shi, S. Bai, Z. Zhou, and X. Bai. DeepPano: Deep
IEEE

panoramic representation for 3-d shape recognition.
Signal Processing Letters, 2015. 3

[32] Karen Simonyan and Andrew Zisserman. Very deep convo-
lutional networks for large-scale image recognition. arXiv:
Comp. Res. Repository, 2014. 2

[33] Hang Su, Subhransu Maji, Evangelos Kalogerakis, and Erik
Learned-Miller. Multi-view convolutional neural networks
for 3d shape recognition.
In Proc. IEEE Int. Conf. Comp.
Vis., 2015. 3

[34] Lyne Tchapmi, Christopher Choy, Iro Armeni, JunYoung
Gwak, and Silvio Savarese. Segcloud: Semantic segmenta-

4104

tion of 3d point clouds. In Proc. Int. Conf. 3D Vision, 2017.
1, 5

[35] Weiyue Wang, Ronald Yu, Qiangui Huang, and Ulrich Neu-
mann. SGPN: Similarity group proposal network for 3d
point cloud instance segmentation.
In Proc. IEEE Conf.
Comp. Vis. Patt. Recogn., 2018. 2, 5, 8

[36] Yue Wang, Yongbin Sun, Ziwei Liu, Sanjay E Sarma,
Michael M Bronstein, and Justin M Solomon. Dynamic
graph cnn for learning on point clouds. arXiv: Comp. Res.
Repository, 2018. 3, 4

[37] Zhirong Wu, Shuran Song, Aditya Khosla, Fisher Yu, Lin-
guang Zhang, Xiaoou Tang, and Jianxiong Xiao.
3d
shapenets: A deep representation for volumetric shapes. In
Proc. IEEE Conf. Comp. Vis. Patt. Recogn., 2015. 3

[38] Xiaoqing Ye, Jiamao Li, Hexiao Huang, Liang Du, and Xi-
aolin Zhang. 3d recurrent neural networks with context fu-
sion for point cloud semantic segmentation.
In Proc. Eur.
Conf. Comp. Vis., 2018. 2, 4

[39] Li Yi, Vladimir G. Kim, Duygu Ceylan, I-Chao Shen,
Mengyan Yan, Hao Su, Cewu Lu, Qixing Huang, Alla Shef-
fer, and Leonidas Guibas. A scalable active framework for
region annotation in 3d shape collections. SIGGRAPH Asia,
2016. 2, 4

[40] Wei Zhuo, Mathieu Salzmann, Xuming He, and Miaomiao
Liu.
Indoor scene parsing with instance segmentation, se-
mantic labeling and support relationship inference. In Proc.
IEEE Conf. Comp. Vis. Patt. Recogn., 2017. 5

4105

