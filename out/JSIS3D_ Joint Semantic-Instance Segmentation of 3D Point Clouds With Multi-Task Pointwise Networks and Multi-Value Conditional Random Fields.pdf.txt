JSIS3D: Joint Semantic-Instance Segmentation of 3D Point Clouds with

Multi-Task Pointwise Networks and Multi-Value Conditional Random Fields

Quang-Hieu Pham†

Duc Thanh Nguyen‡

Binh-Son Hua⊲

Gemma Roig†

Sai-Kit Yeung⊳

†Singapore University of Technology and Design

‡Deakin University
⊲The University of Tokyo
⊳Hong Kong University of Science and Technology

Abstract

Deep learning techniques have become the to-go mod-
els for most vision-related tasks on 2D images. However,
their power has not been fully realised on several tasks in
3D space, e.g., 3D scene understanding. In this work, we
jointly address the problems of semantic and instance seg-
mentation of 3D point clouds. Speciﬁcally, we develop a
multi-task pointwise network that simultaneously performs
two tasks: predicting the semantic classes of 3D points and
embedding the points into high-dimensional vectors so that
points of the same object instance are represented by simi-
lar embeddings. We then propose a multi-value conditional
random ﬁeld model to incorporate the semantic and in-
stance labels and formulate the problem of semantic and in-
stance segmentation as jointly optimising labels in the ﬁeld
model. The proposed method is thoroughly evaluated and
compared with existing methods on different indoor scene
datasets including S3DIS and SceneNN. Experimental re-
sults showed the robustness of the proposed joint semantic-
instance segmentation scheme over its single components.
Our method also achieved state-of-the-art performance on
semantic segmentation.

1. Introduction

The growing popularity of low-cost 3D sensors (e.g.,
Kinect) and light-ﬁeld cameras has opened many 3D-based
applications such as autonomous driving, robotics, mobile-
based navigation, virtual reality, and 3D games. This de-
velopment also acquires the capability of automatic under-
standing of 3D data.
In 2D domain, common scene un-
derstanding tasks including image classiﬁcation, semantic
segmentation, or instance segmentation, have achieved no-
table results [13, 3]. However, the problem of 3D scene un-
derstanding poses much greater challenges, e.g., large-scale
and noisy data processing.

Literature has shown that the data of a 3D scene can

be represented by a set of images capturing the scene at
different viewpoints [14, 46, 42], in a regular grid of vol-
umes [47, 26, 28], or simply in a 3D point cloud [33, 16,
45, 17, 24]. Our work is inspired by the point-based repre-
sentation for several reasons. Firstly, compared with multi-
view and volumetric representations, point clouds offer a
more compact and intuitive representation of 3D data. Sec-
ondly, recent neural networks directly built on point clouds
[33, 16, 24, 45, 17, 18, 22, 23, 48] have shown promising
results across multiple tasks such as object recognition and
semantic segmentation.

In this paper, we address two fundamental problems in
3D scene understanding: semantic segmentation and in-
stance segmentation. Semantic segmentation aims to iden-
tify a class label or object category (e.g., chair, table) for
every 3D point in a scene while instance segmentation clus-
ters the scene into object instances. These two problems
have often been tackled separately in which instance seg-
mentation/detection is a post-processing task of semantic
segmentation [31, 30]. However, we have observed that ob-
ject categories and object instances are mutually dependent.
For instance, shape and appearance features extracted on an
instance would help to identify the object category of that
instance. On the other hand, if two 3D points are assigned to
different object categories, they unlikely belong to the same
object instance. Therefore, it is desirable to couple seman-
tic and instance segmentation into a single task. Towards the
above motivations, we make the following contributions in
our work.

• A network architecture namely multi-task pointwise
network (MT-PNet) that simultaneously performs two
tasks: predicting the object categories of 3D points in a
point cloud, and embedding these 3D points into high-
dimensional feature vectors that allow clustering the
points into object instances.

• A multi-value conditional random ﬁeld (MV-CRF)
model that formulates the joint optimisation of class
labels and object instances into a uniﬁed framework,

8827

Window

Sematic labels

t
e
N
P
-
T
M

Sematic class 
probabilities

Embeddings

F
R
C
V
M

-

Variational 
inference

Instance labels

Input: Point cloud

Section 3.1

Section 3.2

Section 3.3

Output: semantic class labels + instance labels

Figure 1. Pipeline of our proposed method. Given an input 3D point cloud, we scan the point cloud by overlapping windows. 3D vertices
are then extracted from a window and passed through our multi-task neural network to get the semantic labels and instance embeddings.
We then optimise a multi-value conditional random ﬁeld model to produce the ﬁnal results. Scene data is retrieved from [15].

which can be efﬁciently solved using variational mean
ﬁeld technique. To the best of our knowledge, we are
the ﬁrst to explore the joint optimisation of semantics
and instances in a uniﬁed framework.

• Extensive

on

different

experiments

benchmark
datasets to validate the proposed method as well as
its main components. Experimental results showed
that
the joint semantic and instance segmentation
outperformed each individual task, and the proposed
method achieved state-of-the-art performance on
semantic segmentation.

The remainder of the paper is organised as follows. Sec-
tion 2 brieﬂy reviews related work. The proposed method
is described in Section 3. Experiments and results are pre-
sented and discussed in Section 4. The paper is ﬁnally con-
cluded in Section 5.

2. Related Work

This section reviews recent semantic and instance seg-
mentation techniques in 3D space. We especially focus on
deep learning-based techniques applied on 3D point clouds
due to their proven robustness as well as being contempo-
rary seminal in the ﬁeld. For the sake of brevity, we later
refer to the traditional, category-based semantic segmenta-
tion as semantic segmentation, and instance-based semantic
segmentation as instance segmentation.

2.1. Semantic Segmentation

Recent availability of indoor scene datasets [37, 15, 5, 1]
has sparked research interests in 3D scene understanding,
particularly semantic segmentation. We categorise these re-
cent works into three main categories based on their type of
input data, namely multi-view images, volumetric represen-
tation, and point clouds.

Multi-view approach. This approach often uses pre-
trained models on 2D domain and applies them to 3D space.

Per-vertex labels are obtained by back-projecting and fus-
ing 2D predictions from colour or RGB-D images onto 3D
space. Predictions on 2D can be done via classiﬁers, e.g.,
random forests [14, 36, 46, 42], or deep neural networks
[27, 49, 30]. Such techniques can be implemented in tan-
dem with 3D scene reconstruction, creating a real-time se-
mantic reconstruction system. However, this approach suf-
fers from inconsistencies between 2D predictions, and its
performance might depend on view placements.

Volumetric approach. The robustness of deep neural net-
works in solving several scene understanding tasks on im-
ages has inspired applying deep neural networks directly in
3D space to solve 3D scene understanding problem. In fact,
convolutions on a regular grid, e.g., image structures, can
be easily extended to 3D, which leads to deep learning with
volumetric representation [47, 26, 28]. To support high-
resolution segmentation and reduce memory footprints, a
hierarchical data structure such as an octree was proposed
to limit convolution operations only on free-space voxels
[35].
It has been shown that the performance of seman-
tic segmentation can be improved by solving the problem
jointly with scene completion [39, 6].

Point cloud approach.
In contrast to volume, point cloud
is a compact yet intuitive representation that directly stores
attributes of the geometry of a 3D scene via coordinates and
normals of vertices. Point clouds arise naturally from com-
modity devices such as multi-view stereos, depth, and LI-
DAR sensors. Point clouds can also be converted to other
representations such as volumes [40] or mesh [41]. While
convolutions can be done conveniently on volumes [40],
they are not applicable straightforwardly on point clouds.
This problem was ﬁrst addressed in the work of Qi et al.
[32], and subsequently explored by several others, e.g.,
[33, 16, 45, 17, 24, 23, 48]. Semantic segmentation can fur-
ther be extended to graph convolution to handle large-scale
point clouds [22], and with the use of kd-tree to address
non-uniform point distributions [18, 12].

8828

nx3

T­Net 
(3x3) 

nx3

mlp 

(64, 64) 

nx64

T­Net 
(64x64) 

nx64

mlp 

(64, 128,
1024) 

global feature

1024

l
o
o
p

 

x
a
m

nx1024

instance embeddings

nx1088

mlp 

(512, 256) 

nx128

mlp 

(64, 32) 

nx32

mlp 

(64, 32) 

nx13 

categorial probabilities

Figure 2. Our proposed MT-PNet architecture, which based on PointNet [32]. The point cloud ﬁrst go through a feed-forward neural
network to compute a 128-dimension feature vector for each point. Here it splits into to branches: one for instance embedding and the
other for semantic segmentation.

Conditional Random Fields (CRFs) CRFs are often
used in semantic segmentation of 3D scenes, e.g., [41, 14,
20, 46, 42, 27, 34]. In general, CRFs make use of unary and
binary potentials capturing characteristics of individual 3D
points [46] or meshes [41], and their co-occurrence. To en-
hance CRFs with prior knowledge, higher-order potentials
are introduced [21, 11, 50, 2, 49, 10, 30]. Higher-order po-
tentials, e.g., object detections [21, 2, 30], act as additional
cues to help the inference of semantic class labels in CRFs.

2.2. Instance Segmentation

In general, there are two common strategies to tackle in-
stance segmentation. The ﬁrst strategy is to localise ob-
ject bounding boxes using object detection techniques, and
then ﬁnd a mask that separates foreground and background
within each box. This approach has been shown to work
robustly with images [7, 13], while deemed challenging in
3D domain. This probably due to existing 3D object de-
tectors are often not trained from scratch but make use of
image features [9, 31, 25]. Extending such approaches with
masks is possible but might lead to a sub-optimal and more
complicated pipeline.

Instead, given the promising results of semantic segmen-
tation on 3D data [32, 1, 16], the second strategy is to extend
a semantic segmentation framework by adding a procedure
that proposes object instances. In an early attempt, Wang
et al. [44] proposed to learn a semantic map and a similar-
ity matrix of point features based on the PointNet in [32].
Authors then proposed an heuristic and non-maximal sup-
pression step to merge similar points into instances.

3. Proposed Method

In this section, we describe our proposed method for
semantic and instance segmentation of 3D point clouds.
Given a 3D point cloud, we ﬁrst scan the entire point cloud
by overlapping 3D windows. Each window (with its associ-

ated 3D vertices) is passed to a neural network for predict-
ing the semantic class labels of the vertices within the win-
dow and embedding the vertices into high-dimensional vec-
tors. To enable such tasks, we develop a multi-task point-
wise network (MT-PNet) that aims to predict an object class
for every 3D point in the scene and at the same time to em-
bed the 3D point with its class label information into a vec-
tor. The network encourages 3D points belonging to the
same object instance be pulled to each other while pushing
those of different object instances as far away from each
other as possible. Those class labels and embeddings are
then fused into a multi-value conditional random ﬁeld (MV-
CRF) model. The semantic and instance segmentation are
ﬁnally performed jointly using variational inference. We il-
lustrate the pipeline of our method in Figure 1 and describe
its main components in the following sub-sections.

3.1. Multi Task Pointwise Network (MT PNet)

Our MT-PNet is based on the feed forward architecture
of PointNet proposed by Qi et al. in [32] (see Figure 2).
Speciﬁcally, for an input point cloud of size N , a feature
map of size N × D, where D is the dimension of features
for each point, is ﬁrst computed. The MT-PNet then di-
verges into two different branches performing two tasks:
predicting the semantic labels for 3D points and creating
their pointwise instance embeddings. The loss of our MT-
PNet is the sum of the losses of its two branches,

L = Lprediction + Lembedding

(1)

The prediction loss Lprediction is deﬁned by the cross-
Inspired by the work in [8], we em-
entropy as usual.
ploy a discriminative function to present the embedding
loss Lembedding.
In particular, suppose that there are K
instances and Nk, k ∈ {1, ..., K} is the number of elements
in the k-th instance, ej ∈ Rd is the embedding of point vj ,
and µk is the mean of embeddings in the k-th instance. The

8829

embedding loss can be deﬁned as follows,

Lembedding = α · Lpull + β · Lpush + γ · Lreg

(2)

values in S × I. The joint semantic-instance segmentation
of the point cloud V thus can be formulated via minimising
the following energy function,

(4)

(5)

where

Lpull =

1
K

K

Xk=1

1
Nk

Nk

Xj=1(cid:2)kµk − ejk2 − δv(cid:3)2

+

(3)

Lpush =

1

K(K − 1)

K

K

Xk=1

Xm=1,m6=k

[2δd − kµk − µmk2]2

+

Lreg =

1
K

K

Xk=1

kµkk2

where [x]+ = max(0, x), δv and δd are respectively the
margins for the pull loss Lpull and push loss Lpush. We set
α = β = 1 and γ = 0.001 in our implementation.

A simple intuition for this embedding loss is that the pull
loss Lpull attracts embeddings towards the centroids, i.e.,
µk, while the push loss Lpush keeps these centroids away
from each other. The regularisation loss Lreg acts as a small
force that draws all centroids towards the origin. As shown
in [8], if we set the margin δd > 2δv, then each embedding
will be closer to its own centroid than other centroids.

3.2. Multi Value Conditional Random Fields (MV 

CRF)

1 , ..., lS

Let V = {v1, .., vN } be the point cloud of a 3D scene
obtained after 3D reconstruction. Each 3D vertex vj in
the point cloud is represented by its 3D location lj =
[xj, yj, zj], normal nj = [nj,x, nj,y, nj,z], and colour cj =
[cj,R, cj,G, cj,B]. By using the proposed MT-PNet, we also
obtain an embedding ej ∈ Rd for each point vj . Let
LS = {lS
N } be the set of semantic labels that need
to be assigned to the point cloud V , where lS
j represent the
semantic class, e.g., chair, table, etc., of vj . Similarly, let
LI = {lI
N } be the set of instance labels of V , i.e.,
all vertices of the same object instance will have the same
instance label lI
j are random variables
taking values in S and I which are the set of semantic labels
and instance labels respectively. Note that S is predeﬁned
while I is unknown and needs to be determined through in-
stance segmentation.

j . The labels lS

j and lI

1, ..., lI

We now consider each vertex vj ∈ V as a node in a
graph, two arbitrary nodes vj , vk are connected by an undi-
rected edge, and each vertex vj is associated with its seman-
tic and instance labels represented by the random variables
lS
j and lI
j . Our graph deﬁned over V , LS, and LI is named
multi-value conditional random ﬁelds (MV-CRF); this is be-
cause each node vj is associated to two labels (lS
j ) taking

j , lI

ϕ(lS

E(LS, LI |V ) =Xj
+Xj
+Xs∈SXi∈I

j ) + X(j,k),j<k
j ) + X(j,k),j<k

ψ(lI

ϕ(lS

j , lS
k )

ψ(lI

j , lI
k)

φ(s, i)

(6)

We note that our MV-CRF substantially differs from ex-
isting higher-order CRFs, e.g., [21, 11, 2, 30]. Speciﬁcally,
in existing higher-order CRFs, higher-orders, e.g. object de-
tections, are used as prior knowledge that helps to improve
segmentation. In contrast, our MV-CRF treats instance la-
bels and semantic labels equally as unknown and optimises
them simultaneously.

The energy function E(LS, LI |V ) in (6) involves in a
number of potentials that incorporate physical constraints
(e.g., surface smoothness, geometric proximity) and se-
mantic constraints (e.g., shape consistency between object
class and instances) in both semantic and instance labeling.
Speciﬁcally, the unary potential ϕ(lS
j ) is deﬁned over the
semantic labels lS
j and computed directly from the classiﬁ-
cation score of MT-PNet as,

ϕ(lS

j = s) ∝ − log p(vj|lS

j = s)

(7)

where s is a possible class label in S and p(vj|lS
j = s) is the
probability (e.g., softmax value) that our network classiﬁes
vj to the semantic class s.

We have found that vertices of the same object class of-
ten share the same distribution of classiﬁcation scores, i.e.,
p(vj|lS
j , lS
k )
via the classiﬁcation scores of both vj and vk. Speciﬁcally,
we deﬁne,

j ). We thus model the pairwise potential ϕ(lS

ϕ(lS

j , lS

k ) = ωj,k exp(cid:26) −

[p(vj|lS

j ) − p(vk|lS

k )]2

2θ2

(cid:27) (8)

where ωj,k is obtained from the Pott compatibility as,

ωj,k =(−1,

1,

j = lS/I

if lS/I
otherwise.

k

(9)

The unary potential ψ(lI

j ) enforces embeddings be-
longed to the same instance to get as close to their mean em-
beddings as possible. Intuitively, embeddings of the same
instance are expected to convert to their modes in the em-
bedding space. Meanwhile, embeddings of different in-
stances are encouraged to diverge from each other. Speciﬁ-
cally, suppose that the instance label set I = {i1, ..., iK} in-
cludes K instances. Suppose that the current conﬁguration

8830

of LI assigns all the vertices in V into these K instances.
For each instance label i ∈ I, we deﬁne,

ψ(lI

j = i) = −

exp(cid:20) − 1
− log(cid:20)Xk

1(lI

2 (ej − µi)⊤Σ−1

i

p(2π)d|Σi|
k = i)(cid:21)

(ej − µi)(cid:21)

(10)

where µi and Σi respectively denote the mean and covari-
ance matrix of embeddings assigned to the label i, and 1(·)
is an indicator.

The termPk 1(lI

k = i) in (10) represents the area of in-
stance i and is used to favour large instances. We have found
that this term could help to remove tiny instances caused by
noise in the point cloud.

The pairwise potential of instance labels ψ(lI

k) cap-
tures geometric properties of surfaces in object instances
and is deﬁned as a mixture of Gaussians of the locations,
normals, and colour of vertices vj and vk. In particular,

j , lI

ψ(lI

j , lI

k) =

ωj,k exp(cid:18) −

klj − lkk2
2

2λ2
1

−

knj − nkk2
2

2λ2
2

−

kcj − ckk2
2

2λ2
3

(cid:19)

(11)

where ωj,k is presented in (9).

The term φ(s, i) in (6) associates the semantic-based po-
tentials with instance-based potentials and encourages the
consistency between semantic and instance labels. For in-
stance, if two vertices are assigned to the same object in-
stance, they should be assigned to the same object class.
Technically, if we compute a histogram hi of frequencies
of semantic labels s for all vertices of object instance i, we
can deﬁne φ(s, i) based on the mutual information between
s and i as,

φ(s, i) = −hi(s) log hi(s)

(12)

where hi(s) is the frequency that semantic label s occurs in
vertices whose instance label is i.

As shown in (12), given an instance label i, the sum of
φ(s, i) over all semantic labels s ∈ S is the information
the object instance i, i.e.,
entropy of the labels s w.r.t.

Ps∈S φ(s, i) = −Ps∈S hi(s) log hi(s). A good label-

ing, therefore, should minimise such entropy, leading to low
variation of semantic labels within the same object instance.
Since the energy E(LS, LI |V ) in (6) sums over all semantic
labels s and instance labels i, it would favour highly consis-
tent labelings.

3.3. Variational Inference

The minimisation of E(LS, LI |V ) in (6) is equivalent to
the maximisation of the posterior conditional p(LS, LI |V )

which is intractable to be solved using a naive implemen-
tation. In this paper, we adopt mean ﬁeld variational ap-
proach to solve this optimisation problem [43]. In general,
the idea of mean ﬁeld variational inference is to approxi-
mate the probability distribution p(LS, LI |V ) by a varia-
tional distribution Q(LS, LI ) that can be fully factorised
over all random variables in (LS, LI ), i.e., Q(LS, LI ) =

j , lI

j ).

Qj Qj(lS

However, the factorisation of Q(LS, LI ) over all pairs in
(LS, LI ) induces a computational complexity of |S| × |I|
per vertex. In addition, since our proposed MV-CRF model
is fully connected, message passing steps used in conven-
tional implementation of mean ﬁeld approximation require
quadratic complexity in the number of random variables
(i.e., 2N ). Fortunately, since our pairwise potentials, de-
ﬁned in (8) and (11), are expressed in Gaussians, message
passing steps can be performed efﬁciently via applying con-
volution operations with Gaussian ﬁlters on downsampled
versions of Q, followed by upsampling [19]. Truncated
Gaussians can be also be used to approximate these Gaus-
sian ﬁlters to further speed up the message passing process
[29].

We ﬁrst assume that LS and LI are independent in
the joint variational distribution Q(LS, LI ), and hence
Q(LS, LI ) can be decomposed as,

Q(LS, LI ) =(cid:20) N
Yj=1

QS

j (lS

j )(cid:21)(cid:20) N
Yj=1

QI

j (lI

j )(cid:21)

(13)

The assumption in (13) allows us to derive mean ﬁeld
update equations for semantic and instance variational dis-
tributions QS and QL.

Since the termPs∈SPi∈I φ(s, i) in (6) is not expressed

in relative to the index j, for convenience to the computation
of mean ﬁeld updates, for each vertex vj , we deﬁne a new
term mj as,

mj = Ps∈S hlI

j

(s) log hlI
k = lI
j )

j

(s)

Pvk∈V 1(lI

(14)

By using mj , the termPs∈SPi∈I φ(s, i) in (6) can be

rewritten as,

Xs∈SXi∈I

φ(s, i) = Xvj ∈V

mj

(15)

We then obtain mean ﬁeld updates,

j = s)

1
Zj

exp(cid:20) − ϕ(lS
− Xs′∈SXk6=j

QS

k (lS

k = s′)ϕ(lS

j , lS

k ) − mj(cid:21),

(16)

QS

j (lS

j = s) ←

8831

and

QI

j (lI

j = i) ←

j = i)

1
Zj

exp(cid:20) − ψ(lI
−Xi′∈IXk6=j

QI

k(lI

k = i′)ψ(lI

j , lI

k) − mj(cid:21)

(17)

where Zj is the partition function that makes Q(LS, LI ) a
probability mass function during the optimisation.

4. Experiments

4.1. Experimental Setup

Our MT-PNet was implemented in PyTorch. We trained
our network using the SGD optimiser. The learning rate
was set to 0.01 and decay rate was set to 0.5 after every 50
epochs. The training took 10 hours on a single NVIDIA
TITAN X graphics card.

For the joint optimisation of semantic and instance la-
beling, we initialised the semantic and instance labels for
3D vertices as follows. Semantic labels with associated
classiﬁcation scores were obtained directly from MT-PNet.
Embeddings for all 3D vertices were also extracted.
Ini-
tial instance labels were then determined by applying the
mean shift algorithm [4] on the embeddings. The band-
width of mean shift was set to the margin of the push force
δd in (4). We set δd = 1.5 and found this setting achieved
the best performance. In addition, when setting the band-
width to lower values, our performance will drop due to
over-segmentation. We note that the number of clusters
generated by the mean shift algorithm may be much larger
than the true number of instances since we allow over-
segmentation. After the joint optimisation step, we only
maintain instances that pertain at least one vertex.

Input of our MT-PNet is a point cloud of 4,096 points. To
handle large-scale scenes, an input point cloud was divided
into overlapping windows, each of which roughly contains
4,096 points. Each window was fed to our MT-PNet to ex-
tract instance embeddings. The embeddings from all the
windows were merged using the BlockMerging proce-
dure in SGPN [44]. Joint optimisation was then applied on
the entire scene. Finally, we employ non-maximal suppres-
sion to yield the ﬁnal semantic-instance predictions.

4.2. Datasets

We conducted all experiments on two datasets: S3DIS
[1] and SceneNN [15]. S3DIS is a 3D scene dataset that
includes large-scale scans of indoor spaces at building level.
On this dataset, we performed experiments at the provided
disjoint spaces, which were typically parsed to about 10–
80 object instances. The objects were annotated with 13
categories. We followed the original train/test split in [1].

Since S3DIS does not include normals of 3D vertices, we
simpliﬁed (11) with only location and colour.

SceneNN [15] is a scene meshes dataset of indoor scenes
with cluttered objects at room scale. Their semantic seg-
mentation follows NYU-D v2 [37] category set, which has
40 semantic classes. On this dataset, we followed the
train/test split by Hua et al. [16]. Similar to S3DIS, the
semantic and instance segmentation were done on overlap-
ping windows.

4.3. Evaluation and Comparison

In this section, we provide a comprehensive evaluation of
our method and its variants, and comparisons with existing
methods in both semantic and instance segmentation tasks.
Several results of our method are shown in Figure 3.

Ablation study. We study the effectiveness of joint
semantic-instance segmentation compared with its individ-
ual tasks. This study is done by investigating the role of po-
tentials of the energy of our MV-CRF deﬁned in (6). Specif-
ically, for semantic segmentation, we investigate the use of
unary potentials in (7) only and traditional CRFs combining
(7) and (8). Similarly, for instance segmentation, we com-
pare the use of (10) only and the combination of (10) and
(11). We also measure the performance of the joint task, i.e.,
the whole energy of MV-CRF. Table 1 compares MV-CRF
and its variants in both semantic and instance segmentation
on S3DIS. Metrics include micro-mean accuracy (mAcc)1
[38] for semantic segmentation and mAP@0.5 for instance
segmentation.

Semantic segmentation

Instance segmentation

Method

mAcc

Method mAP@0.5

(7)
(7) + (8)
MV-CRF

86.7
86.9
87.4

(10)
(10) + (11)
MV-CRF

24.9
27.4
36.3

Table 1. Comparison of our MV-CRF and its variants.

Semantic segmentation. Table 2 and Table 4 show the
performance of our proposed method in semantic segmen-
tation on S3DIS and SceneNN dataset, respectively.

In this task, we evaluate the stand-alone performance
of MT-PNet, marked as “Ours (MT-PNet)”, and when run-
ning the full pipeline with MV-CRF, marked as “Ours (MV-
CRF)”. We also compare our method with other state-of-
the-art deep neural networks including PointNet [32], Point-
wiseCNN [16], and SEGCloud [40]. The evaluation metric
is per-class accuracy and micro-mean accuracy.

1Micro-mean takes into account the size of classes in calculating the
average accuracy and thus is often used for unbalanced data. In our context,
micro-mean accuracy is equivalent to the overall accuracy that is often used
in semantic segmentation.

8832

Method mAcc

ceiling

ﬂoor wall window door

table

chair

sofa

bookcase

board

clutter

PointNet [32]
Pointwise [16]
SEGCloud [40]
Ours (MT-PNet)
Ours (MV-CRF)

78.6
81.5
80.8
86.7
87.4

88.8
97.9
90.1
97.4
98.4

97.3
99.3
96.1
99.6
99.6

69.8
92.7
69.9
92.7
94.4

46.3
49.6
38.4
60.1
59.7

10.8
50.6
23.1
26.4
24.9

52.6
74.1
75.9
80.8
80.6

58.9
58.2
70.4
83.7
84.9

40.3

0

58.4
23.7
30

5.9
39.3
40.9
61.1
63.0

26.4

0
13
55.2
52.5

33.2
61.1
41.6
70.6
70.5

Table 2. Semantic segmentation results on S3DIS. Here we also show the stand-alone performance of MT-PNet, and when running the full
pipeline with MV-CRF.

Method mAP

ceiling

ﬂoor wall window door

table

chair

sofa

bookcase

board

clutter

Armeni et al. [1]
SGPN [44]
Ours (MT-PNet)
Ours (MV-CRF)

-

54.4
24.9
36.3

71.6
79.4
71.5
76.9

88.7
66.3
78.4
83.6

72.9
88.8
28.3
32.2

25.9
66.6
24.4
51.4

54.1
56.8
3.5
7.2

46
46.9
12.1
16.3

16.2
40.8
36.2
23.6

6.8
6.4
10
16.7

54.7
47.6
12.6
21.8

3.9
11.1
34.5
52.1

-
-

12.8
13.4

Table 3. Instance segmentation results on S3DIS. Here we also show the stand-alone performance of MT-PNet, and when running the full
pipeline with MV-CRF. Note that results from Armeni et al. are on 3D bounding boxes instead of point clouds.

S3DIS

SceneNN

Figure 3. Semantic and instance segmentation results. From left to right: input point cloud, ground truth of semantic segmentation, our
semantic segmentation result, ground truth of instance segmentation, our instance segmentation result. For semantic segmentation, different
colours represent different categories. For instance segmentation, different colours represent different instances.

Experimental results show that our proposed MT-PNet
signiﬁcantly outperforms its original architecture (i.e.,
PointNet [32]), and the improvement comes from the multi-
task architecture. To conﬁrm this, we performed an experi-
ment where we trained our MT-PNet with the instance em-
bedding branch disabled. The disabled-embedding branch
network obtained the same performance with the vanilla

PointNet on semantic segmentation task.

As shown in Table 2 and Table 4, our MV-CRF also well
improves the base results from MT-PNet and achieves state-
of-the-art performance on semantic segmentation. This
proves that multi-task learning and joint optimisation can be
beneﬁcial. Figure 4 shows a close-up example to illustrate
the potential of our MV-CRF in semantic segmentation.

8833

Method wall

ﬂoor

cabinet

bed

chair

sofa

table

desk

tv

prop

Pointwise [16]
Ours (MT-PNet)
Ours (MLS-CRF)

93.8
94.2
96.0

88.6
91.5
92.4

1.5
9.2
10.0

11.6
58.4
74.6

58.6
81.4
83.0

5.5
10.9
11.0

23.5
37.3
44.5

29.5
54.0
61.7

7.7
33.3
24.4

5.8
13.2
11.1

Table 4. Semantic segmentation results on SceneNN. Here we only show a subset of representative classes of NYUv2, as some of the
classes are not presented in SceneNN.

Method wall

ﬂoor

cabinet

bed

chair

sofa

table

desk

tv

prop

Ours (MT-PNet)
Ours (MLS-CRF)

13.1
13.9

27.3
44.5

0.0
0.0

15.0
32.9

21.2
12.9

0.0
0.0

0.7
5.7

0.0
10.8

6.0
0.0

2.0
0.8

Table 5. Instance segmentation results on SceneNN. Here we only show a subset of representative classes of NYUv2, as some of the classes
are not presented in SceneNN.

mentation of point clouds, and additional results from Ar-
meni et al. [1]. Compared with the state-of-the-art, our
method shows clear improvement on some categories, e.g.,
ﬂoor, sofa, board, and clutter. However, it produces low pre-
cision segmentation results on other categories such as door.
We have found that this is mainly due to the low semantic
segmentation accuracy in these categories.

5. Conclusion

Semantic and instance segmentation of point clouds are
crucial and fundamental steps in 3D scene understand-
ing. This paper proposes a semantic-instance segmentation
method that jointly performs both of the tasks via a novel
multi-task pointwise network and a multi-value conditional
random ﬁeld model. The multi-task pointwise network
simultaneously learns both the class labels of 3D points
and their embedded representations which enable cluster-
ing 3D points into object instances. The multi-value con-
ditional random ﬁeld model integrates both 3D and high-
dimensional embedded features to jointly perform both se-
mantic and instance segmentation. We evaluated the pro-
posed method and compared it with existing methods on
different challenging indoor datasets. Experimental results
favourably showed the advance of our method in com-
parison to state-of-the-art, and the joint semantic-instance
segmentation approach outperformed its individual compo-
nents.

Acknowledgement. This research project is partially sup-
ported by an internal grant from HKUST (R9429) and the
MOE SUTD SRG grant (SRG ISTD 2017 131).

References

[1] Iro Armeni, Ozan Sener, Amir R Zamir, Helen Jiang, Ioannis
Brilakis, Martin Fischer, and Silvio Savarese. 3D semantic
parsing of large-scale indoor spaces. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion (CVPR), pages 1534–1543, 2016. 2, 3, 6, 7, 8

8834

Figure 4. A close-up example of our method. Left: input, middle:
semantic segmentation, right: instance segmentation.

Instance segmentation. We consider instance segmenta-
tion as object detection and thus evaluate this task using av-
erage precision (AP) with IoU threshold at 0.5. To generate
object hypotheses, each instance j is granted a conﬁdence
score fj calculated as,

fj =

1
|Vj|

log(cid:26) Yvk∈Vj(cid:20)QS

k (lS

k = sj)QI

k(lI

k = j)(cid:21)(cid:27) (18)

j are deﬁned in (16) and (17) respectively.

where Vj is the set of points that have instance label j, and
QS

j and QL
Table 3 and Table 5 report the instance segmentation per-
formance of our method on S3DIS and SceneNN dataset,
respectively. We refer to the results obtained by apply-
ing the mean shift algorithm directly on embeddings from
MT-PNet as “Ours (MT-PNet)” and the results of the full
pipeline with MV-CRF as “Ours (MV-CRF)”. Similarly to
semantic segmentation, experimental results show that our
MV-CRF signiﬁcantly boosts up the segmentation perfor-
mance in comparison to MT-PNet. Figure 4 shows a qual-
itative comparison of our MV-CRF and other methods in
instance segmentation.

We also compare our method with other existing meth-
ods including SGPN [44], a recent method for instance seg-

[2] Anurag Arnab, Sadeep Jayasumana, Shuai Zheng, and Philip
H. S. Torr. Higher order conditional random ﬁelds in deep
neural networks. In European Conference on Computer Vi-
sion (ECCV), pages 524–540, 2016. 3, 4

[3] Liang-Chieh Chen, George Papandreou, Iasonas Kokkinos,
Kevin Murphy, and Alan L Yuille. Deeplab: Semantic im-
age segmentation with deep convolutional nets, atrous con-
volution, and fully connected crfs.
IEEE Transactions on
Pattern Analysis & Machine Intelligence (PAMI), 40(4):834–
848, 2018. 1

[4] Dorin Comaniciu and Peter Meer. Mean shift: A robust ap-
proach toward feature space analysis. IEEE Transactions on
Pattern Analysis & Machine Intelligence (PAMI), (5):603–
619, 2002. 6

[5] Angela Dai, Angel X Chang, Manolis Savva, Maciej Hal-
ber, Thomas Funkhouser, and Matthias Nießner. Scannet:
Richly-annotated 3D reconstructions of indoor scenes.
In
Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition (CVPR), pages 5828–5839, 2017.
2

[6] Angela Dai, Daniel Ritchie, Martin Bokeloh, Scott Reed,
J¨urgen Sturm, and Matthias Nießner. Scancomplete: Large-
scale scene completion and semantic segmentation for 3D
scans. In Proceedings of the IEEE Conference on Computer
Vision and Pattern Recognition (CVPR), pages 4578–4587,
2018. 2

[7] Jifeng Dai, Kaiming He, and Jian Sun. Instance-aware se-
In
mantic segmentation via multi-task network cascades.
Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition (CVPR), pages 3150–3158, 2016.
3

[8] Bert De Brabandere, Davy Neven, and Luc Van Gool.
Semantic instance segmentation with a discriminative loss
function. arXiv preprint arXiv:1708.02551, 2017. 3, 4

[9] Zhuo Deng and Longin Jan Latecki. Amodal detection of
3D objects: Inferring 3D bounding boxes from 2D ones in
rgb-depth images. In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition (CVPR), pages
5762–5770, 2017. 3

[10] Tian Feng, Quang-Trung Truong, Duc Thanh Nguyen, Jing
Yu Koh, Lap-Fai Yu, Alexander Binder, and Sai-Kit Yeung.
Urban zoning using higher-order markov random ﬁelds on
multi-view imagery data.
In Proceedings of the European
Conference on Computer Vision (ECCV), pages 614–630,
2018. 3

[11] S Fidler, Jian Yao, and Raquel Urtasun. Describing the scene
as a whole: Joint object detection, scene classiﬁcation and
semantic segmentation. In 2012 IEEE Conference on Com-
puter Vision and Pattern Recognition (CVPR), pages 702–
709, 2012. 3, 4

[12] F. Groh*, P. Wieschollek*, and H. P. A. Lensch. Flex-
convolution (million-scale point-cloud learning beyond grid-
worlds). In Computer Vision - ACCV 2018 - 14th Asian Con-
ference on Computer Vision, 2018. *equal contribution. 2

[13] Kaiming He, Georgia Gkioxari, Piotr Doll´ar, and Ross Gir-
shick. Mask r-cnn. In Proceedings of the IEEE International
Conference on Computer Vision (ICCV), pages 2961–2969,
2017. 1, 3

[14] Alexander Hermans, Georgios Floros, and Bastian Leibe.
Dense 3D semantic mapping of indoor scenes from rgb-d
images. In 2014 IEEE International Conference on Robotics
and Automation (ICRA), pages 2631–2638, 2014. 1, 2, 3

[15] Binh-Son Hua, Quang-Hieu Pham, Duc Thanh Nguyen,
Minh-Khoi Tran, Lap-Fai Yu, and Sai-Kit Yeung. Scenenn:
A scene meshes dataset with annotations. In 2016 Fourth In-
ternational Conference on 3D Vision (3DV), pages 92–101,
2016. 2, 6

[16] Binh-Son Hua, Minh-Khoi Tran, and Sai-Kit Yeung. Point-
wise convolutional neural networks. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion (CVPR), pages 984–993, 2018. 1, 2, 3, 6, 7, 8

[17] Qiangui Huang, Weiyue Wang, and Ulrich Neumann. Re-
current slice networks for 3D segmentation of point clouds.
In Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition (CVPR), pages 2626–2635, 2018.
1, 2

[18] Roman Klokov and Victor Lempitsky. Escape from cells:
Deep kd-networks for the recognition of 3D point cloud
models. In Proceedings of the IEEE International Confer-
ence on Computer Vision (ICCV), pages 863–872, 2017. 1,
2

[19] Philipp Kr¨ahenb¨uhl and Vladlen Koltun. Efﬁcient inference
in fully connected crfs with gaussian edge potentials.
In
Advances in Neural Information Processing Systems (NIPS),
pages 109–117, 2011. 5

[20] Abhijit Kundu, Yin Li, Frank Dellaert, Fuxin Li, and
James M Rehg. Joint semantic segmentation and 3D recon-
struction from monocular video. In European Conference on
Computer Vision (ECCV), pages 703–718, 2014. 3

[21] L’ubor Ladick`y, Paul Sturgess, Karteek Alahari, Chris Rus-
sell, and Philip H. S. Torr. What, where and how many?
combining object detectors and crfs.
In European Confer-
ence on Computer Vision (ECCV), pages 424–437, 2010. 3,
4

[22] Loic Landrieu and Martin Simonovsky. Large-scale point
cloud semantic segmentation with superpoint graphs. In Pro-
ceedings of the IEEE Conference on Computer Vision and
Pattern Recognition (CVPR), pages 4558–4567, 2018. 1, 2

[23] Jiaxin Li, Ben M Chen, and Gim Hee Lee. So-net: Self-
organizing network for point cloud analysis.
In Proceed-
ings of the IEEE conference on Computer Vision and Pattern
Recognition (CVPR), pages 9397–9406, 2018. 1, 2

[24] Yangyan Li, Rui Bu, Mingchao Sun, Wei Wu, Xinhan Di,
and Baoquan Chen. Pointcnn: Convolution on x-transformed
points. In Advances in Neural Information Processing Sys-
tems (NIPS), pages 828–838, 2018. 1, 2

[25] Ming Liang, Bin Yang, Shenlong Wang, and Raquel Urtasun.
Deep continuous fusion for multi-sensor 3D object detection.
In Proceedings of the European Conference on Computer Vi-
sion (ECCV), pages 641–656, 2018. 3

[26] Daniel Maturana and Sebastian Scherer. Voxnet: A 3D con-
volutional neural network for real-time object recognition.
In 2015 IEEE/RSJ International Conference on Intelligent
Robots and Systems (IROS), pages 922–928, 2015. 1, 2

8835

[27] John McCormac, Ankur Handa, Andrew Davison, and Ste-
fan Leutenegger. Semanticfusion: Dense 3D semantic map-
ping with convolutional neural networks. In 2017 IEEE In-
ternational Conference on Robotics and automation (ICRA),
pages 4628–4635, 2017. 2, 3

[28] Duc Thanh Nguyen, Binh-Son Hua, Khoi Tran, Quang-Hieu
Pham, and Sai-Kit Yeung. A ﬁeld model for repairing 3D
shapes. In Proceedings of the IEEE Conference on Computer
Vision and Pattern Recognition (CVPR), pages 5676–5684,
2016. 1, 2

[29] Sylvain Paris and Fr´edo Durand. A fast approximation of the
bilateral ﬁlter using a signal processing approach. In Euro-
pean Conference on Computer Vision (ECCV), pages 568–
580, 2006. 5

[30] Quang-Hieu Pham, Binh-Son Hua, Duc Thanh Nguyen, and
Sai-Kit Yeung. Real-time progressive 3D semantic segmen-
tation for indoor scenes. In 2019 IEEE Winter Conference on
Applications of Computer Vision (WACV), pages 1089–1098,
2019. 1, 2, 3, 4

[31] Charles R Qi, Wei Liu, Chenxia Wu, Hao Su, and Leonidas J
Guibas. Frustum pointnets for 3D object detection from rgb-
d data.
In Proceedings of the IEEE Conference on Com-
puter Vision and Pattern Recognition (CVPR), pages 918–
927, 2018. 1, 3

[32] Charles R Qi, Hao Su, Kaichun Mo, and Leonidas J Guibas.
Pointnet: Deep learning on point sets for 3D classiﬁcation
and segmentation. In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition (CVPR), pages
652–660, 2017. 2, 3, 6, 7

[33] Charles Ruizhongtai Qi, Li Yi, Hao Su, and Leonidas J
Guibas. Pointnet++: Deep hierarchical feature learning on
point sets in a metric space. In Advances in Neural Informa-
tion Processing Systems (NIPS), pages 5099–5108, 2017. 1,
2

[34] Xiaojuan Qi, Renjie Liao, Jiaya Jia, Sanja Fidler, and Raquel
Urtasun. 3D graph neural networks for rgbd semantic seg-
mentation. In Proceedings of the IEEE International Confer-
ence on Computer Vision (ICCV), pages 5199–5208, 2017. 3

[35] Gernot Riegler, Ali Osman Ulusoy, and Andreas Geiger.
Octnet: Learning deep 3D representations at high resolu-
tions. In Proceedings of the IEEE Conference on Computer
Vision and Pattern Recognition (CVPR), pages 3577–3586,
2017. 2

[36] Hayko Riemenschneider, Andr´as B´odis-Szomor´u, Julien
Weissenberg, and Luc Van Gool. Learning where to classify
in multi-view semantic segmentation. In European Confer-
ence on Computer Vision (ECCV), pages 516–532, 2014. 2

[37] Nathan Silberman, Derek Hoiem, Pushmeet Kohli, and Rob
Fergus.
Indoor segmentation and support inference from
rgbd images. In European Conference on Computer Vision
(ECCV), pages 746–760, 2012. 2, 6

[38] Marina Sokolova and Guy Lapalme. A systematic analysis of
performance measures for classiﬁcation tasks. Information
Processing & Management, 45(4):427–437, 2009. 6

[39] Shuran Song, Fisher Yu, Andy Zeng, Angel X Chang, Mano-
lis Savva, and Thomas Funkhouser. Semantic scene com-
pletion from a single depth image.
In Proceedings of the

IEEE Conference on Computer Vision and Pattern Recogni-
tion (CVPR), pages 1746–1754, 2017. 2

[40] Lyne Tchapmi, Christopher Choy, Iro Armeni, JunYoung
Gwak, and Silvio Savarese. Segcloud: Semantic segmen-
tation of 3D point clouds. In 2017 International Conference
on 3D Vision (3DV), pages 537–547, 2017. 2, 6, 7

[41] Julien P.C. Valentin, Sunando Sengupta, Jonathan Warrell,
Ali Shahrokni, and Philip H. S. Torr. Mesh based seman-
tic modelling for indoor and outdoor scenes.
In Proceed-
ings of the IEEE Conference on Computer Vision and Pattern
Recognition (CVPR), pages 2067–2074, 2013. 2, 3

[42] Vibhav Vineet, Ondrej Miksik, Morten Lidegaard, Matthias
Nießner, Stuart Golodetz, Victor A Prisacariu, Olaf K¨ahler,
David W Murray, Shahram Izadi, Patrick P´erez, et al. Incre-
mental dense semantic stereo fusion for large-scale seman-
tic scene reconstruction. In 2015 IEEE International Con-
ference on Robotics and Automation (ICRA), pages 75–82,
2015. 1, 2, 3

[43] Martin J Wainwright, Michael I Jordan, et al. Graphical mod-
els, exponential families, and variational inference. Founda-
tions and Trends in Machine Learning, 1(1–2):1–305, 2008.
5

[44] Weiyue Wang, Ronald Yu, Qiangui Huang, and Ulrich Neu-
mann. Sgpn: Similarity group proposal network for 3D
point cloud instance segmentation.
In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion (CVPR), pages 2569–2578, 2018. 3, 6, 7, 8

[45] Yue Wang, Yongbin Sun, Ziwei Liu, Sanjay E Sarma,
Michael M Bronstein, and Justin M Solomon. Dynamic
graph cnn for learning on point clouds.
arXiv preprint
arXiv:1801.07829, 2018. 1, 2

[46] Daniel Wolf, Johann Prankl, and Markus Vincze. Fast se-
mantic segmentation of 3D point clouds using a dense CRF
with learned parameters. In 2015 IEEE International Confer-
ence on Robotics and Automation (ICRA), pages 4867–4873,
2015. 1, 2, 3

[47] Zhirong Wu, Shuran Song, Aditya Khosla, Fisher Yu, Lin-
guang Zhang, Xiaoou Tang, and Jianxiong Xiao.
3D
shapenets: A deep representation for volumetric shapes. In
Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition (CVPR), pages 1912–1920, 2015.
1, 2

[48] Yifan Xu, Tianqi Fan, Mingye Xu, Long Zeng, and Yu Qiao.
Spidercnn: Deep learning on point sets with parameterized
convolutional ﬁlters. In Proceedings of the European Con-
ference on Computer Vision (ECCV), pages 87–102, 2018.
1, 2

[49] Shichao Yang, Yulan Huang, and Sebastian Scherer. Seman-
tic 3D occupancy mapping through efﬁcient high order crfs.
In 2017 IEEE/RSJ International Conference on Intelligent
Robots and Systems (IROS), pages 590–597, 2017. 2, 3

[50] Hongyuan Zhu, Jiangbo Lu, Jianfei Cai, Jianming Zheng,
and Nadia M Thalmann. Multiple foreground recognition
and cosegmentation: An object-oriented CRF model with ro-
bust higher-order potentials. In IEEE Winter Conference on
Applications of Computer Vision (WACV), pages 485–492,
2014. 3

8836

