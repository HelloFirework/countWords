Textured Neural Avatars

Aliaksandra Shysheya 1

2

,

Egor Zakharov 1

,

2 Kara-Ali Aliev 1 Renat Bashirov 1

Egor Burkov 1

,

2 Karim Iskakov 1 Aleksei Ivakhnenko 1 Yury Malkov 1

Igor Pasechnik 1 Dmitry Ulyanov 1
1Samsung AI Center, Moscow 2Skolkovo Institute of Science and Technology, Moscow

2 Alexander Vakhitov 1

2 Victor Lempitsky 1

2

,

,

,

Figure 1: We propose a new model for neural rendering of humans. The model is trained for a single person and can produce
renderings of this person from novel viewpoints (top) or in the new body pose (bottom) unseen during training. To improve
generatlization, our model retains explicit texture representation, which is learned alongside the rendering neural network.

Abstract

We present a system for learning full body neural avatars,
i.e. deep networks that produce full body renderings of a
person for varying body pose and varying camera pose.
Our system takes the middle path between the classi-
cal graphics pipeline and the recent deep learning ap-
proaches that generate images of humans using image-to-
image translation. In particular, our system estimates an
explicit two-dimensional texture map of the model surface.
At the same time, it abstains from explicit shape model-
ing in 3D. Instead, at test time, the system uses a fully-
convolutional network to directly map the conﬁguration of
body feature points w.r.t. the camera to the 2D texture co-
ordinates of individual pixels in the image frame. We show
that such system is capable of learning to generate realis-
tic renderings while being trained on videos annotated with
3D poses and foreground masks. We also demonstrate that
maintaining an explicit texture representation helps our sys-
tem to achieve better generalization compared to systems
that use direct image-to-image translation.

1. Introduction

Capturing and rendering human body in all of its com-
plexity under varying pose and imaging conditions is one

of the core problems of both computer vision and computer
graphics. Recently, there is a surge of interest that involves
deep convolutional networks (ConvNets) as an alternative to
traditional computer graphics means. Realistic neural ren-
dering of body fragments e.g. faces [37, 43, 62], eyes [24],
hands [47] is now possible. Very recent works have shown
abilities of such networks to generate views of a person with
a varying body pose but with ﬁxed camera position, and us-
ing an excessive amount of training data [1, 12, 42, 67].
In this work, we focus on the learning of neural avatars,
i.e. generative deep networks that are capable of rendering
views of individual people under varying body pose deﬁned
by a set of 3D positions of the body joints and under vary-
ing camera positions (Figure 1). We prefer to use body joint
positions to represent the human pose, as joint positions are
often easier to capture using marker-based or marker-less
motion capture systems.

Generally, neural avatars can serve as an alternative to
classical (“neural-free”) avatars based on a standard com-
puter graphics pipeline that estimates a user-personalized
body mesh in a neutral position, performs skinning (defor-
mation of the neutral pose), and projects the resulting 3D
surface onto the image coordinates, while superimposing
person-speciﬁc 2D texture. Neural avatars attempt to short-
cut the multiple stages of the classical pipeline and to re-
place them with a single network that learns the mapping
from the input (the location of body joints) to the output (the

12387

2D image). As a part of our contribution, we demonstrate
that, however appealing for its conceptual simplicity, exist-
ing pose-to-image translation networks generalize poorly to
new camera views, and therefore new architectures for neu-
ral avatars are required.

Towards this end, we present a neural avatar system that
does full body rendering and combines the ideas from the
classical computer graphics, namely the decoupling of ge-
ometry and texture, with the use of deep convolutional neu-
ral networks. In particular, similarly to the classic pipeline,
our system explicitly estimates the 2D textures of body
parts. The 2D texture within the classical pipeline effec-
tively transfers the appearance of the body fragments across
camera transformations and body articulations. Keeping
this component within the neural pipeline boosts general-
ization across such transforms. The role of the convolu-
tional network in our approach is then conﬁned to predict-
ing the texture coordinates of individual pixels in the out-
put 2D image given the body pose and the camera parame-
ters (Figure 2). Additionally, the network predicts the body
foreground/background mask.

In our experiments, we compare the performance of our
textured neural avatar with a direct video-to-video trans-
lation approach [67], and show that explicit estimation of
textures brings additional generalization capability and im-
proves the realism of the generated images for new views
and/or when the amount of training data is limited.

2. Related work

Our approach is closely related to a vast number of pre-
vious work, and below we discuss a small subset of these
connections.

Building full-body avatars from image data has long
been one of the main topics of the computer vision re-
search. Traditionally, an avatar is deﬁned by a 3D geomet-
ric mesh of a certain neutral pose, a texture, and a skinning
mechanism that transform the mesh vertices according to
pose changes. A large group of works has been devoted
to body modeling from 3D scanners [51], registered mul-
tiview sequences [53] as well as from depth and RGB-D
sequences [7, 69, 74]. On the other extreme are methods
that ﬁt skinned parametric body models to single images
[6, 8, 30, 35, 49, 50, 59]. Finally, research on building full-
body avatars from monocular videos has started [4, 3]. Sim-
ilarly to the last group of works, our work builds an avatar
from a video or a set of unregistered monocular videos. The
classical (computer graphics) approach to modeling human
avatars requires explicit physically-plausible modeling of
human skin, hair, schlera, clothing surface, as well as ex-
plicit physically-plausible modeling of motion under pose
changes. Despite considerable progress in reﬂectivity mod-
eling [2, 18, 38, 70, 72] and better skinning/dynamic sur-
face modeling [23, 44, 60], the computer graphics approach

still requires considerable “manual” effort of designers to
achieve high realism [2] and to pass the so-called uncanny
valley [46], especially if real-time rendering of avatars is
required.

Image synthesis using deep convolutional neural net-
works is a thriving area of research [27, 20] and a lot of
recent effort has been directed onto synthesis of realistic hu-
man faces [15, 36, 61]. Compared to traditional computer
graphics representations, deep ConvNets model data by ﬁt-
ting an excessive number of learnable weights to training
data. Such ConvNets avoid explicit modeling of the sur-
face geometry, surface reﬂectivity, or surface motion under
pose changes, and therefore do not suffer from the lack of
realism of the corresponding components. On the ﬂipside,
the lack of ingrained geometric or photometric models in
this approach means that generalizing to new poses and in
particular to new camera views may be problematic. Still
a lot of progress has been made over the last several years
for the neural modeling of personalized talking head mod-
els [37, 43, 62], hair [68], hands [47]. Notably, the recent
system [43] has achieved very impressive results for neural
face rendering, while decomposing view-dependent texture
and 3D shape modeling.

Over the last several months, several groups have pre-
sented results of neural modeling of full bodies [1, 12, 42,
67]. While the presented results are very impressive, the ap-
proaches still require a large amount of training data. They
also assume that the test images are rendered with the same
camera views as the training data, which in our experience
makes the task considerably simpler than modeling body
appearance from arbitrary viewpoint. In this work, we aim
to expand the neural body modeling approach to tackle the
latter, harder task. The work [45] uses a combination of
classical and neural rendering to render human body from
new viewpoints, but does so based on depth scans and there-
fore with a rather different algorithmic approach.

A number of recent works warp a photo of a person to a
new photorealistic image with modiﬁed gaze direction [24],
modiﬁed facial expression/pose [9, 55, 64, 71], or modiﬁed
body pose [5, 48, 56, 64], whereas the warping ﬁeld is esti-
mated using a deep convolutional network (while the origi-
nal photo effectively serves as a texture). These approaches
are however limited in their realism and/or the amount of
change they can model, due to their reliance on a single
photo of a given person for its input. Our approach also
disentangles texture from surface geometry/motion model-
ing but trains from videos, therefore being able to handle
harder problem (full body multiview setting) and to achieve
higher realism.

Our system relies on the DensePose body surface param-
eterization (UV parameterization) similar to the one used in
the classical graphics-based representation. Part of our sys-
tem performs a mapping from the body pose to the surface

2388

parameters (UV coordinates) of image pixels. This makes
our approach related to the DensePose approach [28] and
the earlier works [29, 63] that predict UV coordinates of
image pixels from the input photograph. Furthermore, our
approach uses DensePose results [28] for pretraining.

Our system is related to approaches that extract textures
from multi-view image collections [26, 39] or multi-view
video collections [66] or a single video [52]. Our approach
is also related to free-viewpoint video compression and ren-
dering systems, e.g. [11, 16, 21, 66]. Unlike those works,
ours is restricted to scenes containing a single human. At
the same time, our approach aims to generalize not only
to new camera views but also to new user poses unseen in
the training videos. The work of [73] is the most related
to ours in this group, as they warp the individual frames of
the multi-view video dataset according to the target pose to
generate new sequences. The poses that they can handle,
however, are limited by the need to have a close match in
the training set, which is a strong limitation given the com-
binatorial nature of the human pose conﬁguration space.

3. Methods

Notation. We use the lower index i to denote objects that
are speciﬁc to the i-th training or test image. We use up-
percase notation, e.g. Bi to denote a stack of maps (a third-
order tensor/three-dimensional array) corresponding to the
i-th training or test image. We use the upper index to denote
a speciﬁc map (channel) in the stack, e.g. Bj
i . Furthermore,
we use square brackets to denote elements corresponding to
a speciﬁc image location, e.g. Bj
i [x, y] denotes the scalar
element in the j-th map of the stack Bi located at location
(x, y), and Bi[x, y] denotes the vector of elements corre-
sponding to all maps sampled at location (x, y).

Input and output.
In general, we are interested in syn-
thesizing images of a certain person given her/his pose. We
assume that the pose for the i-th image comes in the form of
3D joint positions deﬁned in the camera coordinate frame.
As an input to the network, we then consider a map stack
Bi, where each map Bj
i contains the rasterized j-th seg-
ment (bone) of the “stickman” (skeleton) projected on the
camera plane. To retain the information about the third
coordinate of the joints, we linearly interpolate the depth-
value between the joints deﬁning the segments, and use the
interpolated values to deﬁne the values in the map Bj
i cor-
responding to the bone pixels (the pixels not covered by the
j-th bone are set to zero). Overall, the stack Bi incorporates
the information about the person and the camera pose.

As an output of the whole system, we expect an RGB
image (a three-channel stack) Ii and a single channel mask
Mi, deﬁning the pixels that are covered by the avatar. Be-
low, we consider two approaches:
the direct translation

baseline, which directly maps Bi into {Ii, Mi} and the tex-
tured neural avatar approach that performs such mapping
indirectly using texture mapping.

In both cases, at training time, we assume that for each
input frame i, the input joint locations and the “ground
truth” foreground mask are estimated, and we use 3D body
pose estimation and human semantic segmentation to ex-
tract them from raw video frames. At test time, given a
real or synthetic background image ˜Ii, we generate the ﬁ-
nal view by ﬁrst predicting Mi and Ii from the body pose
and then linearly blending the resulting avatar into an im-
age: ˆIi = Ii ⊙ Mi + ˜Ii ⊙ (1 − Mi) (where ⊙ deﬁnes a
“location-wise” product, i.e. the RGB values at each loca-
tion are multiplied by the mask value at this location).

Direct translation baseline. The direct approach that we
consider as a baseline to ours is to learn an image trans-
lation network that maps the map stack Bk
to the map
i
stacks Ii and Mi (usually the two output stacks are pro-
duced within two branches that share the initial stage of the
processing [20]). Generally, mappings between stacks of
maps can be implemented using fully-convolutional archi-
tectures. Exact architectures and losses for such networks is
an active area of research [19, 14, 31, 33, 65]. Very recent
works [1, 12, 42, 67] have used direct translation (with var-
ious modiﬁcations) to synthesize the view of a person for
a ﬁxed camera. We use the video-to-video variant of this
approach [67] as a baseline for our method.

Textured neural avatar. The direct translation approach
relies on the generalization ability of ConvNets and incor-
porates very little domain-speciﬁc knowledge into the sys-
tem. As an alternative, we suggest the textured avatar ap-
proach, that explicitly estimates the textures of body parts,
thus ensuring the similarity of the body surface appearance
under varying pose and cameras.

Following the DensePose approach [28], we subdivide
the body into n=24 parts, where each part has a 2D param-
eterization. Each body part also has the texture map T k,
which is a color image of a ﬁxed pre-deﬁned size (256×256
in our implementation). The training process for the tex-
tured neural avatar estimates personalized part parameteri-
zations and textures.

Again, following the DensePose approach, we assume
that each pixel in an image of a person is (soft)-assigned
to one of n parts or to the background and with a speciﬁc
location on the texture of that part (body part coordinates).
Unlike DensePose, where part assignments and body part
coordinates are induced from the image, our approach at
test time aims to predict them based solely on the pose Bi.
The introduction of the body surface parameterization
outlined above changes the translation problem. For a
given pose deﬁned by Bi, the translation network now has

2389

Figure 2: The overview of the textured neural avatar system. The input pose is deﬁned as a stack of ”bone” rasterizations (one
bone per channel; here we show it highlighted in red). The input is processed by the fully-convolutional network (orange) to
produce body part assignment map stack and the body part coordinate map stack. These stacks are then used to sample the
body texture maps at the locations prescribed by the part coordinate stack with the weights prescribed by the part assignment
stack to produce the RGB image. In addition, the last body assignment stack map corresponds to the background probability.
During learning, the mask and the RGB image are compared with ground-truth and the resulting losses are backpropagated
through the sampling operation into the fully-convolutional network and onto the texture, resulting in their updates.

to predict the stack Pi of body part assignments and the
stack Ci of body part coordinates, where Pi contains n+1
maps of non-negative numbers that sum to identity (i.e.
Pn
i [x, y] = 1 for any position (x, y)), and Ci con-
tains 2n maps of real numbers between 0 and w, where w is
the spatial size (width and height) of the texture maps T k.

k=1 P k

i

The map channel P k
i

for k = 0, . . . , n−1 is then in-
terpreted as the probability of the pixel to belong to the k-
th body part, and the map channel P n
i corresponds to the
probability of the background. The coordinate maps C 2k
and C 2k+1
correspond to the pixel coordinates on the k-th
body part. Speciﬁcally, once the part assignments Pi and
body part coordinates Ci are predicted, the image Ii at each
pixel (x, y) is reconstructed as a weighted combination of
texture elements, where the weights and texture coordinates
are prescribed by the part assignment maps and the coordi-
nate maps correspondingly:

i

n−1

s(Pi, Ci, T )[x, y] =

P k

i [x, y]·

[x, y], C 2k+1

i

[x, y](cid:3) ,

(1)

where s(·, ·, ·) is the sampling function (layer) that outputs
the RGB map stack given the three input arguments. In (1),
the texture maps T k are sampled at non-integer locations
(C 2k
[x, y]) in a piecewise-differentiable man-
ner using bilinear interpolation [32].

[x, y], C 2k+1

i

i

k=0

X
T k (cid:2)C 2k

i

and the body part coordinates. As gφ has two branches
(“heads”), we denote with gP
φ the branch that produces the
body part assignments stack, and with gC
φ the branch that
produces the body part coordinates. To learn the parameters
of the textured neural avatar, we optimize the loss between
the generated image and the ground truth image ¯Ii:
Limage(φ, T ) = dImage (cid:16) ¯Ii, s(cid:0)gP

φ (Bi), T(cid:1)(cid:17) (2)

φ (Bi), gC

where d(·, ·) is a loss used to compare two images.
In
our current implementation we use a simple perceptual loss
[25, 33, 65], which computes the maps of activations within
pretrained ﬁxed VGG network [58] for both images and
evaluates the L1-norm between the resulting maps (12 ﬁrst
layers are used). More advanced adversarial losses [27]
popular in image translation [19, 31] can also be used here.
During the stochastic optimization, the gradient of the
loss (2) is backpropagated through (1) both into the trans-
lation network gφ and onto the texture maps T k, so that
minimizing this loss updates not only the network param-
eters but also the textures themselves. As an addition, the
learning also optimizes the mask loss that measures the dis-
crepancy between the ground truth background mask 1− ¯Mi
and the background mask prediction:

Lmask(φ, T ) = dBCE (cid:16)¯1 − Mi, gP

φ (Bi)n(cid:17)

(3)

When training the neural textured avatar, we learn a con-
volutional network gφ with learnable parameters φ to trans-
late the input map stacks Bi into the body part assignments

where dBCE is the binary cross-entropy loss, and gP
φ (Bi)n
corresponds to the n-th (i.e. background) channel of the pre-
dicted part assignment map stack. After backpropagation

2390

initialized to black). The initialized texture T and gφ usu-
ally produce images that are only coarsely reminding the
person, and they change signiﬁcantly during the end-to-end
learning (Figure 3).

4. Experiments

Below, we discuss the details of the experimental vali-
dation, provide comparison with baseline approaches, and
show qualitative results. The project webpage1 also con-
tains the video of the learned avatars.

Architecture. We input 3D pose via bone rasterizations,
where each bone, hand and face are drawn in separate
channels. We then use standard image translation archi-
tecture [33] to perform a mapping from these bones’ ras-
terizations to texture assignments and coordinates. This ar-
chitecture consists of downsampling layers, stack of resid-
ual blocks, operating at low dimensional feature representa-
tions, and upsampling layers. We then split the network into
two roughly equal parts: encoder and decoder, with texture
assignments and coordinates having separate decoders. We
use 4 downsampling and upsampling layers with initial 32
channels in the convolutions and 256 channels in the resid-
ual blocks. The ConvNet gφ has 17 million parameters.

Datasets. We train neural avatars on two types of datasets.
First, we consider collections of multiview videos registered
in time and space, where 3D pose estimates can be obtained
via triangulation of 2D poses. We use two subsets (cor-
responding to two persons from the 171026 pose2 scene)
from the CMU Panoptic dataset collection [34], referring to
them as CMU1 and CMU2 (both subsets have approximately
four minutes / 7,200 frames in each camera view). We con-
sider two regimes: training on 16 cameras (CMU1-16 and
CMU2-16) or six cameras (CMU1-6 and CMU2-6). The
evaluation is done on the hold-out cameras and hold-out
parts of the sequence (no overlap between train and test in
terms of the cameras or body motion).

We have also captured our own multiview sequences of
three subjects using a rig of seven cameras, spanning ap-
proximately 30◦. In one scenario, the training sets included
six out of seven cameras, where the duration of each video
was approximately six minutes (11,000 frames). We show
qualitative results for the hold-out camera as well as from
new viewpoints.
In the other scenario described below,
training was done based on a video from a single camera.

Finally, we evaluate on two short monocular sequences

from [4] and a Youtube video in Figure 7.

Pre-processing. Our system expects 3D human pose as
input. For non-CMU datasets, we used the OpenPose-

1https://saic-violet.github.io/texturedavatar/

2391

Figure 3: The impact of the learning on the texture (top,
shown for the same subset of maps T k) and on the convolu-
tional network gC
φ predictions (bottom, shown for the same
pair of input poses). Left part shows the starting state (af-
ter initialization), while the right part shows the ﬁnal state,
which is considerably different from the start.

of the weighted combination of (2) and (3), the network
parameters φ and the textures maps T k are updated. As
the training progresses, the texture maps change (Figure 2),
and so does the body part coordinate predictions, so that the
learning is free to choose the appropriate parameterization
of body part surfaces.

Initialization of textured neural avatar. The success of
our network depends on the initialization strategy. When
training from multiple video sequences, we use the Dense-
Pose system [28] to initialize the textured neural avatar.
Speciﬁcally, we run DensePose on the training data and pre-
train gφ as a translation network between the pose stacks Bi
and the DensePose outputs.

An alternative way that is particularly attractive when
training data is scarce is to initialize the avatar is through
transfer learning. In this case, we simply take gφ from an-
other avatar trained on abundant data. The explicit decou-
pling of geometry from appearance in our method facilitates
transfer learning, as the geometrical mapping provided by
the network gφ usually does not need to change much be-
tween two people, especially if the body types are not too
dissimilar.

Once the mapping gφ has been initialized, the texture
maps T k are initialized as follows. Each pixel in the train-
ing image is assigned to a single body part (according to the
prediction of the pretrained gP
φ ) and to a particular texture
pixel on the texture of the corresponding part (according
to the prediction of the pretrained gC
φ ). Then, the value of
each texture pixel is initialized to the mean of all image pix-
els assigned to it (the texture pixels assigned zero pixels are

Figure 4: Renderings produced by multiple textured neural avatars (for all people in our study). All renderings are produced
from the new viewpoints unseen during training.

(a) User study

(b) SSIM score

(c) Frechet distance

Ours-v-V2V

Ours-v-Direct

CMU1-16
CMU2-16
CMU1-6
CMU2-6

0.56
0.54
0.50
0.53

0.75
0.74
0.92
0.71

V2V
0.908
0.916
0.905
0.918

Direct
0.899
0.907
0.896
0.907

Ours
0.919
0.922
0.914
0.920

V2V
6.7
7.0
7.7
7.0

Direct

7.3
8.8
10.7
9.7

Ours
8.8
10.7
8.9
10.4

Table 1: Quantitative comparison of the three models operating on different datasets (see text for discussion).

compatible [10, 57] 3D pose formats,
represented by
25 body joints, 21 joints for each hand and 70 facial land-
marks. For the CMU Panoptic datasets, we use the avail-
able 3D pose annotation as input (which has 19 rather than
25 body joints). To get a 3D pose for non-CMU sequences
we ﬁrst apply the OpenPose 2D pose estimation engine to
ﬁve consecutive frames of the monoculuar RGB image se-
quence. Then we concatenate and lift the estimated 2D
poses to infer the 3D pose of the last frame by using a multi-
layer perceptron model. The perceptron is trained on the
CMU 3D pose annotations (augmented with position of the
feet joints by triangulating the output of OpenPose) in or-
thogonal projection.

For foreground segmentation we use DeepLabv3+ with
Xception-65 backbone [13]
initially trained on PAS-
CAL VOC 2012 [22] and ﬁne-tuned on HumanParsing
dataset [40, 41] to predict initial human body segmentation
masks. We additionally employ GrabCut [54] with back-
ground/foreground model initialized by the masks to reﬁne
object boundaries on the high resolution images. Pixels
covered by the skeleton rasterization were always added to
the foreground mask.

Baselines. We consider two other systems, against which
ours is compared. First, we use the video-to-video (V2V)
system [67], using the authors code with minimal modiﬁca-
tions that lead to improved performance. We provide it with

the same input as ours, and we use images with blacked-
out background (according to our segmentation) as desired
output. On the CMU1-6 task, we have also evaluated a
model with DensePose results computed on the target frame
given as input (alongside keypoins). Despite much stronger
(oracle-type) conditioning, the performance of this model
in terms of considered metrics has not improved in compar-
ison with V2V that uses body joints as input only.

The video-to-video system employs several adversarial
losses and an architecture different from ours. Therefore we
consider a more direct ablation (Direct), which has the same
network architecture that predicts RGB color and mask di-
rectly, rather than via body part assignments/coordinates.
The Direct system is trained using the same losses and in
the same protocol as ours.

Multi-video comparison. We compare the three system
(ours, V2V, Direct) in CMU1-16, CMU2-16, CMU1-6,
CMU2-6. Using the hold-out sequences/motions, we then
evaluated two popular metrics, namely structured self-
similarity (SSIM) and Frechet Inception Distance (FID) be-
tween the results of each system and the hold-out frames
(with background removed using our segmentation algo-
rithm). Our method outperforms the other two in terms of
SSIM and underperforms V2V in terms of FID. Represen-
tative examples are shown in Figure 5.

We have also performed user study using a crowdsourc-

2392

GT

Direct

V2V

Proposed

GT

Direct

V2V

Proposed

Figure 5: Comparison of the rendering quality for the Vid2vid, Direct and proposed methods on the CMU1-6 and CMU2-6
sequences. Images from six arbitrarily chosen cameras were used for training. We generate the views onto the hold-out
cameras which were not used during training. The pose and camera in the lower right corner are in particular difﬁcult for all
the systems.

ing website, where the users were shown the results of ours
and one of the other two systems on either side of the ground
truth image, and were asked to pick a better match to the
middle image. In the side-by-side comparison, the results
of our method were always preferred by the majority of the
crowd-sourcing users. We note that our method suffers from
a disadvantage both in the quantitative metrics and in the
user comparison, since it averages out lighting from differ-
ent viewpoints. The more detailed quantitative comparison
is presented in Table 1.

We show more qualitative examples of our method for a
variety of models in Figure 4 and some qualitative compar-
isons with baselines in Figure 6.

Single video comparisons. We also evaluate our system
in the single video case. We consider the scenario, where
we train the model and transfer it to a new person by ﬁtting
it to a single video. We use single camera videos from one
of the cameras in our rig. We then evaluate the model (and
the baselines) on a hold-out set of poses projected onto the
camera from the other side of the rig (around 30◦ away).
We thus demonstrate that new models can be obtained us-
ing single monocular videos. For our models, we consider
transferring from CMU1-16.

We thus pretrain V2V and our system on CMU1-16 and
use the obtained weights of gφ as initialization for ﬁne-
tuning to the single video in our dataset. The texture maps
are initialized from scratch as described above. Evaluating
on hold-out camera and motion highlighted strong advan-
tage of our method. In the user study on two subjects, the
result of our method has been preferred to V2V in 55% and
65% of the cases. We further compare our method and the
system of [4] on the sequences from [4]. The qualitative

comparison is shown in Figure 7. In addition, we gener-
ate an avatar from a youtube video.
In this set of exper-
iments, the avatars were obtained by ﬁne-tuning from the
same avatar (shown in Figure 6–left). Except for the con-
siderable artefacts on hand parts, our system has generated
avatars that can generalize to new pose despite very short
video input ( 300 frames in the case of [4]).

5. Summary and Discussion

We have presented textured neural avatar approach to
model the appearance of humans for new camera views and
new body poses. Our system takes the middle path between
the recent generation of methods that use ConvNets to map
the pose to the image directly, and the traditional approach
that uses geometric modeling of the surface and superim-
pose the personalized texture maps. This is achieved by
learning a ConvNet that predicts texture coordinates of pix-
els in the new view jointly with the texture within the end-
to-end learning process. We demonstrate that retaining an
explicit shape and texture separation helps to achieve better
generalization than direct mapping approaches.

Our method suffers from certain limitations. The gen-
eralization ability is still limited, as it does not generalize
well when a person is rendered at a scale that is consid-
erably different from the training set (which can be par-
tially addressed by rescaling prior to rendering followed by
cropping/padding postprocessing). Furthermore, textured
avatars exhibit strong artefacts in the presence of pose es-
timation errors on hands and faces. Finally, our method as-
sumes constancy of the surface color and ignores lighting
effects. This can be potentially addressed by making our
textures view- and lighting-dependent [17, 43].

2393

GT

Proposed

V2V

GT

Proposed

V2V

Figure 6: Results comparison for our multi-view sequences using a hold-out camera. Textured Neural Avatars and the images
produced by the video-to-video (V2V) system correspond to the same viewpoint. Both systems use a video from a single
viewpoint for training. Electronic zoom-in recommended.

Figure 7: Results on external monocular sequences. Rows 1-2: avatars for sequences from [4] in an unseen pose (left – ours,
right – [4]). Row 3 – the textured avatar computed from a popular Youtube video (’PUMPED UP KICKS DUBSTEP’). In
general, our system is capable of learning avatars from monocular videos.

2394

References

[1] Kﬁr Aberman, Mingyi Shi, Jing Liao, Dani Lischinski, Bao-
quan Chen, and Daniel Cohen-Or. Deep video-based perfor-
mance cloning. arXiv preprint arXiv:1808.06847, 2018. 1,
2, 3

[2] Oleg Alexander, Mike Rogers, William Lambeth, Jen-Yuan
Chiang, Wan-Chun Ma, Chuan-Chang Wang, and Paul De-
bevec. The Digital Emily project: Achieving a photorealistic
digital actor.
IEEE Computer Graphics and Applications,
30(4):20–31, 2010. 2

[3] Thiemo Alldieck, Marcus Magnor, Weipeng Xu, Christian
Theobalt, and Gerard Pons-Moll. Detailed human avatars
from monocular video. In 2018 International Conference on
3D Vision (3DV), pages 98–109. IEEE, 2018. 2

[4] Thiemo Alldieck, Marcus Magnor, Weipeng Xu, Christian
Theobalt, and Gerard Pons-Moll. Video based reconstruction
of 3d people models. In Proc. CVPR, June 2018. 2, 5, 7, 8

[5] Guha Balakrishnan, Amy Zhao, Adrian V. Dalca, Fr´edo Du-
rand, and John V. Guttag. Synthesizing images of humans in
unseen poses. In Proc. CVPR, pages 8340–8348, 2018. 2

[6] Alexandru O B˘alan and Michael J Black. The naked truth:
Estimating body shape under clothing. In Proc. ECCV, pages
15–29. Springer, 2008. 2

[7] Federica Bogo, Michael J Black, Matthew Loper, and Javier
Romero. Detailed full-body reconstructions of moving peo-
ple from monocular RGB-D sequences.
In Proc. ICCV,
pages 2300–2308, 2015. 2

[8] Federica Bogo, Angjoo Kanazawa, Christoph Lassner, Peter
Gehler, Javier Romero, and Michael J Black. Keep it smpl:
Automatic estimation of 3d human pose and shape from a
single image.
In Proc. ECCV, pages 561–578. Springer,
2016. 2

[9] Jie Cao, Yibo Hu, Hongwen Zhang, Ran He, and Zhenan
Learning a high ﬁdelity pose invariant model
arXiv preprint

Sun.
for high-resolution face frontalization.
arXiv:1806.08472, 2018. 2

[10] Zhe Cao, Tomas Simon, Shih-En Wei, and Yaser Sheikh.
Realtime multi-person 2d pose estimation using part afﬁnity
ﬁelds. In Proc. CVPR, 2017. 6

[11] Dan Casas, Marco Volino, John Collomosse, and Adrian
Hilton. 4d video textures for interactive character appear-
ance. In Computer Graphics Forum, volume 33, pages 371–
380. Wiley Online Library, 2014. 3

[12] Caroline Chan, Shiry Ginosar, Tinghui Zhou,

and
arXiv preprint

Alexei A Efros. Everybody dance now.
arXiv:1808.07371, 2018. 1, 2, 3

[13] Liang-Chieh Chen, Yukun Zhu, George Papandreou, Florian
Schroff, and Hartwig Adam. Encoder-decoder with atrous
separable convolution for semantic image segmentation. In
Proc. ECCV, 2018. 6

[14] Qifeng Chen and Vladlen Koltun. Photographic image syn-
In Proc. ICCV,

thesis with cascaded reﬁnement networks.
pages 1520–1529, 2017. 3

[15] Yunjey Choi, Minje Choi, Munyoung Kim, Jung-Woo Ha,
Sunghun Kim, and Jaegul Choo. Stargan: Uniﬁed genera-
tive adversarial networks for multi-domain image-to-image
translation. In Proc. CVPR, June 2018. 2

[16] Alvaro Collet, Ming Chuang, Pat Sweeney, Don Gillett, Den-
nis Evseev, David Calabrese, Hugues Hoppe, Adam Kirk,
and Steve Sullivan. High-quality streamable free-viewpoint
video. ACM Transactions on Graphics (TOG), 34(4):69,
2015. 3

[17] Paul E. Debevec, Yizhou Yu, and George Borshukov. Efﬁ-
cient view-dependent image-based rendering with projective
texture-mapping. In Rendering Techniques ’98, Proceedings
of the Eurographics Workshop in Vienna, Austria, June 29 -
July 1, 1998, pages 105–116, 1998. 7

[18] Craig Donner, Tim Weyrich, Eugene d’Eon, Ravi Ra-
mamoorthi, and Szymon Rusinkiewicz. A layered, heteroge-
neous reﬂectance model for acquiring and rendering human
skin. In ACM Transactions on Graphics (TOG), volume 27,
page 140. ACM, 2008. 2

[19] Alexey Dosovitskiy and Thomas Brox. Generating images
with perceptual similarity metrics based on deep networks.
In Proc. NIPS, pages 658–666, 2016. 3, 4

[20] Alexey Dosovitskiy, Jost Tobias Springenberg, and Thomas
Brox. Learning to generate chairs with convolutional neural
networks. In Proc. CVPR, pages 1538–1546, 2015. 2, 3

[21] Mingsong Dou, Philip Davidson, Sean Ryan Fanello, Sameh
Khamis, Adarsh Kowdle, Christoph Rhemann, Vladimir
Tankovich, and Shahram Izadi. Motion2fusion: real-time
volumetric performance capture.
ACM Transactions on
Graphics (TOG), 36(6):246, 2017. 3

[22] M. Everingham, S. M. A. Eslami, L. Van Gool, C. K. I.
Williams, J. Winn, and A. Zisserman. The pascal visual ob-
ject classes challenge: A retrospective. International Journal
of Computer Vision, 111(1):98–136, Jan. 2015. 6

[23] Andrew Feng, Dan Casas, and Ari Shapiro. Avatar reshap-
ing and automatic rigging using a deformable model. In Pro-
ceedings of the 8th ACM SIGGRAPH Conference on Motion
in Games, pages 57–64. ACM, 2015. 2

[24] Yaroslav Ganin, Daniil Kononenko, Diana Sungatullina, and
Victor Lempitsky. Deepwarp: Photorealistic image resynthe-
sis for gaze manipulation. In Proc. ECCV, pages 311–326.
Springer, 2016. 1, 2

[25] Leon A. Gatys, Alexander S. Ecker, and Matthias Bethge.
Image style transfer using convolutional neural networks. In
Proc. CVPR, pages 2414–2423, 2016. 4

[26] Bastian Goldl¨ucke and Daniel Cremers. Superresolution
texture maps for multiview reconstruction. In Proc. ICCV,
pages 1677–1684, 2009. 3

[27] Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing
Xu, David Warde-Farley, Sherjil Ozair, Aaron Courville, and
Yoshua Bengio. Generative adversarial nets. In Proc. NIPS,
pages 2672–2680, 2014. 2, 4

[28] Riza Alp G¨uler, Natalia Neverova, and Iasonas Kokkinos.
In

DensePose: Dense human pose estimation in the wild.
Proc. CVPR, June 2018. 3, 5

[29] Riza Alp G¨uler, George Trigeorgis, Epameinondas Anton-
akos, Patrick Snape, Stefanos Zafeiriou, and Iasonas Kokki-
nos. DenseReg: Fully convolutional dense shape regression
in-the-wild. In Proc. CVPR, volume 2, page 5, 2017. 3

[30] Nils Hasler, Hanno Ackermann, Bodo Rosenhahn, Thorsten
Thorm¨ahlen, and Hans-Peter Seidel. Multilinear pose and

2395

body shape estimation of dressed subjects from image sets.
In Proc. CVPR, pages 1823–1830. IEEE, 2010. 2

[31] Phillip Isola, Jun-Yan Zhu, Tinghui Zhou, and Alexei A.
Efros.
Image-to-image translation with conditional adver-
sarial networks. In Proc. CVPR, pages 5967–5976, 2017. 3,
4

[32] Max Jaderberg, Karen Simonyan, Andrew Zisserman, and
Koray Kavukcuoglu. Spatial transformer networks. In Proc.
NIPS, pages 2017–2025, 2015. 4

[33] Justin Johnson, Alexandre Alahi, and Li Fei-Fei. Perceptual
In

losses for real-time style transfer and super-resolution.
Proc. ECCV, pages 694–711, 2016. 3, 4, 5

[34] Hanbyul Joo, Tomas Simon, Xulong Li, Hao Liu, Lei
Tan, Lin Gui, Sean Banerjee, Timothy Scott Godisart, Bart
Nabbe, Iain Matthews, Takeo Kanade, Shohei Nobuhara, and
Yaser Sheikh. Panoptic studio: A massively multiview sys-
tem for social interaction capture. IEEE Transactions on Pat-
tern Analysis and Machine Intelligence, 2017. 5

[35] Angjoo Kanazawa, Michael J Black, David W Jacobs, and
Jitendra Malik. End-to-end recovery of human shape and
pose. In Proc. CVPR, 2018. 2

[36] Tero Karras, Timo Aila, Samuli Laine, and Jaakko Lehtinen.
Progressive growing of GANs for improved quality, stabil-
ity, and variation. In International Conference on Learning
Representations, 2018. 2

[37] Hyeongwoo Kim, Pablo Garrido, Ayush Tewari, Weipeng
Xu, Justus Thies, Matthias Nießner, Patrick P´erez, Christian
Richardt, Michael Zollh¨ofer, and Christian Theobalt. Deep
video portraits. arXiv preprint arXiv:1805.11714, 2018. 1, 2

[38] Oliver Klehm, Fabrice Rousselle, Marios Papas, Derek
Bradley, Christophe Hery, Bernd Bickel, Wojciech Jarosz,
and Thabo Beeler. Recent advances in facial appearance
capture.
In Computer Graphics Forum, volume 34, pages
709–733. Wiley Online Library, 2015. 2

[39] Victor S. Lempitsky and Denis V. Ivanov. Seamless mosaic-

ing of image-based texture maps. In Proc. CVPR, 2007. 3

[40] Xiaodan Liang, Si Liu, Xiaohui Shen, Jianchao Yang, Luoqi
Liu, Jian Dong, Liang Lin, and Shuicheng Yan. Deep human
parsing with active template regression. Pattern Analysis and
Machine Intelligence, IEEE Transactions on, 37(12):2402–
2414, Dec 2015. 6

[41] Xiaodan Liang, Chunyan Xu, Xiaohui Shen, Jianchao Yang,
Iccv.

Si Liu, Jinhui Tang, Liang Lin, and Shuicheng Yan.
2015. 6

[42] Lingjie Liu, Weipeng Xu, Michael Zollhoefer, Hyeongwoo
Kim, Florian Bernard, Marc Habermann, Wenping Wang,
and Christian Theobalt. Neural animation and reenactment
of human actor videos. arXiv preprint arXiv:1809.03658,
2018. 1, 2, 3

[43] Stephen Lombardi, Jason Saragih, Tomas Simon, and Yaser
Sheikh. Deep appearance models for face rendering. ACM
Transactions on Graphics (TOG), 37(4):68, 2018. 1, 2, 7

[44] Matthew Loper, Naureen Mahmood, Javier Romero, Gerard
Pons-Moll, and Michael J Black. Smpl: A skinned multi-
person linear model. ACM Transactions on Graphics (TOG),
34(6):248, 2015. 2

[45] Ricardo Martin-Brualla, Rohit Pandey, Shuoran Yang, Pavel
Pidlypenskyi, Jonathan Taylor, Julien P. C. Valentin, Sameh
Khamis, Philip L. Davidson, Anastasia Tkach, Peter Lin-
coln, Adarsh Kowdle, Christoph Rhemann, Dan B. Gold-
man, Cem Keskin, Steven M. Seitz, Shahram Izadi, and
Sean Ryan Fanello. LookinGood: enhancing performance
capture with real-time neural re-rendering. ACM Trans.
Graph., 37(6):255:1–255:14, 2018. 2

[46] Masahiro Mori. The uncanny valley. Energy, 7(4):33–35,

1970. 2

[47] Franziska Mueller, Florian Bernard, Oleksandr Sotny-
chenko, Dushyant Mehta, Srinath Sridhar, Dan Casas, and
Christian Theobalt. GANerated hands for real-time 3d hand
tracking from monocular RGB. In Proc. CVPR, June 2018.
1, 2

[48] Natalia Neverova, Riza Alp G¨uler, and Iasonas Kokkinos.

Dense pose transfer. In Proc. ECCV, September 2018. 2

[49] Mohamed Omran, Christoph Lassner, Gerard Pons-Moll, Pe-
ter V. Gehler, and Bernt Schiele. Neural body ﬁtting: Uni-
fying deep learning and model-based human pose and shape
estimation. Verona, Italy, 2018. 2

[50] Georgios Pavlakos, Luyang Zhu, Xiaowei Zhou, and Kostas
Daniilidis. Learning to estimate 3d human pose and shape
from a single color image. In Proc. CVPR, June 2018. 2

[51] Gerard Pons-Moll, Javier Romero, Naureen Mahmood, and
Michael J Black. Dyna: A model of dynamic human shape in
motion. ACM Transactions on Graphics (TOG), 34(4):120,
2015. 2

[52] Alex Rav-Acha, Pushmeet Kohli, Carsten Rother, and An-
drew W. Fitzgibbon. Unwrap mosaics: a new representation
for video editing. ACM Trans. Graph., 27(3):17:1–17:11,
2008. 3

[53] Nadia Robertini, Dan Casas, Edilson De Aguiar, and Chris-
tian Theobalt. Multi-view performance capture of sur-
face details.
International Journal of Computer Vision,
124(1):96–113, 2017. 2

[54] Carsten Rother, Vladimir Kolmogorov, and Andrew Blake.
interactive foreground extraction using iterated

”grabcut”:
graph cuts. ACM Trans. Graph., 23(3):309–314, 2004. 6

[55] Zhixin Shu, Mihir Sahasrabudhe, Riza Alp Guler, Dimitris
Samaras, Nikos Paragios, and Iasonas Kokkinos. Deform-
ing autoencoders: Unsupervised disentangling of shape and
appearance. In Proc. ECCV, September 2018. 2

[56] Aliaksandr Siarohin, Enver Sangineto, Stphane Lathuilire,
and Nicu Sebe. Deformable gans for pose-based human im-
age generation. In Proc. CVPR, June 2018. 2

[57] Tomas Simon, Hanbyul Joo, Iain Matthews, and Yaser
Sheikh. Hand keypoint detection in single images using mul-
tiview bootstrapping. In CVPR, 2017. 6

[58] Karen Simonyan and Andrew Zisserman. Very deep convo-
lutional networks for large-scale image recognition. CoRR,
abs/1409.1556, 2014. 4

[59] J Starck and A Hilton. Model-based multiple view recon-
struction of people. In Proc. ICCV, pages 915–922, 2003.
2

[60] Ian Stavness, C Antonio S´anchez, John Lloyd, Andrew Ho,
Johnty Wang, Sidney Fels, and Danny Huang. Uniﬁed skin-

2396

ning of rigid and deformable models for anatomical simu-
lations. In SIGGRAPH Asia 2014 Technical Briefs, page 9.
ACM, 2014. 2

[61] Diana Sungatullina, Egor Zakharov, Dmitry Ulyanov, and
Victor Lempitsky. Image manipulation with perceptual dis-
criminators. In Proc. ECCV, September 2018. 2
Steven M Seitz,

and Ira
Kemelmacher-Shlizerman. Synthesizing Obama:
learning
lip sync from audio. ACM Transactions on Graphics (TOG),
36(4):95, 2017. 1, 2

[62] Supasorn Suwajanakorn,

[63] Jonathan Taylor, Jamie Shotton, Toby Sharp, and Andrew
Fitzgibbon. The vitruvian manifold: Inferring dense corre-
spondences for one-shot human pose estimation.
In Proc.
CVPR, pages 103–110. IEEE, 2012. 3

[64] Sergey Tulyakov, Ming-Yu Liu, Xiaodong Yang, and Jan
Kautz. Mocogan: Decomposing motion and content for
video generation. In Proc. CVPR, June 2018. 2

[65] Dmitry Ulyanov, Vadim Lebedev, Andrea Vedaldi, and Vic-
tor S. Lempitsky. Texture networks: Feed-forward synthesis
of textures and stylized images. In Proc. ICML, pages 1349–
1357, 2016. 3, 4

[66] Marco Volino, Dan Casas, John P Collomosse, and Adrian
Hilton. Optimal representation of multi-view video. In Proc.
BMVC, 2014. 3

[67] Ting-Chun Wang, Ming-Yu Liu, Jun-Yan Zhu, Guilin Liu,
Andrew Tao, Jan Kautz, and Bryan Catanzaro. Video-to-
video synthesis. arXiv preprint arXiv:1808.06601, 2018. 1,
2, 3, 6

[68] Lingyu Wei, Liwen Hu, Vladimir Kim, Ersin Yumer, and
Hao Li. Real-time hair rendering using sequential adversarial
networks. In Proc. ECCV, September 2018. 2

[69] Alexander Weiss, David Hirshberg, and Michael J Black.
Home 3d body scans from noisy image and range data. In
Proc. ICCV, pages 1951–1958. IEEE, 2011. 2

[70] Tim Weyrich, Wojciech Matusik, Hanspeter Pﬁster, Bernd
Bickel, Craig Donner, Chien Tu, Janet McAndless, Jinho
Lee, Addy Ngan, Henrik Wann Jensen, et al. Analysis of
human faces using a measurement-based skin reﬂectance
model.
In ACM Transactions on Graphics (TOG), vol-
ume 25, pages 1013–1024. ACM, 2006. 2

[71] Olivia Wiles, A. Sophia Koepke, and Andrew Zisserman.
X2face: A network for controlling face generation using im-
ages, audio, and pose codes.
In Proc. ECCV, September
2018. 2

[72] Erroll Wood, Tadas Baltrusaitis, Xucong Zhang, Yusuke
Sugano, Peter Robinson, and Andreas Bulling. Rendering
of eyes for eye-shape registration and gaze estimation.
In
Proc. ICCV, pages 3756–3764, 2015. 2

[73] Feng Xu, Yebin Liu, Carsten Stoll, James Tompkin, Gau-
rav Bharaj, Qionghai Dai, Hans-Peter Seidel, Jan Kautz,
and Christian Theobalt. Video-based characters: creating
new human performances from a multi-view video database.
ACM Transactions on Graphics (TOG), 30(4):32, 2011. 3

[74] Tao Yu, Zerong Zheng, Kaiwen Guo, Jianhui Zhao, Qionghai
Dai, Hao Li, Gerard Pons-Moll, and Yebin Liu. Doublefu-
sion: Real-time capture of human performances with inner
body shapes from a single depth sensor.
In Proc. CVPR,
pages 7287–7296. IEEE Computer Society, 2018. 2

2397

