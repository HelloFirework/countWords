Reinforced Cross-Modal Matching and Self-Supervised Imitation Learning

for Vision-Language Navigation

Xin Wang1 Qiuyuan Huang2 Asli Celikyilmaz2

Jianfeng Gao2 Dinghan Shen3

1University of California, Santa Barbara

Yuan-Fang Wang1 William Yang Wang1

Lei Zhang2
2Microsoft Research, Redmond

3Duke University

{qihua,aslicel,jfgao,leizhang}.microsoft.com, dinghan.shen@duke.edu

{xwang,yfwang,william}@cs.ucsb.edu

Abstract

Vision-language navigation (VLN) is the task of navi-
gating an embodied agent to carry out natural language
instructions inside real 3D environments.
In this paper,
we study how to address three critical challenges for this
task: the cross-modal grounding, the ill-posed feedback,
and the generalization problems. First, we propose a novel
Reinforced Cross-Modal Matching (RCM) approach that
enforces cross-modal grounding both locally and globally
via reinforcement learning (RL). Particularly, a matching
critic is used to provide an intrinsic reward to encourage
global matching between instructions and trajectories, and
a reasoning navigator is employed to perform cross-modal
grounding in the local visual scene. Evaluation on a VLN
benchmark dataset shows that our RCM model signiﬁcantly
outperforms previous methods by 10% on SPL and achieves
the new state-of-the-art performance. To improve the gen-
eralizability of the learned policy, we further introduce a
Self-Supervised Imitation Learning (SIL) method to explore
unseen environments by imitating its own past, good deci-
sions. We demonstrate that SIL can approximate a better
and more efﬁcient policy, which tremendously minimizes the
success rate performance gap between seen and unseen en-
vironments (from 30.7% to 11.7%).

1. Introduction

Recently, vision-language grounded embodied agents
have received increased attention [36, 22, 7] due to their
popularity in many intriguing real-world applications, e.g.,
in-home robots and personal assistants. Meanwhile, such
an agent pushes forward visual and language grounding by
putting itself in an active learning scenario through ﬁrst-
person vision.
In particular, Vision-Language Navigation
(VLN) [2] is the task of navigating an agent inside real envi-
ronments by following natural language instructions. VLN

Local	
visual	
scene	

Instruction

Turn right and head
towards the kitchen.
Then turn left, pass a
table and enter the
hallway. Walk down
the hallway and turn
into the entry way to
your
right without
doors. Stop in front
of the toilet.

Initial	Position

Target	Position

Demonstration	Path	A
Executed	Path	B
Executed	Path	C	

Global	

trajectories	
in	top-down	

view	

Figure 1: Demonstration of the VLN task. The instruction, the
local visual scene, and the global trajectories in a top-down view
is shown. The agent does not have access to the top-down view.
Path A is the demonstration path following the instruction. Path B
and C are two different paths executed by the agent.

requires a deep understanding of linguistic semantics, vi-
sual perception, and most importantly, the alignment of the
two. The agent must reason about the vision-language dy-
namics in order to move towards the target that is inferred
from the instructions.

VLN presents some unique challenges. First, reasoning
over visual images and natural language instructions can be
difﬁcult. As we demonstrate in Figure 1, to reach a desti-
nation, the agent needs to ground an instruction in the local
visual scene, represented as a sequence of words, as well as
match the instruction to the visual trajectory in the global
temporal space. Secondly, except for strictly following ex-
pert demonstrations, the feedback is rather coarse, since
the “Success” feedback is provided only when the agent
reaches a target position, completely ignoring whether the
agent has followed the instructions (e.g., Path A in Figure 1)

6629

or followed a random path to reach the destination (e.g.,
Path C in Figure 1). Even a “good” trajectory that matches
an instruction can be considered unsuccessful if the agent
stops marginally earlier than it should be (e.g., Path B in
Figure 1). An ill-posed feedback can potentially deviate
from the optimal policy learning. Thirdly, existing work
suffers from the generalization problem, causing a huge per-
formance gap between seen and unseen environments.

In this paper, we propose to combine the power of re-
inforcement learning (RL) and imitation learning (IL) to
address the challenges above. First, we introduce a novel
Reinforced Cross-Modal Matching (RCM) approach that
enforces cross-modal grounding both locally and globally
via RL. Speciﬁcally, we design a reasoning navigator that
learns the cross-modal grounding in both the textual in-
struction and the local visual scene, so that the agent can
infer which sub-instruction to focus on and where to look
at. From the global perspective, we equip the agent with
a matching critic that evaluates an executed path by the
probability of reconstructing the original instruction from
it, which we refer to as the cycle-reconstruction reward.
Locally, the cycle-reconstruction reward provides a ﬁne-
grained intrinsic reward signal to encourage the agent to
better understand the language input and penalize the tra-
jectories that do not match the instructions. For instance,
using the proposed reward, Path B is considered better than
Path C (see Figure 1).

Being trained with the intrinsic reward from the match-
ing critic and the extrinsic reward from the environment, the
reasoning navigator learns to ground the natural language
instruction on both local spatial visual scene and global tem-
poral visual trajectory. Our RCM model signiﬁcantly out-
performs the existing methods and achieves new state-of-
the-art performance on the Room-to-Room (R2R) dataset.

Our experimental results indicate a large performance
gap between seen and unseen environments. To narrow the
gap, we propose an effective solution to explore unseen en-
vironments with self-supervision. This technique is valu-
able because it can facilitate lifelong learning and adaption
to new environments. For example, domestic robots can
explore a new home it arrives at and iteratively improve
the navigation policy by learning from previous experience.
Motivated by this fact, we introduce a Self-Supervised Imi-
tation Learning (SIL) method in favor of exploration on un-
seen environments that do not have labeled data. The agent
learns to imitate its own past, good experience. Speciﬁcally,
in our framework, the navigator performs multiple roll-outs,
of which good trajectories (determined by the matching
critic) are stored in the replay buffer and later used for the
navigator to imitate. In this way, the navigator can approxi-
mate its best behavior that leads to a better policy. To sum-
marize, our contributions are mainly three-fold:

ing (RCM) framework that utilizes both extrinsic and
intrinsic rewards for reinforcement learning, of which
we introduce a cycle-reconstruction reward as the in-
trinsic reward to enforce the global matching between
the language instruction and the agent’s trajectory.

• Experiments show that RCM achieves the new state-
of-the-art performance on the R2R dataset, and among
the prior art, is ranked ﬁrst1 in the VLN Challenge in
terms of SPL, the most reliable metric for the task.

• We introduce a new evaluation setting for VLN, where
exploring unseen environments prior to testing is al-
lowed, and then propose a Self-Supervised Imita-
tion Learning (SIL) method for exploration with self-
supervision, whose effectiveness and efﬁciency are
validated on the R2R dataset.

2. Related Work

Vision-and-Language Grounding Recently, researchers
in both computer vision and natural language processing
are striving to bridge vision and natural language towards
a deeper understanding of the world [51, 45, 20, 6, 27, 17,
41, 19], e.g., captioning an image or a video with natural
language [9, 10, 44, 46, 52, 53, 47] or localizing desired
objects within an image given a natural language descrip-
tion [35, 18, 54, 55]. Moreover, visual question answer-
ing [3] and visual dialog [8] aim to generate one-turn or
multi-turn response by grounding it on both visual and tex-
tual modalities. However, those tasks focus on passive vi-
sual perception in the sense that the visual inputs are usually
ﬁxed. In this work, we are particularly interested in solving
the dynamic multi-modal grounding problem in both tem-
poral and spatial spaces. Thus, we focus on the task of
vision-language navigation (VLN) [2] which requires the
agent to actively interact with the environment.

Embodied Navigation Agent Navigation in 3D environ-
ments [56, 28, 29, 14] is an essential capability of a mobile
intelligent system that functions in the physical world. In
the past two years, a plethora of tasks and evaluation proto-
cols [36, 22, 38, 50, 2] have been proposed as summarized
in [1]. VLN [2] focuses on language-grounded navigation
in the real 3D environment.
In order to solve the VLN
task, Anderson et al. [2] set up an attention-based sequence-
to-sequence baseline model. Then Wang et al. [48] in-
troduced a hybrid approach that combines model-free and
model-based reinforcement learning (RL) to improve the
model’s generalizability. Lately, Fried et al. [11] proposed
a speaker-follower model that adopts data augmentation,
panoramic action space and modiﬁed beam search for VLN,
establishing the current state-of-the-art performance on the

• We propose a novel Reinforced Cross-Modal Match-

1As of November 16th, 2018.

6630

Room-to-Room dataset. Extending prior work, we propose
a Reinforced Cross-Modal Matching (RCM) approach to
VLN. The RCM model is built upon [11] but differs in
many signiﬁcant aspects: (1) we combine a novel multi-
reward RL with imitation learning for VLN while Speaker-
Follower models [11] only uses supervised learning as in
[2].
(2) Our reasoning navigator performs cross-modal
grounding rather than the temporal attention mechanism on
single-modality input. (3) Our matching critic is similar to
Speaker in terms of the architecture design, but the former
is used to provide the cycle-reconstruction intrinsic reward
for both RL and SIL training while the latter is used to aug-
ment training data for supervised learning. Moreover, we
introduce a self-supervised imitation learning method for
exploration in order to explicitly address the generalization
issue, which is a problem not well-studied in prior work.
Concurrent to our work, [42, 24, 25, 26] studies the VLN
tasks from various aspects, and [30] introduces a variant of
the VLN task to ﬁnd objects by requesting language assis-
tance when needed. Note that we are the ﬁrst to propose to
explore unseen environments for the VLN task.

Exploration Much work has been done on improving ex-
ploration [4, 12, 16, 32, 40] because the trade-off between
exploration and exploitation is one of the fundamental chal-
lenges in RL. The agent needs to exploit what it has learned
to maximize reward and explore new territories for better
policy search. Curiosity or uncertainty has been used as a
signal for exploration [37, 39, 23, 33]. Most recently, Oh
et al. [31] proposed to exploit past good experience for bet-
ter exploration in RL and theoretically justiﬁed its effective-
ness. Our Self-Supervised Imitation Learning (SIL) method
shares the same spirit. But instead of testing on games, we
adapt SIL and validate its effectiveness and efﬁciency on the
more practical task of VLN.

3. Reinforced Cross-Modal Matching

3.1. Overview

Here we consider an embodied agent that learns to nav-
igate inside real indoor environments by following natural
language instructions. The RCM framework mainly con-
sists of two modules (see Figure 2): a reasoning naviga-
tor πθ and a matching critic Vβ. Given the initial state s0
and the natural language instruction (a sequence of words)
X = x1, x2, ..., xn, the reasoning navigator learns to per-
form a sequence of actions a1, a2, ..., aT ∈ A, which gen-
erates a trajectory τ , in order to arrive at the target location
starget indicated by the instruction X . The navigator inter-
acts with the environment and perceives new visual states
as it executes actions. To promote the generalizability and
reinforce the policy learning, we introduce two reward func-
tions: an extrinsic reward that is provided by the environ-

Labeled	Target	

Location

Environment

State

Action

Instruction

Navigator

Trajectory

Matching Critic

Extrinsic
Reward

Intrinsic
Reward

Figure 2: Overview of our RCM framework.

ment and measures the success signal and the navigation er-
ror of each action, and an intrinsic reward that comes from
our matching critic and measures the alignment between the
language instruction X and the navigator’s trajectory τ .

3.2. Model

Here we discuss the reasoning navigator and matching

critic in details, both of which are end-to-end trainable.

3.2.1 Cross-Modal Reasoning Navigator

The navigator πθ is a policy-based agent that maps the input
instruction X onto a sequence of actions {at}T
t=1. At each
time step t, the navigator receives a state st from the envi-
ronment and needs to ground the textual instruction in the
local visual scene. Thus, we design a cross-modal reason-
ing navigator that learns the trajectory history, the focus of
the textual instruction, and the local visual attention in or-
der, which forms a cross-modal reasoning path to encourage
the local dynamics of both modalities at step t.

Figure 3 shows the unrolled version of the navigator
at time step t. Similar to [11], we equip the navigator
with a panoramic view, which is split into image patches
of m different viewpoints, so the panoramic features that
are extracted from the visual state st can be represented as
{vt,j}m
j=1, where vt,j denotes the pre-trained CNN feature
of the image patch at viewpoint j.

History Context Once the navigator runs one step, the
visual scene would change accordingly. The history of the
trajectory τ1:t till step t is encoded as a history context vec-
tor ht by an attention-based trajectory encoder LSTM [15]:

ht = LST M ([vt, at−1], ht−1)

(1)

where at−1 is the action taken at previous step, and vt =
Pj αt,jvt,j , the weighted sum of the panoramic features.
αt,j is the attention weight of the visual feature vt,j , repre-
senting its importance with respect to the previous history
context ht−1. Note that we adopt the dot-product atten-
tion [43] hereafter, which we denote as (taking the attention

6631

turn completely around until you 
face an open door with a window to 
the left and a patio to the right, 
walk forward though the door and 
into a dinning room, … …

Panoramic			Features

{𝒗),+}	

,
+%&

Attention

𝒂)/&

Language Encoder

…

𝒉)/&

Trajectory Encoder
…

𝒉).&

𝒉)

’
{𝒘#}	
#%&

Attention

)12)
𝒄)

4#5678
𝒄𝒕

Attention

Action

Predictor

𝒂𝒕

Figure 3: Cross-modal reasoning navigator at step t.

over visual features above for an example)

vt = attention(ht−1, {vt,j}m

j=1)

= X

j

sof tmax(ht−1Wh(vt,jWv)T )vt,j

(2)

(3)

where Wh and Wv are learnable projection matrices.

Visually Conditioned Textual Context Memorizing the
past can enable the recognition of the current status and thus
understanding which words or sub-instructions to focus on
next. Hence, we further learn the textual context ctext
con-
ditioned on the history context ht. We let a language en-
coder LSTM to encode the language instruction X into a
set of textual features {wi}n
i=1. Then at every time step, the
textual context is computed as

t

ctext
t = attention(ht, {wi}n

i=1)

(4)

Note that ctext
evant to the trajectory history and the current visual state.

t weighs more on the words that are more rel-

Textually Conditioned Visual Context Knowing where
to look at requires a dynamic understanding of the language
instruction; so we compute the visual context cvisual
based
on the textual context ctext

:

t

t

cvisual
t

= attention(ctext

t

, {vj}m

j=1)

(5)

Action Prediction In the end, our action predictor con-
siders the history context ht, the textual context ctext
, and
the visual context cvisual
, and decides which direction to go
next based on them. It calculates the probability pk of each
navigable direction using a bilinear dot product as follows:

t

t

pk = sof tmax([ht, ctext

t

, cvisual

t

]Wc(ukWu)T )

(6)

where uk is the action embedding that represents the k-
th navigable direction, which is obtained by concatenat-
ing an appearance feature vector (CNN feature vector ex-
tracted from the image patch around that view angle or

Navigator	

𝜋#

𝜏

Matching Critic	𝑉%

Trajectory	Encoder

𝜒

𝑉% 𝜒, 𝜏 = 𝑝%(𝜒|𝜏)

Language	Decoder

Figure 4: Cross-modal matching critic that provides the cycle-
reconstruction intrinsic reward.

direction) and a 4-dimensional orientation feature vector
[sinψ; cosψ; sinω; cosω], where ψ and ω are the heading
and elevation angles respectively. The learning objectives
for training the navigator are introduced in Section 3.3.

3.2.2 Cross-Modal Matching Critic

In addition to the extrinsic reward signal from the environ-
ment, we also derive an intrinsic reward Rintr provided by
the matching critic Vβ to encourage the global matching be-
tween the language instruction X and the navigator πθ’s tra-
jectory τ = {< s1, a1 >, < s2, a2 >, ..., < sT , aT >}:

Rintr = Vβ(X , τ ) = Vβ(X , πθ(X ))

(7)

One way to realize this goal is to measure the cycle-
reconstruction reward p( ˆX = X |πθ(X )), the probability of
reconstructing the language instruction X given the trajec-
tory τ = πθ(X ) executed by the navigator. The higher the
probability is, the better the produced trajectory is aligned
with the instruction.

Therefore as shown in Figure 4, we adopt an attention-
based sequence-to-sequence language model as our match-
ing critic Vβ, which encodes the trajectory τ with a trajec-
tory encoder and produces the probability distributions of
generating each word of the instruction X with a language
decoder. Hence the intrinsic reward

Rintr = pβ(X |πθ(X )) = pβ(X |τ )

(8)

which is normalized by the instruction length n.
In our
experiments, the matching critic is pre-trained with hu-
man demonstrations (the ground-truth instruction-trajectory
pairs < X ∗, τ ∗ >) via supervised learning.

3.3. Learning

In order to quickly approximate a relatively good pol-
icy, we use the demonstration actions to conduct supervised
learning with maximum likelihood estimation (MLE). The
training loss Lsl is deﬁned as

Lsl = −E[log(πθ(a∗

t |st))]

(9)

where a∗
t is the demonstration action provided by the sim-
ulator. Warm starting the agent with supervised learning

6632

can ensure a relatively good policy on the seen environ-
ments. But it also limits the agent’s generalizability to re-
cover from erroneous actions in unseen environments, since
it only clones the behaviors of expert demonstrations.

To learn a better and more generalizable policy, we then
switch to reinforcement learning and introduce the extrin-
sic and intrinsic reward functions to reﬁne the policy from
different perspectives.

Extrinsic Reward A common practice in RL is to di-
rectly optimize the evaluation metrics. Since the objective
of the VLN task is to successfully reach the target loca-
tion starget, we consider two metrics for the reward design.
The ﬁrst metric is the relative navigation distance similar
to [48]. We denote the distance between st and starget as
Dtarget(st). Then the immediate reward r(st, at) after tak-
ing action at at state st (t < T ) becomes:

r(st, at) = Dtarget(st) − Dtarget(st+1),

t < T (10)

This indicates the reduced distance to the target location af-
ter taking action at. Our second choice considers the “Suc-
cess” as an additional criterion. If the agent reaches a point
within a threshold measured by the distance d from the tar-
get (d is preset as 3m in the R2R dataset), then it is counted
as “Success”. Particularly, the immediate reward function
at last step T is deﬁned as

r(sT , aT ) = ✶(Dtarget(sT ) ≤ d)

(11)

where ✶() is an indicator function. To incorporate the in-
ﬂuence of the action at on the future and account for the
local greedy search, we use the discounted cumulative re-
ward rather than the immediate reward to train the policy:

Rextr(st, at) = r(st, at)
| {z }

immediate reward

T

X

+

t′=t+1

γt′

−tr(st′ , at′ )

}
(12)
where γ is the discounted factor (0.95 in our experiments).

discounted future reward

{z

|

Intrinsic Reward As discussed in Section 3.2.2, we pre-
train a matching critic to calculate the cycle-reconstruction
intrinsic reward Rintr (see Equation 8), promoting the
alignment between the language instruction X and the tra-
jectory τ . It encourages the agent to respect the instruction
and penalizes the paths that deviate from what the instruc-
tion indicates.

With both the extrinsic and intrinsic reward functions,

the RL loss can be written as

Lrl = −Eat∼πθ [At]

(13)

where the advantage function At = Rextr + δRintr. δ
is a hyperparameter weighing the intrinsic reward. Based

Unlabeled

Instruction	!

Navigator	"#

{&',	&(,…,	&)}

Imitation	
Learning

Replay	
Buffer

Matching Critic	

&̂ =

$%

argmax $%	(!, &)

Figure 5: SIL for exploration on unlabeled data.

on REINFORCE algorithm [49],
the gradient of non-
differentiable, reward-based loss function can be derived as

∇θLrl = −At∇θ log πθ(at|st)

(14)

4. Self-Supervised Imitation Learning

The last section introduces the effective RCM method
for generic vision-language navigation task, whose standard
setting is to train the agent on seen environments and test it
on unseen environments without exploration. In this section
we discuss a different setting where the agent is allowed to
explore unseen environments without ground-truth demon-
strations. This is of practical beneﬁt because it facilitates
lifelong learning and adaption to new environments.

To this end, we propose a Self-Supervised Imitation
Learning (SIL) method to imitate the agent’s own past good
decisions. As shown in Figure 5, given a natural language
instruction X without paired demonstrations and ground-
truth target location, the navigator produces a set of possi-
ble trajectories and then stores the best trajectory ˆτ that is
determined by matching critic Vβ into a replay buffer, in
formula,

ˆτ = arg max

τ

Vβ(X , τ )

(15)

The matching critic evaluates the trajectories with the cycle-
reconstruction reward as introduced in Section 3.2.2. Then
by exploiting the good trajectories in the replay buffer, the
agent is indeed optimizing the following objective with self-
supervision. The target location is unknown and thus there
is no supervision from the environment.

Lsil = −Rintr log πθ(at|st)

(16)

Note that Lsil can be viewed as the loss for policy gradient
except that the off-policy Monte-Carlo return Rintr is used
instead of on-policy return. Lsil can also be interpreted as
the supervised learning loss with ˆτ as the “ground truths”:

Lsil = −E[log(πθ( ˆat|st))]

(17)

where ˆat is the action stored in the replay buffer using Equa-
tion 15. Paired with a matching critic, the SIL method can
be combined with various learning methods to approximate
a better policy by imitating the previous best of itself.

6633

5. Experiments and Analysis

5.1. Experimental Setup

R2R Dataset We evaluate our approaches on the Room-
to-Room (R2R) dataset [2] for vision-language navigation
in real 3D environments, which is built upon the Matter-
port3D dataset [5]. The R2R dataset has 7,189 paths that
capture most of the visual diversity and 21,567 human-
annotated instructions with an average length of 29 words.
The R2R dataset is split into training, seen validation, un-
seen validation, and test sets. The seen validation set shares
the same environments with the training set. While both the
unseen validation and test sets contain distinct environments
that do not appear in the other sets.

Testing Scenarios The standard testing scenario of the
VLN task is to train the agent in seen environments and
then test it in previously unseen environments in a zero-shot
fashion. There is no prior exploration on the test set. This
setting is preferred and able to clearly measure the general-
izability of the navigation policy, so we evaluate our RCM
approach under the standard testing scenario.

Furthermore, exploration in unseen environments is cer-
tainly meaningful in practice, e.g., in-home robots are ex-
pected to explore and adapt to a new environment. So we
introduce a lifelong learning scenario where the agent is en-
couraged to learn from trials and errors on the unseen envi-
ronments. In this case, how to effectively explore the unseen
validation or test set where there are no expert demonstra-
tions becomes an important task to study.

Evaluation Metrics We report ﬁve evaluation metrics as
used by the VLN Challenge: Path Length (PL), Navigation
Error (NE), Oracle Success Rate (OSR), Success Rate (SR),
and Success rate weighted by inverse Path Length (SPL).2
Among those metrics, SPL is the recommended primary
measure of navigation performance [1], as it considers both
effectiveness and efﬁciency. The other metrics are also re-
ported as auxiliary measures.

Implementation Details Following prior work [2, 48,
11], ResNet-152 CNN features [13] are extracted for all im-
ages without ﬁne-tuning. The pretrained GloVe word em-
beddings [34] are used for initialization and then ﬁne-tuned
during training. We train the matching critic with human
demonstrations and then ﬁx it during policy learning. Then

2PL: the total length of the executed path. NE: the shortest-path dis-
tance between the agent’s ﬁnal position and the target. OSR: the success
rate at the closest point to the goal that the agent has visited along the tra-
jectory. SR: the percentage of predicted end-locations within 3m of the
target locations. SPL: SPL trades-off Success Rate against Path Length,
which is deﬁned in [1].

Test Set (VLN Challenge Leaderboard)

Model

PL ↓

NE ↓ OSR ↑ SR ↑ SPL ↑

Random
seq2seq [2]
RPA [48]
Speaker-Follower [11]

9.89
8.13
9.15
14.82

+ beam search

1257.38

Ours
RCM
RCM + SIL (train)
RCM + SIL (unseen)3

15.22
11.97

9.48

9.79
7.85
7.53
6.62
4.87

6.01
6.12

4.21

18.3
26.6
32.5
44.0
96.0

50.8
49.5

66.8

13.2
20.4
25.3
35.0
53.5

43.1
43.0

60.5

12
18
23
28
1

35
38

59

Table 1: Comparison on the R2R test set [2]. Our RCM model sig-
niﬁcantly outperforms the SOTA methods, especially on SPL (the
primary metric for navigation tasks [1]). Moreover, using SIL to
imitate itself on the training set can further improve its efﬁciency:
the path length is shortened by 3.25m. Note that with beam search,
the agent executes K trajectories at test time and chooses the most
conﬁdent one as the ending point, which results in a super long
path and is heavily penalized by SPL.

we warm start the policy via SL with a learning rate 1e-
4, and then switch to RL training with a learning rate 1e-5
(same for SIL). Adam optimizer [21] is used to optimize all
the parameters. More details can be found in the appendix.

5.2. Results on the Test Set

Comparison with SOTA We compare the performance
of RCM to the previous state-of-the-art (SOTA) methods
on the test set of the R2R dataset, which is held out as the
VLN Challenge. The results are shown in Table 1, where
we compare RCM to a set of baselines: (1) Random: ran-
domly take a direction to move forward at each step until
ﬁve steps. (2) seq2seq: the best-performing sequence-to-
sequence model as reported in the original dataset paper [2],
which is trained with the student-forcing method. (3) RPA:
a reinforced planning-ahead model that combines model-
free and model-based reinforcement learning for VLN [48].
(4) Speaker-Follower: a compositional Speaker-Follower
method that combines data augmentation, panoramic action
space, and beam search for VLN [11].

As can be seen in Table 1, RCM signiﬁcantly outper-
forms the existing methods, improving the SPL score from
28% to 35%4. The improvement is consistently observed
on the other metrics, e.g., the success rate is increased by
8.1%. Moreover, using SIL to imitate the RCM agent’s pre-
vious best behaviors on the training set can approximate a

3The results of using SIL to explore unseen environments are only used
to validate its effectiveness for lifelong learning, which is not directly com-
parable to other models due to different learning scenarios.

4Note that our RCM model also utilizes the panoramic action space and

augmented data in [11] for a fair comparison.

6634

Seen Validation

Unseen Validation

# Model

PL ↓

NE ↓ OSR ↑

SR ↑

PL ↓

NE ↓ OSR ↑

SR ↑

0

Speaker-Follower (no beam search) [11]

-

1 RCM + SIL (train)
2 RCM
3
4
5

− intrinsic reward
− extrinsic reward = pure SL
− cross-modal reasoning

10.65
11.92
12.08
11.99
11.88

3.36

3.53
3.37
3.25
3.22
3.18

6 RCM + SIL (unseen)

10.13

2.78

73.8

75.0
76.6
77.2
76.7
73.9

79.7

66.4

66.7
67.4
67.6
66.9
66.4

73.0

-

11.46
14.84
15.00
14.83
14.51

9.12

6.62

6.09
5.88
6.02
6.29
6.47

4.17

45.0

50.1
51.9
50.5
46.5
44.8

35.5

42.8
42.5
40.6
37.7
35.7

69.31

61.3

Table 2: Ablation study on seen and unseen validation sets. We report the performance of the speaker-follower model without beam search
as the baseline. Row 1-5 shows the inﬂuence of each individual component by successively removing it from the ﬁnal model. Row 6
illustrates the power of SIL on exploring unseen environments with self-supervision. Please see Section 5.3 for more detailed analysis.

more efﬁcient policy, whose average path length is reduced
from 15.22m to 11.97m and which achieves the best result
(38%) on SPL. Therefore, we submit the results of RCM +
SIL (train) to the VLN Challenge, ranking ﬁrst among prior
work in terms of SPL. It is worth noticing that beam search
is not practical in reality, because it needs to execute a very
long trajectory before making the decision, which is pun-
ished heavily by the primary metric SPL. So we are mainly
comparing the results without beam search.

Self-Supervised Imitation Learning As mentioned
above, for a standard VLN setting, we employ SIL on the
training set to learn an efﬁcient policy. For the lifelong
learning scenario, we test
the effectiveness of SIL on
exploring unseen environments (the validation and test
sets). It is noticeable in Table 1 that SIL indeed leads to
a better policy even without knowing the target locations.
SIL improves RCM by 17.5% on SR and 21% on SPL.
Similarly, the agent also learns a more efﬁcient policy that
takes less number of steps (the average path length is re-
duced from 15.22m to 9.48m) but obtains a higher success
rate. The key difference between SIL and beam search
is that SIL optimizes the policy itself by play-and-imitate
while beam search only makes a greedy selection of the
rollouts of the existing policy. But we would like to point
out that due to different learning scenarios, the results of
RCM + SIL (unseen) cannot be directly compared with
other methods following the standard settings of the VLN
challenge.

5.3. Ablation Study

Effect of Individual Components We conduct an abla-
tion study to illustrate the effect of each component on both
seen and unseen validation sets in Table 2. Comparing Row
1 and Row 2, we observe the efﬁciency of the learned pol-
icy by imitating the best of itself on the training set. Then

we start with the RCM model in Row 2, and successively
remove the intrinsic reward, extrinsic reward, and cross-
modal reasoning to demonstrate their importance.

Removing the intrinsic reward (Row 3), we notice that
the success rate (SR) on unseen environments drops 1.9
points while it is almost ﬁxed on seen environments (0.2↑).
It evaluates the alignment between instructions and trajecto-
ries, serving as a complementary supervision besides of the
feedback from the environment, therefore it works better
for the unseen environments that require more supervision
due to lack of exploration. This also indirectly validates the
importance of exploration on unseen environments.

Furthermore, the results of Row 4 (the RCM model with
only supervised learning) validate the superiority of rein-
forcement learning compared to purely supervised learning
on the VLN task. Meanwhile, since eventually the results
are evaluated based on the success rate (SR) and path length
(PL), directly optimizing the extrinsic reward signals can
guarantee the stability of the reinforcement learning and
bring a big performance gain.

We then verify the strength of our cross-modal reasoning
navigator by comparing it (Row 4) with an attention-based
sequence-to-sequence model (Row 5) that utilizes the previ-
ous hidden state ht−1 to attend to both the visual and textual
features at decoding time. Everything else is exactly the
same except the cross-modal attention design. Evidently,
our navigator improves upon the baseline by considering
history context, visually-conditioned textual context, and
textually-conditioned visual context for decision making.

In the end, we demonstrate the effectiveness of the pro-
posed SIL method for exploration in Row 6. Considerable
performance boosts have been obtained on both seen and
unseen environments, as the agent learns how to better exe-
cute the instructions from its own previous experience.

6635

Instruction: Exit the door and turn left towards the 
staircase. Walk all the way up the stairs, and stop at 
the top of the stairs.

Instruction: Turn right and go down the stairs. Turn 
left and go straight until you get to the laundry room. 
Wait there.

Intrinsic	Reward:	0.53				Result:	Success	(error	=	0m)	

Intrinsic	Reward:	0.54				Result:	Failure	(error	=	5.5m)	

step	1	panorama	view

step	1	panorama	view

step	2	panorama	view

step	2	panorama	view

step	3	panorama	view

step	3	panorama	view

step	4	panorama	view

step	4	panorama	view

:

step	6	panorama	view

Above	steps	are	all	good,	but	it	stops	at	a	wrong	place	in	the	end.	

step	5	panorama	view

(a) A successful case

(b) A failure case

Figure 6: Qualitative examples from the unseen validation set.

Generalizability Another observation from the experi-
ments (e.g., see Table 2) is that our RCM approach is much
more generalizable to unseen environments compared with
the baseline. The improvements on the seen and unseen
validation sets are 0.3 and 7.1 points, respectively. So is
the SIL method, which explicitly explores the unseen en-
vironments and tremendously reduces the success rate per-
formance gap between seen and unseen environments from
30.7% (Row 5) to 11.7% (Row 6).

Qualitative Analysis For a more intuitive view of how
our model works for the VLN task, we visualize two qual-
itative examples in Figure 6. Particularly, we choose two
examples, both with high intrinsic rewards. In (a), the agent
successfully reaches the target destination, with a compre-
hensive understanding of the natural language instruction.
While in (b), the intrinsic reward is also high, which indi-
cates most of the agent’s actions are good, but it is also no-
ticeable that the agent fails to recognize the laundry room
at the end of the trajectory, which shows the importance of
more precise visual grounding in the navigation task.

6. Conclusion

In this paper we present two novel approaches, RCM and
SIL, which combine the strength of reinforcement learn-
ing and self-supervised imitation learning for the vision-
language navigation task. Experiments illustrate the ef-
fectiveness and efﬁciency of our methods under both the
standard testing scenario and the lifelong learning scenario.
Moreover, our methods show strong generalizability in un-
seen environments. The proposed learning frameworks are
modular and model-agnostic, which allow the components
to be improved separately. We also believe that the idea of
learning more ﬁne-grained intrinsic rewards, in addition to
the coarse external signals, is commonly applicable to vari-
ous embodied agent tasks, and the idea SIL can be generally
adopted to explore other unseen environments.

Acknowledgment

This work was partly performed when the ﬁrst author
was interning at Microsoft Research. The authors thank Pe-
ter Anderson and Pengchuan Zhang for their helpful discus-
sions, and Ronghang Hu for his visualization code.

6636

References

[1] P. Anderson, A. Chang, D. S. Chaplot, A. Dosovitskiy,
S. Gupta, V. Koltun, J. Kosecka, J. Malik, R. Mottaghi,
M. Savva, et al. On evaluation of embodied navigation
agents. arXiv preprint arXiv:1807.06757, 2018.

[2] P. Anderson, Q. Wu, D. Teney, J. Bruce, M. Johnson,
N. S¨underhauf, I. Reid, S. Gould, and A. van den Hen-
gel. Vision-and-language navigation: Interpreting visually-
grounded navigation instructions in real environments.
In
Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition (CVPR), volume 2, 2018.

[3] S. Antol, A. Agrawal, J. Lu, M. Mitchell, D. Batra, C. L. Zit-
nick, and D. Parikh. VQA: Visual Question Answering. In
International Conference on Computer Vision (ICCV), 2015.

[4] M. Bellemare, S. Srinivasan, G. Ostrovski, T. Schaul,
D. Saxton, and R. Munos. Unifying count-based exploration
and intrinsic motivation. In Advances in Neural Information
Processing Systems, pages 1471–1479, 2016.

[5] A. Chang, A. Dai, T. Funkhouser, M. Halber, M. Nießner,
M. Savva, S. Song, A. Zeng, and Y. Zhang. Matterport3d:
Learning from rgb-d data in indoor environments. arXiv
preprint arXiv:1709.06158, 2017.

[6] X. Chen and C. Lawrence Zitnick. Mind’s eye: A recur-
rent visual representation for image caption generation. In
Proceedings of the IEEE conference on computer vision and
pattern recognition, pages 2422–2431, 2015.

[7] A. Das, S. Datta, G. Gkioxari, S. Lee, D. Parikh, and D. Ba-
tra. Embodied Question Answering. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion (CVPR), 2018.

[8] A. Das, S. Kottur, K. Gupta, A. Singh, D. Yadav, J. M.
Moura, D. Parikh, and D. Batra. Visual Dialog.
In Pro-
ceedings of the IEEE Conference on Computer Vision and
Pattern Recognition (CVPR), 2017.

[9] J. Donahue, L. A. Hendricks, S. Guadarrama, M. Rohrbach,
S. Venugopalan, K. Saenko, and T. Darrell. Long-term recur-
rent convolutional networks for visual recognition and de-
scription. In CVPR, 2015.

[10] H. Fang, S. Gupta, F. Iandola, R. K. Srivastava, L. Deng,
P. Doll´ar, J. Gao, X. He, M. Mitchell, J. C. Platt, et al. From
captions to visual concepts and back. In Proceedings of the
IEEE conference on computer vision and pattern recogni-
tion, pages 1473–1482, 2015.

[11] D. Fried, R. Hu, V. Cirik, A. Rohrbach, J. Andreas, L.-
P. Morency, T. Berg-Kirkpatrick, K. Saenko, D. Klein, and
T. Darrell. Speaker-follower models for vision-and-language
navigation. In Advances in Neural Information Processing
Systems (NIPS), 2018.

[12] J. Gao, M. Galley, and L. Li. Neural approaches to conver-

sational ai. arXiv preprint arXiv:1809.08267, 2018.

[13] K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learn-
ing for image recognition. In Proceedings of the IEEE con-
ference on computer vision and pattern recognition, pages
770–778, 2016.

[14] S. Hemachandra, F. Duvallet, T. M. Howard, N. Roy,
A. Stentz, and M. R. Walter. Learning models for following

natural language directions in unknown environments. arXiv
preprint arXiv:1503.05079, 2015.

[15] S. Hochreiter and J. Schmidhuber. Long short-term memory.

Neural computation, 9(8):1735–1780, 1997.

[16] R. Houthooft, X. Chen, Y. Duan, J. Schulman, F. De Turck,
and P. Abbeel. Vime: Variational information maximizing
exploration. In Advances in Neural Information Processing
Systems, pages 1109–1117, 2016.

[17] R. Hu, M. Rohrbach, and T. Darrell. Segmentation from
In European Conference on

natural language expressions.
Computer Vision, pages 108–124. Springer, 2016.

[18] R. Hu, H. Xu, M. Rohrbach, J. Feng, K. Saenko, and T. Dar-
rell. Natural language object retrieval. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 4555–4564, 2016.

[19] Q. Huang, P. Zhang, D. Wu, and L. Zhang. Turbo learning
for captionbot and drawingbot. In Advances in Neural Infor-
mation Processing Systems (NIPS), 2018.

[20] A. Karpathy and L. Fei-Fei. Deep visual-semantic align-
ments for generating image descriptions. In Proceedings of
the IEEE conference on computer vision and pattern recog-
nition, pages 3128–3137, 2015.

[21] D. P. Kingma and J. Ba. Adam: A method for stochastic

optimization. arXiv preprint arXiv:1412.6980, 2014.

[22] E. Kolve, R. Mottaghi, D. Gordon, Y. Zhu, A. Gupta, and
A. Farhadi. Ai2-thor: An interactive 3d environment for vi-
sual ai. arXiv preprint arXiv:1712.05474, 2017.

[23] Z. C. Lipton, J. Gao, L. Li, X. Li, F. Ahmed, and
L. Deng. Efﬁcient exploration for dialogue policy learning
with bbq networks & replay buffer spiking. arXiv preprint
arXiv:1608.05081, 2016.

[24] Y. B. A. H. Z. G. J. L. J. G. Y. C. S. S. Liyiming Ke, Xi-
ujun Li. Tactical rewind: Self-correction via backtracking
in vision-and-language navigation.
In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recog-
nition (CVPR), 2019.

[25] C.-Y. Ma, J. Lu, Z. Wu, G. AlRegib, Z. Kira, R. Socher,
and C. Xiong. Self-monitoring navigation agent via auxiliary
progress estimation. arXiv preprint arXiv:1901.03035, 2019.
[26] C.-Y. Ma, Z. Wu, G. AlRegib, C. Xiong, and Z. Kira. The
regretful agent: Heuristic-aided navigation through progress
estimation. arXiv preprint arXiv:1903.01602, 2019.

[27] J. Mao, J. Huang, A. Toshev, O. Camburu, A. L. Yuille, and
K. Murphy. Generation and comprehension of unambiguous
object descriptions. In Proceedings of the IEEE conference
on computer vision and pattern recognition, pages 11–20,
2016.

[28] P. Mirowski, R. Pascanu, F. Viola, H. Soyer, A. J. Ballard,
A. Banino, M. Denil, R. Goroshin, L. Sifre, K. Kavukcuoglu,
et al. Learning to navigate in complex environments. arXiv
preprint arXiv:1611.03673, 2016.

[29] A. Mousavian, A. Toshev, M. Fiser, J. Kosecka, and J. David-
son. Visual representations for semantic target driven navi-
gation. arXiv preprint arXiv:1805.06066, 2018.

[30] K. Nguyen, D. Dey, C. Brockett, and B. Dolan. Vision-
based navigation with language-based assistance via imi-
tation learning with indirect intervention. arXiv preprint
arXiv:1812.04155, 2018.

6637

Association for Computational Linguistics (Volume 1: Long
Papers), 2018.

[46] X. Wang, W. Chen, J. Wu, Y.-F. Wang, and W. Y. Wang.
Video captioning via hierarchical reinforcement learning.
In The IEEE Conference on Computer Vision and Pattern
Recognition (CVPR), 2018.

[47] X. Wang, Y.-F. Wang, and W. Y. Wang. Watch, listen, and de-
scribe: Globally and locally aligned cross-modal attentions
for video captioning.
In Proceedings of the 2018 Confer-
ence of the North American Chapter of the Association for
Computational Linguistics: Human Language Technologies,
Volume 2 (Short Papers), 2018.

[48] X. Wang, W. Xiong, H. Wang, and W. Y. Wang. Look before
you leap: Bridging model-free and model-based reinforce-
ment learning for planned-ahead vision-and-language navi-
gation.
In The European Conference on Computer Vision
(ECCV), September 2018.

[49] R. J. Williams. Simple statistical gradient-following algo-
rithms for connectionist reinforcement learning. Machine
learning, 8(3-4):229–256, 1992.

[50] F. Xia, A. R. Zamir, Z.-Y. He, A. Sax, J. Malik, and
S. Savarese. Gibson Env: real-world perception for em-
bodied agents. In Computer Vision and Pattern Recognition
(CVPR), 2018 IEEE Conference on. IEEE, 2018.

[51] K. Xu, J. Ba, R. Kiros, K. Cho, A. Courville, R. Salakhudi-
nov, R. Zemel, and Y. Bengio. Show, attend and tell: Neural
image caption generation with visual attention. In Interna-
tional Conference on Machine Learning, pages 2048–2057,
2015.

[52] Z. Yang, X. He, J. Gao, L. Deng, and A. Smola. Stacked
attention networks for image question answering.
In Pro-
ceedings of the IEEE Conference on Computer Vision and
Pattern Recognition, pages 21–29, 2016.

[53] H. Yu, J. Wang, Z. Huang, Y. Yang, and W. Xu. Video
paragraph captioning using hierarchical recurrent neural net-
works. In Proceedings of the IEEE conference on computer
vision and pattern recognition, pages 4584–4593, 2016.

[54] L. Yu, P. Poirson, S. Yang, A. C. Berg, and T. L. Berg. Mod-
eling context in referring expressions. In European Confer-
ence on Computer Vision, pages 69–85. Springer, 2016.

[55] D. Zhang, X. Dai, X. Wang, Y.-F. Wang, and L. S. Davis.
Man: Moment alignment network for natural language mo-
ment retrieval via iterative graph adjustment. arXiv preprint
arXiv:1812.00087, 2018.

[56] Y. Zhu, R. Mottaghi, E. Kolve, J. J. Lim, A. Gupta, L. Fei-
Fei, and A. Farhadi. Target-driven visual navigation in in-
door scenes using deep reinforcement learning. In Robotics
and Automation (ICRA), 2017 IEEE International Confer-
ence on, pages 3357–3364. IEEE, 2017.

[31] J. Oh, Y. Guo, S. Singh, and H. Lee. Self-imitation learning.

arXiv preprint arXiv:1806.05635, 2018.

[32] G. Ostrovski, M. G. Bellemare, A. v. d. Oord, and R. Munos.
Count-based exploration with neural density models. arXiv
preprint arXiv:1703.01310, 2017.

[33] D. Pathak, P. Agrawal, A. A. Efros, and T. Darrell. Curiosity-
driven exploration by self-supervised prediction.
In Inter-
national Conference on Machine Learning (ICML), volume
2017, 2017.

[34] J. Pennington, R. Socher, and C. Manning. Glove: Global
vectors for word representation. In Proceedings of the 2014
conference on empirical methods in natural language pro-
cessing (EMNLP), pages 1532–1543, 2014.

[35] B. A. Plummer, L. Wang, C. M. Cervantes, J. C. Caicedo,
J. Hockenmaier, and S. Lazebnik. Flickr30k entities: Col-
lecting region-to-phrase correspondences for richer image-
to-sentence models.
In Proceedings of the IEEE interna-
tional conference on computer vision, pages 2641–2649,
2015.

[36] M. Savva, A. X. Chang, A. Dosovitskiy, T. Funkhouser,
indoor simulator
arXiv preprint

and V. Koltun. Minos: Multimodal
for navigation in complex environments.
arXiv:1712.03931, 2017.

[37] J. Schmidhuber. Adaptive conﬁdence and adaptive curiosity.
In Institut fur Informatik, Technische Universitat Munchen,
Arcisstr. 21, 800 Munchen 2. Citeseer, 1991.

[38] S. Song, F. Yu, A. Zeng, A. X. Chang, M. Savva, and
T. Funkhouser. Semantic scene completion from a single
depth image. IEEE Conference on Computer Vision and Pat-
tern Recognition, 2017.

[39] A. L. Strehl and M. L. Littman. An analysis of model-based
interval estimation for markov decision processes. Journal
of Computer and System Sciences, 74(8):1309–1331, 2008.
[40] H. Tang, R. Houthooft, D. Foote, A. Stooke, O. X. Chen,
Y. Duan, J. Schulman, F. DeTurck, and P. Abbeel. # ex-
ploration: A study of count-based exploration for deep re-
inforcement learning.
In Advances in Neural Information
Processing Systems, pages 2753–2762, 2017.

[41] M. Tapaswi, Y. Zhu, R. Stiefelhagen, A. Torralba, R. Ur-
tasun, and S. Fidler. Movieqa: Understanding stories in
movies through question-answering. In Proceedings of the
IEEE conference on computer vision and pattern recogni-
tion, pages 4631–4640, 2016.

[42] J. Thomason, D. Gordan, and Y. Bisk. Shifting the base-
line: Single modality performance on visual navigation &
qa. arXiv preprint arXiv:1811.00613, 2018.

[43] A. Vaswani, N. Shazeer, N. Parmar, J. Uszkoreit, L. Jones,
A. N. Gomez, Ł. Kaiser, and I. Polosukhin. Attention is all
you need.
In Advances in Neural Information Processing
Systems, pages 5998–6008, 2017.

[44] O. Vinyals, A. Toshev, S. Bengio, and D. Erhan. Show and
tell: A neural image caption generator. In Computer Vision
and Pattern Recognition (CVPR), 2015 IEEE Conference on,
pages 3156–3164. IEEE, 2015.

[45] X. Wang, W. Chen, Y.-F. Wang, and W. Y. Wang. No met-
rics are perfect: Adversarial reward learning for visual sto-
rytelling. In Proceedings of the 56th Annual Meeting of the

6638

