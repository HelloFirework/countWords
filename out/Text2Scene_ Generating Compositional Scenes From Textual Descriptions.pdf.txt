Text2Scene: Generating Compositional Scenes from Textual Descriptions

Fuwen Tan1

Song Feng2 Vicente Ordonez1

1University of Virginia, 2IBM Thomas J. Watson Research Center.

fuwen.tan@virginia.edu, sfeng@us.ibm.com, vicente@virginia.edu

Abstract

In this paper, we propose Text2Scene, a model that gen-
erates various forms of compositional scene representations
from natural language descriptions. Unlike recent works,
our method does NOT use Generative Adversarial Networks
(GANs). Text2Scene instead learns to sequentially generate
objects and their attributes (location, size, appearance, etc)
at every time step by attending to different parts of the in-
put text and the current status of the generated scene. We
show that under minor modiﬁcations, the proposed frame-
work can handle the generation of different forms of scene
representations, including cartoon-like scenes, object lay-
outs corresponding to real images, and synthetic images.
Our method is not only competitive when compared with
state-of-the-art GAN-based methods using automatic met-
rics and superior based on human judgments but also has
the advantage of producing interpretable results.

1. Introduction

Generating images from textual descriptions has recently
become an active research topic [26, 37, 38, 13, 33, 11].
This interest has been partially fueled by the adoption of
Generative Adversarial Networks (GANs) [8] which have
demonstrated impressive results on a number of image syn-
thesis tasks. Synthesizing images from text requires a level
of language and visual understanding which could lead to
applications in image retrieval through natural language
queries, representation learning for text, and automated
computer graphics and image editing applications.

In this work, we introduce Text2Scene, a model to in-
terpret visually descriptive language in order to generate
compositional scene representations. We speciﬁcally fo-
cus on generating a scene representation consisting of a
list of objects, along with their attributes (e.g.
location,
size, aspect ratio, pose, appearance). We adapt and train
models to generate three types of scenes as shown in Fig-
ure 1, (1) Cartoon-like scenes as depicted in the Abstract
Scenes dataset [41], (2) Object layouts corresponding to im-
age scenes from the COCO dataset [19], and (3) Synthetic

Figure 1. Sample inputs (left) and outputs of our Text2Scene
model (middle), along with ground truth reference scenes (right)
for the generation of abstract scenes (top), object layouts (middle),
and synthetic image composites (bottom).

scenes corresponding to images in the COCO dataset [19].
We propose a uniﬁed framework to handle these three seem-
ingly different tasks with unique challenges. Our method,
unlike recent approaches, does not rely on Generative Ad-
versarial Networks (GANs) [8]. Instead, we produce an in-
terpretable model that iteratively generates a scene by pre-
dicting and adding new objects at each time step. Our
method is superior to the best result reported in Abstract
Scenes [41], and provides near state-of-the-art performance
on COCO [19] under automatic evaluation metrics, and
state-of-the-art results when evaluated by humans.

Generating rich textual representations for scene gen-
eration is a challenging task. For instance, input textual
descriptions could hint only indirectly at the presence of
attributes – e.g. in the ﬁrst example in Fig. 1 the input
text “Mike is surprised” should change the facial attribute
on the generated object “Mike”. Textual descriptions often
have complex information about relative spatial conﬁgura-

6710

Figure 2. Overview of Text2Scene. Our general framework consists of (A) a Text Encoder that produces a sequential representation of
the input, (B) an Image Encoder that encodes the current state of the generated scene, (C) a Convolutional Recurrent Module that tracks,
for each spatial location, the history of what have been generated so far, (D-F) two attention-based predictors that sequentially focus on
different parts of the input text, ﬁrst to decide what object to place, then to decide what attributes to be assigned to the object, and (G) an
optional foreground embedding step that learns an appearance vector for patch retrieval in the synthetic image generation task.

tions – e.g. in the ﬁrst example in Fig. 1 the input text “Jenny
is running towards Mike and the duck” makes the orienta-
tion of “Jenny” dependent on the positions of both “Mike”,
and “duck”. In the last example in Fig. 1 the text “elephants
walking together in a line” also implies certain overall spa-
tial conﬁguration of the objects in the scene. We model this
text-to-scene task using a sequence-to-sequence approach
where objects are placed sequentially on an initially empty
canvas (see an overview in Fig 2). Generally, Text2Scene,
consists of a text encoder (Fig 2 (A)) that maps the input
sentence to a set of latent representations, an image encoder
(Fig 2 (B)) which encodes the current generated canvas, a
convolutional recurrent module (Fig 2 (C)), which passes
the current state to the next step, attention modules (Fig 2
(D)) which focus on different parts of the input text, an ob-
ject decoder (Fig 2 (E)) that predicts the next object condi-
tioned on the current scene state and attended input text, and
an attribute decoder (Fig 2 (F)) that assigns attributes to the
predicted object. To the best of our knowledge, Text2Scene
is the ﬁrst model demonstrating its capacities on both ab-
stract and real images, thus opening the possibility for fu-
ture work on transfer learning across domains.

Our main contributions can be summarized as follows:

• We propose Text2Scene, a framework to generate
compositional scene representations from natural lan-
guage descriptions.

• We show that Text2Scene can be used to generate, un-
der minor modiﬁcations, different forms of scene rep-
resentations, including cartoon-like scenes, semantic
layouts corresponding to real images, and synthetic
image composites.

• We conduct extensive experiments on the tasks of
abstract
image generation for the Abstract Scenes
dataset [41], semantic layout and synthetic image gen-
erations for the COCO dataset [19].

2. Related Work

Most research on visually descriptive language has fo-
cused on generating captions from images [5, 21, 16, 14, 31,
32, 22, 2]. Recently, there is work in the opposite direction
of text-to-image synthesis [25, 26, 37, 13, 38, 33, 11]. Most
of the recent approaches have leveraged conditional Gen-
erative Adversarial Networks (GANs). While these works
have managed to generate results of increasing quality, there
are major challenges when attempting to synthesize images
for complex scenes with multiple interacting objects with-
out explicitly deﬁning such interactions [34]. Inspired by
the principle of compositionality [39], our model does not
use GANs but produces a scene by sequentially generat-
ing objects (e.g. in the forms of clip-arts, bounding boxes,
or segmented object patches) containing the semantic ele-
ments that compose the scene.

Our work is also related to prior research on using ab-
stract scenes to mirror and analyze complex situations in
the real world [40, 41, 7, 30]. In [41], a graphical model
was introduced to generate an abstract scene from textual
descriptions. Unlike this previous work, our method does
not use a semantic parser but is trained end-to-end from
input sentences. Our work is also related to recent re-
search on generating images from pixel-wise semantic la-
bels [12, 4, 24], especially [24] which proposed a retrieval-
based semi-parametric method for image synthesis given
the spatial semantic map. Our synthetic image genera-
tion model optionally uses the cascaded reﬁnement module
in [24] as a post-processing step. Unlike these works, our
method is not given the spatial layout of the objects in the
scene but learns to predict a layout indirectly from text.

Most closely related to our approach are [13, 9, 11],
and [15], as these works also attempt to predict explicit
2D layout representations. Johnson et al [13] proposed a
graph-convolutional model to generate images from struc-

6711

Mike is holding a hotdog.         Jenny is sitting in the sandbox.        Jenny is holding the shovel.

object attn: 
sitting sandbox holding
attribute attn: 
jenny <eos> jenny

object attn: 
sandbox sitting mike
attribute attn: 
sandbox <eos> jenny

object attn: 
mike jenny sitting
attribute attn: 
holding hotdog mike

object attn: 
jenny jenny mike
attribute attn: 
sitting jenny holding

object attn: 
hotdog shovel holding
attribute attn: 
mike hotdog holding

object attn: 
shovel holding sandbox
attribute attn: 
shovel holding <eos>

Figure 3. Step-by-step generation of an abstract scene, showing the top-3 attended words for the object prediction and attribute prediction
at each time step. Notice how except for predicting the sun at the ﬁrst time step, the top-1 attended words in the object decoder are
almost one-to-one mappings with the predicted objects. The attended words by the attribute decoder also correspond semantically to useful
information for predicting either pose or location, e.g. to predict the location of the hotdog at the ﬁfth time step, the model attends to mike
and holding.

tured scene graphs. The presented objects and their re-
lationships were provided as inputs in the scene graphs,
while in our work, the presence of objects is inferred from
text. Hong et al [11] targeted image synthesis using con-
ditional GANs but unlike prior works, it generated lay-
outs as intermediate representations in a separably trained
module. Our work also attempts to predict layouts for
photographic image synthesis but unlike [11], we generate
pixel-level outputs using a semi-parametric retrieval mod-
ule without adversarial training and demonstrate superior
results. Kim et al [15] performed pictorial generation from
chat logs, while our work uses text which is considerably
more underspeciﬁed. Gupta et al [9] proposed a semi-
parametric method to generate cartoon-like pictures. How-
ever the presented objects were also provided as inputs to
the model, and the predictions of layouts, foregrounds and
backgrounds were performed by separably trained modules.
Our method is trained end-to-end and goes beyond cartoon-
like scenes. To the best of our knowledge, our model is
the ﬁrst work targeting various types of scenes (e.g. ab-
stract scenes, semantic layouts and composite images) un-
der a uniﬁed framework.

3. Model

Text2Scene adopts a Seq-to-Seq framework [28] and in-
troduces key designs for spatial and sequential reasoning.
Speciﬁcally, at each time step, the model modiﬁes a back-
ground canvas in three steps: (1) the model attends to the
input text to decide what is the next object to add, or decide
whether the generation should end; (2) if the decision is to
add a new object, the model zooms in the language context
of the object to decide its attributes (e.g. pose, size) and re-
lations with its surroundings (e.g. location, interactions with
other objects); (3) the model refers back to the canvas and
grounds (places) the extracted textual attributes into their
corresponding visual representations.

To model this procedure, Text2Scene consists of a text
encoder, which takes as input a sequence of M words wi
(section 3.1), an object decoder, which predicts sequen-
tially T objects ot, and an attribute decoder that predicts
for each ot their locations lt and a set of k attributes {Rk
t }
(section 3.2). The scene generation starts from an initially
empty canvas B0 that is updated at each time step. In the
synthetic image generation task, we also jointly train a fore-
ground patch embedding network (section 3.3) and treat the
embedded vector as a target attribute. Figure 3 shows a step-
by-step generation of an abstract scene.

3.1. Text Encoder

Our text encoder is a bidirectional recurrent network
with Gated Recurrent Units (GRUs). For a given sentence,
we compute for each word wi:

hE
i = BiGRU(xi, hE

i−1, hE

i+1),

(1)

Here BiGRU is a bidirectional GRU cell, xi is a word em-
bedding vector corresponding to the i-th word wi, and hE
is
i
a hidden vector encoding the current word and its context.
We use the pairs [hE
i and xi,
as the encoded text feature.

i ; xi], the concatenation of hE

3.2. Object and Attribute Decoders

At each step t, our model predicts the next object ot from
an object vocabulary V and its k attributes {Rk
t }, using text
feature {[hE
i ; xi]} and the current canvas Bt as input. For
this part, we use a convolutional network (CNN) Ω to en-
code Bt into a C × H × W feature map, representing the
current scene state. We model the history of the scene states
{hD

t } with a convolutional GRU (ConvGRU):

hD
t = ConvGRU(Ω(Bt), hD

t−1),

(2)

The initial hidden state is created by spatially replicating
the last hidden state of the text encoder. Here hD
t provides

6712

an informative representation of the temporal dynamics of
each spatial (grid) location in the scene. Since this repre-
sentation might fail to capture small objects, a one-hot vec-
tor of the object predicted at the previous step ot−1 is also
provided as input to the downstream decoders. The initial
object is set as a special start-of-scene token.
Attention-based Object Decoder: Our object decoder is
an attention-based model that outputs the likelihood scores
of all possible objects in an object vocabulary V. It takes as
input the recurrent scene state hD
i ; xi]}
and the previously predicted object ot−1:

t , text features {[hE

uo
t = AvgPooling(Ψo(hD
t = Φo([uo
co
p(ot) ∝ Θo([uo

t ; ot−1], {[hE

t ; ot−1; co

t ]),

t )),

i ; xi]}),

(3)

(4)

(5)

t . Ideally, co

t ; ot−1] to attend to the language context {[hE

here Ψo is a convolutional network with spatial attention on
hD
t , similar as in [32]. The goal of Ψo is to collect the spa-
tial contexts necessary for the object prediction, e.g. what
objects have already been added. The attended spatial fea-
tures are then fused into a vector uo
t by average pooling. Φo
is the text-based attention module, similar as in [20], which
uses [uo
i ; xi]}
and collect the context vector co
t encodes infor-
mation about all the described objects that have not been
added to the scene thus far. Θo is a two-layer perceptron
predicting the likelihood of the next object p(ot) from the
concatenation of uo
t , using a softmax function.
Attention-based Attribute Decoder The attribute set cor-
responding to the object ot can be predicted similarly. We
use another attention module Φa to “zoom in” the language
context of ot, extracting a new context vector ca
t . Compared
with co
t which may contain information of all the objects
that have not been added yet, ca
t focuses more speciﬁcally
on contents related to the current object ot. For each spatial
location in hD
t , the model predicts a location likelihood lt,
and a set of attribute likelihoods {Rk
t }. Here, possible loca-
tions are discretized into the same spatial resolution of hD
t .
In summary, we have:

t , ot−1, and co

t = Φa(ot, {[hE
ca
i ; xi]})
ua
t ; ca
t = Ψa([hD
p(lt, {Rk
t }) = Θa([ua

t ])
t ; ot; ca

t ]),

(6)

(7)

(8)

Φa is a text-based attention module aligning ot with the lan-
guage context {[hE
i ; xi]}. Ψa is an image-based attention
module aiming to ﬁnd an affordable location to add ot. Here
ca
t is spatially replicated before concatenating with hD
t . The
ﬁnal likelihood map p(lt, {Rk
t }) is predicted by a convolu-
tional network Θa, followed by softmax classiﬁers for lt
and discrete {Rk
t } such as
the appearance vector Qt for patch retrieval (next section),
we normalize the output using an ℓ2-norm.

t }. For continuous attributes {Rk

3.3. Foreground Patch Embedding

We predict a particular attribute: an appearance vector
Qt, only for the model trained to generate synthetic image
composites (i.e. images composed of patches retrieved from
other images). As with other attributes, Qt is predicted for
every location in the output feature map which is used at
test time to retrieve similar patches from a pre-computed
collection of object segments from other images. We train a
patch embedding network using a CNN which reduces the
foreground patch in the target image into a 1D vector Ft.
The goal is to minimize the ℓ2-distance between Qt and Ft
using a triplet embedding loss [6] that encourages a small
distance ||Qt, Ft||2 but a larger distance with other patches
||Qt, Fk||2. Here Fk is the feature of a ”negative” patch,
which is randomly selected from the same category of Ft:

Ltriplet(Qt, Ft) = max{||Qt, Ft||2 − ||Qt, Fk||2 + α, 0}
(9)

α is a margin hyper-parameter.

3.4. Objective

The loss function for a given example in our model with

reference values (ot, lt, {Rk

L = − wo X

t

t }, Ft) is:
log p(ot) − wl X

log p(lt)

t

− X

wk X

log p(Rk

t ) + we X

Ltriplet(Qt, Ft)

t

t

k
+ wO

a LO

attn + wA

a LA

attn,

ti} and {αa

ti]2 where {αo

where the ﬁrst three terms are negative log-likelihood losses
corresponding to the object, location, and discrete attribute
softmax classiﬁers. Ltriplet is a triplet embedding loss op-
tionally used for the synthetic image generation task. L∗
attn
are regularization terms inspired by the doubly stochastic
attn = Pi[1 −
attention module proposed in [32]. Here L∗
ti} are the attention weights
Pt α∗
from Φo and Φa respectively. These regularization terms
encourage the model to distribute the attention across all
the words in the input sentence so that it will not miss any
described objects. Finally, wo, wl, {wk}, we, wO
a , and wA
a
are hyperparameters controlling the relative contribution of
each loss.
Details for different scene generation tasks In the Ab-
stract Scenes generation task, Bt is represented directly as
an RGB image. In the layout generation task, Bt is a 3D
tensor with a shape of (V, H, W ), where each spatial loca-
tion contains a one-hot vector indicating the semantic la-
bel of the object at that location. Similarly, in the synthetic
image generation task, Bt is a 3D tensor with a shape of
(3V, H, W ), where every three channels of this tensor en-
code the color patches of a speciﬁc category from the back-
ground canvas image. For the foreground embedding mod-
ule, we adopt the canvas representation in [24] to encode

6713

Methods

Zitnick et al. [41]
Text2Scene (w/o attention)
Text2Scene (w object attention)
Text2Scene (w both attentions)
Text2Scene (full)

U-obj

B-obj

Prec
0.722
0.665
0.731
0.749
0.760

Recall
0.655
0.605
0.671
0.685
0.698

Prec
0.280
0.228
0.312
0.327
0.348

Recall
0.265
0.186
0.261
0.272
0.301

Pose

Expr

0.407
0.305
0.365
0.408
0.418

0.370
0.323
0.368
0.374
0.375

B-obj
U-obj
Coord Coord
0.449
0.416
0.338
0.395
0.406
0.427
0.467
0.402
0.483
0.409

Table 1. Quantitative evaluation on the Abstract Scenes dataset. Our full model performs better in all metrics except U-obj Coord which
measures exact object coordinates. It also shows that our sequential attention approach is effective.

Methods

Scores ≥ 1 ≥ 2

Obj-Single

Obj-Pair

Location Expression

sub-pred

sub-pred-obj

pred:loc

pred:expr

Reference
Zitnick et al. [41]
Text2Scene (w/o attention)
Text2Scene (full)

0.919
0.555
0.455
0.644

1.0
0.92
0.75
0.94

0.97
0.49
0.42
0.62

0.905
0.53
0.431
0.628

0.88
0.44
0.36
0.48

0.933
0.667

0.6

0.667

0.875
0.625
0.583
0.708

Table 2. Human evaluation on Abstract Scenes. Each scene is generated from three textual statements. Users are asked to rate if the
generated scene validates each input statement. Our method generates scenes that abide by at least one of the statements 94% of the times,
and by at least two statements 64%, and is superior in all types of statements except Location.

the foreground patch for simplicity. As the composite im-
ages may exhibit gaps between patches, we also leverage
the stitching network in [24] for post-processing. Note that
the missing region may also be ﬁlled by any other inpaint-
ing approaches. Full details about the implementation of
our model can be found in the supplementary material. Our
code and data are publicly available1.

Task (I): Clip-art Generation on Abstract Scenes We use
the dataset introduced by [41], which contains over 1,000
sets of 10 semantically similar scenes of children playing
outside. The scenes are composed with 58 clip-art objects.
The attributes we consider for each clip-art object are the
location, size (|Rsize| = 3), and the direction the object
is facing (|Rdirection| = 2). For the person objects, we
also explicitly model the pose (|Rpose| = 7) and expression
(|Rexpression| = 5). There are three sentences describing
different aspects of a scene. After ﬁltering empty scenes,
we obtain 9997 samples. Following [41], we reserve 1000
samples as the test set and 497 samples for validation.

Figure 4. Evaluation metrics for the abstract scene generation task
(best viewed in color): the green dots show the common U-obj
between the reference (B) and the generated abstract scene (A),
the blue dots show the missing and mispredicted objects. Sim-
ilarly, the yellow lines show the common B-obj and the red
lines show the missing and mispredicted B-obj. The U-obj
precision/recall for this example is 0.667/0.667, the B-obj pre-
cision/recall is 1.0/0.5.

4. Experiments

We conduct experiments on three text-to-scene tasks:
(I) constructing abstract scenes of clip-arts in the Abstract
Scenes [41] dataset; (II) predicting semantic object layouts
of real images in the COCO [19] dataset; and (III) generat-
ing synthetic image composites in the COCO [19] dataset.

1https://github.com/uvavision/Text2Scene

Task (II): Semantic Layout Generation on COCO The
semantic layouts contain bounding boxes of the objects
from 80 object categories deﬁned in the COCO [19] dataset.
We use the val2017 split as our test set and use 5000 sam-
ples from the train2017 split for validation. We normal-
ize the bounding boxes and order the objects from bot-
tom to top as the y-coordinates typically indicate the dis-
tances between the objects and the camera. We further or-
der the objects with the same y-coordinate based on their
x-coordinates (from left to right) and categorical indices.
The attributes we consider are location, size (|Rsize| = 17),
and aspect ratio (|Raspect ratio| = 17). For the size at-
tribute, we discretize the normalized size range evenly into
17 scales. We also use 17 aspect ratio scales, which are
9 , 1
{ 1
Task (III): Synthetic Image Generation on COCO We
demonstrate our approach by generating synthetic image
composites given input captions in COCO [19].
For
fair comparisons with alternative approaches, we use the
val2014 split as our test set and use 5000 samples from the

8 , 1

5 , 1

3 , 1

1 , 3

1 , 4

1 , 6

1 , 9

7 , 1

6 , 1

4 , 1

2 , 1

1 , 2

1 , 5

1 , 7

1 , 8

1 }.

6714

Methods
Captioning from True Layout [36]
Text2Scene (w/o attention)
Text2Scene (w object attention)
Text2Scene (w both attentions)
Text2Scene (full)

B1
0.678
0.591
0.591
0.600
0.615

B2
0.492
0.391
0.391
0.401
0.415

B3
0.348
0.254
0.256
0.263
0.275

B4
0.248
0.169
0.171
0.175
0.185

METEOR ROUGE CIDEr
0.838
0.227
0.531
0.179
0.524
0.179
0.182
0.555
0.601
0.189

0.495
0.430
0.430
0.436
0.446

SPICE
0.160
0.110
0.110
0.114
0.123

Table 3. Quantitative evaluation on the layout generation task. Our full model generates more accurate captions from the generated layouts
than the baselines. We also include caption generation results from ground truth layouts as an upper bound on this task.

Methods
Real image
GAN-INT-CLS [26]
SG2IM* [13]
StackGAN [37]
HDGAN [38]
Hong et al [11]
AttnGan [33]
Text2Scene (w/o inpaint.)
Text2Scene (w inpaint.)

IS
36.00±0.7
7.88±0.07
6.7±0.1
10.62±0.19
11.86±0.18
11.46±0.09
25.89±0.47
22.33±1.58
24.77±1.59

B1
0.730
0.470
0.504
0.486
0.489
0.541
0.640
0.602
0.614

B2
0.563
0.253
0.294
0.278
0.284
0.332
0.455
0.412
0.426

B3
0.428
0.136
0.178
0.166
0.173
0.199
0.324
0.288
0.300

B4
0.327
0.077
0.116
0.106
0.112
0.122
0.235
0.207
0.218

METEOR ROUGE CIDEr
1.012
0.262
0.160
0.122
0.289
0.141
0.130
0.216
0.225
0.132
0.367
0.154
0.693
0.213
0.196
0.624
0.656
0.201

0.545
–
0.373
0.360
0.363
–
0.474
0.448
0.457

SPICE
0.188
–
0.070
0.057
0.060
–
0.141
0.126
0.130

Table 4. Quantitative evaluation on the synthetic image generation task. Our model is superior on automated metrics than all competing
approaches except AttnGan, even without post-processing. *The result of SG2IM is evaluated on the validation set deﬁned in [13], which
is a subset of the COCO val2014 split.

Text2Scene > SG2IM [13]
Text2Scene > HDGAN [38]
Text2Scene > AttnGAN [33]

Ratio
0.7672
0.8692
0.7588

Table 5. Two-alternative forced-choiced evaluation on the syn-
thetic image generation task against competing methods.

train2014 split for validation. We collect segmented object
and stuff patches from the training split. The stuff segments
are extracted from the training images by taking connected
components in corresponding semantic label maps from the
COCO-Stuff annotations [10]. For object segments, we use
all 80 categories deﬁned in COCO. For stuff segments, we
use the 15 super-categories deﬁned in [10] as the class la-
bels, which results in 95 categories in total. We order the
patches as in the layout generation task but when compos-
ing the patches, we always render the object patches in front
of the stuff patches. In our experiment, Qt and Ft have a di-
mension of 128.

4.1. Evaluation

Automatic Metrics Our tasks pose new challenges on
evaluating the models as (1) the three types of scene repre-
sentations are quite different from each other; and (2) there
is no absolute one-to-one correspondence between a sen-
tence and a scene. For the abstract scene generation task,
we draw inspiration from the evaluation metrics applied in
machine translation [17] but we aim at aligning multimodal
visual-linguistic data instead. To this end, we propose to

compute the following metrics: precision/recall on single
objects (U-obj), “bigram” object pairs (B-obj); classi-
ﬁcation accuracies for poses, expressions; Euclidean dis-
tances (deﬁned as a Gaussian function with a kernel size
of 0.2) for normalized coordinates of U-obj and B-obj.
A “bigram” object pair is deﬁned as a pair of objects with
overlapping bounding boxes as illustrated in Figure 4.

In the layout generation experiment, it is harder to deﬁne
evaluation metrics given the complexity of real world object
layouts. Inspired by [11], we employ caption generation as
an extrinsic evaluation. We generate captions from the se-
mantic layouts using [36] and compare them back to the
original captions used to generate the scenes. We use com-
monly used metrics for captioning such as BLEU [23], ME-
TEOR [17], ROUGE L [18], CIDEr [29] and SPICE [1].

For synthetic image generation, we adopt the Inception
Score (IS) metric [27] which is commonly used in recent
text to image generation methods. However, as IS does not
evaluate correspondence between images and captions, we
also employ an extrinsic evaluation using image captioning
using the Show-and-Tell caption generator [31] as in [11].

Baselines For abstract scene generation, we run compar-
isons with [41]. We also consider variants of our full model:
(1) Text2Scene (w/o attention): a model without any atten-
In particular, we replace Eq. 3 with a pure
tion module.
average pooling operation on hD
t , discard co
t in Eq. 5, dis-
card ca
in Eq. 8. (2) Text2Scene (w
object attention): a model with attention modules for object
prediction but no dedicated attention for attribute predic-

t and replace ua

t with hD
t

6715

Figure 5. Examples of generated abstract scenes. The ﬁrst column
shows the input text, and the last column shows the reference true
scene from the dataset.

Figure 6. Generated layouts from input captions and generated
captions from the predicted layouts (best viewed in color). Our
model successfully predicts the presence (purple text) and number
of objects (blue text), and their spatial relations (red text).

tion. Speciﬁcally, we replace (ua
t ) in Eq. 8.
(3) Text2Scene (w both attentions): a model with dedicated
attention modules for both object and attribute predictions
but no regularization.

t ) with (hD

t , co

t , ca

Human Evaluations We also conduct human evaluations
using crowdsourcing on 100 groups of clip-art scenes gen-
erated for the Abstract Scene dataset using random captions
from the test split. Human annotators are asked to determine
whether an input text is a true statement given the generated
scene (entailment). Each scene in this dataset is associated
with three sentences that are used as the statements. Each
sentence-scene pair is reviewed by three annotators to de-
termine if the entailment is true, false or uncertain.
Ignoring uncertain responses, we use the ratio of the
sentence-scene pairs marked as true for evaluation.

We also perform predicate-argument semantic frame
analysis [3] on our results. Using the semantic parser
from [41], we subdivide the sentences as: sub-pred
corresponding to sentences referring to only one object,
sub-pred-obj corresponding to sentences referring to
object pairs with semantic relations, pred:loc corre-
sponding to sentences referring to locations, and pred:pa
corresponding to sentences mentioning facial expressions.

For synthetic image generation we use a similar human
evaluation as in [24]. We compare our method against
SG2IM [13], HDGAN [38] and AttnGAN [33]. We resize
our generated images to the same resolutions as in these
alternative methods, 64 × 64 for SG2IM [13], 256 × 256
for HDGAN [38] and AttnGAN [33]. For each sentence
randomly selected from the test set, we present images gen-
erated by our method and a competing method and allow
the user to choose the one which better represents the text.
We collect results for 500 sentences. For each sentence, we
collect responses from 5 different annotators.

4.2. Results and Discussion

Abstract Scenes and Semantic Layouts: Table 1 shows
quantitative results on Abstract Scenes. Text2Scene im-
proves over [41] and our variants on all metrics ex-
cept U-obj Coord. Human evaluation results on Ta-
ble 2 conﬁrm the quality of our outputs, where Scores
are the percentage of sentence-scene pairs with a true
(≥ 1) (≥ 2) indicate if our method pro-
entailment;
duces scenes that entailed at least one (or two) out of
three statements. Text2Scene also shows better results
on statements with speciﬁc semantic information such as
Obj-single, Obj-pair, and Expression, and is
comparable on Location statements. As a sanity check,
we also test reference true scenes provided in the Abstract
Scenes dataset (ﬁrst row). Results show that it is more chal-
lenging to generate the semantically related object pairs.
Overall, the results also suggest that our proposed metrics
correlate with human judgment on the task.

Figure 5 shows qualitative examples of our models on
Abstract Scenes in comparison with baseline approaches
and the reference scenes. These examples illustrate that
Text2Scene is able to capture semantic nuances such as the
spatial relation between two objects (e.g., the bucket and the
shovel are correctly placed in Jenny’s hands in the last row)
and object locations (e.g., Mike is on the ground near the
swing set in the last row).

Table 3 shows an extrinsic evaluation on the layout gen-
eration task. We perform this evaluation by generating cap-
tions from our predicted layouts. Results show our full
method generates the captions that are closest to the cap-
tions generated from true layouts. Qualitative results in Fig-
ure 6 also show that our model learns important visual con-
cepts such as presence and number of object instances, and
their spatial relations.

6716

Figure 7. Qualitative examples of synthetic image generation (best viewed in color). The ﬁrst column shows input captions with manually
highlighted objects (purple), counts (blue) and relations (red). The second columns shows the true images. Columns in the middle show
competing approaches. The last two columns show the outputs of our model before and after pre-processing.

Synthetic Image Composites: Table 4 shows evaluation
of synthetic scenes using automatic metrics. Text2Scene
without any post-processing already outperforms all previ-
ous methods by large margins except AttnGAN [33]. As
our model adopts a composite image generation framework
without adversarial training, gaps between adjacent patches
may result in unnaturally shaded areas. We observe that, af-
ter performing a regression-based inpainting [24], the com-
posite outputs achieve consistent improvements on all auto-
matic metrics. We posit that our model can be further im-
proved by incorporating more robust post-processing or in
combination with GAN-based methods. On the other hand,
human evaluations show that our method signiﬁcantly out-
performs alternative approaches including AttnGAN [33],
demonstrating the potential of leveraging realistic image
patches for text-to-image generation. It is important to note
that SG2IM [13] and Hong et al [11] also use segment and
bounding box supervision – as does our method, and At-
tnGan [33] uses an Imagenet (ILSVRC) pretrained Incep-
tionv3 network. In addition, as our model contains a patch
retrieval module, it is important that the model does not gen-
erate a synthetic image by simply retrieving patches from a
single training image. On average, each composite image
generated from our model contains 8.15 patches from 7.38

different source images, demonstrating that the model does
not simply learn a global image retrieval. Fig. 7 shows qual-
itative examples of the synthetic image composites, We in-
clude examples of generated images along with their corre-
sponding source images from which patch segments are re-
trieved, and more extensive qualitative results in the supple-
mental material. Since our model learns about objects and
relations separately, we also observed that it is often able to
generalize to uncommon situations (as deﬁned in [35]).

5. Conclusions

This work presents a novel sequence-to-sequence model
for generating compositional scene representations from vi-
sually descriptive language. We provide extensive quantita-
tive and qualitative analysis of our model for different scene
generation tasks on datasets from two different domains:
Abstract Scenes [41] and COCO [19]. Experimental results
demonstrate the capacity of our model to capture ﬁner se-
mantic concepts from visually descriptive text and generate
complex scenes.

Acknowledgements: This work was partially supported by
an IBM Faculty Award to V.O, and gift funding from SAP
Research.

6717

References

[1] Peter Anderson, Basura Fernando, Mark Johnson, and
Stephen Gould. Spice: Semantic propositional image cap-
tion evaluation. In European Conference on Computer Vision
(ECCV), pages 382–398, 2016.

[2] Peter Anderson, Basura Fernando, Mark Johnson, and
Stephen Gould. Guided open vocabulary image captioning
with constrained beam search. In Empirical Methods in Nat-
ural Language Processing (EMNLP), 2017.

[3] Xavier Carreras and Llu´ıs M`arquez.

Introduction to
the conll-2005 shared task: Semantic role labeling.
In
Conference on Computational Natural Language Learning
(CoNLL), pages 152–164, 2005.

[4] Qifeng Chen and Vladlen Koltun. Photographic image syn-
thesis with cascaded reﬁnement networks. In IEEE Interna-
tional Conference on Computer Vision (ICCV), 2017.

[5] Ali Farhadi, Mohsen Hejrati, Mohammad Amin Sadeghi, Pe-
ter Young, Cyrus Rashtchian, Julia Hockenmaier, and David
Forsyth. Every picture tells a story: Generating sentences
from images. In European Conference on Computer Vision
(ECCV), pages 15–29, 2010.

[6] James Philbin Florian Schroff, Dmitry Kalenichenko.
Facenet: A uniﬁed embedding for face recognition and clus-
tering. In IEEE Conference on Computer Vision and Pattern
Recognition (CVPR), 2015.

[7] David F Fouhey and C Lawrence Zitnick. Predicting object
dynamics in scenes. In IEEE Conference on Computer Vision
and Pattern Recognition (CVPR), 2014.

[8] Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing
Xu, David Warde-Farley, Sherjil Ozair, Aaron Courville, and
Yoshua Bengio. Generative adversarial nets. In Advances in
Neural Information Processing Systems (NeurIPS), 2014.

[9] Tanmay Gupta, Dustin Schwenk, Ali Farhadi, Derek Hoiem,
and Aniruddha Kembhavi. Imagine this! scripts to composi-
tions to videos. In European Conference on Computer Vision
(ECCV), 2018.

[10] Jasper Uijlings Holger Caesar and Vittorio Ferrari. Coco-
stuff: Thing and stuff classes in context. In IEEE Conference
on Computer Vision and Pattern Recognition (CVPR), 2018.
[11] Seunghoon Hong, Dingdong Yang, Jongwook Choi, and
Honglak Lee. Inferring semantic layout for hierarchical text-
to-image synthesis. In IEEE Conference on Computer Vision
and Pattern Recognition (CVPR), 2018.

[12] Phillip Isola, Jun-Yan Zhu, Tinghui Zhou, and Alexei A
Image-to-image translation with conditional adver-
In IEEE Conference on Computer Vision

Efros.
sarial networks.
and Pattern Recognition (CVPR), 2017.

[13] Justin Johnson, Agrim Gupta, and Li Fei-Fei. Image gener-
ation from scene graphs. In IEEE Conference on Computer
Vision and Pattern Recognition (CVPR), 2018.

[14] Andrej Karpathy and Li Fei-Fei. Deep visual-semantic align-
ments for generating image descriptions. In IEEE Confer-
ence on Computer Vision and Pattern Recognition (CVPR),
pages 3128–3137, 2015.

[15] Jin-Hwa Kim, Devi Parikh, Dhruv Batra, Byoung-Tak
Zhang, and Yuandong Tian. Codraw: Visual dialog for col-
laborative drawing. arXiv preprint arXiv:1712.05558, 2017.

[16] Polina Kuznetsova, Vicente Ordonez, Tamara Berg, and
Yejin Choi. Treetalk: Composition and compression of trees
for image descriptions. Transactions of the Association of
Computational Linguistics, 2(1):351–362, 2014.

[17] Alon Lavie and Abhaya Agarwal. Meteor: An automatic
metric for mt evaluation with high levels of correlation with
human judgments. In Proceedings of the Second Workshop
on Statistical Machine Translation, pages 228–231, 2007.

[18] Chin-Yew Lin. Rouge: A package for automatic evaluation

of summaries. Text Summarization Branches Out, 2004.

[19] Tsung-Yi Lin, Michael Maire, Serge J. Belongie, Lubomir D.
Bourdev, Ross B. Girshick, James Hays, Pietro Perona, Deva
Ramanan, Piotr Doll´ar, and C. Lawrence Zitnick. Microsoft
COCO: Common objects in context. European Conference
on Computer Vision (ECCV), 2014.

[20] Minh-Thang Luong, Hieu Pham, and Christopher D. Man-
ning. Effective approaches to attention-based neural machine
translation. In Empirical Methods in Natural Language Pro-
cessing (EMNLP), pages 1412–1421, 2015.

[21] Rebecca Mason and Eugene Charniak. Nonparametric
method for data-driven image captioning. In Annual Meet-
ing of the Association for Computational Linguistics (ACL),
volume 2, pages 592–598, 2014.

[22] Vicente Ordonez, Xufeng Han, Polina Kuznetsova, Girish
Kulkarni, Margaret Mitchell, Kota Yamaguchi, Karl Stratos,
Amit Goyal, Jesse Dodge, Alyssa Mensch, et al. Large scale
retrieval and generation of image descriptions. International
Journal of Computer Vision (IJCV), 119(1):46–59, 2016.

[23] Kishore Papineni, Salim Roukos, Todd Ward, and Wei-Jing
Zhu. Bleu: a method for automatic evaluation of machine
translation. In Annual Meeting of the Association for Com-
putational Linguistics (ACL), pages 311–318, 2002.

[24] Xiaojuan Qi, Qifeng Chen, Jiaya Jia, and Vladlen Koltun.
In IEEE Conference on

Semi-parametric image synthesis.
Computer Vision and Pattern Recognition (CVPR), 2018.

[25] Scott Reed, Zeynep Akata, Santosh Mohan, Samuel Tenka,
Bernt Schiele, and Honglak Lee. Learning what and where to
draw. In Advances in Neural Information Processing Systems
(NeurIPS), 2016.

[26] Scott E. Reed, Zeynep Akata, Xinchen Yan, Lajanugen Lo-
geswaran, Bernt Schiele, and Honglak Lee. Generative ad-
versarial text to image synthesis. In International Conference
on Learning Representations (ICLR), 2016.

[27] Tim Salimans, Ian Goodfellow, Wojciech Zaremba, Vicki
Cheung, Alec Radford, and Xi Chen. Improved techniques
for training gans. In Advances in Neural Information Pro-
cessing Systems (NeurIPS), 2016.

[28] Ilya Sutskever, Oriol Vinyals, and Quoc V. Le. Sequence
to sequence learning with neural networks. In Advances in
Neural Information Processing Systems (NeurIPS), 2014.

[29] Ramakrishna Vedantam, C Lawrence Zitnick, and Devi
Parikh. Cider: Consensus-based image description evalua-
tion. In IEEE Conference on Computer Vision and Pattern
Recognition (CVPR), pages 4566–4575, 2015.

[30] Ramakrishna Vedantam, Xiao Lin, Tanmay Batra, C
Lawrence Zitnick, and Devi Parikh. Learning common sense
through visual abstraction.
In IEEE International Confer-
ence on Computer Vision (ICCV), 2015.

6718

[31] Oriol Vinyals, Alexander Toshev, Samy Bengio, and Du-
mitru Erhan. Show and tell: A neural image caption gen-
erator. In IEEE Conference on Computer Vision and Pattern
Recognition (CVPR), 2015.

[32] Kelvin Xu, Jimmy Ba, Ryan Kiros, Kyunghyun Cho, Aaron
Courville, Ruslan Salakhudinov, Rich Zemel, and Yoshua
Bengio. Show, attend and tell: Neural image caption gen-
eration with visual attention. In International Conference on
Machine Learning (ICML), volume 37, pages 2048–2057,
2015.

[33] Tao Xu, Pengchuan Zhang, Qiuyuan Huang, Han Zhang,
Zhe Gan, Xiaolei Huang, and Xiaodong He. Attngan: Fine-
grained text to image generation with attentional generative
adversarial networks. In IEEE Conference on Computer Vi-
sion and Pattern Recognition (CVPR), 2018.

[34] Mark Yatskar, Vicente Ordonez, and Ali Farhadi. Stating
the obvious: Extracting visual common sense knowledge. In
Proceedings of the 2016 Conference of the North American
Chapter of the Association for Computational Linguistics:
Human Language Technologies, pages 193–198, 2016.

[35] Mark Yatskar, Vicente Ordonez, Luke Zettlemoyer, and Ali
Farhadi. Commonly uncommon: Semantic sparsity in situ-
ation recognition. In IEEE Conference on Computer Vision
and Pattern Recognition (CVPR), pages 7196–7205, 2017.

[36] Xuwang Yin and Vicente Ordonez. Obj2text: Generating vi-
sually descriptive language from object layouts. In Empirical
Methods in Natural Language Processing (EMNLP), 2017.

[37] Han Zhang, Tao Xu, Hongsheng Li, Shaoting Zhang, Xiaolei
Huang, Xiaogang Wang, and Dimitris Metaxas. Stackgan:
Text to photo-realistic image synthesis with stacked genera-
tive adversarial networks. In IEEE International Conference
on Computer Vision (ICCV), 2017.

[38] Zizhao Zhang, Yuanpu Xie, and Lin Yang. Photographic
text-to-image synthesis with a hierarchically-nested adver-
sarial network. In IEEE Conference on Computer Vision and
Pattern Recognition (CVPR), 2018.

[39] Xiaodan Zhu and Edward Grefenstette. Deep learning for

semantic composition. In ACL tutorial, 2017.

[40] C. Lawrence Zitnick and Devi Parikh. Bringing semantics
into focus using visual abstraction. In IEEE Conference on
Computer Vision and Pattern Recognition (CVPR), 2013.

[41] C. Lawrence Zitnick, Devi Parikh, and Lucy Vanderwende.
Learning the visual interpretation of sentences. In IEEE In-
ternational Conference on Computer Vision (ICCV), 2013.

6719

