Art2Real: Unfolding the Reality of Artworks

via Semantically-Aware Image-to-Image Translation

Matteo Tomei Marcella Cornia Lorenzo Baraldi Rita Cucchiara

University of Modena and Reggio Emilia

{name.surname}@unimore.it

Abstract

The applicability of computer vision to real paintings
and artworks has been rarely investigated, even though a
vast heritage would greatly beneﬁt from techniques which
can understand and process data from the artistic domain.
This is partially due to the small amount of annotated artis-
tic data, which is not even comparable to that of natu-
ral images captured by cameras.
In this paper, we pro-
pose a semantic-aware architecture which can translate art-
works to photo-realistic visualizations, thus reducing the
gap between visual features of artistic and realistic data.
Our architecture can generate natural images by retrieving
and learning details from real photos through a similarity
matching strategy which leverages a weakly-supervised se-
mantic understanding of the scene. Experimental results
show that the proposed technique leads to increased real-
ism and to a reduction in domain shift, which improves the
performance of pre-trained architectures for classiﬁcation,
detection, and segmentation. Code is publicly available at:
https://github.com/aimagelab/art2real.

1. Introduction

Our society has inherited a huge legacy of cultural arti-
facts from past generations: buildings, monuments, books,
and exceptional works of art. While this heritage would
beneﬁt from algorithms which can automatically under-
stand its content, computer vision techniques have been
rarely adapted to work in this domain.

One of the reasons is that applying state of the art tech-
niques to artworks is rather difﬁcult, and often brings poor
performance. This can be motivated by the fact that the vi-
sual appearance of artworks is different from that of photo-
realistic images, due to the presence of brush strokes, the
creativity of the artist and the speciﬁc artistic style at hand.
As current vision pipelines exploit large datasets consist-
ing of natural images, learned models are largely biased to-
wards them. The result is a gap between high-level con-

Figure 1: We present Art2Real, an architecture which can
reduce the gap between the distributions of visual features
from artistic and realistic images, by translating paintings
to photo-realistic images.

volutional features of the two domains, which leads to a
decrease in performance in the target tasks, such as classiﬁ-
cation, detection or segmentation.

This paper proposes a solution to the aforementioned
problem that avoids the need for re-training neural archi-
tectures on large-scale datasets containing artistic images.
In particular, we propose an architecture which can reduce
the shift between the feature distributions from the two
domains, by translating artworks to photo-realistic images
which preserve the original content. A sample of this set-
ting is depicted in Fig. 1.

As paired training data is not available for this task,
we revert to an unpaired image-to-image translation set-
ting [56], in which images can be translated between dif-
ferent domains while preserving some underlying charac-
teristics. In our art-to-real scenario, the ﬁrst domain is that
of paintings while the second one is that of natural images.
The shared characteristic is that they are two different vi-
sualizations of the same class of objects, for example, they

5849

ArtisticDomainRealisticDomainArtisticpaintingsReal photosGenerated imagesOriginalPaintingArt2RealReal Photosboth represent landscapes.

In the translation architecture that we propose, new
photo-realistic images are obtained by retrieving and learn-
ing from existing details of natural images and exploiting a
weakly-supervised semantic understanding of the artwork.
To this aim, a number of memory banks of realistic patches
is built from the set of photos, each containing patches from
a single semantic class in a memory-efﬁcient representa-
tion. By comparing generated and real images at the patch
level, in a multi-scale manner, we can then drive the train-
ing of a generator network which learns to generate photo-
realistic details, while preserving the semantics of the orig-
inal painting. As performing a semantic understanding of
the original painting would create a chicken-egg problem,
in which unreliable data is used to drive the training and
the generation, we propose a strategy to update the seman-
tic masks during the training, leveraging the partial conver-
gence of a cycle-consistent framework.

We apply our model to a wide range of artworks which
include paintings from different artists and styles, land-
scapes and portraits. Through experimental evaluation, we
show that our architecture can improve the realism of trans-
lated images when compared to state of the art unpaired
translation techniques. This is evaluated both qualitatively
and quantitatively, by setting up a user study. Furthermore,
we demonstrate that the proposed architecture can reduce
the domain shift when applying pre-trained state of the art
models on the generated images.

Contributions. To sum up, our contributions are as follows:
• We address the domain gap between real images and
artworks, which prevents the understanding of data
from the artistic domain. To this aim, we propose a net-
work which can translate paintings to photo-realistic
generated images.

• The proposed architecture is based on the construction
of efﬁcient memory banks, from which realistic details
can be recovered at the patch level. Retrieved patches
are employed to drive the training of a cycle-consistent
framework and to increase the realism of generated im-
ages. This is done in a semantically aware manner,
exploiting segmentation masks computed on artworks
and generated images during the training.

• We show, through experimental results in different set-
tings, improved realism with respect to state of the art
approaches for image translation, and an increase in
the performance of pre-trained models on generated
data.

2. Related work

Image-to-image translation. Generative adversarial net-
works have been applied to several conditional image gen-
eration problems, ranging from image inpainting [35, 53,
54, 51] and super-resolution [23] to video prediction [33,

47, 48, 28] and text to image synthesis [36, 37, 55, 50].
Recently, a line of work on image-to-image translation
has emerged, in both paired [16, 40] and unpaired set-
tings [56, 20, 29, 43]. Our task belongs to the second cate-
gory, as the translation of artistic paintings to photo-realistic
images cannot be solved by exploiting supervised methods.
Zhu et al. [56] proposed the Cycle-GAN framework,
which learns a translation between domains by exploiting a
cycle-consistent constraint that guarantees the consistency
of generated images with respect to original ones. On a
similar line, Kim et al. [20] introduced a method for pre-
serving the key attributes between the input and the trans-
lated image, while preserving a cycle-consistency criterion.
On the contrary, Liu et al. [29] used a combination of gen-
erative adversarial networks, based on CoGAN [30], and
variational auto-encoders. While all these methods have
achieved successful results on a wide range of translation
tasks, none of them has been speciﬁcally designed, nor ap-
plied, to recover photo-realism from artworks.

A different line of work is multi-domain image-to-image
translation [5, 2, 52]: here, the same model can be used for
translating images according to multiple attributes (i.e., hair
color, gender or age). Other methods, instead, focus on di-
verse image-to-image translation, in which an image can be
translated in multiple ways by encoding different style prop-
erties of the target distribution [57, 15, 24]. However, since
these methods typically depend on domain-speciﬁc proper-
ties, they are not suitable for our setting as realism is more
important than diversity.

Neural style transfer. Another way of performing image-
to-image translation is that of neural style transfer meth-
ods [7, 8, 18, 14, 39], in which a novel image is synthe-
sized by combining the content of one image with the style
of another, typically a painting. In this context, the sem-
inal work by Gatys et al. [7, 8] proposed to jointly mini-
mize a content loss to preserve the original content, and a
style reconstruction loss to transfer the style of a target artis-
tic image. The style component is encoded by exploiting
the Gram matrix of activations coming from a pre-trained
CNN. Subsequent methods have been proposed to address
and improve different aspects of style transfer, including the
reduction of the computational overhead [18, 25, 44], the
improvement of the generation quality [9, 4, 49, 17, 39] and
diversity [26, 45]. Other works have concentrated on the
combination of different styles [3], and the generalization
to previously unseen styles [27, 10, 41]. All these methods,
while being effective on transferring artistic styles, show
poor performance in the opposite direction.

3. Proposed approach

Our goal is to obtain a photo-realistic representation of a
painting. The proposed approach explicitly guarantees the
realism of the generation and a semantic binding between

5850

Figure 2: Overview of our Art2Real approach. A painting is translated to a photo-realistic visualization by forcing a matching
with patches from real photos. This is done in a semantically-aware manner, by building class-speciﬁc memory banks of
real patches Bc, and pairing generated and real patches through afﬁnity matrices Ac, according to their semantic classes.
Segmentation maps are computed either from the original painting or the generated image as the training proceeds.

the original artwork and the generated picture. To increase
the realism, we build a network which can copy from the de-
tails of real images at the patch level. Further, to reinforce
the semantic consistency before and after the translation,
we make use of a semantic similarity constraint: each patch
of the generated image is paired up with similar patches of
the same semantic class extracted from a memory bank of
realistic images. The training of the network aims at max-
imizing this similarity score, in order to reproduce realistic
details and preserve the original scene. An overview of our
model is presented in Fig. 2.

3.1. Patch memory banks

Given a semantic segmentation model, we deﬁne a pre-
processing step with the aim of building the memory banks
of patches which will drive the generation. Each memory
bank Bc is tied to a speciﬁc semantic class c, in that it can
contain only patches which belong to its semantic class. To
deﬁne the set of classes, and semantically understand the
content of an image, we adopt the weakly-supervised seg-
mentation model from Hu et al. [13]: in this approach, a net-
work is trained to predict semantic masks from a large set
of categories, by leveraging the partial supervision given by
detections. We also deﬁne an additional background mem-
ory bank, to store all patches which do not belong to any
semantic class.

Following a sliding-window policy, we extract ﬁxed-size
RGB patches from the set of real images and put them in
a speciﬁc memory Bc, according to the class label c of
the mask in which they are located. Since a patch might
contain pixels which belong to a second class label or the
background class, we store in Bc only patches containing
at least 20% pixels from class c.

Therefore, we obtain a number of memory banks equal

to the number of different semantic classes found in the
dataset, plus the background class, where patches belong-
ing to the same class are placed together (Fig. 3). Also, se-
mantic information from generated images is needed: since
images generated at the beginning of the training are less
informative, we ﬁrst extract segmentation masks from the
original paintings. As soon as the model starts to gener-
ate meaningful images, we employ the segmentation masks
obtained on generated images.

3.2. Semantically aware generation

The unpaired image-to-image translation model that we
propose maps images belonging to a domain X (that of art-
works) to images belonging to a different domain Y (that of
natural images), preserving the overall content. Suppose we
have a generated realistic image G(x) at each training step,
produced by a mapping function G which starts from an in-
put painting x. We adopt the previously obtained memory
banks of realistic patches and the segmentation masks of the
paintings in order to both enhance the realism of the gener-
ated details and keep the semantic content of the painting.

Pairing similar patches in a meaningful way. At each
training step, G(x) is split in patches as well, maintain-
ing the same stride and patch size used for the memory
banks. Reminding that we have the masks for all the paint-
ings, we denote a mask of the painting x with class label c
as M c
x. We retrieve all masks Mx of the painting x from
which G(x) originates, and assign each generated patch to
the class label c of the mask M c
If a
patch belongs to different masks, it is also assigned to mul-
tiple classes. Then, generated patches assigned to a spe-
ciﬁc class c are paired with similar realistic patches in the
memory bank Bc, i.e. the bank containing realistic patches
with class label c. Given realistic patches belonging to Bc,

x in which it falls.

5851

Memory BanksReal Photosskygrass……Segmentation MapsskygrassSegmentation NetworkTrue?Fake?realgeneratedrealgeneratedTrue?Fake?Figure 3: Memory banks building. A segmentation
model [13] computes segmentation masks for each realis-
tic image in the dataset, then RGB patches belonging to the
same semantic class are placed in the same memory bank.

Bc = {bc
j} and the set of generated patches with class label
c, K c = {kc
i }, we center both sets with respect to the mean
of patches in Bc, and we compute pairwise cosine distances
as follows:

(1)

i − µc
(kc
kkc
i − µc

b) · (bc

bk2(cid:13)(cid:13)bc

j − µc
b)
j − µc

b(cid:13)(cid:13)2!

dc

ij = 1 −
Nc Pj bc

b = 1

where µc
j , being Nc the number of patches
in memory bank Bc. We compute a number of distance
matrices equal to the number of semantic classes found in
the original painting x. Pairwise distances are subsequently
normalized as follows:
dc
ij
minl dc
il + ǫ

, where ǫ = 1e − 5

˜dc
ij =

(2)

and pairwise afﬁnity matrices are computed by applying a
row-wise softmax normalization:

=(≈ 1

≈ 0

ij ≪ ˜dc
if ˜dc
otherwise

il ∀ l 6= j

Ac

ij =

exp(1 − ˜dc

ij/h)

Pl exp(1 − ˜dc

il/h)

(3)
where h > 0 is a bandwidth parameter. Thanks to the
softmax normalization, each generated patch kc
i will have
a high-afﬁnity degree with the nearest real patch and with
other not negligible near patches. Moreover, afﬁnities are
computed only between generated and artistic patches be-
longing to the same semantic class.

Approximate afﬁnity matrix. Computing the entire afﬁn-
ity matrix would require an intractable computational over-
head, especially for classes with a memory bank containing
millions of patches. In fact matrix Ac has as many rows as
the number of patches of class c extracted from G(x) and
as many columns as the number of patches contained in the
memory bank Bc.

To speed up the computation, we build a suboptimal
Nearest Neighbors index I c for each memory bank. When
the afﬁnity matrix for a class c has to be computed, we con-
duct a k-NN search through I c to get the k nearest samples

of each generated patch kc
i . In this way, Ac will be a sparse
matrix with at most as many columns as k times the num-
ber of generated patches of class c. The Softmax in Eq. 3
ensures that the approximated version of the afﬁnity matrix
is very close to the exact one if the k-NN searches through
the indices are reliable. We adopt inverted indexes with ex-
act post-veriﬁcation, implemented in the Faiss library [19].
Patches are stored with their RGB values when memory
banks have less than one million vectors; otherwise, we use
a PCA pre-processing step to reduce their dimensionality,
and scalar quantization to limit the memory requirements
of the index.

Maximizing the similarity. A contextual loss [34] for each
semantic class in Mx aims to maximize the similarity be-
tween couples of patches with high afﬁnity value:

Lc

CX (K c, Bc) = − log  1

N c

K  Xi

max

j

Ac

ij!! (4)

where N c
K is the cardinality of the set of generated patches
with class label c. Our objective is the sum of the previously
computed single-class contextual losses over the different
classes found in Mx:

LCX (K, B) =Xc

− log  1

N c

K  Xi

max

j

Ac

ij!! (5)

where c assumes all the class label values of masks in Mx.
Note that masks in Mx are not constant during training: at
the beginning, they are computed on paintings, then they
are regularly extracted from G(x).

Multi-scale variant. To enhance the realism of generated
images, we adopt a multi-scale variant of the approach,
which considers different sizes and strides in the patch ex-
traction process. The set of memory banks is therefore
replicated for each scale, and G(x) is split at multiple scales
accordingly. Our loss function is given by the sum of the
values from Eq. 5 computed at each scale, as follows:

LCXM S(K, B) =Xs

Ls

CX (K, B)

(6)

where each scale s implies a speciﬁc patch size and stride.

3.3. Unpaired image to image translation baseline

Our objective assumes the availability of a generated im-
age G(x) which is, in our task, the representation of a paint-
ing in the photo-realistic domain. In our work, we adopt
a cycle-consistent adversarial framework [56] between the
domain of paintings from a speciﬁc artist X and the do-
main of realistic images Y . The data distributions are
x ∼ pdata(x) and y ∼ pdata(y), while G : X → Y and
F : Y → X are the mapping functions between the two

5852

domains. The two discriminators are denoted as DY and
DX . The full cycle-consistent adversarial loss [56] is the
following:

Gogh: 400, Ukiyo-e: 825, landscape paintings: 2044, por-
traits: 1714, real landscape photographs: 2048, real people
photographs: 2048.

Lcca(G, F, DX , DY ) = LGAN (G, DY , X, Y )
+ LGAN (F, DX , Y, X)
+ Lcyc(G, F )

(7)

where the two adversarial losses are:

LGAN (G, DY , X, Y ) = Ey∼pdata(y)[logDY (y)]

+ Ex∼pdata(x)[log(1 − DY (G(x)))]
(8)

LGAN (F, DX , Y, X) = Ex∼pdata(x)[logDX (x)]

+ Ey∼pdata(y)[log(1 − DX (F (y)))]
(9)

and the cycle consistency loss, which requires the original
images x and y to be the same as the reconstructed ones,
F (G(x)) and G(F (y)) respectively, is:

Lcyc(G, F ) = Ex∼pdata(x)[kF (G(x)) − xk]
+ Ey∼pdata(y)[kG(F (y)) − yk].

(10)

3.4. Full objective

Our full semantically-aware translation loss is given by
the sum of the baseline objective, i.e. Eq. 7, and our patch-
level similarity loss, i.e. Eq. 6:

L(G, F, DX , DY , K, B) = Lcca(G, F, DX , DY )

+ λLCXM S(K, B)

(11)

where λ controls our multi-scale contextual loss weight
with respect to the baseline objective.

4. Experimental results

Datasets. In order to evaluate our approach, different sets
of images, both from artistic and realistic domains, are used.
Our tests involve both sets of paintings from speciﬁc artists
and sets of artworks representing a given subject from dif-
ferent authors. We use paintings from Monet, Cezanne, Van
Gogh, Ukiyo-e style and landscapes from different artists
along with real photos of landscapes, keeping an underly-
ing relationship between artistic and realistic domains. We
also show results using portraits and real people photos. All
artworks are taken from Wikiart.org, while landscape pho-
tos are downloaded from Flickr through the combination
of tags landscape and landscapephotography. To
obtain people photos, images are extracted from the CelebA
dataset [31]. All the images are scaled to 256 × 256 pixels,
and only RGB pictures are used. The size of each train-
ing set is, respectively, Monet: 1072, Cezanne: 583, Van

Architecture and training details. To build generators and
discriminators, we adapt generative networks from Johnson
et al. [18], with two stride-2 convolutions to downsample
the input, several residual blocks and two stride-1/2 convo-
lutional layers for upsampling. Discriminative networks are
PatchGANs [16, 23, 25] which classify each square patch
of an image as real or fake.

Memory banks of real patches are built using all the
available real images, i.e. 2048 images both for landscapes
and for people faces, and are kept constant during training.
Masks of the paintings, after epoch 40, are regularly up-
dated every 20 epochs with those from the generated im-
ages. Patches are extracted at three different scales: 4 × 4,
8×8 and 16×16, using three different stride values: 4, 5 and
6 respectively. The same patch sizes and strides are adopted
when splitting the generated image, in order to compute
afﬁnities and the contextual loss. We use a multi-scale con-
textual loss weight λ, in Eq. 11, equal to 0.1.

We train the model for 300 epochs through the Adam op-
timizer [21] and using mini-batches with a single sample.
A learning rate of 0.0002 is kept constant for the ﬁrst 100
epochs, making it linearly decay to zero over the next 200
epochs. An early stopping technique is used to reduce train-
ing times. In particular, at each epoch the Fr´echet Inception
Distance (FID) [12] is computed between our generated im-
ages and the set of real photos: if it does not decrease for
30 consecutive epochs, the training is stopped. We initialize
the weights of the model from a Gaussian distribution with
0 mean and standard deviation 0.02.

Competitors. To compare our results with those from state
of the art techniques, we train Cycle-GAN [56], UNIT [29]
and DRIT [24] approaches on the previously described
datasets. The adopted code comes from the authors’ im-
plementations and can be found in their GitHub reposito-
ries. The number of epochs and other training parameters
are those suggested by the authors, except for DRIT [24]:
to enhance the quality of the results generated by this com-
petitor, after contacting the authors we employed spectral
normalization and manually chose the best epoch through
visual inspection and by computing the FID [12] measure.
Moreover, being DRIT [24] a diverse image-to-image trans-
lation framework, its performance depends on the choice of
an attribute from the attribute space of the realistic domain.
For fairness of comparison, we generate a single realistic
image using a randomly sampled attribute. We also show
quantitative results of applying the style transfer approach
from Gatys et al. [7], with content images taken from the
realistic datasets and style images randomly sampled from
the paintings, for each set.

5853

Method

Monet Cezanne Van Gogh Ukiyo-e

Landscapes

Portraits

Mean

Original paintings
Style-transferred reals
DRIT [24]
UNIT [29]
Cycle-GAN [56]

Art2Real

69.14
74.43
68.32
56.18
49.70

44.71

169.43
114.39
109.36
97.91
85.11

159.82
137.06
108.92
98.12
85.10

177.52
147.94
117.07
89.15
98.13

68.00

78.60

80.48

59.07
70.25
59.84
47.87
44.79

35.03

72.95
62.35
44.33
43.47
30.60

34.03

117.99
101.07
84.64
72.12
65.57

56.81

Table 1: Evaluation in terms of Fr´echet Inception Distance [12].

Art2Real

Cycle-GAN [56]

UNIT [29]

DRIT [24]

Style-transferred reals

s
e
p
a
c
s
d
n
a
L

s
t
i
a
r
t
r
o
P

Figure 4: Distribution of ResNet-152 features extracted from landscape and portrait images. Each row shows the results of
our method and competitors on a speciﬁc setting.

4.1. Visual quality evaluation

Cycle-GAN [56] UNIT [29] DRIT [24]

We evaluate the visual quality of our generated images

using both automatic evaluation metrics and user studies.

Realism

Coherence

36.5%

48.4%

27.9%

14.2%

25.5%

7.3%

Fr´echet Inception Distance. To numerically assess the
quality of our generated images, we employ the Fr´echet
Inception Distance [12].
It measures the difference of
two Gaussians, and it is also known as Wasserstein-2 dis-
tance [46]. The FID d between a Gaussian G1 with mean
and covariance (m1, C1) and a Gaussian G2 with mean and
covariance (m2, C2) is given by:

d2(G1, G2) = km1 − m2k2

2 + T r(C1 + C2 − 2(C1C2)1/2)
(12)
For our evaluation purposes, the two Gaussians are ﬁtted on
Inception-v3 [42] activations of real and generated images,
respectively. The lower the Fr´echet Inception Distance be-
tween these Gaussians, the more generated and real data
distributions overlap, i.e. the realism of generated images
increases when the FID decreases. Table 1 shows FID val-
ues for our model and a number of competitors. As it can
be observed, the proposed approach produces a lower FID
on all settings, except for portraits, in which we rank sec-
ond after Cycle-GAN. Results thus conﬁrm the capabilities
of our method in producing images which looks realistic to
pre-trained CNNs.

Table 2: User study results. We report the percentage of
times an image from a competitor was preferred against
ours. Our method is always preferred more than 50% of
the times.

Human judgment. In order to evaluate the visual quality
of our generated images, we conducted a user study on the
Figure Eight crowd-sourcing platform. In particular, we as-
sessed both the realism of our results and their coherence
with the original painting. To this aim, we conducted two
different evaluation processes, which are detailed as fol-
lows:

• In the Realism evaluation, we asked the user to select
the most realistic image between the two shown, both
obtained from the same painting, one from our method
and the other from a competitor;

• In the Coherence evaluation, we presented the user
the original painting and two generated images which
originate from it, asking to select the most faithful to
the artwork. Again, generated images come from our
method and a competitor.

5854

Original Painting

Art2Real

Cycle-GAN [56]

UNIT [29]

DRIT [24]

Figure 5: Qualitative results on portraits. Our method can preserve facial expressions and reduce the amount of artifacts with
respect to Cycle-GAN [56], UNIT [29], and DRIT [24].

Classiﬁcation Segmentation Detection

4.2. Reducing the domain shift

Method

Real Photos

Original paintings
Style-transferred reals
DRIT [24]
UNIT [29]
Cycle-GAN [56]

Art2Real

3.99

4.81
5.39
5.14
4.88
4.81

4.50

0.63

0.67
0.70
0.67
0.69
0.67

0.66

2.03

2.58
2.89
2.56
2.54
2.50

2.42

Table 3: Mean entropy values for classiﬁcation, segmenta-
tion, and detection of images generated through our method
and through competitor methods.

Each test involved our method and one competitor at a time
leading to six different tests, considering three competitors:
Cycle-GAN [56], UNIT [29], and DRIT [24]. A set of 650
images were randomly sampled for each test, and each im-
age pair was evaluated from three different users. Each user,
to start the test, was asked to successfully evaluate eight ex-
ample pairs where one of the two images was deﬁnitely bet-
ter than the other. A total of 685 evaluators were involved
in our tests. Results are presented in Table 2, showing that
our generated images are always chosen more than 50% of
the times.

We evaluate the capabilities of our model to reduce the
domain shift between artistic and real data, by analyzing the
performance of pre-trained convolutional models and visu-
alizing the distributions of CNN features.
Entropy analysis. Pre-trained architectures show increased
performances on images synthesized by our approach, in
comparison with original paintings and images generated
by other approaches. We visualize this by computing the en-
tropy of the output of state of the art architectures: the lower
the entropy, the lower the uncertainty of the model about its
result. We evaluate the entropy on classiﬁcation, seman-
tic segmentation, and detection tasks, adopting a ResNet-
152 [11] trained on ImageNet [6], Hu et al. [13]’s model and
Faster R-CNN [38] trained on the Visual Genome [22, 1],
respectively. Table 3 shows the average image entropy for
classiﬁcation, the average pixel entropy for segmentation
and the average bounding-box entropy for detection, com-
puted on all the artistic, realistic and generated images avail-
able. Our approach is able to generate images which lower
the entropy, on average, for each considered task with re-
spect to paintings and images generated by the competitors.

Feature distributions visualization. To further validate the
domain shift reduction between real images and generated

5855

Original Painting

Art2Real

Cycle-GAN [56]

UNIT [29]

DRIT [24]

Figure 6: Qualitative results on landscape paintings. Results generated by our approach show increased realism and reduced
blur when compared with those from Cycle-GAN [56], UNIT [29], and DRIT [24].

ones, we visualize the distributions of features extracted
from a CNN. In particular, for each image, we extract a vi-
sual feature vector coming from the average pooling layer
of a ResNet-152 [11], and we project it into a 2-dimensional
space by using the t-SNE algorithm [32]. Fig. 4 shows the
feature distributions on two different sets of paintings (i.e.,
landscapes and portraits) comparing our results with those
of competitors. Each plot represents the distribution of vi-
sual features extracted from paintings belonging to a spe-
ciﬁc set, from the corresponding images generated by our
model or by one of the competitors, and from the real pho-
tographs depicting landscapes or, in the case of portraits,
human faces. As it can be seen, the distributions of our gen-
erated images are in general closer to the distributions of
real images than to those of paintings, thus conﬁrming the
effectiveness of our model in the domain shift reduction.

4.3. Qualitative results

Besides showing numerical improvements with respect
to state of the art approaches, we present some qualitative
results coming from our method, compared to those from
Cycle-GAN [56], UNIT [29], and DRIT [24]. We show ex-
amples of landscape and portrait translations in Fig. 5 and
6. Many other samples from all settings can be found in

the Supplementary material. We observe increased realism
in our generated images, due to more detailed elements and
fewer blurred areas, especially in the landscape results. Por-
trait samples reveal that brush strokes disappear completely,
leading to a photo-realistic visualization. Our results con-
tain fewer artifacts and are more faithful to the paintings,
more often preserving the original facial expression.

5. Conclusion

We have presented Art2Real, an approach to translate
paintings to photo-realistic visualizations. Our research is
motivated by the need of reducing the domain gap between
artistic and real data, which prevents the application of re-
cent techniques to art. The proposed approach generates
realistic images by copying from sets of real images, in a
semantically aware manner and through efﬁcient memory
banks. This is paired with an image-to-image translation ar-
chitecture, which ultimately leads to the ﬁnal result. Quanti-
tative and qualitative evaluations, conducted on artworks of
different artists and styles, have shown the effectiveness of
our method in comparison with image-to-image translation
algorithms. Finally, we also showed how generated images
can enhance the performance of pre-trained architectures.

5856

References

[1] Peter Anderson, Xiaodong He, Chris Buehler, Damien
Teney, Mark Johnson, Stephen Gould, and Lei Zhang.
Bottom-Up and Top-Down Attention for Image Captioning
and Visual Question Answering. In Proceedings of the IEEE
Conference on Computer Vision and Pattern Recognition,
2018.

[2] Asha Anoosheh, Eirikur Agustsson, Radu Timofte, and Luc
Van Gool. ComboGAN: Unrestrained scalability for im-
age domain translation.
In Proceedings of the IEEE Con-
ference on Computer Vision and Pattern Recognition Work-
shops, 2018.

[3] Dongdong Chen, Lu Yuan, Jing Liao, Nenghai Yu, and Gang
Hua. Stylebank: An explicit representation for neural image
style transfer.
In Proceedings of the IEEE Conference on
Computer Vision and Pattern Recognition, 2017.

[4] Tian Qi Chen and Mark Schmidt. Fast patch-based style
transfer of arbitrary style. arXiv preprint arXiv:1612.04337,
2016.

[5] Yunjey Choi, Minje Choi, Munyoung Kim, Jung-Woo Ha,
Sunghun Kim, and Jaegul Choo. StarGAN: Uniﬁed gener-
ative adversarial networks for multi-domain image-to-image
translation. In Proceedings of the IEEE Conference on Com-
puter Vision and Pattern Recognition, 2017.

[6] J. Deng, W. Dong, R. Socher, L.-J. Li, K. Li, and L. Fei-
Fei. ImageNet: A Large-Scale Hierarchical Image Database.
In Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, 2009.

[7] Leon A Gatys, Alexander S Ecker, and Matthias Bethge.
arXiv preprint

A neural algorithm of artistic style.
arXiv:1508.06576, 2015.

[8] Leon A Gatys, Alexander S Ecker, and Matthias Bethge. Im-
age style transfer using convolutional neural networks.
In
Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, 2016.

[9] Leon A Gatys, Alexander S Ecker, Matthias Bethge, Aaron
Hertzmann, and Eli Shechtman. Controlling perceptual fac-
tors in neural style transfer. In Proceedings of the IEEE Con-
ference on Computer Vision and Pattern Recognition, 2017.

[10] Golnaz Ghiasi, Honglak Lee, Manjunath Kudlur, Vincent
Dumoulin, and Jonathon Shlens. Exploring the structure of
a real-time, arbitrary neural artistic stylization network. In
Proceedings of the British Machine Vision Conference, 2017.

[11] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun.
Deep residual learning for image recognition. In Proceed-
ings of the IEEE Conference on Computer Vision and Pattern
Recognition, 2016.

[12] Martin Heusel, Hubert Ramsauer, Thomas Unterthiner,
Bernhard Nessler, G¨unter Klambauer, and Sepp Hochreiter.
GANs trained by a two time-scale update rule converge to a
Nash equilibrium. Advances in Neural Information Process-
ing Systems, 2017.

[14] Xun Huang and Serge J Belongie. Arbitrary Style Trans-
fer in Real-Time with Adaptive Instance Normalization. In
Proceedings of the International Conference on Computer
Vision, 2017.

[15] Xun Huang, Ming-Yu Liu, Serge Belongie, and Jan Kautz.
Multimodal Unsupervised Image-to-image Translation.
In
Proceedings of the European Conference on Computer Vi-
sion, 2018.

[16] Phillip Isola, Jun-Yan Zhu, Tinghui Zhou, and Alexei A
Image-to-image translation with conditional adver-
Efros.
sarial networks. In Proceedings of the IEEE Conference on
Computer Vision and Pattern Recognition, 2017.

[17] Yongcheng Jing, Yang Liu, Yezhou Yang, Zunlei Feng,
Yizhou Yu, Dacheng Tao, and Mingli Song. Stroke con-
trollable fast style transfer with adaptive receptive ﬁelds. In
Proceedings of the European Conference on Computer Vi-
sion, 2018.

[18] Justin Johnson, Alexandre Alahi, and Li Fei-Fei. Perceptual
In
losses for real-time style transfer and super-resolution.
Proceedings of the European Conference on Computer Vi-
sion, 2016.

[19] Jeff Johnson, Matthijs Douze, and Herv´e J´egou. Billion-
arXiv preprint

scale similarity search with GPUs.
arXiv:1702.08734, 2017.

[20] Taeksoo Kim, Moonsu Cha, Hyunsoo Kim, Jung Kwon Lee,
and Jiwon Kim. Learning to Discover Cross-Domain Rela-
tions with Generative Adversarial Networks. In Proceedings
of the International Conference on Machine Learning, 2017.

[21] Diederik P Kingma and Jimmy Ba. Adam: A method for
arXiv preprint arXiv:1412.6980,

stochastic optimization.
2014.

[22] Ranjay Krishna, Yuke Zhu, Oliver Groth, Justin Johnson,
Kenji Hata, Joshua Kravitz, Stephanie Chen, Yannis Kalan-
tidis, Li-Jia Li, David A Shamma, Michael Bernstein, and
Li Fei-Fei. Visual Genome: Connecting Language and Vi-
sion Using Crowdsourced Dense Image Annotations. Inter-
national Journal of Computer Vision, 123(1):32–73, 2017.

[23] Christian Ledig, Lucas Theis, Ferenc Huszar, Jose Caballero,
Andrew Cunningham, Alejandro Acosta, Andrew Aitken,
Alykhan Tejani, Johannes Totz, Zehan Wang, and Wenzhe
Shi. Photo-Realistic Single Image Super-Resolution Using
a Generative Adversarial Network.
In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, 2017.

[24] Hsin-Ying Lee, Hung-Yu Tseng,

Jia-Bin Huang, Ma-
neesh Kumar Singh, and Ming-Hsuan Yang. Diverse Image-
to-Image Translation via Disentangled Representations. In
Proceedings of the European Conference on Computer Vi-
sion, 2018.

[25] Chuan Li and Michael Wand. Precomputed real-time texture
synthesis with markovian generative adversarial networks. In
Proceedings of the European Conference on Computer Vi-
sion, 2016.

[13] Ronghang Hu, Piotr Doll´ar, Kaiming He, Trevor Darrell, and
Ross Girshick. Learning to Segment Every Thing. In Pro-
ceedings of the IEEE Conference on Computer Vision and
Pattern Recognition, 2018.

[26] Yijun Li, Chen Fang, Jimei Yang, Zhaowen Wang, Xin Lu,
and Ming-Hsuan Yang. Diversiﬁed texture synthesis with
feed-forward networks. In Proceedings of the IEEE Confer-
ence on Computer Vision and Pattern Recognition, 2017.

5857

[27] Yijun Li, Chen Fang, Jimei Yang, Zhaowen Wang, Xin Lu,
and Ming-Hsuan Yang. Universal style transfer via feature
transforms. In Advances in Neural Information Processing
Systems, 2017.

[28] Xiaodan Liang, Lisa Lee, Wei Dai, and Eric P Xing. Dual
motion GAN for future-ﬂow embedded video prediction. In
Proceedings of the International Conference on Computer
Vision, 2017.

[29] Ming-Yu Liu, Thomas Breuel, and Jan Kautz. Unsupervised
image-to-image translation networks. In Advances in Neural
Information Processing Systems, 2017.

[30] Ming-Yu Liu and Oncel Tuzel. Coupled generative adversar-
ial networks. In Advances in Neural Information Processing
Systems, 2016.

[31] Ziwei Liu, Ping Luo, Xiaogang Wang, and Xiaoou Tang.
Deep Learning Face Attributes in the Wild. In Proceedings
of the International Conference on Computer Vision, 2015.

[32] Laurens van der Maaten and Geoffrey Hinton. Visualizing
data using t-SNE. Journal of Machine Learning Research,
9(Nov):2579–2605, 2008.

[33] Michael Mathieu, Camille Couprie, and Yann LeCun. Deep
multi-scale video prediction beyond mean square error. In
Proceedings of the International Conference on Learning
Representations, 2016.

[34] Roey Mechrez, Itamar Talmi, Firas Shama, and Lihi Zelnik-
Manor. Learning to Maintain Natural Image Statistics. arXiv
preprint arXiv:1803.04626, 2018.

[35] Deepak Pathak, Philipp Krahenbuhl, Jeff Donahue, Trevor
Darrell, and Alexei A Efros. Context encoders: Feature
learning by inpainting. In Proceedings of the European Con-
ference on Computer Vision, 2016.

[36] Scott Reed, Zeynep Akata, Xinchen Yan, Lajanugen Lo-
geswaran, Bernt Schiele, and Honglak Lee. Generative ad-
versarial text to image synthesis. In Proceedings of the In-
ternational Conference on Machine Learning, 2016.

[37] Scott E Reed, Zeynep Akata, Santosh Mohan, Samuel Tenka,
Bernt Schiele, and Honglak Lee. Learning what and where
to draw. In Advances in Neural Information Processing Sys-
tems, 2016.

[38] Shaoqing Ren, Kaiming He, Ross Girshick, and Jian Sun.
Faster R-CNN: towards real-time object detection with re-
gion proposal networks. IEEE Transactions on Pattern Anal-
ysis and Machine Intelligence, 39(6):1137–1149, 2017.

[39] Artsiom Sanakoyeu, Dmytro Kotovenko, Sabine Lang, and
Bj¨orn Ommer. A Style-Aware Content Loss for Real-time
HD Style Transfer. In Proceedings of the European Confer-
ence on Computer Vision, 2018.

[40] Patsorn Sangkloy, Jingwan Lu, Chen Fang, Fisher Yu, and
James Hays. Scribbler: Controlling deep image synthesis
with sketch and color. In Proceedings of the IEEE Confer-
ence on Computer Vision and Pattern Recognition, 2017.

[41] Falong Shen, Shuicheng Yan, and Gang Zeng. Neural Style
Transfer via Meta Networks.
In Proceedings of the IEEE
Conference on Computer Vision and Pattern Recognition,
2018.

[42] Christian Szegedy, Vincent Vanhoucke, Sergey Ioffe, Jon
Shlens, and Zbigniew Wojna. Rethinking the inception archi-

tecture for computer vision. In Proceedings of the IEEE Con-
ference on Computer Vision and Pattern Recognition, 2016.
[43] Matteo Tomei, Lorenzo Baraldi, Marcella Cornia, and Rita
Cucchiara. What was Monet seeing while painting? Trans-
lating artworks to photo-realistic images. In Proceedings of
the European Conference on Computer Vision Workshops,
2018.

[44] Dmitry Ulyanov, Vadim Lebedev, Andrea Vedaldi, and Vic-
tor S Lempitsky. Texture Networks: Feed-forward Synthesis
of Textures and Stylized Images. In Proceedings of the In-
ternational Conference on Machine Learning, 2016.

[45] Dmitry Ulyanov, Andrea Vedaldi, and Victor S Lempitsky.
Improved Texture Networks: Maximizing Quality and Di-
versity in Feed-forward Stylization and Texture Synthesis.
In Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, 2017.

[46] Leonid Nisonovich Vaserstein. Markov processes over denu-
merable products of spaces, describing large systems of au-
tomata. Problemy Peredachi Informatsii, 5(3):64–72, 1969.
[47] Ruben Villegas, Jimei Yang, Seunghoon Hong, Xunyu Lin,
and Honglak Lee. Decomposing motion and content for nat-
ural video sequence prediction. In Proceedings of the Inter-
national Conference on Learning Representations, 2017.

[48] Jacob Walker, Kenneth Marino, Abhinav Gupta, and Martial
Hebert. The pose knows: Video forecasting by generating
pose futures. In Proceedings of the International Conference
on Computer Vision, 2017.

[49] Xin Wang, Geoffrey Oxholm, Da Zhang, and Yuan-Fang
Wang. Multimodal transfer: A hierarchical deep convolu-
tional neural network for fast artistic style transfer. In Pro-
ceedings of the IEEE Conference on Computer Vision and
Pattern Recognition, 2017.

[50] Tao Xu, Pengchuan Zhang, Qiuyuan Huang, Han Zhang, Zhe
Gan, Xiaolei Huang, and Xiaodong He. AttnGAN: Fine-
grained text to image generation with attentional generative
adversarial networks.
In Proceedings of the IEEE Confer-
ence on Computer Vision and Pattern Recognition, 2018.

[51] Zhaoyi Yan, Xiaoming Li, Mu Li, Wangmeng Zuo, and
Shiguang Shan. Shift-net: Image inpainting via deep feature
rearrangement. In Proceedings of the European Conference
on Computer Vision, 2018.

[52] Xuewen Yang, Dongliang Xie, and Xin Wang. Crossing-
Domain Generative Adversarial Networks for Unsupervised
Multi-Domain Image-to-Image Translation. In ACM Inter-
national Conference on Multimedia, 2018.

[53] Raymond A Yeh, Chen Chen, Teck-Yian Lim, Alexander G
Schwing, Mark Hasegawa-Johnson, and Minh N Do. Seman-
tic Image Inpainting with Deep Generative Models. In Pro-
ceedings of the IEEE Conference on Computer Vision and
Pattern Recognition, 2017.

[54] Jiahui Yu, Zhe Lin, Jimei Yang, Xiaohui Shen, Xin Lu, and
Thomas S Huang. Generative image inpainting with contex-
tual attention.
In Proceedings of the IEEE Conference on
Computer Vision and Pattern Recognition, 2018.

[55] Han Zhang, Tao Xu, Hongsheng Li, Shaoting Zhang, Xiaolei
Huang, Xiaogang Wang, and Dimitris Metaxas. StackGAN:
Text to photo-realistic image synthesis with stacked gener-

5858

ative adversarial networks.
tional Conference on Computer Vision, 2017.

In Proceedings of the Interna-

[56] Jun-Yan Zhu, Taesung Park, Phillip Isola, and Alexei A
Efros. Unpaired image-to-image translation using cycle-
consistent adversarial networks.
In Proceedings of the In-
ternational Conference on Computer Vision, 2017.

[57] Jun-Yan Zhu, Richard Zhang, Deepak Pathak, Trevor Dar-
rell, Alexei A Efros, Oliver Wang, and Eli Shechtman. To-
ward multimodal image-to-image translation.
In Advances
in Neural Information Processing Systems, 2017.

5859

