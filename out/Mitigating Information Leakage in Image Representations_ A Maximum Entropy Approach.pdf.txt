Mitigating Information Leakage in Image Representations: A Maximum

Entropy Approach

Proteek Chandan Roy and Vishnu Naresh Boddeti
Department of Computer Science and Engineering
Michigan State University, East Lansing MI 48824

{royprote, vishnu}@msu.edu

Abstract

Image recognition systems have demonstrated tremen-
dous progress over the past few decades thanks, in part,
to our ability of learning compact and robust representa-
tions of images. As we witness the wide spread adoption of
these systems, it is imperative to consider the problem of un-
intended leakage of information from an image representa-
tion, which might compromise the privacy of the data owner.
This paper investigates the problem of learning an image
representation that minimizes such leakage of user informa-
tion. We formulate the problem as an adversarial non-zero
sum game of ﬁnding a good embedding function with two
competing goals: to retain as much task dependent discrim-
inative image information as possible, while simultaneously
minimizing the amount of information, as measured by en-
tropy, about other sensitive attributes of the user. We ana-
lyze the stability and convergence dynamics of the proposed
formulation using tools from non-linear systems theory and
compare to that of the corresponding adversarial zero-sum
game formulation that optimizes likelihood as a measure of
information content. Numerical experiments on UCI, Ex-
tended Yale B, CIFAR-10 and CIFAR-100 datasets indicate
that our proposed approach is able to learn image represen-
tations that exhibit high task performance while mitigating
leakage of predeﬁned sensitive information.

1. Introduction

Current day machine learning algorithms based on deep
neural networks have demonstrated impressive progress
across multiple domains such as image classiﬁcation,
speech recognition etc. By stacking together multiple lay-
ers of linear and non-linear operations deep neural networks
have been able to learn and identify complex patterns in
data. As a by-product of these capabilities, deep neural net-
works have also become powerful enough to inadvertently
identify sensitive information or features of data even in the

absence of any additional side information. For example,
consider a scenario where a user enrolls their facial image
in a face recognition system for the purpose of access con-
trol. During enrollment, a feature vector is extracted from
the image and stored in a database. Apart from the identity
of the user, this feature vector potentially contains informa-
tion that is sensitive to the user, such as the age, informa-
tion that the user may never have expressly consented to
provide. More generally, learned data representations could
leak auxiliary information that the participants may never
have intended to release. Information obtained in this man-
ner can be used to compromise the privacy of the user or to
be biased and unfair to the user. Therefore, it is imperative
to develop representation learning algorithms that can in-
tentionally and permanently obscure sensitive information
while retaining task dependent information. Addressing this
problem is the central aim of this paper.

A few recent attempts have been made to study related
problems, such as learning censored [3], fair [14], or invari-
ant [18] representations of data. The central idea of these
approaches, collectively referred to as Adversarial Repre-
sentation Learning (ARL), is to learn a representation of
data in an adversarial setting. These approaches couple to-
gether (i) an adversarial network that seeks to classify and
extract sensitive information from a given representation,
and (ii) an embedding network that is tasked with extract-
ing a compact representation of data while preventing the
adversarial network from succeeding at leaking sensitive in-
formation. To achieve their respective goals, the adversary
is optimized to maximize the likelihood of the sensitive in-
formation, while the encoder is optimized to minimize the
same likelihood i.e., adversary’s likelihood of the sensitive
information, thereby leading to a zero-sum game. We will
henceforth refer to this formulation as Maximum Likelihood
Adversarial Representation Learning (ML-ARL).

The zero-sum game formulation of optimizing the likeli-
hood, however, is practically sub-optimal from the perspec-
tive of preventing information leakage. As an illustration
consider a problem where the sensitive attribute has three

2586

categories. Let there be two instances where the adversary’s
probability distribution of the sensitive label is (0.33, 0.17,
0.5) and (0.33., 0.33., 0.33.) and let the correct label be class
1 for both of them. In each of these cases the likelihood of
the discriminator is the same i.e., log 0.33 but the former in-
stance is more informative than the latter. Moreover, the po-
tential of this formulation to prevent information leakage is
predicated upon: (i) the existence of an equilibrium, and (ii)
the ability of practical optimization procedures to converge
to such an equilibrium. As we will show, in practice, the
conditions necessary for convergence may not be satisﬁed.
Therefore, when the optimization does not reach the equi-
librium, a probability distribution with the minimum likeli-
hood is the distribution that is most certain with the poten-
tial to leak the most amount of information. In contrast, the
second instance is a uniform distribution over the sensitive
labels and provides no information to the adversary. This
solution corresponds to the maximum entropy distribution
over the sensitive labels.

Contributions: Building on the observations above, we
propose a framework, dubbed Maximum Entropy Adver-
sarial Representation Learning (MaxEnt-ARL), which op-
timizes an image representation with two major objectives,
(i) maximally retain information pertinent to a given tar-
get attribute, and (ii) minimize information leakage about a
given sensitive attribute. We pose the learning problem in
an adversarial setting as a non-zero sum three player game
between an encoder, a predictor and a discriminator (proxy
adversary) where the encoder tries to maximize the entropy
of the discriminator on the sensitive attribute and maximizes
the likelihood of the predictor on the target attribute.

We analyze the equilibrium and convergence properties
of the ML-ARL as well as the proposed MaxEnt-ARL for-
mulation using tools from non-linear systems theory. We
compare and evaluate the numerical performance of ML-
ARL and MaxEnt-ARL for fair classiﬁcation tasks on the
UCI dataset,
illumination invariant classiﬁcation on the
Extended Yale B dataset and two fabricated tasks on the
CIFAR-10 and CIFAR-100 datasets. On a majority of these
tasks MaxEnt-ARL outperforms all other baselines.

2. Related Work

Adversarial Representation Learning: In the context of
image classiﬁcation, adversarial learning has been utilized
to learn representations that are invariant across domains
[4, 5, 17], thereby enabling us to train classiﬁers on a source
domain and utilize on a target domain.

The entire body of work devoted to learning fair and un-
biased representations of data share many similarities to the
adversarial representation learning problem. Early work on
this topic did not involve an explicit adversary but shared
the goal of learning representations with competing objec-

tives. The concept of learning fair representations was ﬁrst
introduced by Zemel et al [19], where the goal was to learn
a representation of data by “fair clustering” while maintain-
ing the discriminative features of the prediction task. Build-
ing upon this work many approaches have been proposed
to learn an unbiased representation of data while retaining
its effectiveness for a prediction task. To remove inﬂuence
of “nuisance variables” Louizos et al [14] proposed varia-
tional fair autoencoder (VFAE), a joint optimization frame-
work for learning an invariant representation and a predic-
tion task. In order to improve fairness in the representation,
they regularized the marginal distribution p(z|s) through
Maximum Mean Discrepancy (MMD).

More recent approaches [3, 20, 1, 18] have used explicit
adversarial networks to measure information content of sen-
sitive attributes. These problems are set up as a minimax
game between the encoder and the adversary. The encoder
is setup to achieve fairness by maximizing the loss of the ad-
versary i.e. minimizing negative log-likelihood of sensitive
variables as measured by the adversary. Among these ap-
proaches, our proposed MaxEnt-ARL formulation is most
directly related to the Adversarial Invariant Feature Learn-
ing introduced by Xie et al. [18].

Optimization Theory for Adversarial Learning: The
formulation of adversarial representation learning poses
unique challenges from an optimization perspective. The
parameters of the models in ARL are typically optimized
through stochastic gradient descent, either jointly [3, 15]
or alternatively [4]. The former is, however, more com-
monly used in practice and is a generalization of gradient
descent. While the convergence properties of gradient de-
scent and its variants are well understood, there is relatively
little work on the convergence and stability of simultane-
ous gradient descent in adversarial minimax problems. Re-
[16]
cently, Mescheder et al.
both leveraged tools from non-linear systems theory [9] to
analyze the convergence properties of simultaneous gradi-
ent descent in the context of GANs. They show that with-
out the introduction of additional regularization terms to the
objective of the zero-sum game, simultaneous gradient de-
scent does not converge. Our convergence analysis of ML-
ARL and MaxEnt-ARL also leverages the same non-linear
systems theory tools and show the conditions under which
they converge.

[15] and Nagarajan et al.

3. Adversarial Representation Learning

The Adversarial Representation Learning setup involves
observational input x, a target attribute with n classes
Y = {y1, . . . , yn} and a sensitive attribute with m classes
S = {s1, . . . , sm}. In this paper, we restrict ourselves to
attributes over a discrete space with multiple labels. Our
goal is to learn an embedding function that maps x to z

2587

E(x, θE )

z ∈ Rd

T

D

A

Figure 1: Adversarial Representation Learning: We consider the problem of learning an embedding function E(·, θE) that
maps a high-dimensional image to a low-dimensional representation z ∈ Rd while satisfying two competing goals: retain as
much image information necessary to accurately predict a target attribute Y = {y1, . . . , yn} while simultaneously minimizing
information leakage about a sensitive attribute S = {s1, . . . , sm} by an unknown adversary A(·, θA). The learning problem
is formulated as a minimax game between {E(·, θE), T (·, θT )} and a proxy adversary D(·, θD).

from which we can predict a target attribute Y, while also
minimizing information leakage about a known sensitive at-
tribute S i.e. class labels of attribute S.

3.1. Problem Setting

The Adversarial Representation Learning problem is for-
mulated as a game among three players, encoder E, a target
predictor T , and a discriminator D that serves as a proxy
for an unknown adversary A. After E is learned and ﬁxed,
we train and evaluate an adversary A with the aim of leak-
ing information of the sensitive attribute that we sought to
protect. Since the adversary A is unknown to encoder at
training, the encoder E is trained against the discriminator
D, which thereby acts as a proxy for the unknown A. An
illustration of this setting is shown in Fig. 1. The encoder
is modeled as a deterministic function, z = E(x; θE), the
target predictor models the conditional distribution p(t|x)
via qT (t|z; θT ) and the discriminator models the condi-
tional distribution p(s|x) via qD(s|z; θD), where p(t|x)
and p(s|x) are the ground truth labels for a given target and
sensitive labels t and s, respectively.

3.2. Background

In existing formulations of ARL, the goal of the encoder
is to maximize the likelihood of the target attribute, as mea-
sured by the target predictor T , while minimizing the likeli-
hood of the sensitive attribute, as measured by the discrimi-
nator D. This problem (henceforth referred to as ML-ARL)
was formally deﬁned by Xie et al. [18] as a three player
zero-sum minimax game:

min
θE ,θT

max
θD

J1(θE, θT ) − αJ2(θE, θD)

(1)

where α is a parameter that allows us to trade-off between
the two competing objectives for the encoder and,

J1(θE, θT ) = KL (p (t|x) kqT (t|E(x; θE); θT ))
J2(θE, θD) = KL (p (s|x) kqD (s|E(x; θE); θD))

where the KL(·k·) terms reduce to the log-likelihood if the
label distributions are ideal categorical distributions.

3.3. Maximum Entropy Adversarial Representa 

tion Learning

In the MaxEnt-ARL formulation the goal of the encoder
is to maximize the likelihood of the target attribute, as mea-
sured by the target predictor, while maximizing the uncer-
tainty in the sensitive attribute, as measured by the entropy
of the discriminator’s prediction. Formally, we deﬁne the
MaxEnt-ARL optimization problem as a three player non-
zero sum game:

min
θD

min
θE ,θT

V1(θE, θD)

V2(θE, θT ) + αV3(θE, θD)

(2)

where α allows us to trade-off between the two competing
objectives for the encoder and,

V1(θE, θD) = KL (p (s|x) kqD (s|E(x; θE); θD))
V2(θE, θT ) = KL (p (t|x) kqT (t|E(x; θE); θT ))
V3(θE, θD) = KL (qD (s|E(x; θE) ; θD)kU )

where U is the uniform distribution. The crucial difference
between the MaxEnt-ARL formulation and the ML-ARL
formulation is the fact that while the encoder and the dis-
criminator have competing objectives, in ML-ARL they di-
rectly compete against each other on the same metric (likeli-
hood of sensitive attribute), while in MaxEnt-ARL they are
optimizing competing metrics that are related but not the
exact same metric.

Optimizing the embedding function to maximize the en-
tropy of the discriminator instead of minimizing its likeli-
hood has one crucial practical advantage. Entropy maxi-
mization inherently does not need class labels for training.
This is advantageous in settings where it is either, (i) Un-
desirable for the embedding function to have access to the

2588

sensitive label, potentially for privacy reasons., or (ii) Sen-
sitive labels for the data points are unknown. For instance
consider, a semi-supervised scenario where only the desired
label is known while the sensitive label is unknown. The
embedding function can learn from such data by obtaining
gradients from the entropy of the discriminator.

age and gender), the two terms in the encoder optimization
can both reach their optima simultaneously. Furthermore,
the problem reduces to a non-zero sum two player game
between the encoder and the discriminator in the MaxEnt-
ARL case and to a zero-sum two player game between the
same players in the case of ML-ARL.

4. Theoretical Analysis

In this section we analyze the properties of the MaxEnt-
ARL formulation and compare it to the ML-ARL formula-
tion, both in terms of equilibrium as well as convergence
dynamics under simultaneous gradient descent.

4.1. Equilibrium

Theorem 1. Given a ﬁxed encoder E, the optimal discrim-
inator is qD(s|E(x; θE); θ∗
D) = p(s|E(x; θE)) and the op-
timal predictor is qT (t|E(x; θE); θ∗

T ) = p(t|E(x; θE)).

Proof. The proof uses the fact that, given a ﬁxed encoder
E, the objective is convex w.r.t. each distribution. Thus we
can obtain the stationary point for qD(s|E(x; θE); θD) and
qT (s|E(x; θE); θT ) as a function of p(s|E(x; θE)) and
p(t|E(x; θE)), respectively. The detailed proof is included
in the supplementary material.

Therefore,

distributions
qD(s|E(x; θE); θ∗
T ) are functions
of the encoder parameters θE. The objective for optimizing
the encoder now reduces to:

both
D) and qT (t|E(x; θE); θ∗

optimal

the

min
θE

Ex,t [− log qT (t|E(x; θE); θ∗

T )] + log m

+ αEx" m
Xi=1

qD(si|E(x; θE); θ∗

D) log qD(si|E(x; θE); θ∗

D)#

where the ﬁrst term is minimizing the uncertainty (negative
log-likelihood) of the true target attribute label and the sec-
ond term is maximizing unpredictability (as measured by
entropy) across all the classes in the discriminator distribu-
tion, thereby, preventing leakage of any information about
the sensitive attribute label. In contrast the corresponding
objective of the ML-ARL problem is [18],

min
θE

Ex,t [− log qT (t|E(x; θE); θ∗

T )]

+ αEx,s [log qD(s|E(x; θE); θ∗

D)]

where the ﬁrst term is minimizing the uncertainty (negative
log-likelihood) of the true target attribute label, while the
second term is maximizing uncertainty (log-likelihood) of
only the true sensitive attribute label. However, by doing
so, the encoder inadvertently becomes more certain about
the other labels, and can still be informative to an adversary.

Equilibrium when s ⊥⊥ t: When the target and sensitive
attributes are independent with respect to each other (e.g.,

Corollary 1.1. When s ⊥⊥ t, let the optimum discrimina-
D)
tor and predictor for an encoder E be qD(s|E(x; θE); θ∗
and qT (t|E(x; θE); θ∗
T ) respectively. The optimal encoder
E(·) in the MaxEnt-ARL formulation induces a uniform
distribution in the discriminator qD(s|E(x; θ∗
D) over
the classes of the sensitive attribute.

E); θ∗

Proof. The proof uses the fact that, given a ﬁxed opti-
mal discriminator D, qT (t|E(x; θE); θ∗
T ) is independent of
qD(s|E(x; θE); θ∗
D) when s ⊥⊥ t. The detailed proof is
included in the supplementary material.

Equilibrium when s 6⊥⊥ t: When the target and sensitive
attributes are related to each other (e.g., beard and gender),
the two terms in the encoder optimization cannot reach their
optima simultaneously. In both the formulations, ML-ARL
and MaxEnt-ARL, the relative optimality of the two objec-
tives depends on the trade-off factor α.

4.2. Convergence Dynamics

We analyze the standard algorithm (simultaneous
stochastic gradient descent) for ﬁnding the equilibrium so-
lution of such adversarial games. That is, we take simulta-
neous gradient steps in θE, θD and θT , which can be ex-
pressed as differential equations of the form:

˙θD = fD(θ) = ∇θD V1(θE, θD)
˙θT = fT (θ) = ∇θT V2(θE, θT )
˙θE = fE(θ) = ∇θE V2(θE, θT ) + αV3(θE, θT )

(3)

where the gradients f (θ) = (fD(θ), fT (θ), fE(θ)) deﬁne
a vector ﬁeld over θ = (θD, θT , θE).

The qualitative behavior of the aforementioned non-
linear system near any equilibrium point can be determined
via linearization with respect to that point [9]. Restrict-
ing our attention to a sufﬁciently small neighborhood of the
equilibrium point, the non-linear state equations in (3) can
be approximated by a linear state equation:

˙θ = J θ

(4)

where, J =


∂fD(θ)

∂fD(θ)

∂fD(θ)

∂θD

∂θT

∂θE

∂fT (θ)

∂fT (θ)

∂fT (θ)

∂θD

∂θT

∂θE

∂fE (θ)

∂fE (θ)

∂fE (θ)

∂θD

∂θT

∂θE

cobian of the vector ﬁeld evaluated at the chosen equilib-
rium point θ∗ = (θ∗
E). For small neighborhoods

D, θ∗

T , θ∗




(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)θ=θ∗

is the Ja-

2589

∂x(cid:12)(cid:12)(cid:12)x=0

x

w1 × (·)

z

w2 × (·)

qD(s|z)

w3 × (·)

qT (t|z)

Figure 2: Three Player Game: Linear Example

around an equilibrium, the trajectories of the non-linear sys-
tem in (3) is expected to be “close” to the trajectories of the
linear approximate system in (4).

Theorem 2 (Linearization). Let x = 0 be an equilibrium
point for the non-linear system, ˙x = f (x), where f : D →
Rn is continuously differentiable and D is a neighborhood
of the origin. Let, J = ∂f

. Then,

• The origin is asymptotically stable if Re(λi) < 0 for

all eigenvalues of J .

• The origin is unstable if Re(λi) ≥ 0 for one or more

of the eigenvalues of J .

Proof. See Theorem 4.7 of [9].

5. Numerical Experiments

In this section we will evaluate the efﬁcacy of the
proposed Maximum Entropy Adversarial Representation
Learning model and compare it with other Adversarial Rep-
resentation Learning baselines.

5.1. Three Player Game: Linear Case

As an illustrative example we analyze the convergence
of both ML-ARL and MaxEnt-ARL under the same setting.
The encoder, discriminator and predictor are linear mod-
els with multiplicative weights w1, w2 and w3, respectively.
We limit our model to this three variable setting for ease of
analysis and visualization. Both predictor and the discrimi-
nator are optimizing cross-entropy loss on binary {0, 1} la-
bels. To observe the game between the three players we
provide same data sample x = 1 yet with different target
and sensitive labels i.e., 4 samples with {00, 01, 10, 11} for
target and sensitive labels. Loss is calculated as the average
over all samples and corresponding vector ﬁeld values are
also computed. The stationary point of this game, for both
ML-ARL and MaxEnt-ARL, is at (w1 = 0, w2 = 0, w3 =
0) and the gradient of the loss functions are zero at this
point. We consider a small (30 × 30 × 30 grid) neighbor-
hood around the stationary point in the range [−0.01, 0.01]
for weights w1, w2, w3 and visualize trajectories by follow-
ing the vector ﬁeld of the game.

Figure 3 shows streamline plots of the vector ﬁeld around
(0, 0, 0) for a point starting at the green location.
In the
ML-ARL case, we observe that when the predictor is ﬁxed

at w3 = 0, the trajectory for the encoder and the discrim-
inator does not converge and rotates around the stationary
point. In contrast, for the MaxEnt-ARL method converges
to the stationary point. When w1 = 0, the streamlines for
both ML-ARL and MaxEnt-ARL converge to (0, 0). For
an alternate formulation, where the discriminator is of the
form D = z2 + b2, we found convergent behavior for both
ML-ARL and MaxEnt-ARL.

5.2. Mixture of Gaussians

In this experiment we seek to visualize and compare
the representation learned by MaxEnt-ARL and ML-ARL.
We consider a mixture of 4 Gaussians with means µ at
((1, 1), (2, 1.5), (1.5, 2.5), (2.5, 3)) and variance σ = 0.3
in each case. Our model is a neural network with 2 hidden
layer with 2 neuron in each layer. Each data sample has
two attributes, color and shape. We setup the ARL problem
with shape as the target attribute and color as the sensitive
attribute. The encoder is a neural network with one hidden
layer, mapping the 2-D shape into another 2-D embedding,
and both the predictor and discriminator are logistic regres-
sion classiﬁers. The trade-off parameter is set to α = 0.1
and the parameters are learned using the Adam optimizer
with learning rate of 10−4. After learning the embedding
function, we freeze its parameters and learn a logistic clas-
siﬁer as the adversary. The test accuracy of the adversary
is 63% for MaxEnt-ARL and 70% for ML-ARL. Therefore,
by optimizing the entropy instead of the likelihood MaxEnt-
ARL is able to leak less information about the sensitive la-
bel compared to ML-ARL. Figure 4 shows the data and the
learned embeddings.

5.3. Fair Classiﬁcation

We consider the setting of fair classiﬁcation on two
datasets from the UCI ML-repository [2], (a) The German
credit dataset with 20 attributes for 1000 instances with tar-
get label being classifying bank account holders with good
or bad credit and gender being the sensitive attribute, (b)
The Adult income dataset has 45,222 instances with 14
attributes. The target is a binary label of annual income
more or less than $50, 000, while gender is the sensitive at-
tribute. For both ML-ARL and MaxEnt-ARL, the encoder
is a NN with one hidden layer, discriminator is a NN with
2 hidden layers, and target predictor is linear logistic re-
gression. Following ML-ARL [18] we choose 64 units in
each hidden layer. We compare both ARL formulations
with state-of-the-art baselines LFR (Learning Fair Repre-
sentations [19]), VAE (Variational Auto-encoder [11]) and
VFAE (Variational Fair Auto-encoder [14]). For MaxEnt-
ARL, after learning the embedding, we again learn an ad-
versary to extract the sensitive attribute.

Figure 5 show the results for the German and Adult
datasets, for both the target and sensitive attributes. For Ger-

2590

0.01

0.005

1

w

0

-0.005

-0.01

-0.015

0.01

0.005

3

w

0

-0.005

-0.01

0.01

0.005

3

w

0

-0.005

-0.01

0.01

0.005

1

w

0

-0.005

-0.01

-0.01

-0.005

0

w

2

0.005

0.01

-0.01

-0.005

0

w

2

0.005

0.01

-0.01

-0.005

0

w

1

0.005

0.01

-0.01

-0.005

0.005

0.01

0

w

2

(a) ML-ARL: Trajectory

(b) ML-ARL: w1 = 0

(c) ML-ARL: w2 = 0

(d) ML-ARL: w3 = 0

0.01

0.005

1

w

0

-0.005

-0.01

-0.015

0.01

0.005

3

w

0

-0.005

-0.01

0.01

0.005

3

w

0

-0.005

-0.01

0.01

0.005

1

w

0

-0.005

-0.01

-0.01

-0.005

0

w

2

0.005

0.01

-0.01

-0.005

0

w

2

0.005

0.01

-0.01

-0.005

0

w

1

0.005

0.01

-0.01

-0.005

0.005

0.01

0

w

2

(e) MaxEnt-ARL: Trajectory

(f) MaxEnt-ARL: w1 = 0

(g) MaxEnt-ARL: w2 = 0

(h) MaxEnt-ARL: w3 = 0

Figure 3: Streamline plots for linear three-player game near stationary point (0,0,0). Trajectories start at the green point
and converge to the red point by following the vector ﬁeld. (a) and (e) shows the top-view of the 3-D trajectories. When
w1 = 0 the trajectories suggest that both ML-ARL and MaxEnt-ARL converge to the local optima, (w1 = w2 = w3 = 0).
When w2 = 0, the MaxEnt-ARL trajectories converge to the local optima. The ML-ARL trajectories converge to the optima
only when they start far away from 0 along w3. The trajectories starting closer to w3 = 0, however, do not converge to
w1 = 0. When w3 = 0, the game reduces to a two-player adversarial game (akin to a GAN[7]), where ML-ARL shows
non-convergent cyclic behavior while MaxEnt-ARL converges.

(a) Input

(b) ML-ARL

(c) MaxEnt-ARL

(a) input space, (b) learned
Figure 4: Samples from four Gaussians with target (shape) and sensitive attributes (color).
embedding z for ML-ARL, (c) learned embedding for MaxEnt-ARL. We can now notice that ML-ARL has some isolated
samples with different colors (sensitive label), while MaxEnt-ARL results in slightly better mixing of the colors.

man data, MaxEnt-ARL’s prediction accuracy is 86.33%
which is close to that of the original data (87%). Other
models such as, LFR, VAE, VFAE and ML-ARL have tar-
get accuracies of 72.3%, 72.5%, 72.7% and 74.4% respec-
tively. On the other hand, for the sensitive attribute, the
MaxEnt-ARL adversary’s accuracy is 72.7%. Other models
reveal much more information with adversary accuracies of
80%, 80.5%, 79.5%, 79.7% and 80.2% for the original data,
LFR, VAE, VFAE and ML-ARL, respectively. For the adult
income dataset, the target accuracy for original data, ML-
ARL and MaxEnt-ARL is 85%, 84.4% and 84.6%, respec-

tively, while the adversary’s performance on the sensitive
attribute is 67.7% and 65.5% for ML-ARL and MaxEnt-
ARL, respectively.

5.4. Illumination Invariant Face Classiﬁcation

We consider the task of face classiﬁcation under differ-
ent illumination conditions. We used the Extended Yale B
dataset [6] comprising of face images of 38 people under
different lighting conditions (directions of the light source)
: upper right, lower right, lower left, upper left, or the front.
Our target task is to identify one of the 38 people in the

2591

0.9

0.85

0.8

0.75

0.7

0.65

0.6

y
c
a
r
u
c
c
A

 
t

e
g
r
a
T

0.88

0.86

0.84

0.82

0.8

0.78

0.76

y
c
a
r
u
c
c
A

 
t

e
g
r
a
T

German

German

0.85

0.8

0.75

0.7

0.65

0.6

y
c
a
r
u
c
c
A
e
v
i
t
i
s
n
e
S

 

x

LFR

VAE

VFAE ML MaxEnt

x

LFR

VAE

VFAE ML MaxEnt

(a) Target Attribute: Credit

(b) Sensitive Attribute: Gender

Adult

Adult

0.9

0.8

0.7

0.6

0.5

0.4

y
c
a
r
u
c
c
A
e
v
i
t
i
s
n
e
S

 

x

LFR

VAE

VFAE ML MaxEnt

x

LFR

VAE

VFAE ML MaxEnt

(c) Target Attribute: Income

(d) Sensitive Attribute: Gender

Figure 5: Representation Learning for Fair Classiﬁcation

Table 1: Illumination Invariant Face Classiﬁcation (%)

Method

s (lighting)

t (identity)

LR

NN + MMD [13]

VFAE [14]

ML-ARL [18]
Maxent-ARL

96
-
57
57
40

78
82
85
89
89

dataset with the direction of the light source being the sen-
sitive attribute. We follow the experimental setup of Xie
et al. [18] and Louizos et al. [14] using the same train/test
split strategy and no validation set. 38 × 5 = 190 samples
are used for training and the rest of the 1,096 data samples
are used for testing. Following the model setup in [18],
the encoder is a one layer neural network, target predictor
is a linear layer and the discriminator has two hidden layers
where each hidden layer consists of 100 units. The param-
eters are trained using Adam [10] with a learning rate of
10−4 and weight decay of 5 × 10−2.

We report baseline [13, 14, 18] results for this experi-
ment in Table 1 and compare with the proposed MaxEnt-
ARL framework. Louizos et al. [14] regularize their neural
networks via Maximum Mean Discrepancy to remove light-
ing conditions from data whereas Xie et al. [18] use the ML-
ARL framework. The MaxEnt-ARL achieves an accuracy
of 89% for identity classiﬁcation (same as ML-ARL) while
outperforming MMD (82%) and VFAE (85%). In terms of
protecting sensitive attribute i..e, illumination direction, ad-
versary’s classiﬁcation accuracy reduces from 57% for ML-
ARL to 40.2% for MaxEnt-ARL. It is clear from the table
that, MaxEnt-ARL is able to remove more information from
the image compared to the baselines.

5.5. CIFAR 10

We create a new binary target classiﬁcation problem on
the CIFAR-10 dataset[12]. The CIFAR-10 dataset con-
sists of 10 basic classes, namely, (‘airplane’, ‘automobile’,
‘bird’, ‘cat’, ‘deer’, ‘dog’, ‘frog’, ‘horse’, ‘ship’, ‘truck’).
We divide the classes into two groups:
living and non-
living objects. We expect the living objects to have visu-
ally discriminative properties like smooth shapes compared
to regular geometric shapes of non-living objects. The tar-
get task is binary classiﬁcation of an image into these two
supersets with the underlying class label being the sensi-
tive attribute. For example, the task of classifying an object
as living (‘dog’ or ‘cat’) or non-living (‘ship’ or ‘truck’)
should not reveal any information about its underlying iden-
tity (‘dog’, ‘cat’, ‘truck’ or ‘ship’). But as we will see, this is
a challenging problem and the image representation might
not be able to prevent leakage of the sensitive label.

Implementation Details: We adopt the ResNet-18 [8] ar-
chitecture as the encoder, and the discriminator and adver-
sary are 2-layered neural networks with 256 and 64 neu-
rons, respectively. The encoder and the target predictor
are trained using SGD with momentum of 0.9, learning
rate of 10−3 and weight-decay of 10−3 for the prediction
task. Both the discriminator and the adversary, however,
are trained using Adam with a learning rate of 10−4 and
weight-decay of 10−3 for 300 epochs.

Experimental Results: We evaluate performance of the
predictor and adversary as we vary the trade-off parameter
α. We ﬁrst note that, ideally, the desired predictor accuracy
is 100%, adversary accuracy is 10% (random chance for 10
classes) and adversary entropy is 2.3 nats (uniform distri-
bution for 10 classes). Figure 6 (a)-(b) shows the trade-off
achieved between predictor and adversary along with the
corresponding normalized hyper-volume (HV). For the pre-
dictor and adversary accuracy, the HV corresponds to area
above the trade-off curve, while for the predictor accuracy
and adversary entropy the HV is the area under the curve.

We obtain these results by repeating all the experiments
ﬁve times and retaining the non-dominated solutions i.e.,
a solution that is no worse than any other solution in both
the objectives. From these results, we observe that without
privacy considerations, the representation achieves the best
target accuracy but also leaks signiﬁcant information.
In
contrast adversarial learning of the representation achieves
a better trade-off between utility and information leakage.
Among ARL approaches, we observe that MaxEnt-ARL
is able to obtain a better trade-off compared to ML-ARL.
Furthermore, among all possible solutions, MaxEnt-ARL
achieves the solution closest to the ideal desired point.

2592

(a)

(b)

(c)

(d)

Figure 6: Adversary Representation Learning on CIFAR Datasets: Trade-off fronts for two different ARL approaches,
ML-ARL and MaxEnt-ARL, in comparison to standard no privacy representation learning. Plots (a)-(b) and (c)-(d) corre-
spond to CIFAR-10 and CIFAR-100 experiments, respectively. In (a) and (c) the ideal desired solution is the bottom right
corner, while in (b) and (d) it is the top right corner. HV in the legend corresponds to normalized hyper-volume. Exact
numerical values are available in the supplementary material.

Table 2: Main classes and Superclasses in CIFAR-100

Superclass

aquatic mammals

ﬁsh

ﬂowers

Main Class

beaver, dolphin, otter, seal, whale

aquarium ﬁsh, ﬂatﬁsh, ray, shark, trout

orchids, poppies, roses, sunﬂowers, tulips

food containers

bottles, bowls, cans, cups, plates

fruit and vegetables

apples, mushrooms, oranges, pears, sweet peppers

household electrical devices

clock, computer keyboard, lamp, telephone, television

household furniture

insects

large carnivores

bed, chair, couch, table, wardrobe

bee, beetle, butterﬂy, caterpillar, cockroach

bear, leopard, lion, tiger, wolf

large man-made outdoor things

bridge, castle, house, road, skyscraper

large natural outdoor scenes

cloud, forest, mountain, plain, sea

large omnivores and herbivores

camel, cattle, chimpanzee, elephant, kangaroo

medium-sized mammals
non-insect invertebrates

people
reptiles

small mammals

trees

vehicles 1
vehicles 2

fox, porcupine, possum, raccoon, skunk

crab, lobster, snail, spider, worm

baby, boy, girl, man, woman

crocodile, dinosaur, lizard, snake, turtle
hamster, mouse, rabbit, shrew, squirrel

maple, oak, palm, pine, willow

bicycle, bus, motorcycle, pickup truck, train
lawn-mower, rocket, streetcar, tank, tractor

5.6. CIFAR 100

We formulate a new privacy problem on the CIFAR-100
dataset. The dataset consists of 100 classes and are grouped
into 20 superclasses (Table 2). Each image has a “ﬁne” (the
class to which it belongs) and a “coarse” (the superclass to
which it belongs) label. We treat the “coarse” (superclass)
and “ﬁne” (class) labels as the target and sensitive attribute,
respectively. So the encoder is tasked to learn features of the
super-classes while not revealing the information of the un-
derlying classes. We adopt ResNet-18 as the encoder while
the predictor, discriminator and adversary are all 2-layered
fully connected networks. The adversarial game is trained
for 150 epochs, followed by training the adversary for 100
epochs while the parameters of the encoder are frozen.

Just as in the case of CIFAR-10, we report the trade-
off achieved between predictor and adversary along with
the corresponding normalized hyper-volume (HV) in Fig.
6 (c)-(d). Here we note that, ideally, we desire predictor ac-
curacy of 100%, adversary accuracy of 1% (random chance

for 100 classes) and adversary entropy of ln 100 = 4.61
nats (uniform distribution for 100 classes). We make the
following observations from the results. Firstly, the per-
formance of the different approaches suggest that this task
is signiﬁcantly harder than the CIFAR-10 task, with much
lower achievable target accuracy and much higher adver-
sary accuracy. Secondly, representation learning without
privacy considerations leaks signiﬁcant amount of informa-
tion. Thirdly, MaxEnt-ARL is able to signiﬁcantly outper-
form ML-ARL on this task, achieving trade-off solutions
that are far better, both in terms of adversary accuracy and
entropy of adversary.

6. Conclusion

This paper introduced a new formulation of Adversarial
Representation Learning called Maximum Entropy Adver-
sarial Representation Learning (MaxEnt-ARL) for mitigat-
ing information leakage from learned representations un-
der an adversarial setting.
In this model, the encoder is
optimized to maximize the entropy of the adversary’s dis-
tribution of a sensitive attribute as opposed to minimiz-
ing the likelihood (ML-ARL) of the true sensitive label.
We analyzed the equilibrium and convergence properties of
the ML-ARL and MaxEnt-ARL. Numerical experiments on
multiple datasets suggests that MaxEnt-ARL is a promising
framework for preventing information leakage from image
representations, outperforming the baseline minimum like-
lihood objective.

References

[1] A. Beutel, J. Chen, Z. Zhao, and E. H. Chi. Data decisions
and theoretical implications when adversarially learning fair
representations. arXiv preprint arXiv:1707.00075, 2017. 2

[2] D. Dua and C. Graff. UCI machine learning repository, 2017.

5

2593

[3] H. Edwards and A. J. Storkey. Censoring representations
with an adversary. In International Conference on Learning
Representations (ICLR), 2016. 1, 2

[4] Y. Ganin and V. Lempitsky. Unsupervised domain adap-
tation by backpropagation. In International Conference on
Machine Learning (ICML), 2015. 2

[5] Y. Ganin, E. Ustinova, H. Ajakan, P. Germain, H. Larochelle,
F. Laviolette, M. Marchand, and V. Lempitsky. Domain-
adversarial training of neural networks. The Journal of Ma-
chine Learning Research, 17(1):2096–2030, 2016. 2

[6] A. S. Georghiades, P. N. Belhumeur, and D. J. Kriegman.
From few to many: Illumination cone models for face recog-
nition under variable lighting and pose. IEEE Transactions
on Pattern Analysis & Machine Intelligence, (6):643–660,
2001. 6

[7] I. Goodfellow,

J. Pouget-Abadie, M. Mirza, B. Xu,
D. Warde-Farley, S. Ozair, A. Courville, and Y. Bengio. Gen-
erative adversarial nets. In Advances in Neural Information
Processing Systems (NeurIPS), pages 2672–2680, 2014. 6

[8] K. He, X. Zhang, S. Ren, and J. Sun. Identity mappings in
deep residual networks. In European Conference on Com-
puter Vision (ECCV), pages 630–645. Springer, 2016. 7

[9] H. K. Khalil. Nonlinear systems. Printice-Hall Inc, 1996. 2,

4, 5

[10] D. P. Kingma and J. Ba. Adam: A method for stochastic

optimization. arXiv preprint arXiv:1412.6980, 2014. 7

[11] D. P. Kingma and M. Welling. Auto-encoding variational

bayes. arXiv preprint arXiv:1312.6114, 2013. 5

[12] A. Krizhevsky and G. Hinton. Learning multiple layers of
features from tiny images. Technical report, Citeseer, 2009.
7

[13] Y. Li, K. Swersky, and R. Zemel. Learning unbiased features.

arXiv preprint arXiv:1412.5244, 2014. 7

[14] C. Louizos, K. Swersky, Y. Li, M. Welling, and R. Zemel.
In International Confer-

The variational fair autoencoder.
ence on Learning Representations (ICLR), 2016. 1, 2, 5, 7

[15] L. Mescheder, S. Nowozin, and A. Geiger. The numerics of
gans. In Advances in Neural Information Processing Systems
(NeurIPS), 2017. 2

[16] V. Nagarajan and J. Z. Kolter. Gradient descent gan opti-
mization is locally stable. In Advances in Neural Informa-
tion Processing Systems (NeurIPS), pages 5585–5595, 2017.
2

[17] E. Tzeng, J. Hoffman, K. Saenko, and T. Darrell. Adversarial
discriminative domain adaptation.
In IEEE Conference on
Computer Vision and Pattern Recognition (CVPR), 2017. 2
[18] Q. Xie, Z. Dai, Y. Du, E. Hovy, and G. Neubig. Controllable
invariance through adversarial feature learning. In Advances
in Neural Information Processing Systems (NeurIPS), 2017.
1, 2, 3, 4, 5, 7

[19] R. Zemel, Y. Wu, K. Swersky, T. Pitassi, and C. Dwork.
In International Conference

Learning fair representations.
on Machine Learning (ICML), 2013. 2, 5

[20] B. H. Zhang, B. Lemoine, and M. Mitchell. Mitigating un-
wanted biases with adversarial learning. In AAAI/ACM Con-
ference on AI, Ethics, and Society, 2018. 2

2594

