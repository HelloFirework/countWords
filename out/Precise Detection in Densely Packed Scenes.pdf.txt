Precise Detection in Densely Packed Scenes

Eran Goldman1,3⋆ Roei Herzig2⋆ Aviv Eisenschtat3⋆

Jacob Goldberger1 Tal Hassner4†

1Bar-Ilan University, 2Tel Aviv University, 3Trax Retail, 4The Open University of Israel

Abstract

Man-made scenes can be densely packed, containing nu-
merous objects, often identical, positioned in close proxim-
ity. We show that precise object detection in such scenes re-
mains a challenging frontier even for state-of-the-art object
detectors. We propose a novel, deep-learning based method
for precise object detection, designed for such challenging
settings. Our contributions include: (1) A layer for esti-
mating the Jaccard index as a detection quality score; (2)
a novel EM merging unit, which uses our quality scores to
resolve detection overlap ambiguities; ﬁnally, (3) an exten-
sive, annotated data set, SKU-110K, representing packed
retail environments, released for training and testing un-
der such extreme settings. Detection tests on SKU-110K
and counting tests on the CARPK and PUCPR+ show our
method to outperform existing state-of-the-art with substan-
tial margins. The code and data will be made available on
www.github.com/eg4000/SKU110K_CVPR19.

1. Introduction

Recent deep learning–based detectors can quickly and
reliably detect objects in many real world scenes [15, 16,
19, 27, 30, 36, 37, 38]. Despite this remarkable progress, the
common use case of detection in crowded images remains
challenging even for leading object detectors.

We focus on detection in such densely packed scenes,
where images contain many objects, often looking simi-
lar or even identical, positioned in close proximity. These
scenes are typically man-made, with examples including re-
tail shelf displays, trafﬁc, and urban landscape images. De-
spite the abundance of such environments, they are under-
represented in existing object detection benchmarks. It is
therefore unsurprising that state-of-the-art object detectors
are challenged by such images.

To understand what makes these detection tasks difﬁcult,
consider two identical objects placed in immediate proxim-
ity, as is often the case for items on store shelves (Fig. 1).

⋆Equal Contribution.
†Work done while at the University of Southern California.

Figure 1. Detection in packed domains. A typical image in our
SKU-110K, showing densely packed objects. (Top) (a) Detection
results for the state-of-the-art RetinaNet [27], showing incorrect
and overlapping detections, especially for the dark objects at the
bottom which are harder to separate. (b) Our results showing far
fewer misdetections and better ﬁtting bounding boxes. (Bottom)
Zoomed-in views for (c) RetinaNet [27] and (d) our method.

The challenge is to determine where one object ends and
the other begins; minimizing overlaps between their adja-
cent bounding boxes.
In fact, as we show in Fig. 1(a,c),
the state-of-the-art RetinaNet detector [27], often returns
bounding boxes which partially overlap multiple objects or
detections of adjacent object regions as separate objects.

We describe a method designed to accurately detect ob-
jects, even in such densely packed scenes (Fig. 1(b,d)). Our
method includes several innovations. We propose learn-
ing the Jaccard index with a soft Intersection over Union
(Soft-IoU) network layer. This measure provides valuable
information on the quality of detection boxes. We explain
how detections can be represented as a Mixture of Gaus-
sians (MoG), reﬂecting their locations and their Soft-IoU

5227

Name
UCSD (2008) [8]
PACAL VOC (2012) [13]
ILSVRC Detection (2014) [12]
COCO (2015) [28]
Penguins (2016) [2]
TRANCOS (2016) [34]
WIDER FACE (2016) [49]
CityPersons (2017) [51]
PUCPR+ (2017) [22]
CARPK (2018) [22]
Open Images V4 (2018) [25]
Our SKU-110K

#Img.
2000
22,531
516,840
328,000
82,000
1,244
32,203
5000
125
1448
1,910,098
11,762

#Obj./img.
24.9
2.71
1.12
7.7
25
37.61
12
6
135
61
8.4
147.4

#Cls.
1
20
200
91
1
1
1
1
1
1
600
110,712

#Cls./img.
1
2
2
3.5
1
1
1
1
1
1
2.3
86

Dense.
✓

✗

✗

✗

✓

✓

✗

✗

✓

✓

✗

✓

Idnt.

✗

✗

✗

✗

✗

✓

✗

✗

✓

✓

✓

✓

BB
✗

✓

✓

✓

✗

✗

✓

✓

✓

✓

✓

✓

Table 1. Key properties for related benchmarks. #Img.: Number of images. #Obj./img.: Average items per image. #Cls.: Number
of object classes (more implies a harder detection problem due to greater appearance variations). #Cls./img.: Average classes per image.
Dense: Are objects typically densely packed together, raising potential overlapping detection problems? Idnt: Do images contain multiple
identical objects or hard to separate object sub-regions? BB: Bounding box labels available for measuring detection accuracy?

scores. An Expectation-Maximization (EM) based method
is then used to cluster these Gaussians into groups, resolv-
ing detection overlap conﬂicts.

To summarize, our novel contributions are as follows:

• Soft-IoU layer, added to an object detector to estimate
the Jaccard index between the detected box and the
(unknown) ground truth box (Sec. 3.2).

• EM-Merger unit, which converts detections and Soft-
IoU scores into a MoG, and resolves overlapping de-
tections in packed scenes (Sec. 3.3).

• A new data set and benchmark, the store keeping
unit, 110k categories (SKU-110K), for item detection
in store shelf images from around the world (Sec. 4).

We test our detector on SKU-110K. Detection results show
our method to outperform state-of-the-art detectors. We fur-
ther test our method on the related but different task of ob-
ject counting, on SKU-110K and the recent CARPK and
PUCPR+ car counting benchmarks [22]. Remarkably, al-
though our method was not designed for counting, it offers
a considerable improvement over state-of-the-art methods.

2. Related work

Object detection. Work on this problem is extensive
and we refer to a recent survey for a comprehensive
overview [29]. Brieﬂy, early detectors employed sliding
window–based approaches, applying classiﬁers to window
contents at each spatial location [10, 14, 45]. Later methods
narrow this search space by determining region proposals
before applying sophisticated classiﬁers [1, 7, 35, 44, 52].

Deep learning–based methods now dominate detection
results. To speed detection, proposal-based detectors such
as R-CNN [15] and Fast R-CNN [16] were developed, fol-
lowed by Faster R-CNN [38] which introduced a region

proposal network (RPN), then accelerated even more by R-
FCN [9]. Mask-RCNN [19] later added segmentation out-
put and better detection pooling [38]. We build on these
methods, claiming no advantage in standard object detec-
tion tasks. Unlike us, however, these two-stage methods
were not designed for crowded scenes where small objects
appear in dense formations.

Recently, some offered proposal-free detectors, includ-
ing YOLO [36], SSD [30], and YOLO9000 [37]. To handle
scale variance, feature pyramid network (FPN) [26] added
up-scaling layers. RetinaNet [27] utilized the same FPN
model, introducing a Focal Loss to dynamically weigh hard
and easy samples for better handling of class imbalances
that naturally occur in detection datasets. We extend this
approach, introducing a new detection overlap measure, al-
lowing for precise detection of tightly packed objects.

These methods use hard-labeled log-likelihood detec-
tions to produce conﬁdences for each candidate image re-
gion. We additionally predict a Soft-IoU conﬁdence score
which represents detection bounding box accuracy.

Merging duplicate detections. Standard non-maximum
suppression (NMS) remains a de-facto object detection du-
plicate merging technique, from Viola & Jones [45] to re-
cent deep detectors [27, 37, 38]. NMS is a hand-crafted al-
gorithm, applied at test time as post-processing, to greedily
select high scoring detections and remove their overlapping,
low conﬁdence neighbors.

Existing NMS alternatives include mean-shift [10, 46],
agglomerative [5], and afﬁnity propagation clustering [31],
or heuristic variants [4, 40, 23]. GossipNet [21] proposed
to perform duplicate-removal using a learnable layer in the
detection network. Finally, others bin IoU values into ﬁve
categories [43]. We instead take a probabilistic interpreta-
tion of IoU prediction and a very different general approach.
Few of these methods showed improvement over sim-
ple, greedy NMS, with some also being computationally
demanding [21]. In densely packed scenes, resolving detec-

5228

Figure 2. System diagram. (a) Input image. (b) A base network, with bounding box (BB) and objectness (Obj.) heads (Sec. 3.1), along
with our novel Soft-IoU layer (Sec. 3.2). (c) Our EM-Merger converts Soft-IoU to Gaussian heat-map representing (d) objects captured by
multiple, overlapping bounding boxes. (e) It then analyzes these box clusters, producing a single detection per object (e) (Sec. 3.3).

tion ambiguities is exacerbated due to the many overlapping
detections. We propose an unsupervised method, designed
for clustering duplicate detection in cluttered regions.

Crowded scene benchmarks. Many benchmarks were de-
signed for testing object detection or counting methods and
we survey a few in Table 1. Importantly, we are unaware of
detection benchmarks intended for densely packed scenes,
such as those of interest here.

Popular object detection sets include ILSVRC [12],
PASCAL VOC [13] detection challenges, MS COCO [28],
and the very recent Open Images v4 [25]. None of these
provides scenes with packed items. A number of recent
benchmarks emphasize crowded scenes, but are designed
for counting, rather than detection [2, 8, 34].

As evident from Table 1, our new SKU-110K dataset, de-
scribed in Sec. 4, provides one to three orders of magnitude
more items per image than nearly all these benchmarks (the
only exception is the PUCPR+ [22] which offers two orders
of magnitude fewer images, and a single object class to our
more than 110k classes). Most importantly, our enormous,
per image, object numbers imply that all our images contain
very crowded scenes, which raises the detection challenges
described in Sec. 1. Moreover, identical or near identical
items in SKU-110K are often positioned closely together,
making detection overlaps a challenge. Finally, the large
number of classes in SKU-110K implies appearance varia-
tions which add to the difﬁculty of this benchmark, even in
challenges of object/non-object detection.

3. Deep IoU detection network

Our approach is illustrated in Fig. 2. We build on a
standard detection network design, described in Sec. 3.1.
We extend this design in two ways. First, we deﬁne a
novel Soft-IoU layer which estimates the overlap between
predicted bounding boxes and the (unknown) ground truth
(Sec. 3.2). These Soft-IoU scores are then processed by
a proposed EM-Merger unit, described in Sec. 3.3, which
resolves ambiguities between overlapping bounding boxes,
returning a single detection per object.

3.1. Base detection network

Our base detector is similar to existing methods [26,
27, 30, 38]. We ﬁrst detect objects by building a FPN
network [26] with three upscaling-layers, using ResNet-
50 [20] as a backbone. The proposed model provides three
fully-convolutional output heads for each RPN [38]: Two
heads are standard and used also by previous work [27, 37]
(our novel third head is described in Sec. 3.2).

The ﬁrst is a detection head which produces a bound-
ing box regression output for each object, represented as
4-tuples: (x, y, h, w) for the 2D coordinates of a bound-
ing box center, height and width. The second, classiﬁca-
tion head provides an objectness score (conﬁdence) label,
c ∈ [0, 1] (assuming an object/no-object detection task with
one object class). In practice, we ﬁlter detections for which
c ≤ 0.1, to avoid creating a bias towards noisy detections
when training our Soft-IoU layer, described next.

3.2. Soft IoU layer

In non-dense scenes, greedy NMS applied to objectness
scores, c, can resolve overlapping detections. In dense im-
ages, however, multiple overlapping bounding boxes often
reﬂect multiple, tightly packed objects, many of which re-
ceive high objectness scores. As we later show (Sec. 5.2), in
such cases, NMS does not adequately discriminate between
overlapping detections or suppress partial detections.

To handle these cluttered positive detections, we propose
predicting an additional value for each bounding box: The
IoU (i.e., Jaccard index) between a regressed detection box
and the object location. This Soft-IoU score, ciou ∈ [0, 1],
is estimated by a fully-convolutional layer which we add as
a third head to the end of each RPN in the detector.

Given N predicted detections, the IoU between a pre-
dicted bounding box bi, i ∈ {1..N } and its ground truth
bounding box, ˆbi, is deﬁned as:

IoUi =

Intersection(ˆbi, bi)

U nion(ˆbi, bi)

.

(1)

5229

Soft-IoU could thus be considered reﬂecting complemen-
tary properties of a detection bounding box.

3.3. EM Merger unit for inference

We now have N predicted bounding box locations, each
with its associated objectness, c, and Soft-IoU, ciou, scores.
Bounding boxes, especially in crowded scenes, often clump
together in clusters, overlapping each other and their item
locations. Our EM-Merger unit ﬁlters, merges, or splits
these overlapping detection clusters, in order to resolve a
single detection per object. We begin by formally deﬁning
these detection clusters.

Detections as Gaussians. We consider the N bounding
boxes produced by the network as a set of 2D Gaussians:

F = {fi}N

i=1 = {N (p; µi, Σi)}N

i=1,

(4)

with p ∈ R2, a 2D image coordinate. The i-th detec-
tion is thus represented by a 2D mean, the central point of
the box, µi = (xi, yi), and a diagonal covariance, Σi =
[(hi/4)2, 0; , 0, (wi/4)2], reﬂecting the box size, (hi, wi).

We represent these Gaussians, jointly, as a single Mix-

ture of Gaussians (MoG) density:

f (p) =

N

X

i=1

αifi(p),

(5)

ciou
i
k=1 ciou

k

PN

where the mixture coefﬁcients, αi =

, reﬂect-

ing our conﬁdence that the bounding box overlaps with its
ground truth, are normalized to create a MoG.

Fig. 3 visualizes the density of Eq. (5) as heat-maps,
translating detections into spatial region maps representing
our per-pixel conﬁdences of detection overlaps; each region
weighted by the accumulated Soft-IoU.

Selecting predictions:
formal deﬁnition. We next re-
solve our N Gaussians (detections) into precise, non-
overlapping bounding box detections by using a MoG clus-
tering method [6, 17, 18, 50].

We treat the problem of resolving the ﬁnal detections as

ﬁnding a set of K << N Gaussians,

G = {gj}K

j=1 = {N (p; µ′

j, Σ′

j)}K

j=1

(6)

such that when aggregated, the selected Gaussians approxi-
mate the original MoG distribution f of Eq. (5), formed by
all N detections. That is, if g is deﬁned by

g(p) =

K

X

j=1

βjgj(p),

(7)

then we seek a mixture of K Gaussians, G, for which

d(f, g) =

N

X

i=1

αi

K
min
j=1

KL(fi||gj),

(8)

5230

Figure 3. Visualizing the output of the EM-Merger unit. Raw
detections on these images (not shown) contain many overlapping
bounding boxes. Our approach of representing detections as a
MoG (Eq. (5)), visualized here as heat maps, provides clear sig-
nals for where items are located. The simpliﬁed MoG of Eq. (7) is
visualized as green ellipsoids. See Sec. 3.3 for details.

We chose ˆbi to be the closest annotated box to bi (in image
If the two do not overlap, then IoUi = 0.
coordinates).
Both Intersection(·) and U nion(·) count pixels.

We take a probabilistic interpretation of Eq. (1), learning
it with our Soft-IoU layer using a binary cross-entropy loss:

LsIoU =

−

1
n

n

X

i=1

[IoUi log (ciou

i

) + (1−IoUi) log (1−ciou

i

)],

(2)

where n is the number of samples in each batch.

The loss used to train each RPN in the detection network

is therefore deﬁned as:

L = LClassiﬁcation + LRegression + LsIoU.

(3)

Here, LClassiﬁcation and LRegression are the standard cross-
entropy and euclidean losses, respectively [16, 36, 38], and
LsIoU is deﬁned in Eq. (2).

Objectness vs. Soft-IoU. The objectness score used in pre-
vious methods predicts object/no-object labels whereas our
Soft-IoU predicts the IoU of a detected bounding box and
its ground truth. So, for instance, a bounding box which
partially overlaps an object can still have a high objectness
score, c, signifying high conﬁdence that the object appears
in the bounding box. For the same detection, we expect ciou
to be low, due to the partial overlap.

In fact, object/no-object classiﬁers are trained to be in-
variant to occlusions and translations. A good objectness
classiﬁer would therefore be invariant to the properties
which our Soft-IoU layer is sensitive to. Objectness and

is minimized, where KL is the KL-divergence [24] used as
a non-symmetric distance between two detection boxes.

An EM-approach for selecting detections. We approxi-
mate a solution to minimization of Eq. (8) using an EM-
based method. The E-step assigns each box to the nearest
box cluster, where box similarity is deﬁned by a KL dis-
tance between the corresponding Gaussians. E-step assign-
ments are deﬁned as:

threshold. This step can be viewed as model selection and it
determines the actual number of detected objects, K ′ ≤ K.
To extract the ﬁnal detections, for each of the K ′ Gaus-
sians, we consider the ellipse at two standard deviations
around its center, visualized in Fig. 3 in green. We then
search the original set of N detections (Sec. 3.1) for those
whose center, µ = (x, y), falls inside this ellipse. A Gaus-
sian is converted to a detection window by taking the me-
dian dimensions of the detections in this set.

π(i) = arg

K
min
j=1

KL(fi||gj).

(9)

4. The SKU-110K benchmark

The M-step then re-estimates the model parameters by:

βj = X

αi

µ′

j =

Σ′

j =

i∈π−1(j)
1
βj X
1
βj X

i∈π−1(j)

i∈π−1(j)

αiµi

(10)

αi (cid:0)Σi + (µi − µ′

j)(µi − µ′

j)⊤(cid:1) .

Note that these matrix computations are fast in 2D space.
Moreover, all our Gaussians represent axis-aligned detec-
tion and so they all have diagonal covariances.
In such
cases, the KL distance between two Gaussians has a sim-
pler form which is even more efﬁcient to compute.

General EM theory guarantees that the iterative process
described in Eq. (9)–(10), is monotonically decreasing in
the value of Eq. (8) and converging to a local minimum [11].
We determine convergence when the value of Eq. (8) is
smaller than ǫEM = 1e − 10. We found this process to
nearly always converge within ten iterations and so we set a
maximum number of iterations at that number.

EM parameters are often initialized using fast clustering
to prevent convergence to poor local minima. We initialize
it with an agglomerative, hierarchical clustering [39], where
each detection initially represents a cluster of its own and
clusters are successively merged until K clusters remain.

We note in passing that there have been several re-
cent attempts to develop deep clustering methods [47, 48].
Such methods are designed for clustering high-dimensional
data, training autoencoders to map input data into a low-
dimensional feature space where clustering is easier. We
instead use EM, as these methods are not relevant in our
settings, where the original data is two-dimensional.

Gaussians as detections. Once EM converged, the es-
timated Gaussians represent a set of K detections. As
an upper bound for the number of detections, we use
K = size(I)/(µwµh), approximating the amount of non-
overlapping, mean-sized boxes that ﬁt
into the image.
As post-processing, we suppress less conﬁdent Gaussians
which overlap other Gaussians by more than a predeﬁned

We assembled a new labeled data set and benchmark
containing images of supermarket shelves. We focus on
such retail environments for two main reasons. First, to
maximize sales and store real-estate usage, shelves are reg-
ularly optimized to present many items in tightly packed,
efﬁcient arrangements [3, 33]. Our images therefore repre-
sent extreme examples of dense environments; precisely the
type of scenes we are interested in.

Second, retail items naturally fall into product, brand,
and sub-brand object classes. Different brands and products
are designed to appear differently. A typical store can sell
hundreds of products, thereby presenting a detector with
many inter-class appearance variations. Sub-brands, on the
other hand, are often distinguishable only by ﬁne-grained
packaging differences. These subtle appearance variations
increase the range of nuisances that detectors must face
(e.g., spatial transformations, image quality, occlusion).

As we show in Table 1, SKU-110K is very different from
existing alternatives in the numbers and density of the ob-
jects appearing in each image, the variability of its item
classes, and, of course, the nature of its scenes. Example
images from SKU-110K are provided in Fig. 1, 2, and 5.

Image collection. SKU-110K images were collected from
thousands of supermarket stores around the world, includ-
ing locations in the United States, Europe, and East Asia.
Dozens of paid associates acquired our images, using their
personal cellphone cameras. Images were originally taken
at no less than ﬁve mega-pixel resolution but were then
JPEG compressed at one megapixel. Otherwise, phone and
camera models were not regulated or documented. Image
quality and view settings were also unregulated and so our
images represent different scales, viewing angles, lighting
conditions, noise levels, and other sources of variability.

Bounding box annotations were provided by skilled an-
notators. We chose experienced annotators over unskilled,
Mechanical Turkers, as we found the boxes obtained this
way were more accurate and did not require voting schemes
to verify correct annotations [28, 42]. We did, however, vi-
sually inspect each image along with its detection labels, to
ﬁlter obvious localization errors.

Benchmark protocols. SKU-110K images were parti-

5231

Method
Faster-RCNN (2015) [38]
YOLO9000 (2017) [37]
RetinaNet (2018) [27]
Base detector
+ Soft-IoU
+ EM-Merger (on the CPU)

FPS DPS
93
2.37
317
162
162
162
73

5
0.5
0.5
0.5
0.23

Table 2. Detection runtime comparison on SKU-110K.

tioned into train, test, and validate splits. Training con-
sists of 70% of the images (8, 233 images) and their asso-
ciated 1, 210, 431 bounding boxes; 5% of the images (588),
are used for validation (with their 90, 968 bounding boxes).
The rest, 2, 941 images (432, 312 bounding boxes) were
used for testing. Images were selected at random, ensur-
ing that the same shelf display from the same shop does not
appear in more than one of these subsets.

Evaluation. We adopt evaluation metrics similar to those
used by COCO [28], reporting the average precision (AP)
at IoU=.50:.05:.95 (their primary challenge metric), AP
at IoU=.75, AP.75 (their strict metric), and average recall
(AR)300 at IoU=.50:.05:.95 (300 is the maximal number
of objects). We further report the value sampled from the
precision-recall curve at recall = 0.5 for IoU=0.75 (PR=.5).
The many, densely packed items in our images are rem-
iniscent of the settings in counting benchmarks [2, 22]. We
capture both detection and counting accuracy, by borrowing
the error measures used for those tasks: If {K ′
i=1 is the
predicted numbers of objects in each test image, i ∈ [1, n],
and {ti}n
i=1are the per image ground truth numbers, then
n Pn
the mean absolute error (MAE) is 1
i − ti| and the
root mean squared error (RMSE) is q 1

i − ti)2.

i (K ′

i}n

i |K ′
n Pn

5. Experiments

5.1. Run time analysis

Table 2 compares average frames per second (FPS) and
detections per second (DPS) for baseline methods and vari-
ations of our approach. Runtimes were measured on the
same machine using an Intel(R) Core(TM) i7-5930K CPU
@3.50GHz GeForce and a GTX Titan X GPU.

Our base detector is modeled after RetinaNet [27] and so
their runtimes are identical. Adding our Soft-IoU layer does
not affect runtime. EM-Merger is slower despite the opti-
mizations described in Sec. 3.3, mostly because of memory
swapping between GPU and CPU/RAM. Our initial tests
suggest that a GPU optimized version will be nearly as fast
as the base detector.

5.2. Experiments on the SKU 110K benchmark

Baseline methods. We compare the detection accuracies
of our proposed method and recent state-of-the-art on the

0

N/A

AP AP.75 AR300 PR=.5 MAE RMSE
Method
.000
N/A
.010
Monkey
Faster-RCNN [38]
.045 .010 .066
YOLO9000opt [37] .094 .073 .111
.455 .389 .530
RetinaNet [27]
Base & NMS
.413 .384 .484
Soft-IoU & NMS
.418 .386 .483
Base & EM-Merger .482 .540 .553
.492 .556 .554
Our full approach

107.46 113.42
84.166 97.809
.544 16.584 30.702
.491 24.962 34.382
.492 25.394 34.729
.802 23.978 283.971
.834 14.522 23.992

0
0
0

Table 3. Detection on SKU-110K. Bold numbers are best results.

Figure 4. Result Curves.
(a) PR Curves on SKU-110K with
IoU=0.75 (higher curve is better). (b) The log-log curve of miss
rate vs False Positives Per Image [51] (lower curve is better).

SKU-110K benchmark. All methods, with the exception of
the Monkey detector, were trained on the training set por-
tion SKU-110K.

The following two baseline methods were tested us-
ing the original implementations released by their authors:
RetinaNet [27] and Faster-RCNN [38]. YOLO9000 [37]
is not suited for images with more than 50 objects. We of-
fer results for YOLO9000opt, which is YOLO9000 with its
loss function optimized and retrained to support detection
of up to 300 boxes per image.

We also report the following ablation studies, detailing
the contributions of individual components of our approach.
• Monkey: Because of the tightly packed items in SKU-
110K images,
it is plausible that randomly tossed
bounding boxes would correctly predict detections by
chance. To test this naive approach, we assume we
know the object number, K ′, the mean and standard-

5232

Figure 5. Qualitative detection results on SKU-110K. Please see project web-page for more results and images in higher resolutions.

deviation width, µw, σw, and height, µh, σh, for these
boxes. Monkey samples 2D upper-left corners for the
K ′ bounding boxes from a uniform distribution and
box heights and widths from Gaussian distributions
N (h; µh, σh) and N (h; µw, σw), respectively.

• Base & NMS: Our basic detector of Sec. 3.1 with stan-

dard NMS applied to objectness scores, c.

• Soft-IoU & NMS: Base detector with Soft-IoU
(Sec. 3.2). Standard NMS applied to Soft-IoU scores,
ciou, instead of objectness scores.

• Base & EM-Merger: Our basic detector, now using
EM-Merger of Sec. 3.3, but applying it to original ob-

jectness scores, c.

• Our full approach: Applying the EM-Merger unit to

Deep-IoU scores, ciou.

To test MAE and RMSE we report the number of de-
tected objects, K ′, and compare it with the true number of
items per image. In RetinaNet the number of detections is
extremely high so we ﬁrst ﬁlter detections with low con-
ﬁdences. This conﬁdence threshold was determined using
cross-validation to optimize the results of this baseline.

Detection results on SKU-110K. Quantitative detection re-
sults are provided in Table 3, result curves are presented
in Fig. 4, and a selection of qualitative results, comparing

5233

Method

MAE

RMSE

5.3. Experiments on CARPK and PUCPR+

Counting results on CARPK

Faster R-CNN (2015) [38]
YOLO (2016) [36]
One-Look Regression (2016) [32]
LPN Counting (2017) [22]
YOLO9000opt (2017) [37]
RetinaNet (2018) [27] [22]
IEP Counting (2019) [41]
Our full approach

24.32
48.89
59.46
23.80
45.36
16.62
51.83
6.77

Faster R-CNN (2015) [38]
YOLO (2016) [36]
One-Look Regression (2016) [32]
LPN Counting (2017) [22]
YOLO9000opt (2017) [37]
RetinaNet (2018) [27]
IEP Counting (2019) [41]
Our full approach

Counting results on PUCPR+
39.88
156.00
21.88
22.76
130.40
24.58
15.17
7.16

37.62
57.55
66.84
36.79
52.02
22.30

-

8.52

47.67
200.42
36.73
34.46
172.46
33.12

-

12.00

Table 4. CARPK and PUCPR+ counting results [22].

our full approach with RetinaNet [27], the best performing
baseline system, is offered in Fig. 5.

Apparently, despite the packed nature of our scenes, ran-
domly tossing detections fails completely, as evident by the
near zero accuracy of Monkey. Both Faster-RCNN [38]
and YOLO9000opt [37] are clearly unsuited for detecting
so many tightly packed objects. RetinaNet [27], performs
much better, in fact outperforming our base network despite
sharing a similar design (Sec. 3.1). This could be due to the
better framework optimization of RetinaNet.

Our full system outperforms all its baselines with wide
margins. Much of its advantage seems to come from our
EM-Merger (Sec. 3.3). Comparing the accuracy of EM-
Merger applied to either objectness scores or our Soft-IoU
demonstrates the added information provided by Soft-IoU.
This contribution is especially meaningful when examining
the counting results, which show that Soft-IoU scores pro-
vide a much better means of ﬁltering detection boxes than
objectness scores.

It is further instructional to compare detection accuracy
with counting accuracy. The counting accuracy gap be-
tween our method and the closest runner up, RetinaNet, is
greater than the gap in detection accuracy (though both mar-
gins are wide). The drop in counting accuracy can at least
partially be explained by their use of greedy NMS com-
pared with our EM-Merger. In fact, Fig. 5 demonstrates the
many overlapping and/or mis-localized detections produced
by RetinaNet compared to the single detections per item
predicted by our approach (see, in particular, Fig. 5(a,e)).

Finally, we note that our best results remain far from
perfect: The densely packed settings represented by SKU-
110K images appear to be highly challenging, leaving room
for further improvement.

We test our method on data from other benchmarks, to
see if our approach generalizes well to other domains be-
yond store shelves and retail objects. To this end, we use
the recent CARPK and PUCPR+ [22] benchmarks. Both
data sets provide images of parking lots from high vantage
points. We use their test protocols, comparing the number
of detections per image to the ground truth numbers made
available by these benchmarks. Accuracy is reported using
MAE and RMSE, as in our SKU-110K (Sec. 4).

Counting results. We compare our method with results re-
ported by others [22, 41]: Faster R-CNN [38], YOLO [36],
and One-Look Regression [32]. Existing baselines also
include two methods designed and tested for counting
on these two benchmarks: LPN Counting [22] and IEP
Counting [41]. In addition, we trained and tested counting
accuracy with YOLO9000opt [37] and RetinaNet [27].

Table 4 reports the MAE and RMSE for all tested meth-
ods. Despite not being designed for counting, our method is
more accurate than recent methods designed for that task. A
signiﬁcant difference between these counting datasets and
our SKU-110K is in the much closer proximity of the ob-
jects in our images. This issue has a signiﬁcant impact on
baseline detectors, as can be seen in Tables 4 and 3. Our
model suffers a much lower degradation in performance due
to better ﬁltering of these overlaps.1

6. Conclusions

The performance of modern object/no-object detectors
on existing benchmarks is remarkable yet still limited. We
focus on densely packed scenes typical of every-day retail
environments and offer SKU-110K, a new benchmark of
such retail shelf images, labeled with item detection boxes.
Our tests on this benchmark show that such images chal-
lenge state-of-the-art detectors.

To address these challenges, along with our benchmark,
we offer two technical innovations designed to raise de-
tection accuracy in such settings: The ﬁrst is a Soft-IoU
layer for estimating the overlap between predicted and (un-
known) ground truth boxes. The second is an EM-based
unit for resolving bounding box overlap ambiguities, even
in tightly packed scenes where these overlaps are common.

We test our approach on SKU-110K and two existing
benchmarks for counting, and show it to surpass existing
detection and counting methods. Still, even the best results
on SKU-110K are far from saturated, suggesting that these
densely packed scenes remain a challenging frontier for fu-
ture work.

1See project web-page for qualitative results on these benchmarks.

5234

References

[1] Bogdan Alexe, Thomas Deselaers, and Vittorio Ferrari. Mea-
suring the objectness of image windows. Trans. Pattern
Anal. Mach. Intell., 34(11):2189–2202, 2012.

[2] Carlos Arteta, Victor Lempitsky, and Andrew Zisserman.
In European Conf. Comput. Vision,

Counting in the wild.
2016.

[3] Judy Bell and Kate Ternus. Silent selling: best practices
and effective strategies in visual merchandising. Bloomsbury
Publishing USA, 2017.

[4] Navaneeth Bodla, Bharat Singh, Rama Chellappa, and
Larry S Davis. Soft-NMS-improving object detection with
one line of code. In Proc. Int. Conf. Comput. Vision. IEEE,
2017.

[5] Lubomir Bourdev, Subhransu Maji, Thomas Brox, and Jiten-
dra Malik. Detecting people using mutually consistent pose-
let activations. In European Conf. Comput. Vision. Springer,
2010.

[6] Pierrick Bruneau, Marc Gelgon, and Fabien Picarougne.
Parsimonious reduction of Gaussian mixture models with a
variational-bayes approach. Pattern Recognition, 43(3):850–
858, 2010.

[7] Joao Carreira and Cristian Sminchisescu. Cpmc: Automatic
object segmentation using constrained parametric min-cuts.
Trans. Pattern Anal. Mach. Intell., 34(7):1312–1328, 2012.

[8] Antoni B Chan, Zhang-Sheng John Liang, and Nuno Vas-
concelos. Privacy preserving crowd monitoring: Counting
people without people models or tracking.
In Proc. Conf.
Comput. Vision Pattern Recognition, 2008.

[9] Jifeng Dai, Yi Li, Kaiming He, and Jian Sun. R-FCN: Object
detection via region-based fully convolutional networks. In
Neural Inform. Process. Syst., 2016.

[10] Navneet Dalal and Bill Triggs. Histograms of oriented gra-
dients for human detection. In Proc. Conf. Comput. Vision
Pattern Recognition. IEEE, 2005.

[11] Arthur P Dempster, Nan M Laird, and Donald B Rubin.
Maximum likelihood from incomplete data via the em al-
gorithm. Journal of the royal statistical society. Series B
(methodological), pages 1–38, 1977.

[12] J. Deng, W. Dong, R. Socher, L.-J. Li, K. Li, and L. Fei-
Fei. ImageNet: a large-scale hierarchical image database. In
Proc. Conf. Comput. Vision Pattern Recognition, 2009.

[13] Mark Everingham, Luc Van Gool, Christopher KI Williams,
John Winn, and Andrew Zisserman. The pascal visual object
classes (voc) challenge. Int. J. Comput. Vision, 88(2):303–
338, 2010.

[14] Pedro F Felzenszwalb, Ross B Girshick, and David
McAllester. Cascade object detection with deformable part
models. In Proc. Conf. Comput. Vision Pattern Recognition.
IEEE, 2010.

[15] Ross Girshick, Jeff Donahue, Trevor Darrell, and Jitendra
Malik. Rich feature hierarchies for accurate object detection
and semantic segmentation. In Proc. Conf. Comput. Vision
Pattern Recognition, 2014.

[16] Ross B. Girshick. Fast R-CNN. In Proc. Int. Conf. Comput.

Vision. IEEE Computer Society, 2015.

[17] Jacob Goldberger, Hayit K Greenspan, and Jeremie Drey-
fuss. Simplifying mixture models using the unscented trans-
form. Trans. Pattern Anal. Mach. Intell., 30(8):1496–1502,
2008.

[18] Jacob Goldberger and Sam T Roweis. Hierarchical clustering
of a mixture model. In Neural Inform. Process. Syst., 2005.
[19] Kaiming He, Georgia Gkioxari, Piotr Doll´ar, and Ross Gir-
In Proc. Int. Conf. Comput. Vision,

shick. Mask R-CNN.
2017.

[20] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun.
Deep residual learning for image recognition. In Proc. Conf.
Comput. Vision Pattern Recognition, 2016.

[21] Jan Hendrik Hosang, Rodrigo Benenson, and Bernt Schiele.
Learning non-maximum suppression. In Proc. Conf. Com-
put. Vision Pattern Recognition, 2017.

[22] Meng-Ru Hsieh, Yen-Liang Lin, and Winston H Hsu. Drone-
based object counting by spatially regularized regional pro-
posal network. In Proc. Int. Conf. Comput. Vision, 2017.

[23] Borui Jiang, Ruixuan Luo, Jiayuan Mao, Tete Xiao, and Yun-
ing Jiang. Acquisition of localization conﬁdence for accurate
object detection. In European Conf. Comput. Vision, 2018.

[24] Solomon Kullback and Richard A Leibler. On informa-
tion and sufﬁciency. The annals of mathematical statistics,
22(1):79–86, 1951.

[25] Alina Kuznetsova, Hassan Rom, Neil Alldrin, Jasper Ui-
jlings, Ivan Krasin, Jordi Pont-Tuset, Shahab Kamali, Stefan
Popov, Matteo Malloci, Tom Duerig, and Vittorio Ferrari.
The open images dataset v4: Uniﬁed image classiﬁcation,
object detection, and visual relationship detection at scale.
arXiv:1811.00982, 2018.

[26] Tsung-Yi Lin, Piotr Doll´ar, Ross B Girshick, Kaiming He,
Bharath Hariharan, and Serge J Belongie. Feature pyramid
networks for object detection. In Proc. Conf. Comput. Vision
Pattern Recognition, 2017.

[27] Tsung-Yi Lin, Priyal Goyal, Ross Girshick, Kaiming He, and
Piotr Doll´ar. Focal loss for dense object detection. Trans.
Pattern Anal. Mach. Intell., 2018.

[28] Tsung-Yi Lin, Michael Maire, Serge Belongie, James Hays,
Pietro Perona, Deva Ramanan, Piotr Doll´ar, and C Lawrence
Zitnick. Microsoft COCO: Common objects in context. In
European Conf. Comput. Vision. Springer, 2014.

[29] Li Liu, Wanli Ouyang, Xiaogang Wang, Paul Fieguth, Jie
Chen, Xinwang Liu, and Matti Pietik¨ainen. Deep learn-
ing for generic object detection: A survey. arXiv preprint
arXiv:1809.02165, 2018.

[30] Wei Liu, Dragomir Anguelov, Dumitru Erhan, Christian
Szegedy, Scott Reed, Cheng-Yang Fu, and Alexander C.
Berg. SSD: Single shot multibox detector. In European Conf.
Comput. Vision, 2016.

[31] Damian Mrowca, Marcus Rohrbach, Judy Hoffman, Rong-
hang Hu, Kate Saenko, and Trevor Darrell. Spatial semantic
regularisation for large scale object detection. In Proc. Int.
Conf. Comput. Vision, 2015.

[32] T Nathan Mundhenk, Goran Konjevod, Wesam A Sakla, and
Koﬁ Boakye. A large contextual dataset for classiﬁcation,
detection and counting of cars with deep learning. In Euro-
pean Conf. Comput. Vision. Springer, 2016.

5235

[51] Shanshan Zhang, Rodrigo Benenson, and Bernt Schiele.
Citypersons: A diverse dataset for pedestrian detection. In
Proc. Conf. Comput. Vision Pattern Recognition, 2017.

[52] C Lawrence Zitnick and Piotr Doll´ar. Edge boxes: Locating
In European Conf. Comput.

object proposals from edges.
Vision. Springer, 2014.

[33] Jens Nordf¨alt, Dhruv Grewal, Anne L Roggeveen, and
Krista M Hill. Insights from in-store marketing experiments.
In Shopper Marketing and the Role of In-Store Marketing,
pages 127–146. Emerald Group Publishing Limited, 2014.

[34] Daniel Onoro-Rubio and Roberto J L´opez-Sastre. Towards
perspective-free object counting with deep learning. In Eu-
ropean Conf. Comput. Vision. Springer, 2016.

[35] Esa Rahtu, Juho Kannala, and Matthew Blaschko. Learning
In Proc.

a category independent object detection cascade.
Int. Conf. Comput. Vision. IEEE, 2011.

[36] Joseph Redmon, Santosh Kumar Divvala, Ross B. Girshick,
and Ali Farhadi. You only look once: Uniﬁed, real-time ob-
ject detection. In Proc. Conf. Comput. Vision Pattern Recog-
nition, 2016.

[37] Joseph Redmon and Ali Farhadi. YOLO9000: better, faster,
stronger. In Proc. Conf. Comput. Vision Pattern Recognition,
2017.

[38] Shaoqing Ren, Kaiming He, Ross Girshick, and Jian Sun.
Faster R-CNN: Towards real-time object detection with re-
gion proposal networks.
In Neural Inform. Process. Syst.,
pages 91–99. 2015.

[39] Lior Rokach and Oded Maimon. Clustering methods.

In
Data mining and knowledge discovery handbook, pages
321–352. Springer, 2005.

[40] Pierre Sermanet, David Eigen, Xiang Zhang, Micha¨el Math-
ieu, Rob Fergus, and Yann LeCun. Overfeat: Integrated
recognition, localization and detection using convolutional
networks. arXiv preprint arXiv:1312.6229, 2013.

[41] Tobias Stahl, Silvia L Pintea, and Jan C van Gemert. Di-
vide and count: Generic object counting by image divisions.
Trans. Image Processing, 28(2):1035–1044, 2019.

[42] Hao Su, Jia Deng, and Li Fei-Fei. Crowdsourcing annota-
tions for visual object detection. In AAAI Conf. on Artiﬁcial
Intelligence workshops, 2012.

[43] Lachlan Tychsen-Smith and Lars Petersson. Improving ob-
ject localization with ﬁtness NMS and bounded IoU loss. In
Proc. Conf. Comput. Vision Pattern Recognition, 2018.

[44] Jasper RR Uijlings, Koen EA Van De Sande, Theo Gev-
ers, and Arnold WM Smeulders. Selective search for object
recognition. Int. J. Comput. Vision, 104(2):154–171, 2013.

[45] Paul Viola and Michael J Jones. Robust real-time face detec-

tion. Int. J. Comput. Vision, 57(2):137–154, 2004.

[46] Christian Wojek, Gyuri Dork´o, Andr´e Schulz, and Bernt
Schiele. Sliding-windows for rapid object class localization:
A parallel technique. In Joint Pattern Recognition Sympo-
sium. Springer, 2008.

[47] J. Xie, R. Girshick, and A. Farhad. Unsupervised deep em-
bedding for clustering analysis. In Int. Conf. Mach. Learn-
ing, 2016.

[48] B. Yang, X. Fu, N. D. Sidiropoulos, and M. Hong. Towards
K-means-friendly spaces: Simultaneous deep learning and
clustering. In Int. Conf. Mach. Learning, 2017.

[49] Shuo Yang, Ping Luo, Chen Change Loy, and Xiaoou Tang.
In Proc. Conf.

Wider face: A face detection benchmark.
Comput. Vision Pattern Recognition, 2016.

[50] Kai Zhang and James T Kwok. Simplifying mixture models
through function approximation. In Neural Inform. Process.
Syst., 2007.

5236

