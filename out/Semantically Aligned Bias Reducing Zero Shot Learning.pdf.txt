Semantically Aligned Bias Reducing Zero Shot Learning

Akanksha Paul

Narayanan C. Krishnan

Prateek Munjal

Indian Institute of Technology

Indian Institute of Technology

Indian Institute of Technology

Ropar

Ropar

Ropar

akanksha.paul@iitrpr.ac.in

ckn@iitrpr.ac.in

2017csm1009@iitrpr.ac.in

Abstract

Zero shot

learning (ZSL) aims to recognize unseen
classes by exploiting semantic relationships between seen
and unseen classes. Two major problems faced by ZSL al-
gorithms are the hubness problem and the bias towards the
seen classes. Existing ZSL methods focus on only one of
these problems in the conventional and generalized ZSL set-
ting. In this work, we propose a novel approach, Semanti-
cally Aligned Bias Reducing (SABR) ZSL, which focuses on
solving both the problems. It overcomes the hubness prob-
lem by learning a latent space that preserves the semantic
relationship between the labels while encoding the discrim-
inating information about the classes. Further, we also pro-
pose ways to reduce bias of the seen classes through a sim-
ple cross-validation process in the inductive setting and a
novel weak transfer constraint in the transductive setting.
Extensive experiments on three benchmark datasets suggest
that the proposed model signiﬁcantly outperforms existing
state-of-the-art algorithms by ∼1.5-9% in the conventional
ZSL setting and by ∼2-14% in the generalized ZSL for both
the inductive and transductive settings.

1. Introduction

In recent years, deep learning has achieved state-of-the-
art performance across a wide range of computer vision
tasks such as image classiﬁcation task [13]. However, these
deep learning methods rely on enormous amount of la-
beled data which is scarce for dynamically emerging ob-
jects. Practically, it is unrealistic to annotate everything
around us. Thus, making the conventional object classiﬁ-
cation methods infeasible. In this work, we focus on the
extreme case when there is no labeled data, i.e., Zero-shot
learning (ZSL), where the task is to recognize the unseen
class instances by relying on the labeled set of seen classes.
ZSL assumes that the semantic label embeddings of both
seen and unseen classes are known apriori. ZSL thus learns
to identify unseen classes by leveraging the semantic rela-
tionship between seen and unseen classes.

On the basis of data available during the training phase,
ZSL can be divided into two categories: Inductive and
Transductive ZSL. In inductive ZSL [10, 14, 12, 2, 17,
23, 29, 3, 25], we are provided with the labeled seen class
instances and the semantic embedding of unseen class la-
bels during training. While in transductive ZSL [21, 28],
in addition to the labeled seen class data and the semantic
embedding of all labels, we are also provided with the un-
labeled instances of unseen classes data. ZSL can also be
categorized into Conventional and Generalized ZSL de-
pending on the data that is presented to the model during
the testing phase. In Conventional ZSL, data emerges only
from unseen classes at test time. While Generalized ZSL
[8] is a more realistic setting where the data during testing
comes from both seen and unseen classes.

Generally, ZSL approaches project the seen and un-
seen class data into a latent space that is robust for learn-
ing unseen class labels. One approach is to learn a latent
space that is aligned towards the semantic label embedding
[10, 12, 14, 17, 19, 23]. The input data is transformed into
this latent space for learning the classiﬁcation models over
seen and unseen classes. This approach leads to the well
known hubness problem [18, 16, 9] where the transformed
data become hubs for the nearby class embeddings leading
to performance deterioration in both conventional and gen-
eralized ZSL. To alleviate the hubness problem, the other
approaches [29, 5, 31, 18] learn a latent visual space for
recognizing the seen class labels by aligning the semantic
class embeddings towards this latent space. Irrespective of
the latent space for transforming the data, there is an inher-
ent bias in the model towards seen classes, which we refer to
as the bias problem. Due to this bias the models generally
perform poorly on unseen classes.

Existing ZSL methods focus on addressing only one of
these problems. In this work, we propose a novel method -
Semantically Aligned Bias Reducing (SABR) ZSL to al-
leviate both the hubness and bias problems. We propose
two versions of SABR - SABR-I and SABR-T for the in-
ductive and the transductive ZSL settings respectively. Both
these versions have a common ﬁrst step that learns an inter-

7056

mediate representation for the seen and unseen class data.
This intermediate latent space is learned to preserve both the
semantic relationship between class embeddings and dis-
criminating information among classes through a novel loss
function.

After having learned the optimal

latent space, both
SABR-I and SABR-T learn generative adversarial networks
(GAN) to generate the latent space representations. Specif-
ically, SABR-I learns a conditional Wasserstein GAN for
generating the latent space representations for the seen
classes using only the seen class embeddings. As the label
embeddings of seen and unseen classes exhibit semantic re-
lationships that are being learned in ﬁrst step, we utilize the
generative network to synthesize unseen class representa-
tions for learning a classiﬁcation model for ZSL and GZSL.
Given that we only have labeled data for the seen classes,
SABR-I reduces the bias by early stopping the training of
conditional WGAN through a simulated ZSL problem in-
duced on the seen class data.

SABR-T goes further to learn a different GAN for gen-
erating latent space instances for the unseen classes. This
network is learned to minimize the marginal probability
difference between the true latent space representations of
the unlabeled unseen class instances and the synthetically
generated representations. Further, the conditional proba-
bility distribution of the latent space representations given
the semantic labels are weakly transferred from the condi-
tional WGAN learned by SABR-I for the seen class labels.
Speciﬁcally, we learn a Wasserstein GAN[4] for the unseen
classes by constraining the amount of transfer from the seen
classes as learned by SABR-I. Overall, the major contribu-
tions of the paper are as follows

• We propose a novel two-step solution for zero shot
learning. In the ﬁrst step, an appropriate latent space is
learned by ﬁne tuning a pre-trained model with seman-
tic embedding to reduce the hubness problem. In the
second step, generators for synthesizing unseen class
representations are learned, whose bias towards the
seen class is reduced by using an early stopping crite-
rion in the inductive setting and a weak transfer criteria
for the transductive setting.

• We introduce a loss function, which ensures that the
embedding space is discriminative and semantically
aligned with the semantic class embeddings. A novel
adversarial generative transfer is proposed that tries to
minimize both the conditional and marginal distribu-
tions of seen and unseen classes.

• Empirical evaluation across all the zero-shot learning
datasets suggests that the proposed approach outper-
forms the state-of-the-art performance in both conven-
tional and generalized ZSL in both the inductive and
transductive settings.

2. Related Work

Zero-shot learning (ZSL) has been a well studied area in
recent years. Early ZSL approaches [10, 12, 2, 17, 19, 23]
utilized the semantic label space for projecting the seen
and unseen instances. DEVISE [10], ALE [1] and SJE [2]
learned bi-linear compatibility functions to model the rela-
tionship between visual and semantic space. ESZSL [17]
added a regularizer to the bi-linear compatibility functions
that bounded the norm of projected features and semantic
attributes. All these methods were constrained by learn-
ing linear functions and was overcome by LATEM [23] and
CMT [19] which learned non-linear functions. Zhang et al.
[29] were the ﬁrst to demonstrate the hubness problem and
suggested to use an intermediate visual space for projecting
the seen and unseen class instances. Zhang et al. [29] and
Ba et al. [5] transform both the semantic and visual space to
a joint embedding space in which the visual representations
are closer to their respective semantic representations. An-
nadani et al. [3] focused on utilizing the semantic structure
while maintaining separability of classes. Our approach for
the inductive ZSL setting (SABR-I) improves over the work
of Annadani et al. [3], as in SABR-I we not only preserve
semantic relations in visual space but also reduce the bias
of seen classes.

Among the transductive ZSL approaches, Song et al.
[20] leverage the conditional seen class data with unlabelled
unseen class data to learn an unbiased latent embedding
space. The bias towards seen classes is reduced by forcing
a uniform prior over the output of the classiﬁer for unseen
class instances. Our approach differs from QFSL primar-
ily in two ways. Firstly, we reduce the bias in both the
inductive and transductive versions of our model.
In the
transductive version, SABR-T reduces the bias without en-
forcing the uniform prior on the output as this will reduce
the unseen class conditional information in the latent space.
Secondly, learning an optimal latent space helps to mitigate
the hubness problem.

There also exists work on generative modeling for ZSL
[21, 6, 25]. Verma et al. [21] model each class-conditional
distribution as a Gaussian distribution whose parameters are
learned by seen classes. It then predicts the parameters of
class-conditional distribution for unseen classes. They fur-
ther extend this work to incorporate the unseen class data
and report results in transductive setting. Bucher et al.
[6] and Xian et al. [25] generate pseudo instances of un-
seen classes by training a conditional generator for the seen
classes. Our proposed approach for the inductive setting
SABR-I differs from these approaches, as we learn a dis-
criminative embedding space that preserves semantic rela-
tions which alleviates hubness problem. Further, we lever-
age the unlabeled unseen class data to reduce the bias of
seen classes.

7057

Figure 1. [Best viewed in color] An illustration of the proposed Semantically Aligned Bias Reducing (SABR) model.

3. Methodology

3.1. Problem Deﬁnition

i , ys

i , c(ys

Let Ds = {xs

i ), i = 1, 2....Ns} represent the
i denotes the ith
set of seen class data instances, where xs
seen class instance with the corresponding class label ys
i ∈
S (the set of seen classes). The semantic label embedding
for each ys ∈ S is denoted by c(ys). In the inductive ZSL
setting, we are provided only with the set of unseen labels
yu ∈ U and the corresponding semantic label embedding
c(yu). There is no overlap between the seen and unseen
classes i.e., S ∩ U = ∅. In the transductive ZSL setting,
we also have unlabeled unseen class data represented by
i is the ith
Du = {xu
unseen class instance. As the unseen class dataset is un-
labeled, we do not have the labels yu
i . The goal of
conventional ZSL is to predict the label for each xu
i ∈ U .
In the generalized ZSL setting, the goal is to predict the la-
bel of a test sample, where the test sample can belong to
either seen or unseen class.

i , yu, c(yu), i = 1, 2....Nu} where xu

i of xu

3.2. Semantically Aligned Bias Reducing ZSL

In this section, we present our proposed two-tier model,
SABR-I, for inductive ZSL (and a three-tier model, SABR-
T for transductive ZSL) as shown in ﬁgure 1.

3.2.1 Learning the Optimal Latent Space

In the ﬁrst step of SABR-I and SABR-T, we learn a la-
tent space Ψ that preserves the semantic relations between
classes while also learning the discriminating information
for recognizing the classes. The semantic relations are es-
sential as the learned latent space is later used for gener-
ating synthetic instances of unseen classes. The discrimi-

nating information is useful for learning the classiﬁer and
thus mitigating the hubness effect. We use pre-trained deep
network Resnet-101 to extract features from the seen and
i and xu
unseen class images. For simplicity henceforth xs
i
refer to the features extracted from the pre-trained deep em-
bedding models. These features are then used to learn a
transformation, ψ(), that projects the seen and unseen class
instances onto the latent space Ψ. ψ() is modeled as a
two layer fully connected network. The latent representa-
tions ψ(xs
i ) are used to simultaneously learn a classiﬁer (fc)
(for learning the discriminating information) and a regres-
sor (fr) (for preserving the semantic relationships among
the labels). The classiﬁer fc outputs the one hot encoding
of the class label of the instance and thus is trained mini-
mizing the cross entropy loss,

LC = −

1
Ns

Ns

X

i=1

L(ys

i , fc(ψ(xs

i ))

(1)

where L is cross entropy loss between true and predicted
labels of seen class instance xs
i .

The semantic relationships between the labels are pre-
served by ensuring that the output of the regressor fr on the
embedding of a seen instance ψ(xs
i ) is closely related to the
corresponding semantic embedding c(ys
i ). We propose to
use a similarity based cross-entropy loss, as deﬁned in the
equation below, between the predicted label embeddings of
the regressor and the true semantic label embedding.

LS = −

Ns

X

log

exp(hfr(ψ(xs

Σys∈S exp(hfr(ψ(xs

i )), c(ys

i )i)
i )), c(ys

i )i)

(2)

i=1
where hfr(ψ(xs
predicted label embedding, fr(ψ(xs
stance xs

i )i refers to the similarity between
i )), of each source in-
i ). This

i and its true semantic label embedding c(ys

i )), c(ys

7058

loss function ensures that the predicted label embeddings
for all seen class instances belonging to a speciﬁc label form
a cluster around the true semantic label embedding. The
similarity could be deﬁned using any measure such as Eu-
clidean distance, cosine similarity or dot product.

The transformation function ψ(), as well as the classi-
ﬁer fc and the regressor fr are learned simultaneously by
jointly minimizing the loss functions represented in equa-
tions 1 and 2 weighted by the factor γ

LF S = min LC + γ ∗ LS

(3)

Thus at the end of step 1, both the versions of SABR
learn the transformation ψ to the latent space that is optimal
in the sense that it possesses the discriminative information
for classiﬁcation and encodes the semantic relationship be-
tween the labels.

3.2.2 Bias Reducing Generator Network for SABR-I

The objective of inductive ZSL is to learn a classiﬁer that
can predict the labels of unseen class instances. As we do
not have training instances of unseen classes, following the
approach of Xian et al. [25], we learn a generator network
that can generate synthetic unseen class instances as illus-
trated in the module 2 of Figure 1

Given the seen class embeddings ψ(xs

i ) ∈ Ψ, we ﬁrst
learn a conditional generator Gs : hz, c(ys)i → Ψ. The
generator takes as input a random noise vector z and a se-
mantic label embedding c(ys) and outputs an instance ˜xs in
the latent space Ψ. As we know the labels associated with
each seen class training instance, we train the conditional
generator using the Wasserstein adversarial loss deﬁned by

Ls

G = E[Ds(ψ(xs), c(ys))] − E[Ds(˜xs, c(ys))]

− λ E[(k∇ˆxs Ds(ˆxs, c(ys))k − 1)2]

(4)

where, Ds is the seen class conditional discriminator whose
input is the seen class label embedding (c(ys)) and the latent
space instance (ψ(xs)), ˆxs = αψ(xs) + (1 − α)˜xs with
α ∼ U (0, 1) and λ is the gradient penalty coefﬁcient. Thus,
the objective for discriminator and generator pair is to

min
Gs

max
Ds

Ls
G

(5)

We further want to encourage the generator to synthesize
latent space embeddings of seen classes that are discrimi-
native and encode the semantic similarity between the la-
bel embeddings. We achieve this by incorporating the loss
functions deﬁned in equation 1 and 2 to the overall opti-
mization objective of the generator. We use the pre-trained
classiﬁer fc and regressor fr from the previous step while
training the generator Gs. Thus the overall loss function for
the generator-discriminator network can be deﬁned as

min
Gs

max
Ds

Ls

G + β(LC + γLS)

(6)

This generator is then used to synthesize the latent space
representations for the unseen classes. The semantic la-
bel embeddings encode relationships between the labels and
therefore we expect the generator to synthesize meaningful
latent representations of the unseen classes. However, the
generator can be overly biased towards the seen classes due
to the training set that is presented to it. This bias is mit-
igated using the principle of early stopping during training
of the generator. The number of training epochs required to
achieve the best performance is determined through a sim-
ple cross-validation set up on the seen classes.

3.2.3 Bias Reducing Generator Network for SABR-T

In the transductive setting the training process can beneﬁt
from modeling the unlabeled unseen class data.
In par-
ticular, we model the marginal probability distribution of
the unseen class unlabeled data via a GAN. We ﬁrst obtain
the latent representations of unseen class data xu by trans-
forming them using the function ψ(). Now, given the latent
space representations of the unseen class instances ψ(xu),
we learn a generator Gu : hz, c(yu)i → Ψ that takes noise
z and semantic vector c(yu) as the input and outputs a syn-
thetic instance ˜xu in the latent space. Gu is trained as a
conditional generator using the Wasserstein adversarial loss
deﬁned as follows

Lu

G = E[Du(ψ(xu))] − E[Du(˜xu)]

− λ E[(k∇ˆxu Du(ˆxu)k − 1)2]

(7)

were, Du is the discriminator, ˆxu = αψ(xu) + (1 − α)˜xu,
α ∼U(0,1), and λ is the gradient penalty coefﬁcient. Note
that unlike Ds, Du is not a conditional discriminator. Thus,
the overall objective of the generator-discriminator pair for
the unseen class instances can be deﬁned as:

min
Gu

max
Du

Lu
G

(8)

The unlabeled class generator, Gu, trained in this fashion
will produce synthetic unseen class latent representations
that closely follow the true marginal distribution P (ψ(xu)).
However, it would not have learned the correct conditionals
P (ψ(xu)|c(yu)). This is understandable as we do not have
labeled unseen class data to train a conditional discrimina-
tor. On the other hand the seen class generator Gs also mod-
els the P (ψ(xs)|c(ys)). This is because of the seen class
conditional discriminator Ds.

As the semantic label embeddings of the seen and unseen
class share a common space and the latent representations
of the seen and unseen class data are also from a common
space, we hypothesize that generators of both the sets of
classes must also be similar. Imposing this constraint allows
us to transfer knowledge of the conditionals from the seen
class generator to the unseen class generator.

7059

Speciﬁcally, let W s

G be the weights associated with the
seen class generator, Gs and W u
G be the weights associ-
ated with the unseen class generator, Gu. We propose a
weak transfer constraint that forces W u
G to be similar to
that of W s
G. We hypothesize that the unseen class generator
learned using this constraint will encode the information on
the conditionals. Thus, the overall objective of the generator
network for the unseen transfer is formulated as:

min

G

max

D

Lu

W GAN + ω kW s

G − W u
Gk

(9)

where, ω is a hyper-parameter controlling the importance of
the similarity between the generators. When ω = 0, the un-
seen class generator is completely independent of the seen
class generator and there is no transfer of information be-
tween the two. This should result in synthetic unseen class
instances that have very poor class conditional information
in them. Large values of ω will force the unseen class gen-
erator to be identical to the seen class generator inducing
high bias towards the seen classes; meaning the condition-
als are biased towards the seen classes. This is also prob-
lematic as there is no overlap between the seen and unseen
classes. Thus choosing an optimal hyper-parameter value
that allows Gu to learn from Gs is important. This hyper-
parameter is tuned through cross-validation on the set of
seen classes.

4. Experiments

4.1. Datasets

We evaluate the proposed methods using the follow-
ing three benchmark datasets of ZSL. Animals with At-
tributes2 (AWA2) [24, 26] that comprises of 37,322 images
belonging to 50 classes where each class label is described
using a 85-dimensional vector. We use 40 classes for train-
ing and the remaining 10 classes for testing. Caltech-
UCSDBirds-200-2011 (CUB) [22] that contains 11,788
images from 200 different types of birds where the class
label is represented using a 312 dimensional vector. We
use 150 classes for training and the remaining 50 classes
for testing. SUN [27] that consists of 14,340 images across
717 scenes with the class labels described using a 102 vec-
tor. Following [24, 26], 580 classes out of 645 are used for
training and the remaining 72 for testing.

We employ the proposed splits of Xian et al. [24, 26]
in all our experiments for fair comparison against prior ap-
proaches. For parameter tuning of the bias reducing models,
we further divide the seen class set into train and valida-
tion splits preserving the original class distribution between
train and test set. The best hyper-parameter values obtained
through this cross-validation procedure is used to train the
model using the entire training data.

3.3. Classiﬁcation and Evaluation Metric

4.2. Experimental Settings

For the inductive setting, we generate synthetic unseen
class representations using Gs. While for the transductive
setting, we generate unseen class representations using Gu.
As both Gs and Gu are conditional generators, we also have
the unseen class labels associated with these synthetic in-
stances. These are then used to train a softmax classiﬁer to
perform conventional ZSL. For the GZSL setting we com-
bine the synthetically generated labeled unseen class rep-
resentations with the representations of seen class labeled
training instances to learn a softmax classiﬁer.

We average the correct predictions for each class and re-

port the average per class top accuracy [24, 26] as below.

M CAu =

1
|U | X

yu∈U

accyu

(10)

where, accyu denotes top-1 accuracy on test unseen data for
each class in U .

In the generalized ZSL setting, we compute average per
class top accuracy for both seen and unseen classes and
report the harmonic mean of seen and unseen accuracy
[24, 26] as deﬁned below

H =

2 ∗ M CAs ∗ M CAu

M CAs + M CAu

(11)

where, M CAu, M CAs denote the mean class accuracy on
test unseen and seen classes respectively.

4.2.1 Learning the optimal latent space

In all our experiments, we use Resnet-101[11] as the deep
convolutional architecture. Prior literature has suggested
using Resnet due to its on par or sometimes superior per-
formance over other architectures such as VGG and Incep-
tion. The transformation function ψ is deﬁned as two fully
connected layers of 2048 and 1024 hidden units with ReLU
activations acting on the ﬁnal pooling layer of Resnet. The
resulting 1024 dimensional space corresponds to the latent
space, Ψ of our network and is trained by the loss proposed
in equation 3. The classiﬁer fc is deﬁned as a single fully
connected layer output layer with softmax activation over
embedding space Ψ. The semantically aligning regressor
fr is deﬁned as a single output layer with the number of at-
tributes in c(ys) over embedding space Ψ. This entire net-
work is learned jointly. Learning rate is set to 0.001 and γ
is 0.01 across all the datasets.

4.2.2 Learning the bias reducing generators

The seen and unseen class generators are modeled using a
single fully connected hidden layer with 2048 leaky ReLU
units. The discriminators contain a single hidden layer with
4096 leaky ReLU units that is connected to the output layer.
Note that the SABR-I and SABR-T generators do not syn-
thesize instances in the original data space, but the repre-

7060

sentations in the latent space Ψ. The gradient penalty coef-
ﬁcient of the Wasserstein generators, λ is set to 10 and β, the
coefﬁcient that enforces the generators to learn the represen-
tations of the latent space is set to 0.1 across all datasets. We
ﬁrst train a conditional WGAN for the seen classes and then
adapt the WGAN for the unseen classes. The rest of hyper-
parameters are ﬁne tuned by stratiﬁed cross-validation over
the seen class training set.

5. Results and Discussion

5.1. Bias reduction in SABR I

In the inductive setting, as we do not have the unseen
class data, the generator Gs tends to be overly biased to-
wards the seen classes. We perform a three fold cross-
validation experiment on the seen class training examples
to validate this hypothesis. In each fold the seen class gen-
erator, Gs was allowed to train for a long time till the gen-
erator and discriminator converged. Samples for the unseen
class in the validation set were synthesized from the gener-
ator at different epochs. These instances were used to train
a classiﬁer model for the GZSL setting. The average har-
monic mean, H across the three folds as a function of the
number of training epochs of the SABR-I generator is pre-
sented in Figure 2. It can be observed that as the number
of training epochs increases, H increases initially but starts
decreasing beyond an epoch. For detailed analysis, we plot
the M CAu, M CAs and H values for AWA2. We observe
that as the training progresses, M CAs plateaus. However,
the accuracy on the unseen classes in the cross-validation
set M CAu increases initially, but starts decreasing beyond
epoch 45. Due to this, the overall H value decreases be-
yond this epoch. This behavior is very evident in the AWA2
dataset, and to a lesser extent in the CUB and SUN datasets
due to signiﬁcantly lesser number of training instances per
class. This indicates that over training of the model based
only on the seen class can bias the generator towards the
seen classes and lose its capacity to generalize. This bias-
ing is mitigated by stopping early at the best harmonic mean
achieved i.e. at the 40, 45, and 95 epoch for AWA2, CUB,
and SUN datasets respectively. In the transductive setting,
this bias is subdued due to the presence of unlabeled data
and there is no need for early stopping.

5.2. Bias reduction in SABR T

In the transductive setting, the hyper-parameter ω con-
trols the bias in Gu towards the seen classes. We tune this
hyper-parameter through cross-validation where the seen
classes are divided into seen and unseen classes, similar
to the inductive setting. Figure 3 illustrates the results ob-
tained by the SABR-T while varying ω during the cross-
validation process. We chose ω that performs best on this
cross-validation set. For AWA2, CUB and SUN the model

Figure 2. [Best viewed in color] Effect of bias measured by plot-
ting average harmonic mean, H on the validation set (left). De-
tailed analysis on AWA2 by visualizing M CAs, M CAu and H.

Figure 3. [Best viewed in color] Effect of the hyper-parameter ω
on the cross-validation set.

performs best at 0.008, 0.002 and 0.002 respectively. These
values are ﬁxed for the rest of the experiments.

5.3. Performance in the conventional ZSL setting

We compare our approach with existing state-of-the-art
inductive and transductive ZSL methods. The results for
the state of the art techniques reported in Table 1 are ob-
tained from Xian et al. [24, 26] and use the proposed splits
on AWA2, CUB, and SUN datasets with Resnet-101 as the
underlying CNN architecture.

The ﬁrst observation from Table 1 is that no single state
of the art method outperforms all the prior approaches on all
the datasets for both the inductive and transductive settings.
However, across all the inductive approaches, SABR-I per-
forms better on AWA2 by 1.4%, CUB by 7.9% and by 1.4%
on SUN dataset. While in the transductive setting, SABR-T
outperforms the current state-of-the-art by 9.2%, 1.9%, and
3.6% on the AWA2, CUB and SUN datasets respectively.
We attribute this high performance gain to the reduced bias
in the model by the better alignment of the marginals and
weak conditional transfer from the seen class generator. The
next best performing model on AWA2 and CUB in the trans-
ductive setting, QFSL, assumes a uniform distribution over
the unseen class label space, which we suspect is confusing

7061

I

Type Method
DAP[14]
IAP[14]
CONSE[15]
CMT[19]
SSE[30]
LATEM[23]
ALE[1]
DEVISE[10]
SJE[2]
ESZSL[17]
SYNC[7]
SAE[12]
GFZSL[21]
f-CLSWGAN[25]
PSR[3]
QFSL#[20]
SABR-I
ALE∗[24]
GFZSL∗[21]
DSRL∗[28]
QFSL#[20]
SABR-T

T

T

I

46.1
35.9
44.5
37.9
61
55.8
62.5
59.7
61.9
58.6
46.6
54.1
63.8

AWA2 CUB SUN
39.9
19.4
38.8
39.9
51.5
55.3
58.1
56.5
53.7
54.5
56.3
4.3
60
60.8
61.4
56.2
62.8

40
24
34.3
34.6
43.9
49.3
54.9
52
53.9
53.9
55.6
33.3
49.4
57.3
56
58.8
63.9

63.8
63.5
65.2

-

70.6
78.3
72.5
79.7
88.9

54.4
50.6
48.9
72.1
74.0

55.5
63.9
56.1
58.3
67.5

1 I - inductive ZSL setting, T - transductive ZSl setting.
2 Bold font denotes the best result while blue refers to the second best result.
3 All results with ∗ have been reported in Xian et al., [24] and are optimisti-

cally approximated by their graphs.

# Note that results reported on QFSL are on GoogleNet architecture.

Table 1. Performance in the conventional ZSL setting.

the classiﬁer.

The signiﬁcant performance jump in the transductive set-
ting over the inductive setting suggests the importance of
having the marginal probability distribution of the unseen
classes through the unlabeled instances. We further discuss
the robustness of our approach with the amount of unlabeled
data in section 5.5.

Figure 4. Change in the transductive ZSL and GZSL accuracy as a
function of the number of unseen class instances.

proves over f-CSLWGAN by 7.09% on CUB dataset. We
attribute this improvement to learning an optimal latent rep-
resentation for the dataset that is ﬁne tuned using the seen
class data. However, on the SUN dataset the performance
of SABR-I marginally better than f-CLSWGAN by 2.1%.
We speculate that the small number of training samples per
class in the SUN dataset is insufﬁcient to learn the optimal
latent space and the seen class generator for SABR-I.

In the transductive setting, SABR-T performs better than
QFSL by 7.61% and 9.38% on the AWA2 and SUN datasets
respectively. There are two potential reasons for this sig-
niﬁcant improvement. Firstly, QFSL ﬁne-tunes the en-
tire ResNet-101 architecture, while SABR-T learns a latent
space that preserves both the semantic relations and dis-
criminative information using the ResNet representations
without ﬁne tuning the ResNet model. This mitigates the
hubness problem. Secondly, QFSL tries to reduce the bias
of the seen classes in the latent space by encouraging the
output for unseen class instances to be uniformly distributed
across all the unseen classes. This results in loss of class
conditional information in the latent space.
In contrast,
SABR-T aligns the marginal distribution of the generated
samples with that of the true unseen class instances, and
learns the class conditionals from the seen class data. On the
CUB dataset, while SABR-T yields superior performance
over previous transductive approaches by 36.31%, except
QFSL, where there is a marginal drop of 2.9%.

5.4. Performance in the generalized ZSL setting

5.5. Amount of unlabeled data for transductive

Table 2 presents the results for the generalized ZSL set-
ting for various state-of-the-art approaches. SABR-I im-
proves over DAP[14], IAP[14], CONSE[15], CMT[19],
SSE[30], LATEM[23], ALE[1], DEVISE[10], SJE[2],
ESZSL[17], SYNC[7], SAE[12] and GFZSL[21] by a large
margin (over 10-20%) across all the benchmark datasets.
These methods utilized semantic space for the embed-
ding and thus faced the hubness problem. We observe
that SABR-I outperforms PSR[3] by 14.65%, 22.89%, and
12.31% on the AWA2, CUB and SUN datasets respectively.
This is because SABR-I not only preserves semantic rela-
tions in intermediate visual space like PSR but also, subdues
the biasing effect by synthesizing unseen class instances and
early stopping the training of the generator. SABR-I im-

learning

Prior transductive ZSL approaches and SABR-T utilize
all the available unlabeled unseen class instances for mod-
eling the marginal probability distributions in both ZSL and
GZSL settings. We hypothesize that the marginals of the
unseen class instances can be learned from a smaller subset
of unlabeled data. We conduct experiments using SABR-T
on the AWA2 and SUN datasets as these contain maximum
and minimum number of instances per class. SABR-T is
trained with a randomly selected subset of unlabeled un-
seen class instances and the average performance over 5 tri-
als for both ZSL and GZSL settings are reported in Figure 4.
As expected the performance on both the datasets increases
with increase in the number of unlabeled instances used dur-

7062

Type Method

DAP[14]
IAP[14]
CONSE[15]
CMT[15]
SSE[30]
LATEM[23]
ALE[1]
DEVISE[10]
SJE[2]
ESZSL[17]
SYNC[7]
SAE[12]
GFZSL[21]
f-CLSWGAN[25]
PSR[3]
SABR-I
ALE∗[24]
GFZSL∗[21]
DSRL∗[28]
QFSL[20]
SABR-T

I

I

T

T

0
0.9
0.5
0.5
8.1
11.5
14
17.1

AWA2
MCAu MCAs
84.7
87.6
90.6
90
82.5
77.3
81.8
74.7
73.9
77.8
90.5
82.2
80.1

8
5.9
10.1
1.1
2.5

-

20.7
30.3

-

73.8
93.9

66.2
79.7

93.1
91.0

CUB

SUN

1.7
0.2
1.6
7.2
8.5
15.2
23.7
23.8
23.5
12.6
11.5
7.8
0

H MCAu MCAs
67.9
0
72.8
1.8
1
72.2
49.8
1
46.9
57.3
62
53
59.2
63.8
70.9
54
45.7
57.7
54.3
58.7

14.8
20
23.9
27.8
14.4
11
18
2.2
4.8

43.7
24.6
55.03

32.3
46.9

-

4.2
1
6.8
8.1
2.1
14.7
21.8
16.9
14.7
11
7.9
8.8
0

H MCAu MCAs
25.1
3.3
37.8
0.4
3.1
39.9
21.8
12.6
36.4
14.4
28.8
24
33.1
34.4
32.8
27.4
30.5
33.6
27.9
21
43.3
19.8
13.6
18
39.6
36.6
37.2
35.1

42.6
20.8
50.7

49.7
33.9
56.8

0

21.7
40
32.3
77.4
85.0

30.4
33.5
28.9
73.2
70.3

71.5
67.2

74.9
73.7

51.3
58.8

31.2
41.5

H
7.2
1.8
11.6
11.8

4

19.5
26.3
20.9
19.8
15.8
13.4
11.8

0

39.4
26.7
41.5

21.1

0

20.5
38.8
48.6

1 I - inductive GZSL setting, T - transductive GZSL setting
2 Bold font denotes the best result while blue refers to the second best result.
3 All results with ∗ only have H value reported by Xian et al., [24] and are optimistically approximated by the graphs.

Table 2. Performance in the Generalized ZSL Setting.

ing training. Interestingly, on the AWA2 dataset, SABR-T
achieves the best performance with using only 6.5% of the
total unlabeled instances. We observe a similar trend on the
CUB and SUN dataset with the performance peaking by us-
ing only 10% and 35% of the unlabeled data respectively.

6. Summary and Future Work

In this work, we propose a novel approach, Semanti-
cally Aligned Bias Reducing (SABR) Zero Shot Learn-
ing, which focuses on solving both the hubness and bias
problems that are commonly faced by zero shot learning
(ZSL) techniques. SABR overcomes the hubness problem
by learning a latent space that preserves the semantic re-
lationship between the labels while encoding the discrimi-
nating information about the classes. Further, we also pro-
pose ways to reduce bias of the seen classes through a sim-
ple cross-validation process in the inductive setting and a
novel weak transfer constraint in the transductive setting.
Extensive experiments are conducted on three benchmark
datasets (AWA2, CUB, and SUN) to investigate the efﬁ-
cacy of the proposed model. The results suggest that SABR
signiﬁcantly outperforms existing state-of-the-art zero shot
learning algorithms by ∼1.5-9% in the conventional ZSL
setting and by ∼2-14% in the generalized ZSL for both the

inductive and transductive settings on most of the datasets.
We also demonstrate that SABR reaches peak performance
in the transductive setting by using only a fraction of the
unlabeled unseen class instances for training.

In future, we would like to explore other semantic spaces
like word vector embeddings or combination of different se-
mantic label embeddings to accurately model the relation-
ship between the seen and unseen class labels.
It would
also be beneﬁcial to explore ways to extract semantic label
embeddings from auxiliary sources as this would assist in
extending ZSL to many real-world scenarios.

7. Acknowledgement

We would like to thank the anonymous reviewers for
their suggestions. We are grateful to V. Karthik for the dis-
cussions during the early phase of this work and NVIDIA
for supporting this work through the academic hardware
grant program.

References

[1] Zeynep Akata, Florent Perronnin, Zaid Harchaoui, and
Cordelia Schmid. Label-embedding for image classiﬁcation.
IEEE Transactions on Pattern Analysis and Machine Intelli-
gence, pages 1425–1438, 2016.

7063

[2] Zeynep Akata, Scott Reed, Daniel Walter, Honglak Lee, and
Bernt Schiele. Evaluation of output embeddings for ﬁne-
grained image classiﬁcation.
In Proceedings of the IEEE
Conference on Computer Vision and Pattern Recognition,
pages 2927–2936, 2015.

[3] Yashas Annadani and Soma Biswas. Preserving semantic re-
lations for zero-shot learning.
In Proceedings of the IEEE
Conference on Computer Vision and Pattern Recognition,
pages 7603–7612, 2018.

[4] Mart´ın Arjovsky, Soumith Chintala, and L´eon Bottou.
Wasserstein generative adversarial networks. In Proceedings
of the International Conference on Machine Learning, pages
214–223, 2017.

[5] Jimmy Ba, Kevin Swersky, Sanja Fidler, and Ruslan
Salakhutdinov. Predicting deep zero-shot convolutional neu-
ral networks using textual descriptions. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 4247–4255, 2015.

[6] Maxime Bucher, St´ephane Herbin, and Fr´ed´eric Jurie. Gen-
erating visual representations for zero-shot classiﬁcation. In
Proceedings of the IEEE International Conference on Com-
puter Vision, 2017.

[7] Soravit Changpinyo, Wei-Lun Chao, Boqing Gong, and Fei
Sha. Synthesized classiﬁers for zero-shot learning. In Pro-
ceedings of the IEEE Conference on Computer Vision and
Pattern Recognition, pages 5327–5336, 2016.

[8] Wei-Lun Chao, Soravit Changpinyo, Boqing Gong, and Fei
Sha. An empirical study and analysis of generalized zero-
shot learning for object recognition in the wild. In Proceed-
ings of the European Conference on Computer Vision, pages
52–68, 2016.

[9] Georgiana Dinu, Angeliki Lazaridou, and Marco Baroni. Im-
proving zero-shot learning by mitigating the hubness prob-
lem. arXiv preprint arXiv:1412.6568, 2014.

[10] Corrado Greg S Frome, Andrea, Jon Shlens, Samy Ben-
gio, Jeff Dean, Tomas Mikolov, and MA Ranzato. Devise:
A deep visual-semantic embedding model. In Advances in
Neural Information Processing Systems, pages 2121–2129,
2013.

[11] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun.
Deep residual learning for image recognition. In Proceed-
ings of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 770–778, 2016.

[12] Elyor Kodirov, Tao Xiang, and Shaogang Gong.

Se-
mantic autoencoder for zero-shot learning. arXiv preprint
arXiv:1704.08345, 2017.

[13] Alex Krizhevsky, Ilya Sutskever, and Geoffrey E Hinton.
Imagenet classiﬁcation with deep convolutional neural net-
works. In Advances in Neural Information Processing Sys-
tems, pages 1097–1105, 2012.

[14] Christoph H Lampert, Hannes Nickisch, and Stefan Harmel-
ing. Attribute-based classiﬁcation for zero-shot visual object
categorization. IEEE Transactions on Pattern Analysis and
Machine Intelligence, 36(3):453–465, 2014.

[15] Mohammad Norouzi, Tomas Mikolov, Samy Bengio, Yoram
Singer, Jonathon Shlens, Andrea Frome, Greg S Corrado,
and Jeffrey Dean. Zero-shot learning by convex combination

of semantic embeddings. arXiv preprint arXiv:1312.5650,
2013.

[16] Miloˇs Radovanovi´c, Alexandros Nanopoulos, and Mirjana
Ivanovi´c. Hubs in space: Popular nearest neighbors in high-
dimensional data. Journal of Machine Learning Research,
11:2487–2531, 2010.

[17] Bernardino Romera-Paredes and Philip Torr. An embarrass-
ingly simple approach to zero-shot learning. In Proceedings
of the International Conference on Machine Learning, pages
2152–2161, 2015.

[18] Yutaro Shigeto,

Ikumi Suzuki, Kazuo Hara, Masashi
Shimbo, and Yuji Matsumoto. Ridge regression, hubness,
and zero-shot learning.
In Joint European Conference on
Machine Learning and Knowledge Discovery in Databases,
pages 135–151, 2015.

[19] Richard Socher, Milind Ganjoo, Christopher D Manning,
and Andrew Ng. Zero-shot learning through cross-modal
transfer. In Advances in Neural Information Processing Sys-
tems, pages 935–943, 2013.

[20] Jie Song, Chengchao Shen, Yezhou Yang, Yang Liu, and
Mingli Song. Transductive unbiased embedding for zero-
shot learning.
In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, pages 1024–
1033, 2018.

[21] Vinay Kumar Verma and Piyush Rai. A simple exponential
family framework for zero-shot learning. In Joint European
Conference on Machine Learning and Knowledge Discovery
in Databases, pages 792–808, 2017.

[22] Catherine Wah, Steve Branson, Peter Welinder, Pietro Per-
ona, and Serge Belongie. The caltech-ucsd birds-200-2011
dataset. 2011.

[23] Yongqin Xian, Zeynep Akata, Gaurav Sharma, Quynh
Nguyen, Matthias Hein, and Bernt Schiele. Latent embed-
dings for zero-shot classiﬁcation. In Proceedings of the IEEE
Conference on Computer Vision and Pattern Recognition,
pages 69–77, 2016.

[24] Yongqin Xian, Christoph H Lampert, Bernt Schiele, and
Zeynep Akata. Zero-shot learning-a comprehensive eval-
uation of the good, the bad and the ugly. arXiv preprint
arXiv:1707.00600, 2017.

[25] Yongqin Xian, Tobias Lorenz, Bernt Schiele, and Zeynep
Akata. Feature generating networks for zero-shot learning.
In Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, 2018.

[26] Yongqin Xian, Bernt Schiele, and Zeynep Akata. Zero-shot
learning-the good, the bad and the ugly. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, 2017.

[27] Jianxiong Xiao, James Hays, Krista A Ehinger, Aude Oliva,
and Antonio Torralba. Sun database: Large-scale scene
recognition from abbey to zoo. In Proceedings of the IEEE
Conference on Computer Vision and Pattern Recognition,
pages 3485–3492, 2010.

[28] Meng Ye and Yuhong Guo. Zero-shot classiﬁcation with
discriminative semantic representation learning. In Proceed-
ings of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 5103–5111, 2017.

7064

[29] Li Zhang, Tao Xiang, Shaogang Gong, et al. Learning a
deep embedding model for zero-shot learning. In Proceed-
ings of the IEEE Conference on Computer Vision and Pattern
Recognition, 2017.

[30] Ziming Zhang and Venkatesh Saligrama. Zero-shot learning
via semantic similarity embedding.
In Proceedings of the
IEEE International Conference on Computer Vision, pages
4166–4174, 2015.

[31] Ziming Zhang and Venkatesh Saligrama. Zero-shot learning
via joint latent similarity embedding. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 6034–6042, 2016.

7065

