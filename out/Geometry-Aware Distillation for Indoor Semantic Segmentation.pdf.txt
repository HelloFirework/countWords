Geometry-Aware Distillation for Indoor Semantic Segmentation

Jianbo Jiao1, Yunchao Wei2 ∗, Zequn Jie3, Honghui Shi4, Rynson Lau5, Thomas S. Huang2

1Department of Engineering Science, University of Oxford

2UIUC, 3Tencent AI Lab, 4IBM Research, 5City University of Hong Kong

jianbo@robots.ox.ac.uk, {wychao1987, zequn.nus, shihonghui3}@gmail.com

rynson.lau@cityu.edu.hk, t-huang1@illinois.edu

Abstract

It has been shown that jointly reasoning the 2D appear-
ance and 3D information from RGB-D domains is beneﬁcial
to indoor scene semantic segmentation. However, most ex-
isting approaches require accurate depth map as input to
segment the scene which severely limits their applications.
In this paper, we propose to jointly infer the semantic and
depth information by distilling geometry-aware embedding
to eliminate such strong constraint while still exploiting the
helpful depth domain information. In addition, we use this
learned embedding to improve the quality of semantic seg-
mentation, through a proposed geometry-aware propaga-
tion framework followed by several multi-level skip feature
fusion blocks. By decoupling the single task prediction net-
work into two joint tasks of semantic segmentation and ge-
ometry embedding learning, together with the proposed in-
formation propagation and feature fusion architecture, our
method is shown to perform favorably against state-of-the-
art methods for semantic segmentation on publicly avail-
able challenging indoor datasets.

1. Introduction

Semantic segmentation that infers semantic labels of ev-
ery pixel in an indoor scene is a fundamental yet challeng-
ing problem in computer vision. Obtaining better scene un-
derstanding by semantic segmentation beneﬁts many appli-
cations like robotics, visual SLAM and virtual/augmented
reality. Compared with RGB image based methods, RGB
with depth (RGB-D) based methods can leverage addi-
tional 3D geometry information from the scene to effec-
tively tackle ambiguities that are challenging for 2D appear-
ance solely approaches, e.g., some pillows on a bed with
similar color as the bed (Figure 1).

Prior RGB-D semantic segmentation methods have
achieved promising performance by incorporating the depth

∗Corresponding author

(a)

Ground-truth

DepEm

(b)

Illustration on the effectiveness of

Figure 1.
(b) distilling
geometry-aware depth embeddings compared to (a) the traditional
RGB, for semantic segmentation.

information [33, 12, 34, 13, 11, 6, 32]. There are mainly
two types of approaches to achieve the goal: using hand-
crafted features or deploying CNN-based models. Earlier
works use handcrafted image descriptors like SIFT or HOG
to extract features from the RGB images. Some specially
designed features (e.g., surface normal [34], depth gradi-
ent or spin [33]) for depth description are also used to as-
sist the ﬁnal segmentation. For CNN-based models, fully
convolutional networks (FCN) [28] greatly improve the per-
formance for semantic segmentation due to the highly rep-
resentative features extracted by a learning manner.
In
general, two separate FCNs are utilized to extract features
from RGB and depth channels, followed by a simple fu-
sion [28, 11] for semantic label prediction.

All the aforementioned approaches require ground-truth
depth map associated with the input RGB images. However,
collecting depth data from the scene is not convenient com-
pared to RGB image capturing and the alignment between
depth and RGB is a challenging problem itself. Therefore,
we are interested in such a question: is that possible to in-
corporate the geometry information for semantic segmenta-
tion with only one single RGB image as input?

Some research attempts [37] have been proposed to pre-

2869

dict depth information to help the semantic segmentation
task through a multi-task network. The performance gain
of semantic segmentation is mainly from simply post-fusion
strategy. We argue that the depth-aware features are not well
exploited by such approaches and we aim to learn better
geometry-aware feature representations implicitly.

In this work, we propose to distill/extract geometry-
aware information by learning dense depth embeddings in a
joint reasoning framework, for single RGB image seman-
tic segmentation.
Instead of directly taking a depth im-
age as input, the proposed model distills depth embeddings
that can guide semantic segmentation together with RGB
input.
In the proposed framework, such learned embed-
dings are fused with the feature from 2D appearance by a
proposed geometry-aware propagation block, which lever-
ages the geometry afﬁnity to guide semantic propagation.
Furthermore, we ﬁnd the segmentation result tends to lack
details especially near object boundaries. An incremental
cross-scale fusion scheme is proposed, in feature space, to
further enrich the structure details consequently. Some ob-
jects may have very similar 2D appearance that cannot be
well discriminated. With the proposed model, the 3D ge-
ometry information can be well embedded into the learned
features, leading the prediction to be both semantic consis-
tent and geometrical consistent. As shown in Figure 1 (a),
the pillows are difﬁcult to be segmented out solely based on
2D features, while with the learned embeddings (DepEm)
they can be well classiﬁed due to their different 3D geome-
try information to the surroundings (Figure 1(b)). The shape
of the bed also beneﬁts from the learned embeddings, which
reveals the effectiveness of the distilled geometry informa-
tion. The key idea of our approach is predicting semantic
labels from one single RGB image, while taking 3D ge-
ometry information into consideration implicitly. The main
contributions of this paper are summarized as:

• We propose a novel approach that distills geometry-
aware embeddings via implicit depth inference, which
effectively guides scene segmentation over RGB input.

• The proposed joint framework enables effective infor-
mation fusion between depth and semantic labels and
is end-to-end trainable.

• Our model achieves state-of-the-art performance on
challenging indoor semantic segmentation datasets of
NYU-Dv2 and SUN RGBD.

2. Related Work

RGB Semantic Segmentation. Owe to the great success
of deep learning in high-level vision tasks [21, 35], most
recent semantic segmentation approaches take advantage of
CNNs. In [28] an FCN structure that performs pixel-wise
classiﬁcation by end-to-end training is proposed. Later on,

FCN turned to be the basic structure for most CNN-based
methods [5, 25, 24, 9, 1]. Chen et al. [5] employed an
atrous convolution to expand the receptive ﬁeld followed
by fully connected Conditional Random Fields (CRFs). Be-
sides taking as a post-processing step, CRFs has also been
integrated into the networks [40, 2, 4] to enrich more de-
tailed prediction. To overcome the low-resolution limita-
tion of FCNs, some works [30, 3] proposed to use upcon-
volution (also known as deconvolution) layers to upsample
the features layer by layer. In [30], the authors made the
ﬁrst attempt to learn deconvolution network on top of con-
volutional layers and combined instance-wise segmentation
for the ﬁnal result. Another work [3] further added connec-
tions from encoder to decoder by pooling indices. Another
type of approach [28, 3, 24] leveraged multi-level/scale fea-
tures to predict the ﬁnal result. Li et al. [24] proposed a
network that iteratively combines multi-level features and
demonstrate large improvement.

RGB-D Semantic Segmentation. Different from 2D
RGB settings, RGB-D semantic segmentation is augmented
with the 3D geometry information provided by the depth
map. Early works [33, 12, 21, 34] design handcrafted fea-
tures tailored for RGB with depth information. Extracted
features are further fed into another model to do the classiﬁ-
cation. Similar to recent RGB semantic segmentation, CNN
also beneﬁts RGB-D approaches. Some methods [11, 28]
treated depth map as an additional channel for the input with
RGB image, while more recent works [13, 28, 32, 31, 38]
ﬁrst encoded the depth into a three-dimensional HHA (hor-
izontal disparity, height above ground, and angle with grav-
ity) image.
In addition to RGB semantic segmentation,
Long et al. [28] also reported their performance on RGB-D
data, by separately predicting features for the two modali-
ties and fusing for ﬁnal prediction. Eigen and Fergus [11]
leveraged depth and RGB images in a global-to-local frame-
work. Li et al. [23] fused the depth and RGB features by
LSTM layers. Cheng et al. [6] used two separate locality-
sensitive DeconvNets to combine HHA and RGB features
and recover sharp boundaries. Park et al. [31] extended the
ReﬁneNet [24] for RGB-D semantic segmentation. Qi et
al. [32] proposed a 3D graph neural network that builds on
3D point cloud from the depth map, to predict the semantic
labels of each pixel. These methods all taking the ground-
truth depth map as input.

Alternatively, some efforts have been made to lever-
age 3D geometry information without feeding ground-truth
depth into the model. Wang et al. [37] proposed a joint
framework to predict both depth and semantic maps, fol-
lowed by a hierarchical CRF. Only the ﬁnal layer of a CNN
is used to predict the semantics and the hierarchical CRF is
computationally expensive. Hoffman et al. [16] proposed
to hallucinate different modality during training but for de-

2870

tection task. Kokkinos [20] proposed a CNN called Uber-
Net that jointly handles several vision tasks (e.g., bound-
aries, surface normals, semantic segmentation, etc.), which
achieved competitive performance as well as high efﬁ-
ciency. In this way, semantic segmentation beneﬁts from
several vision tasks including the surface normal encoding
geometry information. However, information sharing be-
tween different tasks are not well explored.

3. Geometry-Aware Distillation

This section presents the proposed framework on
geometry-aware distillation to implicitly improve the se-
mantic segmentation performance. The whole network is
trained end-to-end by a joint objective function.

3.1. Learning Depth Aware Embedding

The goal of this work is to leverage the geometry (depth
here) information for semantic segmentation without ex-
plicitly requiring depth annotation as inputs. An intuitive
approach for such a purpose is to ﬁrst predict a depth
map from the input RGB image and then incorporate the
depth information into the traditional RGB-D segmentation
pipeline [13, 11]. Instead of taking such sequential and ad-
hoc solution, we propose to learn a depth-aware embedding
from the RGB image and simultaneously perform semantic
segmentation. We deﬁne the depth-aware embedding as the
representation encoding both depth information and pixel
afﬁnities at the semantic level.

Concretely, given an RGB image I with pixels Ii ∈
RR,G,B, the depth-aware embedding is from a learnable
projection function g(Ii) that transforms the RGB pixels
into a higher-dimension space with embedded correspond-
ing features. Then the embedding learning can be modeled
as an optimization problem:

n

E(g(Ii); D∗

i ) + s(Ii),

(1)

min

g

Xi=1

where E(x, x∗) is a data ﬁtting term and D∗ is the ground-
truth offering depth information to be embedded through
the projection. The second term s(x) = E(g′(x), x∗) is
a semantic one aiming to embed the semantic information,
where g′(·) partially shares weights with g(·). Here n is the
total number of pixels. In order to obtain a good projection
g, we parameterize it by a deep neural network model and
the embedding can be optimized by backpropagation. Thus,
g is deﬁned as fθ where f is a deep CNN with parameters
θ. Then the optimization (Eq. 1) is re-formulated as,

min

θ

n

Xi=1

E(fθ(Ii); D∗

i ) + sθ(Ii),

(2)

where s is parameterized by the same network model θ.

3.2. Geometry Aware Guided Propagation

After learning the embeddings, we deploy them to im-
prove semantic segmentation. Here we propose a geometry-
aware propagation (GAP) approach to leverage the learned
embeddings as guidance. In this way, the depth embedding
acts as an afﬁnity guidance providing geometry information
for better grouping the semantic features beyond 2D appear-
ance space. Given a point i in the embedding space with its
neighboring point j ∈ N (i), for the corresponding feature
point pj at location j in the score map used to predict se-
mantic labels, the propagation output qi at location i can be
formulated as,

qi = Pj Wij(Gem)pj

Pj Wij

,

(3)

where Gem = fθ(Ii) is the learned depth embedding and
Wij is the propagation weights derived from the geometry
guidance Gem. Since Wij represents the geometric afﬁnity
in embedding space, here we deﬁne it as a dot-product of
decoupled embeddings as,

Wij = η(Gi

em) · ϕ(Gj

em),

(4)

where η and ϕ decouple the original embedding into two
sub-embeddings, respectively.
In order to cope with the
dimension variation during the propagation, the semantic
feature is further projected to an embedding space accord-
ingly by δ(pj). In particular, the propagation weights are
designed by several convolution units which can be auto-
matically learned by backpropagation. Specially, the origi-
nal semantic feature is added back to the propagated result,
to avoid interruption during the whole propagation. Then
the proposed GAP block is deﬁned as,

qi = Pj η(Gi

em) · ϕ(Gj

em) · δ(pj)

+ pi.

(5)

Pj Wij

3.3. Network Architecture

In this section, we propose a specially designed deep
CNN architecture to distill the geometry-aware information
with guided propagation and pyramid feature fusion, for se-
mantic segmentation.

As shown in Figure 2, the proposed network consists
of ﬁve components: shared backbone network, semantic
segmentation branch, depth embedding branch, geometry-
aware propagation block, and skip pyramid fusion block.
The proposed network globally follows an encoder-decoder
structure, with multi-task predictions. The network weights
of the encoder backbone part are shared between the fol-
lowing two tasks. For the decoder part, the upper branch
predicts semantic labels while the lower branch learns the
depth embeddings by predicting depth map. Features from

2871

RGB

Backbone Network

SPF1

SPF2

SPF3

SPF4

GAP

Depth embeds

Depth

Segmentation

Figure 2. Overview of the proposed network architecture. Top part shows two parallel encoder-decoder networks predicting semantic labels
and depth information respectively. The weights of backbone encoders are shared with each other while decoders are task-speciﬁc. At the
end of decoders, the learned embeddings are used to improve the semantic features by a geometry-aware propagation (GAP) block. In the
bottom part, the distilled semantic features (blue block) are further fused with multi-level feature maps from the backbone to improve the
ﬁnal semantic segmentation performance.

v
n
o
C
1
x
1

 

v
n
o
C
1
x
1

 

v
n
o
C
1
x
1

 

m
r
o
N
h
c
t
a
B

m
r
o
N
h
c
t
a
B

m
r
o
N
h
c
t
a
B

v
n
o
C
1
x
1

 

m
r
o
N
h
c
t
a
B

GAP

t
a
c
n
o
C

1x1 Conv

1x1 Conv

1x1 Conv

BatchNorm

BatchNorm

BatchNorm

Vanilla

t
a
e
F
m
e
S

m
E
-
p
e
D

t
a
e
F
m
e
S

m
E
-
p
e
D

Figure 3. Detailed structure of the proposed GAP block (top) in
Figure 2, and a vanilla convolution block (bottom). ⊗ denotes
dot-product while ⊕ denotes element-wise summation.

the depth branch are propagated (by summation) to the se-
mantic branch to provide multi-scale depth guidance (Feat-
Prop).
In the decoders, different scale features are also
propagated to enrich the ﬁnal layer output. Each layer in
the decoders is upsampling followed by convolution. A
geometry-aware propagation block (GAP) is applied at the
end of the semantic branch to improve the quality of seman-
tic features with the learned embeddings as guidance. The
distilled output is further reﬁned by combining with multi-
level feature maps from the backbone network through the
skip pyramid fusion block (SPF). The score map from the
bottom SPF block is utilized for the ﬁnal semantic label pre-
diction. The semantic supervision is performed on both the
rightmost distilled features and each level of the side output

Figure 4. Structure of the proposed SPF block in Figure 2.

from SPFs. The corresponding depth map acts as a super-
vision for learning the embeddings. The whole network is
trained end-to-end by a joint objective function (detailed in
the objective function section).

Geometry-Aware Propagation. The proposed geometry
-aware propagation is implemented by several convolution
layers followed by batch normalization and element opera-
tions in our network. The detailed structure of the GAP is
shown in Figure 3. The depth embedding is ﬁrst sent into
two conv units to achieve the geometric afﬁnity. Then the
geometric afﬁnity is treated as a guidance to fuse with the
semantic features. Finally, the original semantic features are
combined with the fused information for the output, shown
as the blue block in Figure 3. The whole propagation main-
tains the dimension of the semantic features. A vanilla con-
volution block is also shown for comparison, which fuses
the depth and color features without knowing the underly-
ing combining strategy. In contrast, depth is explicitly de-
signed to act as a guidance for feature fusion in the GAP.

Skip Pyramid Fusion. As much detail information may
be lost when the image passes the encoder and decoder, we

2872

1x1 convReLUrescale1x1 convReLUconcat3x3 conv3x3 convInput FeatBackbone FeatBackboneFeatOutput FeatSide OutputSPF1…sideoutSPF2…(a)(a)(b)(b)(c)(c)(d)(d)try to enrich and recover more details in the ﬁnal seman-
tic feature maps as follows. Inspired by the feature pyra-
mid networks [26] for object detection, we propose to lever-
age multi-level features from the encoder backbone through
skip connections. Due to the bottleneck feature space be-
tween the encoder and decoder is the most sparse one with
least details, the ﬁnal feature maps recovered by the decoder
barely contain useful details. Thus we turn to the encoder
part to seek more information. The structure of the skip
pyramid fusion (SPF) block is shown in Figure 4. The ﬁrst
SPF (i.e., SPF1) takes the distilled feature as input, which
passes through a 1×1 convolution and is concatenated with
the feature map from the encoder backbone after proper re-
sizing. The combined features are propagated to another
SPF after a 3×3 convolution. At the same time, each SPF
predicts a side output for semantic segmentation.

3.4. Objective Function

For semantic segmentation, most methods utilize cross-
entropy to measure the difference between the predic-
tion and ground-truth labels. However, for existing se-
mantic segmentation datasets, e.g., NYU-Dv2 [34], SUN
RGBD [36], distribution of the semantic labels is dramat-
ically imbalanced. Very few semantic labels dominate the
whole dataset, leaving only a few samples for a great num-
ber of labels. We plot the distribution of the above two
datasets in Figure 5. As shown in the distribution, some
categories (wall, ﬂoor, etc.) have much more samples than
the others (bathtub, bag, etc.). This will bias the learning to
those dominant samples and result in low accuracy for the
minority categories. To alleviate the data imbalance issues,
we extend a recent loss function [27] proposed for object
detection, to our semantic segmentation task as follows,

Figure 5. The distribution of semantic labels on NYU-Dv2 (top)
and SUN RGBD (bottom). Horizontal axis shows the semantic
labels, while vertical axis shows the relative proportion of samples.

loss Ld acts as the data term in the optimization of embed-
ding learning shown in Equation (1).

Together with the loss Lsk (Ls at SPFk) for semantic
prediction at intermediate layers (aggregate for K layers),
our ﬁnal joint loss function is formulated as,

L = Ls + Ld +

Lsk.

K

Xk=1

(8)

Ls = −Xi Xc

(1 − pi,c)2 × ℓ∗ × log(pi,c),

(6)

4. Experiments

where i indexes the pixel, c ∈ 1, 2, 3, ... denotes the cate-
gory. pi,c is the predicted probability of pixel i belonging
to category c. ℓ∗ is the ground-truth label. By such loss, the
hard samples contribute more than the easy ones. For exam-
ple, if the prediction for one pixel is correct, e.g., p = 0.9,
Ls weights less with (1 − p)2 = 0.01; if a pixel is wrongly
predicted with p = 0.1, the weight will be as large as 0.81.
In addition to the semantic supervision, learning the
depth-aware embeddings requires supervision from depth
domain. Following a state-of-the-art algorithm [22] for
depth estimation, we use the berHu loss for our depth su-
pervision deﬁned as,

Ld =Xi (|di − D∗

i )2+δ2
(di−D∗
2δ

i |,

|di − D∗
|di − D∗

i | ≤ δ
i | > δ

,

,

(7)

where di is the predicted depth derived from the embed-
dings g(Ii) for pixel i, δ = 0.2 · maxi(|di − D∗
i |). Then the

4.1. Datasets and Metrics

We evaluate our method mainly on two public datasets:
the popular NYU-Dv2 [34] dataset and a large-scale SUN
RGBD [36] dataset. The NYU-Dv2 dataset consists of
1449 image samples with both dense semantic labels and
depth information, from 464 different scenes captured by
Microsoft Kinect. The standard split by [34] involves 795
images from 249 scenes for training and 654 images from
215 scenes for testing. The semantic labels cover nearly
900 different categories. Following [12], we use the pro-
jected 40-category labels in our experiment. The SUN
RGBD dataset consists of 10335 RGB-D image pairs also
with pixel-wise semantic labels, come from existing RGB-
D datasets [34, 17, 39] as well as newly captured data. We
use the standard training/testing split [36] of 5285/5050 in
our experiment with 37-category semantic labels.

To evaluate the performance of our method, we employ
the commonly used metrics in recent works [6, 31, 32, 12,

2873

Table 1. Comparison with state-of-the-arts on NYU-Dv2 dataset.
Percentage (%) of pixel accuracy, mean accuracy, and mean IoU
are shown for evaluation.

Method

Input

PixAcc. mAcc. mIoU

RGBD
Gupta et al. [12]
Eigen & Fergus [11]
RGBD
FCN [28]
RGBD
Lin et al. [25]
RGB
Mousavian et al. [29] RGB
Cheng et al. [6]
Gupta et al. [13]
Deng et al. [10]
ReﬁneNet [24]
3DGNN [32]
D-CNN [38]
RDFNet [31]
Proposed

RGBD
RGBD
RGBD
RGB
RGBD
RGBD
RGBD
RGB

60.3
65.6
65.4
70.0
68.6
71.9
60.3
63.8
73.6

-
-

76.0
84.8

35.1
45.1
46.1
53.6
52.3
60.7

-
-

58.9
55.7
61.1
62.8
68.7

28.6
34.1
34.0
40.6
39.2
45.9
28.6
31.5
46.5
43.1
48.4
50.1
59.6

28]: pixel accuracy (PixAcc.), mean accuracy (mAcc.), and
mean intersection over union (mIoU).

4.2. Implementation Details

We implement our network with the PyTorch framework
on an 8-GPU machine. We use the pre-trained ResNet-
50 [14] as our backbone network and four up-convolution
blocks for the decoder branches. The network parameters
except the backbone are initialized by the method in [15].
We use Adam solver [19] with (β1, β2) = (0.9, 0.999) to
optimize the network. Gradient clipping is utilized for the
semantic branch and the SPF blocks. The learning rates are
initialized as 10−5 for the backbone and 10−2 for the other
parts, and divided by 10 for every 40 epochs. The batch
size is set to 8. During training, the images are ﬁrst down-
sampled to 320 × 240 with data augmentation applied. We
use random horizontal ﬂipping, cropping, and image color
augmentation (e.g., gamma shift, brightness shift, etc.). The
predicted semantic segmentation map is up-sampled to the
original size for evaluation.

4.3. Comparison with State of the art

NYU-Dv2 Dataset. The comparison results on the NYU-
Dv2 dataset with 40-category are shown in Table 1. It can
be observed that our approach leads to substantial improve-
ments over the current state-of-the-arts. Note that most
methods on the NYU-Dv2 are RGB-D methods, means the
ground-truth depth map is taken as one of the input sources.
Although our method only takes the RGB image as input,
it performs better than the RGB-D based methods. Re-
ﬁneNet [24] and RDFNet [31] also utilize multi-scale in-
formation but combine features only at the backbone by a
complex conﬁguration without side supervision. These re-
sults in Table 1 also reveal that incorporating depth infor-

mation generally improves the performance.

In addition, to evaluate the performance of our model
on the imbalanced distributed data, we also show the re-
sults on each category, as in Table 2. From the category-
wise results shown in the table, we can see that our method
performs better than other methods in most categories. Spe-
cially, on some “hard” categories (e.g., shelves, books, bag),
our method still achieves a relatively higher IoU. We owe
the robustness among almost all the categories to the ef-
fectively learned depth embeddings with associated feature
sharing/fusion with the 2D color information, and the newly
introduced loss function. For the board (whiteboard in Fig-
ure 5) category which is also with few samples and even dif-
ﬁcult to be distinguished from the wall or picture on depth
map, our model surpasses others. This in part validates the
effectiveness of our distilled geometry-aware information
with joint fusion strategy. Notice our model performs not
well on some categories like the person, wall, ﬂoor, which
may due to our joint reasoning property of both 2D and 3D
implicitly, as the depth may vary a lot in different scenes
compared to the corresponding 2D appearance.

SUN RGBD Dataset. We also compare our method with
state-of-the-arts on the large-scale SUN RGBD dataset. The
results are shown in Table 3. As some methods in Table 1
not reported the performance on SUN RGBD dataset while
other methods only reported on the SUN RGBD, the com-
pared methods may vary from Table 1 to Table 3. The
comparison on this large-scale dataset again validates the
effectiveness of the proposed method, with better perfor-
mance than the compared methods. Note there are many
low-quality depth maps in SUN RGBD dataset caused by
the capture device [36, 31], which may affect the auxil-
iary utility from the depth. From the results we can see,
even without manually clipping the data our method can
achieve state-of-the-art performance, which indicates that
the learned depth-aware embedding is effective in repre-
senting 3D information.

Generalization. To evaluate the generalization capability
of the proposed method, we ﬁrst ﬁne-tune our model on
a recent proposed larger dataset (ScanNet [8]), where the
mIoU achieves 56.9 on the val set. In addition, we further
test on an outdoor scene (CityScapes [7]) for reference, re-
sulting in a mIoU of 71.4 on val. While on par with state-of-
the-arts, these additional evaluations demonstrate the gener-
alization ability of our model to a certain extent.

4.4. Ablation Study

In order to discover the functionality of each component
in the proposed network, in this section we conduct an ab-
lation study on the NYU-Dv2 dataset. All the training and
testing procedures of each ablative experiment are kept the

2874

Table 2. Comparison with state-of-the-arts on each category of the NYU-Dv2 dataset. Percentage (%) of IoUs are shown for evaluation,
with best performance marked in bold.

Method

FCN [28]
Gupta et al. [13]
Deng et al. [10]
Cheng et al. [6]
RDFNet [31]
Proposed

Method

FCN [28]
Gupta et al. [13]
Deng et al. [10]
Cheng et al. [6]
RDFNet [31]
Proposed

l
l
a
w

69.9
68.0
65.6
78.5
79.7
71.4

s
e
h
t
o
l
c

18.3
4.7
12.6
24.7
26.9
53.1

r
o
o
ﬂ

79.4
81.3
79.2
87.1
87.0
75.2

g
n
i
l
i
e
c

59.1
60.5
56.7
62.0
69.1
58.1

t
e
n
i
b
a
c

50.3
44.9
51.9
56.6
60.9
71.3

s
k
o
o
b

27.3
6.4
8.9
34.2
35.0
42.9

d
e
b

66.0
65.0
66.7
70.1
73.4
77.1

e
g
d
i
r
f

27.0
14.5
21.6
45.3
58.9
62.2

r
i
a
h
c

47.5
47.9
41.0
65.2
64.6
53.3

v
t

41.9
31.0
19.2
53.4
63.8
71.7

a
f
o
s

53.2
47.9
55.7
63.9
65.4
69.5

r
e
p
a
p

15.9
14.3
28.0
27.7
34.1
40.0

e
l
b
a
t

32.8
29.9
36.5
46.9
50.7
51.4

l
e
w
o
t

26.1
16.3
28.6
42.6
41.6
58.2

r
o
o
d

22.1
20.3
20.3
35.9
39.9
63.7

r
e
w
o
h
s

14.1
4.2
22.9
23.9
38.5
79.2

w
o
d
n
i
w

39.0
32.6
33.2
47.1
49.6
68.2

x
o
b

6.5
2.1
1.6
11.2
11.6
44.1

f
l
e
h
s
k
o
o
b

36.1
18.1
32.6
48.9
44.9
57.3

d
r
a
o
b

12.9
14.2
1.0
58.8
54.0
72.6

e
r
u
t
c
i
p

50.5
40.3
44.6
54.3
61.2
61.4

n
o
s
r
e
p

57.6
0.2
9.6
53.2
80.0
55.9

r
e
t
n
u
o
c

54.2
51.3
53.6
66.3
67.1
53.1

d
n
a
t
s
t
h
g
i
n

30.1
27.2
30.6
54.1
45.3
55.0

s
d
n
i
l
b

45.8
42.0
49.1
51.7
63.9
77.1

t
e
l
i
o
t

61.3
55.1
48.4
80.4
65.7
72.5

k
s
e
d

11.9
11.3
10.8
20.6
28.6
55.2

k
n
i
s

44.8
37.5
41.8
59.2
62.1
50.8

s
e
v
l
e
h
s

8.6
3.5
9.1
13.7
14.2
52.5

p
m
a
l

32.1
34.8
28.1
45.5
47.1
33.6

n
i
a
t
r
u
c

32.5
29.1
47.6
49.8
59.7
70.4

b
u
t
h
t
a
b

39.2
38.2
27.6
52.6
57.3
72.3

r
e
s
s
e
r
d

31.0
34.8
27.6
43.2
49.0
64.2

g
a
b

4.8
0.2
0

15.9
19.1
46.3

w
o
l
l
i
p

37.5
34.4
42.5
50.4
49.9
51.6

.
t
c
u
r
t
s

.
t
o

15.2
7.1
9.8
12.7
30.7
50.6

r
o
r
r
i

m

22.4
16.4
30.2
48.5
54.3
68.3

.

n
r
u
f

.
t
o

7.7
6.1
7.6
16.4
20.6
54.1

t
a
m
r
o
o
ﬂ

13.6
28.0
32.7
32.2
39.4
61.3

.
s
p
o
r
p

.
t
o

30.0
23.1
24.5
29.3
39.0
37.8

Table 3. Comparison with state-of-the-arts on the SUN RGBD.

Table 4. Ablation study of the proposed model on the NYU-Dv2.

Method

Input

PixAcc. mAcc. mIoU

RGB
SegNet [3]
Lin et al. [25]
RGB
Bayesian-SegNet [18] RGB
ReﬁneNet [24]
RGB
Cheng et al. [6]
RGBD
3DGNN [32]
RGBD
RGBD
D-CNN [38]
RGBD
RDFNet [31]
Proposed
RGB

72.63
78.4
71.2
80.6

-
-
-

81.5
85.5

44.76
53.4
45.9
58.5
58.0
57.0
53.5
60.1
74.9

31.84
42.3
30.7
45.9

-

45.9
42.0
47.7
54.5

same. Taking the semantic-only without depth information
as a baseline, the performance of each component is shown
in Table 4. The results in the table show that, by utiliz-
ing the new loss function (Ls) for the network training, se-
mantic segmentation performance is improved by a large
margin. This mainly due to its specially designed conﬁgu-
ration for the hard categories with very few samples. An-
other observation is that, incorporating depth information
enables a boost in the performance considerably, which re-
veals the effectiveness of reasoning 2D and 3D information
together. Although the strategy of using ground-truth depth
as input (encoded by HHA [13]) shows the effectiveness of
the depth information, the proposed approach of learning
depth-aware embeddings (DepEm) further boosts the per-
formance. Feature propagation (FeatProp) from the depth
branch to the semantic branch enables a thorough RGB-
D fusion implicitly in the feature space. By introducing
the geometry-aware propagation scheme, the performance
is signiﬁcantly improved. For the two fusion solutions (Fig-
ure 3), geometry-aware propagation (GAP) performs better
than the vanilla convolution (VanConv). We owe this to the

Model

PixAcc. mAcc. mIoU

sem-only
sem+Ls
sem+Ls+HHA
sem+Ls+DepEm
sem+Ls+DepEm+FeatProp
sem+Ls+DepEm+FeatProp+VanConv
sem+Ls+DepEm+FeatProp+GAP
sem+Ls+DepEm+FeatProp+GAP+SPF

64.7
70.4
72.0
75.6
77.9
81.6
83.4
84.8

44.1
50.3
53.2
57.5
60.0
64.9
65.6
68.7

36.0
40.6
42.4
44.7
45.4
55.1
56.0
59.6

geometric afﬁnity distilled from the depth embedding. The
ﬁnal SPF blocks for multi-level fusion with the encoder fea-
tures give another rise in the performance.

4.5. Analysis on Depth Supervision

Although our model does not need any depth information
as input during test time, the depth supervision is still neces-
sary for the network training. In this section, we analyze the
possibility of semi-supervision from depth, i.e., with only
partial depth information during training. We perform the
experiments on the NYU-Dv2 dataset. The original depth
training data is rearranged into four different subsets that
contain 20%, 40%, 60%, and 80% of the full training set.
All these subsets are constructed by random selection from
the original set. For the network training, as depth informa-
tion may not exist for a training sample, in such cases, we
freeze the learning of the depth branch and only perform in-
ference. The other parts of the network are trained by the
same strategy as the previous experiments. The results are
shown in Table 5. Using 0% of depth data means only the
semantic branch is reserved (i.e., sem+Ls), while for 20% –
100% all the other components are included (i.e., the whole
model). The results reveal that depth information is impor-
tant to help the semantic segmentation when performing as

2875

(
a
)
 
I
n
p
u
t
 

R
G
B

(
b
)
 

G
r
o
u
n
d
-
t
r
u
t
h

(
c
)
 
S
e
m
-
o
n
l
y

(
d
)
 

W

i
t
h
o
u
t
 

S
P
F

(
e
)
 
P
r
o
p
o
s
e
d

Figure 6. Qualitative performance on NYU-Dv2 dataset.
compared to the result with only semantic branch (c), and the result without the SPFs (d).

(a) and (b) are the input and ground-truth, respectively. Our method (e) is

Table 5. Performance evaluation for semi-supervision from depth.

Data size

0% 20% 40% 60% 80% 100%

PixAcc.
mAcc.
mIoU

70.4
50.3
40.6

71.2
51.0
41.1

77.2
58.3
45.6

80.0
68.2
51.6

83.1
70.3
55.2

84.8
68.7
59.6

a supervision. In addition, more supervision from the depth
data leads to a better performance. Note that even with only
20% of the depth supervision, our model is able to result in a
slightly better performance than the baseline without depth,
which demonstrates the effectiveness of our model to learn
the depth-aware embeddings for semantic segmentation.

4.6. Qualitative Performance

We show some qualitative results of our method on the
NYU-Dv2 dataset for semantic segmentation in Figure 6.
For comparison, we also include the visual results of with-
out the depth information (sem-only) and without the skip
pyramid feature fusion (without SPF). From the result we
can see that by learning the depth-aware embeddings, the
geometry information is well distilled. For example, the
pillows have very similar patterns to the bed, which cannot
be easily discriminated by just the 2D appearance (c), while
with the depth embeddings (d, e) they can be well separated
to corresponding categories. Similar examples can be found
in the dustbin of the third column and the door in the last
column. Furthermore, when incorporating the SPF blocks

(e) for fusion with the backbone features that are closer to
the image domain, more context information and object de-
tails are recovered. For example the pictures and decora-
tions on the wall of the ﬁrst column, the tiny socket in the
second last example, and the windows, paintings across all
the shown examples, etc.

5. Conclusions

In this paper, we presented a new framework that takes
full advantage of the 3D geometry information by distilling
depth-aware embedding implicitly for single RGB image
semantic segmentation. The geometric distillation and se-
mantic label prediction are jointly reasoned by decoupling
a shared backbone network. The learned embeddings are
used as a guidance to improve the semantic features by a
geometry-aware propagation architecture. The distilled fea-
tures are further fed back to the shared backbone to fuse
with multi-level context information by skip pyramid fusion
blocks. Our model captures both 2D appearance and 3D ge-
ometry information by only taking one single RGB image
as input. Experiments on indoor RGB-D semantic segmen-
tation benchmarks demonstrate that our model achieves fa-
vorable performance against state-of-the-art methods.

Acknowledgments: We acknowledge the support of EP-
SRC Programme Grant Seebibyte EP/M013774/1 and
IARPA D17PC00341. YW is supported by IBM-ILLINOIS
Center for Cognitive Computing Systems Research (C3SR).

2876

References

[1] Iasonas Kokkinos Adam W Harley, Konstantinos G. Derpa-
nis. Segmentation-aware convolutional networks using local
attention masks. In ICCV, 2017. 2

[2] Anurag Arnab, Sadeep Jayasumana, Shuai Zheng, and
Philip HS Torr. Higher order conditional random ﬁelds in
deep neural networks. In ECCV, 2016. 2

[3] Vijay Badrinarayanan, Alex Kendall, and Roberto Cipolla.
Segnet: A deep convolutional encoder-decoder architecture
for image segmentation. IEEE TPAMI, 39(12):2481–2495,
2017. 2, 7

[4] Siddhartha Chandra and Iasonas Kokkinos. Fast, exact and
multi-scale inference for semantic image segmentation with
deep gaussian crfs. In ECCV, 2016. 2

[5] Liang-Chieh Chen, George Papandreou, Iasonas Kokkinos,
Kevin Murphy, and Alan L Yuille. Semantic image segmen-
tation with deep convolutional nets and fully connected crfs.
In ICLR, 2015. 2

[6] Yanhua Cheng, Rui Cai, Zhiwei Li, Xin Zhao, and Kaiqi
Locality-sensitive deconvolution networks with
In

Huang.
gated fusion for rgb-d indoor semantic segmentation.
CVPR, 2017. 1, 2, 6, 7

[7] Marius Cordts, Mohamed Omran, Sebastian Ramos, Timo
Rehfeld, Markus Enzweiler, Rodrigo Benenson, Uwe
Franke, Stefan Roth, and Bernt Schiele. The cityscapes
dataset for semantic urban scene understanding. In CVPR,
2016. 6

[8] Angela Dai, Angel X. Chang, Manolis Savva, Maciej Hal-
ber, Thomas Funkhouser, and Matthias Nießner. Scannet:
Richly-annotated 3d reconstructions of indoor scenes.
In
CVPR, 2017. 6

[9] Jifeng Dai, Kaiming He, and Jian Sun. Boxsup: Exploit-
ing bounding boxes to supervise convolutional networks for
semantic segmentation. In ICCV, 2015. 2

[10] Zhuo Deng, Sinisa Todorovic, and Longin Jan Latecki. Se-
mantic segmentation of rgbd images with mutex constraints.
In ICCV, 2015. 6, 7

[11] David Eigen and Rob Fergus. Predicting depth, surface nor-
mals and semantic labels with a common multi-scale convo-
lutional architecture. In ICCV, 2015. 1, 2, 3, 6

[12] Saurabh Gupta, Pablo Arbelaez, and Jitendra Malik. Per-
ceptual organization and recognition of indoor scenes from
rgb-d images. In CVPR, 2013. 1, 2, 5, 6

[13] Saurabh Gupta, Ross Girshick, Pablo Arbel´aez, and Jitendra
Malik. Learning rich features from rgb-d images for object
detection and segmentation. In ECCV, 2014. 1, 2, 3, 6, 7

[14] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun.
Deep residual learning for image recognition. arXiv preprint
arXiv:1512.03385, 2015. 6

[15] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun.
Delving deep into rectiﬁers: Surpassing human-level perfor-
mance on imagenet classiﬁcation. In ICCV, 2015. 6

[16] Judy Hoffman, Saurabh Gupta, and Trevor Darrell. Learn-
ing with side information through modality hallucination. In
CVPR, 2016. 2

[17] Allison Janoch, Sergey Karayev, Yangqing Jia, Jonathan T
Barron, Mario Fritz, Kate Saenko, and Trevor Darrell. A

category-level 3d object dataset: Putting the kinect to work.
In Consumer Depth Cameras for Computer Vision, pages
141–165. 2013. 5

[18] Alex Kendall, Vijay Badrinarayanan, and Roberto Cipolla.
Bayesian segnet: Model uncertainty in deep convolutional
encoder-decoder architectures for scene understanding.
In
BMVC, 2015. 7

[19] Diederik P Kingma and Jimmy Ba. Adam: A method for
arXiv preprint arXiv:1412.6980,

stochastic optimization.
2014. 6

[20] Iasonas Kokkinos. Ubernet: Training a universal convolu-
tional neural network for low-, mid-, and high-level vision
using diverse datasets and limited memory. In CVPR, 2017.
3

[21] Alex Krizhevsky, Ilya Sutskever, and Geoffrey E Hinton.
Imagenet classiﬁcation with deep convolutional neural net-
works. In NeurIPS, 2012. 2

[22] Iro Laina, Christian Rupprecht, Vasileios Belagiannis, Fed-
erico Tombari, and Nassir Navab. Deeper depth prediction
with fully convolutional residual networks.
In 3D Vision
(3DV), 2016. 5

[23] Zhen Li, Yukang Gan, Xiaodan Liang, Yizhou Yu, Hui
Cheng, and Liang Lin. Lstm-cf: Unifying context model-
ing and fusion with lstms for rgb-d scene labeling. In ECCV,
2016. 2

[24] Guosheng Lin, Anton Milan, Chunhua Shen, and Ian
Reid. Reﬁnenet: Multi-path reﬁnement networks for high-
resolution semantic segmentation. In CVPR, 2017. 2, 6, 7

[25] Guosheng Lin, Chunhua Shen, Anton Van Den Hengel, and
Ian Reid. Efﬁcient piecewise training of deep structured
models for semantic segmentation.
In CVPR, 2016. 2, 6,
7

[26] Tsung-Yi Lin, Piotr Doll´ar, Ross Girshick, Kaiming He,
Bharath Hariharan, and Serge Belongie. Feature pyramid
networks for object detection. In CVPR, 2017. 5

[27] Tsung-Yi Lin, Priya Goyal, Ross Girshick, Kaiming He, and
Piotr Dollar. Focal loss for dense object detection. In ICCV,
2017. 5

[28] Jonathan Long, Evan Shelhamer, and Trevor Darrell. Fully
In

convolutional networks for semantic segmentation.
CVPR, 2015. 1, 2, 6, 7

[29] Arsalan Mousavian, Hamed Pirsiavash, and Jana Koˇseck´a.
Joint semantic segmentation and depth estimation with deep
convolutional networks. In 3D Vision (3DV), 2016. 6

[30] Hyeonwoo Noh, Seunghoon Hong, and Bohyung Han.
Learning deconvolution network for semantic segmentation.
In ICCV, 2015. 2

[31] Seong-Jin Park, Ki-Sang Hong, and Seungyong Lee. Rdfnet:
Rgb-d multi-level residual feature fusion for indoor semantic
segmentation. In ICCV, 2017. 2, 6, 7

[32] Xiaojuan Qi, Renjie Liao, Jiaya Jia, Sanja Fidler, and Raquel
Urtasun. 3d graph neural networks for rgbd semantic seg-
mentation. In ICCV, 2017. 1, 2, 6, 7

[33] Xiaofeng Ren, Liefeng Bo, and Dieter Fox. Rgb-(d) scene

labeling: Features and algorithms. In CVPR, 2012. 1, 2

[34] Nathan Silberman, Derek Hoiem, Pushmeet Kohli, and Rob
Indoor segmentation and support inference from

Fergus.
rgbd images. In ECCV, 2012. 1, 2, 5

2877

[35] Karen Simonyan and Andrew Zisserman. Very deep convo-
lutional networks for large-scale image recognition. arXiv
preprint arXiv:1409.1556, 2014. 2

[36] Shuran Song, Samuel P Lichtenberg, and Jianxiong Xiao.
Sun rgb-d: A rgb-d scene understanding benchmark suite. In
CVPR, 2015. 5, 6

[37] Peng Wang, Xiaohui Shen, Zhe Lin, Scott Cohen, Brian
Price, and Alan L Yuille. Towards uniﬁed depth and seman-
tic prediction from a single image. In CVPR, 2015. 1, 2

[38] Weiyue Wang and Ulrich Neumann. Depth-aware cnn for

rgb-d segmentation. In ECCV, 2018. 2, 6, 7

[39] Jianxiong Xiao, Andrew Owens, and Antonio Torralba.
Sun3d: A database of big spaces reconstructed using sfm
and object labels. In ICCV, 2013. 5

[40] Shuai Zheng, Sadeep Jayasumana, Bernardino Romera-
Paredes, Vibhav Vineet, Zhizhong Su, Dalong Du, Chang
Huang, and Philip HS Torr. Conditional random ﬁelds as
recurrent neural networks. In ICCV, 2015. 2

2878

