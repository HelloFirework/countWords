Event Cameras, Contrast Maximization and Reward Functions: an Analysis

Timo Stoffregen1,2, Lindsay Kleeman1

1Dept. Electrical and Computer Systems Engineering, Monash University, Australia.

2Australian Centre of Excellence for Robotic Vision, Australia.

Abstract

Event cameras asynchronously report

timestamped
changes in pixel intensity and offer advantages over conven-
tional raster scan cameras in terms of low-latency, low re-
dundancy sensing and high dynamic range. In recent years,
much of research in event based vision has been focused on
performing tasks such as optic ﬂow estimation, moving ob-
ject segmentation, feature tracking, camera rotation estima-
tion and more, through contrast maximization. In contrast
maximization, events are warped along motion trajectories
whose parameters depend on the quantity being estimated,
to some time tref. The parameters are then scored by some
reward function of the accumulated events at tref. The ver-
satility of this approach has lead to a ﬂurry of research in
recent years, but no in-depth study of the reward chosen
during optimization has yet been made. In this work we ex-
amine the choice of reward used in contrast maximization,
propose a classiﬁcation of different rewards and show how
a reward can be constructed that is more robust to noise and
aperture uncertainty. We validate our work experimentally
by predicting optical ﬂow and comparing to ground-truth.

1. Introduction

Event cameras, also known as Dynamic Vision Sensors
or Neuromorphic Cameras [1], have presented vision and
robotics researchers with a new class of visual information.
Where traditional frame-based cameras sample the scene at
a ﬁxed rate, event cameras capture visual information asyn-
chronously, corresponding to intensity changes at each pixel
location. As the intensity at a pixel changes above a cer-
tain threshold, an event is generated as a tuple of x, y posi-
tion, timestamp t and intensity change sign s. Event based
cameras offer several advantages over traditional cameras
in terms of low latency, high dynamic range (120 dB) and
low power consumption (10 mW) [2].

Event data is inherently sparse, because static back-
grounds or otherwise slowly changing elements in the scene
don’t generate events. Since conventional cameras sample
the scene based on a ﬁxed clock, they under-sample swiftly

(a) Event
around a scene.

camera moves

(b) Events (red) generated
by intensity gradients in the
scene (black).

]
d
n
o
c
e
s
/
s
l
e
x
p
[
 
y
v

i

50

0

50

d
r
a
w
e
R

50

50
vx [pixels/second]

0

(d) Motion-compensating the
events reveals the original
gradients.

(c) Plot of reward vs opti-
cal ﬂow estimate. Red dot-
ted lines = ground truth, black
circle = estimate.
Figure 1: Contrast Maximization: Events generated by
scene or camera motion (1a) form a point cloud in a space-
time volume (1b).
If the events are motion-compensated
by some trajectory, the contrast at that point can be evalu-
ated by some reward. Since the resulting reward has gradi-
ents with respect to trajectory parameters (1c), the original
trajectory can be estimated, giving optic ﬂow and motion-
correction (1d) in one step.

changing scenes or redundantly over-sample slowly chang-
ing scenes. In contrast, an event camera samples the scene
at a rate proportional to the dynamics of the scene.

Events carry little information individually and so are not
meaningfully treated in isolation. So far, event based algo-
rithms have been in one of two categories: those which op-
erate on individual events to update some previous state and
those which operate on a set of events to perform a given
task or estimate a particular quantity [3]. Those methods
which operate on individual events typically require historic

112300

information, such as grayscale images reconstructed from
the event stream to make inferences. On the other hand,
those which operate on a set of events require no external
information. As noted in [3], the former category can be
further broken down into those methods which (a) discard
the temporal information carried by the events, for exam-
ple by accumulating the events into frames over a temporal
window and then performing computations on those frames
(such as [4–7]) and those (b) which utilize the temporal in-
formation of the events (such as [3, 6, 8–18]). This group
tends to require more novel techniques, since traditional
computer vision algorithms are not well suited to dealing
with the continuous time representations that events attempt
to approximate.

One such technique is that of contrast maximization
(CM), whereby events are warped along point trajectories
to the image plane. The trajectories can then be optimized
with respect to the resulting image of warped events (IWE)
H to recover the point trajectories that best ﬁt the original
set of events.

1.1. Contrast Maximization

Contrast maximization (CM) emerged recently as a
promising technique for solving a number of problems in
event based vision. Since events are produced by inten-
sity gradients moving over the image plane, CM makes the
assumption that if the events are motion compensated by
warping them along their point trajectories to some dis-
cretized plane at time tref, events generated by the same
point on the intensity gradient will project to the same lo-
cation at tref and accumulate there, (see Fig. 2) giving
a resulting image of warped events H (Fig. 1). While it
is possible to generate an IWE with any arbitrary trajec-
tory, certain quantities such as the contrast of the IWE will
be maximized by warping the events along the true point
trajectories. More formally, given an event deﬁned by its
image position, time-stamp and sign of intensity change,
en = {xn, tn, sn}, we deﬁne the warped location of the
event with respect to the warp parameters θ as

x′

n = W (xn, tn; θ),

(1)

and hence the variance of the IWE is commonly used as a
measure of contrast. Thus, the steps of the CM method are:

• Collect a set of events generated by gradients moving

across the image plane

• Based on a motion assumption, generate image of

warped events H

• Use a reward function to evaluate H

• Optimize the reward with respect to the motion param-

eters

An advantage of this method is that the problem of event
associations (which events were produced by the same fea-
ture) is solved implicitly. CM is a versatile method and has
been recently used to estimate camera rotation on a static
scene [12], estimate optical ﬂow [13], track features in the
event stream [14], estimate camera motion and depth [3],
perform moving object detection [15], motion segmenta-
tion [18] and provide a training signal for deep learning us-
ing events [6].

1.2. Contributions

Our contributions are:

• To analyze the properties of CM reward functions and

provide new insights into existing reward functions

• Show how different reward functions can be used and
combined to get improved results on noisy data with
large aperture-uncertainty

• Quantify this improvement using optical ﬂow as a
benchmark, without loss of generality for the CM
method.

An unsolved problem with CM is determining how many
events should be processed at once. For the sake of efﬁ-
ciency the warping model used is typically a linearization
of some higher dimensional trajectory, thus it is important
that the set of events does not span too great a time. How-
ever this time is again dependent on the dynamics of the
scene. We propose a new solution to this problem which is
fully compatible with the general CM framework.

[3], where W is the warping function. Thus the image of
warped events from Ne events can be formulated as

2. Reward Functions

H(x; θ) =

Ne

∑

n=1

bnδ(x − x′

n),

(2)

[3], where each pixel x sums the warped events x′
n that map
to it (indicated by δ since they represent intensity spikes). If
bk is set equal to 1 the number of events are summed, if
bk = sk the event polarities are summed. This IWE can
now be evaluated using a reward function. Since a well pa-
rameterized IWE will warp events to the locations of inten-
sity gradients on the image plane, the IWE will seem sharp

In [3, 12] the total variance of I,

rσ2(H) =

1
Np

∑

i,j

(hi,j − µH )2,

(3)

was used to evaluate the warp, where Np is the number of
pixels, µH is the mean of H and hi,j is the value of pixel i, j
in H. In [13] the sum of squares of H (4) was used. These
two rewards are essentially equivalent as shown in [12]. The
reason these two rewards work is because they dispropor-
tionately reward event accumulations of a high magnitude

12301

]
d
n
o
c
e
s
/
s
l
e
x
p
[

i

y
v

100

0

100

d
r
a
w
e
R

]
d
n
o
c
e
s
/
s
l
e
x
p
[

i

y
v

100

0

100

d
r
a
w
e
R

100

100
vx [pixels/second]

0

100

100
vx [pixels/second]

0

(a)

(b)

Figure 2: Events from circle moving across the image plane
projected along a good (2b) and a poor (2a) estimate of the
actual trajectory. In 2a sum of accumulations squared (rSoS)
is 5, 683 while in 2b rSoS = 27, 884.

(see Fig. 2). This occurs since, at the optimal trajectory,
events are accumulated onto the small set of locations on
the image plane at tref that was occupied by the original
gradients at tref. In other words any reward will work that
rewards high accumulations more than the same total accu-
mulations spread across more locations. At the same time,
if most events are accumulated at fewer locations, it means
that most locations at tref contain no events at all. Therefore
we propose to explore the beneﬁts of the following rewards
for contrast maximization:

Sum of Squares

(rSoS):

rSoS(H) = ∑

h(i, j)2.

i,j

(4)

This reward was used in the past [13] and is sufﬁciently sim-
ilar to the variance (rσ2 ) that we will not consider variance
in this work.

Sum of Exponentials

(rSoE):

rSoE(H) = ∑

eh(i,j).

i,j

(5)

Exponentials reward higher numbers even more dispropor-
tionately than do polynomials (for proof of this note that
nb
an = 0). Therefore this reward is more extreme
limn→∞
than rSoS or rσ2 .

Max of Accumulations

(rMoA):

rMoA(H) = max(h(i, j) ∈ H).

(6)

Simply returns the greatest accumulation. This reward takes
no other information into account and thus is yet more ex-
treme than exponentiation.

Inverse Sum of Accumulations

(rISoA):

rISoA(H) =

1

∑i,j h(i, j) > 1

.

(7)

This reward inverts the count of the number of locations
with an event accumulated to them. The count will be at
a minimum at the correct trajectory, so in order to deﬁne
a reward we invert the sum. A similar reward was used
in [15].

(a) rSoS of events generated by
a line (motion vector in red).

(b) rSoS of events generated by
a cross (motion vector in red).

Figure 3: The reward function (using rSoS) of the events
generated by a straight line segment (3a) shows the effect
of aperture problem on contrast maximisation techniques
when compared to the reward function of a cross moving
with the same optic ﬂow velocity indicated by red dotted
lines (3b)

Sum of Suppressed Accumulations

(rSoSA):

rSoSA(H) = ∑

e(−h(i,j)∗p).

(8)

i,j

This reward gives locations with few accumulations in them
a higher value than locations with many accumulations
in them and saturates for large values of H(x, y). This
reward is maximized at the optimal trajectory, since most
events are accumulated at few locations and thus at most
locations xl, yl will return a high value. The factor p is an
arbitrary shifting factor which decides the saturation point.

Of these rewards, rSoS, rSoE and rMoA favor trajecto-
ries that result in large accumulations (they are magnitude-
rewarding) and rISoA and rSoSA favor those that result in
many locations having few or no accumulations (they are
sparsity-rewarding).
2.1. Aperture Problem

The aperture problem arises when optical ﬂow is esti-
mated using only a local region of a moving object. In this
case it can happen that only a line feature of the object is
visible and thus only the velocity component perpendicular
to the local line feature can be estimated. Contrast maxi-
mization techniques don’t suffer from the aperture problem
in the way that local optic ﬂow estimators such as Lucas-
Kanade [19] do, since they consider the scene globally.

However, long line segments do introduce uncertainty to
the optic ﬂow estimates when using contrast maximization,
which can be considered analogous to the aperture prob-
lem. A line segment moving over the DVS image plane
will generate events which lie on a plane in the space-time
volume [20]. Although warping the events along the trajec-
tory of the line segment will generate a large value in the
reward function, trajectories which vary slightly but still lie
on the event plane will generate large values as well. This
can be seen in Fig. 3a; the reward function for the straight

12302

line segment features a long ridge, along which the values
are similar to each other. Indeed, there are likely to be two
local maxima to either side of the true trajectory in cases of
pure line segments and none at the true trajectory. This is
because it is possible to achieve greater event accumulations
when warping over the diagonal of the plane; since greater
accumulations are rewarded in rSoS, these trajectories will
maximize the reward function (see Fig. 4).

Once the line segment gains features on other axes, this
uncertainty is much reduced, the region around the ground
truth forming a sharp spike, since changing the trajectory
slightly in the direction of one of the image gradient’s prin-
cipal axes will cause events along the other axis to accumu-
late less (Fig. 3b).

For sparsity-rewarding rewards the reward will experi-
ence much stronger relative change to slightly incorrect tra-
jectories and thus suffer less from aperture problem. The
reason for this is demonstrated in Fig. 4; while warping the
events parallel to the plane of events diagonally is not likely
to inﬂuence the rSoS strongly, it will cause the events on the
resulting IWE to take up substantially more space and thus
strongly affect the rISoA. This effect is validated experimen-
tally in datasets with dominant line segments (see Section
4.1, 4.3) and is visualized in Fig. 5.

2.2. Noise Tolerance

As sparsity-rewarding methods essentially measure the
number of locations containing events in them, they are
susceptible to noise. For example, rISoA becomes entirely
meaningless in the worst case, where the event stream be-
comes so noisy that every location at tref contains at least
one event. As more noise is added, these rewards become
more and more uniform, until they are almost entirely ﬂat
(see Fig. 8).

2.3. Data Sufﬁciency

Contrast maximization falls into the category of algo-
rithms that operate on groups of events [3]. This means that
events need to be collected over some period of time be-
fore a meaningful estimate, such as optic ﬂow can be made.
In practice, waiting for movement of at least several pix-
els is necessary for a reliable estimate (see Fig. 7), which
can take a long time for slow moving gradients. Estimat-
ing for how long events should be collected before contrast
maximization is applied is an important task, since the al-
gorithms presented in [3, 13, 15, 18] make an assumption
of constant velocity over small periods of time in order to
work. Further, the number of events generated by gradi-
ents in the image is dependent on the relative strength of
the gradients. In our case it is necessary to know how many
events the gradient is producing per pixel moved, since the
rSoSA reward contains a shifting parameter, which needs to
be tuned according to this value.

t 

y 

x 

Figure 4: The plane in x, y, t represents a set of events
generated by a line segment moving in the direction of
the y axis.
If the events are projected along the veloc-
ity vector (dashed arrows), they accumulate (green dou-
ble arrow), giving the rISoA1. The integral of those accu-
mulations (green area) squared is rSoS1. If the events are
instead (incorrectly) projected across the diagonal of the
plane, the corresponding accumulations (blue arrow) give
rISoA2, which being the inverse of the arrow length becomes
smaller. The rSoS2 (blue area) however becomes larger,
since it rewards the larger peak in the accumulations. Thus
maximizing the rISoA would give a correct result, the rSoS
an incorrect one, showing how sparsity-rewarding rewards
are less susceptible to the aperture problem.

We can estimate how many events are produced per pixel
moved directly from the rSoS reward, under projection along
the zero velocity. As a structure begins to move onto a new
pixel, it generates events proportional to the intensity of its
gradients. At v = 0, these events on the same pixel will ac-
cumulate, causing the rSoS reward to grow exponentially.
As the structure moves on to the next pixel, exponential
growth will have to start anew, since the structure will be
entering an empty set of pixels (see Fig. 6a). Thus the rate
of change of the rSoS along the v = (0, 0) trajectory should
ﬂatten off periodically as the structure moves over the im-
age plane. In real data, this is what happens (see Fig. 6),
allowing estimation of whether contrast maximization will
be able to give an optic ﬂow estimate given a set of events.

3. Combined Reward Functions

We have identiﬁed two classes of reward, sparsity- and
magnitude-rewarding, that can be used to optimize the total
contrast of an image of warped events and shown that the
one class should be much better at dealing with aperture-
uncertainty while the other should be more capable of tol-
erating noise. We wish now to use that knowledge to con-

12303

rSoS

rSoE

rMoA

rISoA

rSoSA

100
50
0
50
100

100
50
0
50
100

100
50
0
50
100

100
50
0
50
100

100
50
0
50
100

d
r
a
w
e
R

100

0

100

100

0

100

100

0

100

100

0

100

100

0

100

Figure 5: Various rewards sampled vs optical velocities vx, vy for a dataset with strong line features (see Fig. 9). Ground
truth is indicated by red dotted lines. Note that the magnitude-rewarding rSoS, rSoE and rMoA are much more prone to having
incorrect local maxima, for reasons illustrated in Fig. 4 than the sparsity rewarding rISoA and rSoSA.

t

y

x

(a) Events (white cubes) are ac-
cumulated on the image plane as
an edge (grey) moves in the di-
rection of the red arrow. The
green arrow indicates the ﬁrst
crossing of a pixel boundary
(where d
dx rSoS), the orange arrow
the second.

(b) rSoS as events are
added.

(c) Derivative of 6c.

Figure 6: As an edge (grey) moves across the image plane
of an idealised event camera, it generates some number
of events proportional to the intensity of the edge. These
events can be summed and squared to give the rSoS. As the
edge moves onto the next pixel, the rSoS grows at a slower
rate, so the derivative of rSoS with respect to added events
becomes close to zero. The minimum number of events re-
quired to compute the optic ﬂow is shown by the green ar-
row. This effect can be seen in real data - Fig. 6b shows
the rSoS as events are added from the sequence in Section 2.
In Fig. 6c the temporal derivative is zero when the object
crosses pixel boundaries.

struct a new, hybrid reward, which is able to take the best
from both classes of reward. Since rSoSA gave better re-
sults than rISoA (since it is not a binary measure it is slightly
more noise-tolerant), we combined this with a variety of
magnitude-rewarding rewards:

• rR1 = rSoS + rSoSA In this reward we use the rSoS
reward with the constraint during optimization that
successive improved estimates must not decrease the
rSoSA.

• rR2 = rSoS +rSoSA +rSoE Here we use the same reward
as rR1, except that when we have ﬁnally found an es-

i

]
s
/
x
p
[
 
d
e
e
p
S
 
F
O
 
d
e
t
c
i
d
e
r
P

800

600

400

200

0

1

2

3

4

5

Displacement [pix]

Figure 7: The current optic ﬂow estimate using rSoS (blue
line) is noisy and uncertain when the structure has moved
less than two pixels, but converges to the ground truth (red
line) as the structure moves across more pixels and thus
more events are added.

timate, we use it as a starting point for gradient ascent
using the rSoE.

The rSoE gives precise and noise-tolerant results, given that
the starting point for the optimization used is close to the
maximum, which is why we incorporate it in the rR2 reward.
Given a bad initial point rSoE performs poorly since it is not
sufﬁciently smooth for most optimization methods.

4. Experimental Results

We tested our rewards on high quality optical ﬂow
ground truth data collected from a DAVIS 240C event cam-
era [21], using a linear slider to pan over a variety of scenes.
We tested on two simple sequences of a line segment (Fig.
9) and a circle (Fig. 10) moving across the image plane.
The line segment sequence introduces a lot of aperture-
uncertainty, while the circle has none. We also tested the
rewards on a real ofﬁce scene (Fig. 11) to show that the
hypotheses tested on the circle and line segment carry over
to real world scenes. We restricted ourselves to relatively
simple scenes, since it made it easier to collect ground truth
data and control the level of aperture uncertainty. The use-
fulness of the CM framework on complex scenes has been
shown in several other works [3, 6, 12–15, 18].

In the experiments we added random noise to the event
stream to give us a signal/noise ratio of 1/10. In this way
we were able to show the beneﬁts of different rewards with
respect to noise, which can be quite a signiﬁcant component
of current event camera output, as well as the beneﬁts with

12304

E/N

rSoS

rSoE

rMoA

rISoA

rSoSA

1/0

1/10

100
50
0
50
100

100
50
0
50
100

100
50
0
50
100

100

0

100

100

0

100

100
50
0
50
100

100
50
0
50
100

100
50
0
50
100

100

0

100

100

0

100

100
50
0
50
100

100
50
0
50
100

100
50
0
50
100

100

0

100

100

0

100

100
50
0
50
100

100
50
0
50
100

100
50
0
50
100

100

0

100

100

0

100

100
50
0
50
100

100
50
0
50
100

100
50
0
50
100

100

0

100

100

0

100

d
r
a
w
e
R

d
r
a
w
e
R

d
r
a
w
e
R

1/100

100

0

100

100

0

100

100

0

100

100

0

100

100

0

100

Figure 8: Various rewards sampled vs optical velocities vx, vy at various Event-to-Noise (E/N) ratios. Ground truth indicated
by red dotted lines. Note that the magnitude-rewarding rewards are much more robust at high event to noise ratios, still
giving reasonable estimates at 1/100 E/N. The sparsity-rewarding rewards fail, becoming increasingly ﬂat distributions with
the center at v = 0, 0.

respect to aperture-uncertainty.

In all of the experiments the same gradient-ascent opti-
mization was used, with numeric gradients derived through
the same method. Optimization was performed on consecu-
tive batches of events, using a sliding window with a width
of one pixel displacement with regard to the optic ﬂow ve-
locity, with 100 samples taken per sequence.

Optical ﬂow with respect to events is a slightly differ-
ent creature from the conventional deﬁnition; usually op-
tic ﬂow measures the displacement of pixels between con-
secutive frames, hence the usual way of evaluating optical
ﬂow is through looking at the average endpoint error. For
events however, this deﬁnition makes less sense, since op-
tical ﬂow relates to the velocity of an event on the image
plane, not the displacement.
Instead we will look at the
average absolute magnitude error µ(|ME|), so the average
error of the magnitudes of the optical ﬂow vector estimates
with respect to ground truth, and the average angular error
µ(AE), so the average error of the estimated vector angles.
This way we can also look at the standard deviation of the
errors, σ2(|ME|) and σ2(AE).

4.1. Line Segment Sequence

The line-segment sequence (Fig. 9) illustrates the be-
havior of the different rewards when exposed to data with
strong line features (this particular sequence consisting only
of line features). As discussed in Section 2.1, one would
expect sparsity-rewarding rewards to perform better on this

sequence, at least in the case where the event to noise ratio
is high. Indeed, of the conventional rewards, the sparsity re-
warding ones rISoA and rSoSA score best under this extreme
case of aperture uncertainty (Tab. 1).

However, as hypothesized, once noise is added to the
event stream, the sparsity-rewarding rewards perform much
worse than the magnitude-rewarding ones. It is worth point-
ing out here the remarkable robustness of the CM method;
even with an order of magnitude more noise polluting the
events, the optic ﬂow estimates are still quite reasonable and
only slightly deteriorated. The hybrid methods, which are
able to take advantage of the best properties of both types
or reward, perform best under both normal conditions and
with large amounts of noise.

4.2. Circle Sequence

In the circle sequence the event camera slides past an
image of a circle generating the events visualized in Fig.
10. This sequence illustrates a scene in which there is no
aperture-uncertainty, since there are no dominant line fea-
tures in the resulting events. In fact, the winner in such a
scene is the commonly implemented rSoS, which performs
almost three times better than even our hybrid rewards,
though these have got slightly better accuracy in the aver-
age angular error (Tab. 2).

Once noise is added to the event stream however, the
accuracy of rSoS is two entire orders of magnitude worse,
whereas the hybrid reward rR2 only becomes ﬁve times

12305

Line Segment Sequence

Circle Sequence

σ

Event/Noise = 1/0 (No Noise)
µ(AE)
-0.311
-0.546
-0.280
-0.204
-0.234
-0.122
-0.103

2(|ME|)
1.68
14.02
10.92
5.41
1.02
3.26
3.14

µ(|ME|)
38.29
137.51
22.41
11.36
12.79
10.31
10.50

Event/Noise = 1/10

µ(|ME|)
49.14
47.64
82.11
88.06
67.05
55.33
37.48

σ

2(|ME|)
25.48
30.86
33.63
11.25
3.60
12.56
3.52

µ(AE)
-0.611
-0.712
-0.482
0.559
-0.635
-0.547
-0.440

r

rSoS

rSoE

rMoA

rISoA

rSoSA

rR1

rR2

r

rSoS

rSoE

rMoA

rISoA

rSoSA

rR1

rR2

σ

σ

2(AE)
0.007
0.019
0.038
0.006
0.006
0.003
0.004

2(AE)
0.077
0.401
0.051
1.096
0.010
0.012
0.007

r

rSoS

rSoE

rMoA

rISoA

rSoSA

rR1

rR2

r

rSoS

rSoE

rMoA

rISoA

rSoSA

rR1

rR2

σ

Event/Noise = 1/0 (No Noise)
µ(AE)
-0.153
1.517
1.066
-0.305
-0.350
-0.100
-0.036

2(|ME|)
0.37
11.20
18.32
1.91
0.78
1.27
1.42

µ(|ME|)
0.49
72.14
73.45
2.37
1.25
1.58
1.69

Event/Noise = 1/10

µ(|ME|)
43.41
23.56
11.10
89.33
72.79
57.95
5.29

σ

2(|ME|)
2.52
27.46
3.83
7.76
2.61
14.91
1.57

µ(AE)
-0.512
0.354
0.132
0.898
-0.737
-0.531
0.113

σ

σ

2(AE)
0.010
0.033
0.051
0.034
0.009
0.009
0.040

2(AE)
0.010
0.640
0.090
1.053
0.009
0.014
0.053

Table 1: Absolute magnitude error |ME| and angular error
AE of ﬂow estimate vectors for line segment sequence

Table 2: Absolute magnitude error |ME| and angular error
AE of ﬂow estimate vectors for circle sequence

Experimental

(a)
setup:
Event camera on a linear
slider pans past circle.

(b) Timeslice of events to
be processed.

(a) Experimental
setup:
Event camera on a linear
slider pans past circle.

(b) Timeslice of events to
be processed.

(c) Noise added to the
events.

(d) Motion-compensated
events using rR2.

Figure 9: Line segment sequence:
in the experimental
setup, the event camera is moved past a line segment using
a linear slider. A slice of the resulting events is processed to
extract optical ﬂow estimates, both with noise added to the
event stream and once using only the original events.

(c) Noise added to the
events.

(d) Motion-compensated
events using rR2.

Figure 10: Circle sequence: in the experimental setup, the
event camera is moved past a circle using a linear slider. A
slice of the resulting events is processed to extract optical
ﬂow estimates, both with noise added to the event stream
and once using only the original events.

4.3. Ofﬁce Sequence

worse, clearly beating the other methods. Interestingly, the
extreme magnitude-rewarding rewards rSoE and rMoA ac-
tually improve as the scene becomes nosier. This is be-
cause these reward functions have quite strong peaks and
are thus prone to local convergence issues; the noise effec-
tively blurs the reward function and thus makes gradient as-
cent easier. In the interest of a fair comparison, the same
amount of smoothing was applied to all rewards during op-
timization; for more details on the effect of smoothing on
different reward types, see the supplementary materials.

The ofﬁce sequence (Fig. 11) consists of panning across
an ofﬁce scene, to which the ground truth optic ﬂow veloc-
ities were hand-annotated afterward. The sequence serves
to illustrate that the ideas tested in the previous experiments
also apply to real scenarios. As is often the case in real
world sequences, there are several strong line features visi-
ble in the event stream, due to the edges of windows, tables,
etc. As such, it is hardly surprising to see that our hybrid
approach is able to out-compete the existing methods both
with and without added noise (Tab. 3).

12306

(a) Experimental
setup:
Event camera on a linear
slider pans past circle.

(b) Timeslice of events to
be processed.

(c) Noise added to the
events.

(d) Motion-compensated
events using rR2

Figure 11: Ofﬁce sequence: in the experimental setup, the
event camera is panned around an ofﬁce. A slice of the re-
sulting events is processed to extract optical ﬂow estimates,
both with noise added to the event stream and once using
only the original events.

Ofﬁce Sequence

σ

Event/Noise = 1/0 (No Noise)
µ(AE)
-0.116
0.178
0.369
-0.064
-0.170
-0.009
-0.008

2(|ME|)
3.58
18.43
19.68
18.64
3.28
12.93
3.23

µ(|ME|)
5.58
17.89
19.79
16.28
5.47
9.09
4.95

Event/Noise = 1/10

µ(|ME|)
16.07
15.83
20.26
46.82
49.09
48.66
15.08

σ

2(|ME|)
5.95
14.98
17.40
3.55
0.40
1.45
14.66

µ(AE)
-0.455
-0.084
-0.139
-0.679
-0.993
-1.119
-0.048

σ

σ

2(AE)
0.029
0.879
0.890
0.365
0.041
0.041
0.112

2(AE)
0.042
0.766
0.692
1.121
0.684
0.312
0.262

r

rSoS

rSoE

rMoA

rISoA

rSoSA

rR1

rR2

r

rSoS

rSoE

rMoA

rISoA

rSoSA

rR1

rR2

Table 3: Absolute magnitude error |ME| and angular error
AE of ﬂow estimate vectors for ofﬁce sequence

4.4. Real World Noise

Since the previous experiments include synthetic noise,
we show a sequence with natural noise. In our experience
even if the contrast thresholds are re-calibrated, extreme
temperatures, direct sunlight, or very dim scenes tend to
generate large amounts of noise in current event cameras.
Even in a perfect sensor, phenomena such as lens ﬂare can
cause large numbers of “erroneous” events to be generated.
In Fig. 12 many noise events are generated as a cyclist rides
past while the event camera faces straight into the sun. In
this case, noise events are generated by both the sun as well

σ

Bicycle Sequence - no Artiﬁcial Noise
µ(|ME|)
30.92
22.12
48.45
543.58
36.32
31.05
8.83

2(|ME|)
42.31
36.01
59.18
585.26
41.68
42.46
13.26

µ(AE)
-0.428
-0.163
0.434
0.292
-0.532
-0.426
-0.136

σ

2(AE)
0.409
0.577
0.652
0.861
0.350
0.405
0.270

r

rSoS

rSoE

rMoA

rISoA

rSoSA

rR1

rR2

Figure 12: Below: Absolute magnitude error |ME| and
angular error AE of ﬂow estimate vectors for bicycle se-
quence. Above: Conventional frame of the scene, as a bicy-
cle moves past the camera. On the right, the resulting events
are shown in the spatiotemporal volume, displaying signiﬁ-
cant amounts of noise. Figure animates in Adobe Acrobat.

as by lens ﬂaring. Here the rR2 reward performs substan-
tially better than the other metrics, with rSoE following sec-
ond, showing that our ﬁndings translate well to real-world
settings.

5. Conclusion

In this paper we show that the underlying assumption
made about contrast maximization is that good trajectory
estimates are those where events accumulate in fewer lo-
cations. From this observation we are able to devise two
categories of reward function, sparsity, and magnitude re-
warding functions and from this categorization create four
other rewards.

We touch upon the issue of how many events are needed
to make good predictions and how this quantity can be esti-
mated. We show which kind of data is likely to cause errors
due to aperture uncertainty and that sparsity-rewarding re-
wards are much less susceptible to this uncertainty. We test
various derived reward functions on real data and conﬁrm
the hypothesized traits of sparsity and magnitude reward-
ing functions. Using this knowledge we create the rR1 and
rR2 rewards, which experimentally perform better than pre-
vious rewards. Thus, we hope that this work will aid future
event-based vision research, providing better reward func-
tions and stimulating discussion about what these rewards
fundamentally do.

Acknowledgements

We encourage the reader to look at the supplementary material
for additional experiments and proofs. This work was supported
by the ARC Centre of Excellence for Robot Vision, project num-
ber CE140100016 (www.roboticvision.org).

12307

References

[1] M. Yang, S.-C. Liu, and T. Delbruck, “A dynamic vision sen-
sor with 1% temporal contrast sensitivity and in-pixel asyn-
chronous delta modulator for event encoding,” IEEE J. Solid-
State Circuits, vol. 50, no. 9, pp. 2149–2160, 2015. 1

[2] P. Lichtsteiner, C. Posch, and T. Delbruck, “A 128×128 120
dB 15 µs latency asynchronous temporal contrast vision sen-
sor,” IEEE J. Solid-State Circuits, vol. 43, no. 2, pp. 566–
576, 2008. 1

[3] G. Gallego, H. Rebecq, and D. Scaramuzza, “A unifying con-
trast maximization framework for event cameras, with ap-
plications to motion, depth, and optical ﬂow estimation,” in
IEEE Conf. Comput. Vis. Pattern Recog. (CVPR), pp. 3867–
3876, 2018. 1, 2, 4, 5

[4] A. Rosinol Vidal, H. Rebecq, T. Horstschaefer, and D. Scara-
muzza, “Ultimate SLAM? combining events, images, and
IMU for robust visual SLAM in HDR and high speed sce-
narios,” IEEE Robot. Autom. Lett., vol. 3, pp. 994–1001, Apr.
2018. 2

[5] A. Nguyen, T. Do, D. G. Caldwell, and N. G. Tsagarakis,
“Real-time pose estimation for event cameras with stacked
spatial LSTM networks,” arXiv e-prints, Oct. 2017. 2

[6] A. Z. Zhu, L. Yuan, K. Chaney, and K. Daniilidis, “EV-
FlowNet: Self-supervised optical ﬂow estimation for event-
based cameras,” in Robotics: Science and Systems (RSS),
2018. 2, 5

[7] M. Liu and T. Delbruck, “Adaptive time-slice block-
matching optical ﬂow algorithm for dynamic vision sensors,”
in British Mach. Vis. Conf. (BMVC), 2018. 2

[8] E. Mueggler, G. Gallego, and D. Scaramuzza, “Continuous-
time trajectory estimation for event-based vision sensors,” in
Robotics: Science and Systems (RSS), 2015. 2

[9] P. Bardow, A. J. Davison, and S. Leutenegger, “Simultaneous
optical ﬂow and intensity estimation from an event camera,”
in IEEE Conf. Comput. Vis. Pattern Recog. (CVPR), pp. 884–
892, 2016. 2

[10] H. Rebecq, G. Gallego, and D. Scaramuzza, “EMVS:
Event-based multi-view stereo,” in British Mach. Vis. Conf.
(BMVC), 2016. 2

[11] E. Mueggler, G. Gallego, H. Rebecq, and D. Scaramuzza,
“Continuous-time visual-inertial odometry for event cam-
eras,” IEEE Trans. Robot., 2018. 2

[12] G. Gallego and D. Scaramuzza, “Accurate angular velocity
estimation with an event camera,” IEEE Robot. Autom. Lett.,
vol. 2, no. 2, pp. 632–639, 2017. 2, 5

[13] T. Stoffregen and L. Kleeman, “Simultaneous optical ﬂow
and segmentation (SOFAS) using Dynamic Vision Sensor,”
in Australasian Conf. Robot. Autom. (ACRA), 2017. 2, 3, 4,
5

[14] A. Z. Zhu, N. Atanasov, and K. Daniilidis, “Event-based fea-
ture tracking with probabilistic data association,” in IEEE
Int. Conf. Robot. Autom. (ICRA), pp. 4465–4470, 2017. 2,
5

[15] A. Mitrokhin, C. Fermuller, C. Parameshwara, and Y. Aloi-
monos, “Event-based moving object detection and tracking,”
in IEEE/RSJ Int. Conf. Intell. Robot. Syst. (IROS), 2018. 2,
3, 4, 5

[16] C. Scheerlinck, N. Barnes, and R. Mahony, “Continuous-
time intensity estimation using event cameras,” in Asian
Conf. Comput. Vis. (ACCV), 2018. 2

[17] C. Scheerlinck, N. Barnes, and R. Mahony, “Asynchronous
spatial image convolutions for event cameras,” IEEE Robot.
Autom. Lett., vol. 4, pp. 816–822, Apr. 2019. 2

[18] T. Stoffregen, G. Gallego, T. Drummond, L. Kleeman, and
D. Scaramuzza, “Event-based motion segmentation by mo-
tion compensation,” arXiv e-prints, Apr. 2019. 2, 4, 5

[19] B. D. Lucas and T. Kanade, “An iterative image registration
technique with an application to stereo vision,” in Int. Joint
Conf. Artiﬁcial Intell. (IJCAI), pp. 674–679, 1981. 3

[20] E. Mueggler, C. Forster, N. Baumli, G. Gallego, and
D. Scaramuzza, “Lifetime estimation of events from dy-
namic vision sensors,” in IEEE Int. Conf. Robot. Autom.
(ICRA), pp. 4874–4881, 2015. 3

[21] C. Brandli, R. Berner, M. Yang, S.-C. Liu, and T. Delbruck,
“A 240x180 130dB 3us latency global shutter spatiotemporal
vision sensor,” IEEE J. Solid-State Circuits, vol. 49, no. 10,
pp. 2333–2341, 2014. 5

12308

