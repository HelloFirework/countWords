Leveraging Crowdsourced GPS Data for Road Extraction from Aerial Imagery

Tao Sun,

Zonglin Di,

Pengyu Che, Chun Liu, Yin Wang

Tongji University, Shanghai, China

{suntao, dizonglin, chepengyu, liuchun, yinw}@tongji.edu.cn

Abstract

Deep learning is revolutionizing the mapping indus-
try. Under lightweight human curation, computer has
generated almost half of the roads in Thailand on Open-
StreetMap (OSM) using high resolution aerial imagery.
Bing maps are displaying 125 million computer generated
building polygons in the U.S. While tremendously more ef-
ﬁcient than manual mapping, one cannot map out every-
thing from the air. Especially for roads, a small prediction
gap by image occlusion renders the entire road useless for
routing. Misconnections can be more dangerous. Therefore
computer based mapping often requires local veriﬁcations,
which is still labor intensive.
In this paper, we propose
to leverage crowd sourced GPS data to improve and sup-
port road extraction from aerial imagery. Through novel
data augmentation, GPS rendering, and 1D transpose con-
volution techniques, we show almost 5% improvements over
previous competition winning models, and much better ro-
bustness when predicting new areas without any new train-
ing data or domain adaptation.

1. Introduction

Segmentation of aerial imagery has been an active re-
search area for more than two decades [4, 17].
It is also
one of the earliest applications of deep convolutional neural
nets (CNN) [19]. Today, using deep convolutional neural
nets over high resolution satellite imagery, Facebook has
added 370 thousand km of computer generated roads to
OpenStreetMap (OSM) [3] Thailand, accounting for 46 %
of the total roads in the country, which is on display for all
Facebook users [1, 22]. Microsoft used similar techniques
to add 125 million building polygons to Bing maps U.S.,
ﬁve times more than those on OSM [29].

Despite real-world applications, mapping by aerial im-
agery has its limitations. The top challenge is overﬁtting.
The deep neural net models often deteriorate miserably with
new terrain, new building styles, new image styles, or new
resolutions. Other than the model limitation, occlusions by
vegetation, buildings, and shadows can be excessive. Many

(a) Occlusions by trees, buildings, and shadows are challenging without GPS

(b) Roads susceptible to over connection in post-processing without GPS

Figure 1: Crowdsourced GPS data helps road extraction
when aerial imagery alone is insufﬁcient or challenging.
Here each red dot represents a taxi GPS sample.

features are indistinguishable from the air, e.g., dirt roads
and bare ﬁelds, cement pavements and building tops, alleys
in slum areas. Bad weather, low satellite angle, and low
light angle further complicate the issue. Even if the feature
is perfectly clear, mapping often needs local knowledge.
Trails and roads may have same appearances. Houses and
storage sheds may have similar sizes and roofs. To make
things worse, mapping has low tolerance for errors. Espe-
cially for roads, incorrect routes cause longer travel time,
lead people to restricted areas, and even cause fatal acci-
dents [34]. Because of these reasons, OSM prefers local
mappers for each area, and even requires local veriﬁcation
for large-scale edits [1].

With a smart phone or any other GPS device, one

17509

can easily travel a street and verify its existence with the
recorded trace. Going through all streets systematically
and regularly for updates, however, is a labor intensive job
that is costly and error prone. On the other hand, crowd-
sourced GPS data are much cheaper and increasingly abun-
dant [6, 12, 15, 26, 34]. Figure 1 illustrates how crowd-
sourced GPS data, albeit noisy, can help discover roads,
conﬁrm road continuity, and avoid misconnection.

In this paper, we propose to fuse crowdsourced GPS data
with aerial imagery for road extraction. Through large taxi
and bus GPS datasets from Beijing and Shanghai, we show
that crowdsourced GPS data has excessive noise in both
variation and bias, and high degrees of disparity in density,
resolution, and distribution. By rendering the GPS data as
new input layers along with RGB channels in the segmen-
tation network, together with our novel GPS data augmen-
tation techniques and 1D transpose convolution, our model
signiﬁcantly outperforms existing models using images or
GPS data alone. Our data augmentation is especially effec-
tive against overﬁtting. When predicting a new area, the
performance drop is much less than the model with image
input only, despite completely different GPS data quantity
and resolution. We have published our code1 and our data
is available upon request.

2. Related Work

Aerial imagery segmentation has been a very active re-
search area for a long time. We refer readers to some
performance studies and references therein for early algo-
rithms [4,17]. Like many other image processing problems,
these early solutions are often limited in accuracy and difﬁ-
cult to generalize to real-world datasets.

Mnih ﬁrst used a deep convolutional neural net similar to
LeNet [13] to extract roads and buildings from a 1.2 m/pixel
dataset in the U.S. [18, 19]. Moving to developing coun-
tries with more diversiﬁed roads and buildings, Facebook
showed that deeper neural nets perform much better on a
50 cm/pixel dataset [33]. Both of these early approaches
convert the semantic segmentation problem into a classiﬁ-
cation problem by classifying each pixel of a center square,
e.g., 32 x 32, as road or building from a larger image patch,
e.g., 128 x 128. Stitching these center squares together is
the ﬁnal output for a large input image. Performance issues
aside, this classiﬁcation approach cannot learn complicated
structures such as street blocks and building blocks due to
limited input size.

With the commercial availability of 30 cm/pixel satel-
lite imagery and low-cost aerial photography drones, more
public high-resolution datasets become available [10,11,32,
35, 36]. These new datasets and industrial interests lead to
a proliferation of research activities recently [5, 16, 31, 40].

1https://github.com/suniique/

Semantic segmentation models based on the fully convolu-
tional neural net architecture become main stream [27]. In
a recent challenge [10], all top solutions used variants of U-
net [24] or Deeplab [8] to segment an entire image at once,
up to 1024 x 1024 pixels. A larger input size gives more
context, which often leads to more structured and accurate
prediction results.

With new models and multi-country scale datasets, many
real-world applications emerge. Most notably, Facebook
has recently added 370 thousand km of roads extracted from
satellite imagery to OSM [3] Thailand, or 46 % of the to-
tal roads in the country [1, 22]. Microsoft is displaying 125
million computer generated building polygons on Bing US
maps, in contrast to the 23 million polygons from OSM
also on display that are mostly manually created or im-
ported [29].

Comparing to other computer vision applications, road
mapping has little margin for error. Prediction gaps make
the entire road useless for routing, and therefore have at-
tracted lots of attention. Mnih noticed the problem early on
and used Conditional Random Fields in post-processing to
link broken roads [18]. Another popular technique to link
roads is shortest path search [16, 33]. Line Integral Con-
volution can smooth out broken roads in post-processing
too [14]. More recent works try to address the problem
in prediction instead of post-processing, e.g., through a
topology-aware loss function [20] or through an iterative
search process guided by CNNs [5]. We must be careful
to link roads because incorrect connections are more dan-
gerous than missing connections in routing. Our approach
complements the above mentioned methods because GPS
data can conﬁrm the connectivity or the absence of it re-
gardless of image occlusion or other issues.

Road inferencing from GPS traces has been studied for
a long time too [9, 23, 25]. Most early works use dense
GPS samples from controlled experiments. Recent works
explored crowdsourced GPS data under various sampling
interval and noise levels [6, 12, 15, 26, 34]. Kernel Density
Estimation is a popular method robust against GPS noise
and disparity [6, 9, 15].

There is limited research work using both GPS data and
aerial imagery. One idea ﬁlters out GPS noise by road seg-
mentation before road inferencing [37]. Our preliminary
work explored the idea of rendering GPS data as a new
CNN input layer, but the segmentation model used was a
bit outdated and the GPS data was from a controlled exper-
iment [28]. This paper experiments with many state-of-the-
art segmentation models and crowdsourced GPS datasets
several orders of magnitude bigger and noisier.

3. Crowdsourced GPS Data

We collected two taxi and bus GPS datasets from Beijing
and Shanghai, respectively. The Beijing dataset is about one

7510

likely popular taxi waiting areas. Misalignment can occur
with shifted data, e.g., Fig. 2c, or with different time periods
when the data are taken, e.g., Fig. 2d.

7
10

6
10

5
10

4
10

3
10

l

s
e
p
m
a
s
 
f

o

 
r
e
b
m
u
n

6
10

4
10

2
10

0
10

(a) Excessive noise

(b) Waiting areas

0

60

120 180 240 300 360+

0

50

100

150

200+

(a) Beijing sampling interval (s)

(b) Beijing sample speed (km/h)

7
10

6
10

5
10

4
10

3
10

l

s
e
p
m
a
s
 
f

o

 
r
e
b
m
u
n

6
10

4
10

2
10

0
10

0

60

120 180 240 300 360+

0

50

100

150

200

255+

(c) Shanghai sampling interval (s)

(d) Shanghai sample speed (km/h)

Figure 3: Distributions of sampling interval and speed

(c) Misalignment

(d) Outdated data

Table 1: Typical measurement resolutions in our datasets

Figure 2: Typical issues with crowdsourced GPS data

week of data with around 28 thousand taxis and 81 million
samples. The Shanghai dataset spans about half an year
with around 16 thousand taxis and 1.5 billion samples. In
both cases, each sample includes a timestamp, latitude, lon-
gitude, speed, bearing, and taxi status ﬂags. Although taxis
have different behaviors and trajectories than other GPS
data sources, we believe many characteristics and issues in
our datasets are quite representative. Therefore our method
applies to other datasets.

Under ideal conditions, GPS samples follow a 2D Gaus-
sian distribution [30]. Predicting roads can be straightfor-
ward if the samples are dense and evenly distributed.
In
practice, multipath errors occur in urban canyons, inside
tunnels, and under elevated highways or bridges. GPS re-
ceivers vary in quality and resolution, and may integrate
Kalman ﬁlters that are not Gaussian. Some datasets pur-
posefully reduce resolution and/or add random noise for
privacy protection. Figure 2a is an example of noisy GPS
samples mainly due to urban canyon and elevated roads.

Even if the samples are perfectly Gaussian distributed,
unlike controlled experiments or surveys, crowdsourced
GPS data are not evenly distributed along each road. High-
ways and intersections can have orders of magnitude more
data than other road areas. Some residential roads are not
traveled at all. Depending on the source of data, there may
be concentrations of samples in non-road areas. Figure 2b
shows three high density clusters outside of artery roads,

Resolution

lat/lon (degree)
speed (km/h)
bearing (degree)

Dataset

Beijing

Shanghai

1/100,000

1/60,000 or 1/10,000

1 or 2
3 or 10

1 or 2
2 or 45

Different vehicles may use different GPS receivers with
different settings. Figure 3 shows the log scale distribu-
tions of sampling intervals and device-measured speed of
our datasets. It is obvious from the ﬁgure that different taxis
have different sampling interval settings, most notably at
10, 60, 180, and 300 seconds for the Beijing dataset, and 16
and 61 seconds for the Shanghai dataset. The speed distri-
bution shows two layers of outline curves because the sam-
ples have different speed resolutions, most commonly 1 and
2 km/h. Therefore the outer layer corresponds to even num-
bers and the inner layer corresponds to odd numbers. Lati-
tude, longitude, and bearing have different resolutions too,
summarized in Table 1. Most Beijing taxis are at 10−5 de-
gree, or roughly 1 m. Shanghai taxis have resolutions as low
as 10−4 degree, or roughly 10 m. Our satellite imagery has
a resolution of 50 cm/pixel that is higher than our GPS data.
Therefore, there is the mosaic effect where some pixels have
no GPS samples and some pixels may have multiple sam-
ples as the data quantity increases; see Fig. 2 zoomed in.
Crowdsourced GPS data are cheap and abundant. There can
be multiple datasets for just one area. We must develop a
model robust against different data characteristics so there
is no need to retrain the model with new datasets.

7511

4. Method

By rendering GPS data as new input layers like RGB
channels, our method applies to all existing CNN-based
semantic segmentation networks. GPS data augmentation
prevents overﬁtting and gives a robust model against dif-
ferent GPS data characteristics. Replacing the 3×3 trans-
pose convolution in the decoder by 1D transpose convolu-
tion gives better accuracy, called 1D decoder for the rest of
this paper.

4.1. Architecture

GPS 

augmentation

Feature

extraction

!"#$

⋮

!"#,

)

!%&$

$ ⋯ '$
'$
⋮
⋮
)
$ ⋯ ',
!%&, ',

⋱

⋮

Rendering

Segmentation 

network

GPS
data

Aerial
image

Prediction

1D Decoder

…

1D filters

2×

interpolation

…

1D Transpose Conv

Upsampling

(a) Overview

horizontal

vertical

forward diag backward diag

…

…

…

…

concatenate

(b) 1D transpose convolution block

Figure 4: Network architecture

In DeepGlobe’18 road extraction challenge [10], all top
teams used variants of fully convolutional net for pixel seg-
mentation [27], e.g., U-Net [24] and DeepLab [8]. The win-
ner team modiﬁed LinkNet [7] that is very similar to U-
net, by adding dilated convolutions to accommodate much
larger input size and to produce more structured output,
called D-LinkNet [39]. We propose to render GPS data

as images and concatenate with RGB channels as the in-
put to the segmentation net; see Fig. 4a. Therefore our
method applies to most existing segmentation networks.
More speciﬁcally, based on the input image coordinates, we
query database for the relevant GPS data in the area and get
for example n samples where each sample i has coordinates
lati, loni and other features like sampling interval and vehi-
cle speed f (1)
. Like image augmentation frequently
employed in image processing training, we augment GPS
data to prevent overﬁtting. Afterwards, we render the data
as one or multiple image layers based on the number of fea-
tures used.

, ...f (k)

i

i

Unlike natural objects, roads are thin, long, and often
straight. The square kernels that dominate most CNN archi-
tectures have square receptive ﬁelds that are more suitable
for natural objects of bulk shapes. For roads, it takes a very
large square to cover a long straight road, where many pix-
els can be irrelevant. The 1D ﬁlters are more aligned with
road shapes. We ﬁnd that these 1D ﬁlters are most effec-
tive in the decoder block as replacements for 3×3 transpose
convolutions, as the lower portion of Fig. 4a depicts.

Let k ∈ R2r+1 denotes the 1D transpose convolution
ﬁlter of size 2r + 1, and yI ∈ RH×W be the result of 1D
transpose convolution of input x ∈ RH×W and the ﬁlter k
at direction I = (Ih, Iw). We have

yI [i, j] = (x ∗

T k)I =

x[i + Iht, j + Iwt] · k[r − t]

(1)

r

X

t=−r

T k is the transpose convolution operation, and I
where x ∗
is the direction indicator vector of the 1D ﬁlter, which takes
four values (0, 1), (1, 0), (1, 1), (−1, 1) for horizontal, ver-
tical, forward diagonal, and backward diagonal transpose
convolution, respectively, shown in Fig. 4b.

We set r = 4 and thus each 1D ﬁlter has 9 parame-
ters, the same as the 3×3 transpose convolution ﬁlter. Our
1D decoder replaces each of the 3×3 transpose convolution
layer by four sets of 1D ﬁlters of the four directions in con-
catenation. The number of 1D ﬁlters in each set is 1/4 of
the total number of 3×3 ﬁlters. Therefore, the total number
of network parameters and the computation cost remain the
same. Our 1D decoder is especially effective against roads
with sparse GPS samples, e.g., residential roads, by reduc-
ing gaps in the prediction.

4.2. Data Augmentation

Deep CNNs are very complex models prone to overﬁt-
ting, especially for GPS data that is relatively simple and
well structured.
In our experiments, adding a GPS layer
without any data augmentation leads to a superﬁcial model
which enhances RGB-based predictions wherever GPS data
is dense, and suppresses the prediction wherever there is no

7512

l

s
e
p
m
a
s
 
f

o

 
r
e
b
m
u
n

10

5

0
0

l

s
e
p
m
a
s
 
f
o
 
r
e
b
m
u
n

20

0
0

l

s
e
p
m
a
s
 
f
o
 
r
e
b
m
u
n

10

5

0
0

32

16

64

0

64

48

16

32

48

64

48

32

16

64

0

16

32

48

(a) Original data

(b) Subsampling

l

s
e
p
m
a
s
 
f

o

 
r
e
b
m
u
n

10

5

0
0

48

64

0

32

16

64

48

16

32

48

64

48

32

16

64

0

16

32

(c) Sub-resolution

(d) Random omission

Figure 5: GPS data augmentation

GPS data. In addition, the model is very sensitive to GPS
quantity and quality. For example, if we remove the GPS in-
put altogether, the prediction is a lot worse than the model
trained with RGB image input only. We develop the follow-
ing augmentation methods to prevent overﬁtting.

• Randomly subsample the input GPS data

• Reduce the resolution of the input GPS data by a ran-

dom factor, called sub-resolution hereafter

• Random perturbation of the GPS data

• Omitting a random area of GPS data

Figure 5 illustrates some of these augmentation techniques.
Figure 5a shows the GPS samples on a 64 x 64 image patch.
The height of the bars indicates the number of samples pro-
jected to the same pixel, between zero to three in this case.
Figure 5b takes a random 60% of samples from Fig. 5a. Fig-
ure 5c reduces all samples to 1/8 of their original resolution
such that the samples are aggregated to a small set of pixels.
Many GPS data have low resolution either because of infe-
rior GPS receivers used or because of privacy protection. In
addition, sub-resolution leads to much higher values for the
remaining pixels than the original data, which is similar to
the case of larger GPS quantities. The model trained with
sub-resolution handles unseen larger amount of GPS data
better in our experiments. Figure 5d omits samples on the
left 32 x 32 square.

4.3. Rendering

After augmentation, we must render the GPS data as
an image layer to concatenate with the RGB image input.

(a) Linear scale

(b) Log scale

Figure 6: Gaussian kernel rendering of Fig. 2a

There are many different ways to render the image. For ex-
ample in Fig. 2, we render a pixel white if and only if there
is at least one GPS sample projected to it. This method
works with small datasets only. As the GPS quantity in-
creases, noise spreads and too many pixels will be white,
like Fig. 2a.

Instead of a binary image, we can use a greyscale im-
age where the number at each pixel indicates the number
of samples projected to it, therefore road pixels will have
higher values than noise pixels as the quantity increases. In-
spired by Kernel Density Estimation (KDE) frequently used
in road inferencing from GPS data [9], we can also render
the GPS data with Gaussian kernel smoothing. Figure 6a
is the Gaussian kernel rendering of Fig. 2a. Because of
data disparity between highways and residential roads, log
scale could make infrequently traveled roads more promi-
nent. For example in Fig. 6b, the horizontal road at the
bottom becomes much more visible than in the linear scale.
When there is a limited quantity of GPS data but the sam-
pling frequency is high, adding a line segment between con-
secutive samples helps [15], which is another way to render
GPS data. In our case, these line segments often shortcut in-
tersections and curves because of low sampling frequency,
and therefore do not improve results in our experiments.
Our 1D decoder has similar effect at roads with sparse sam-
ples, and they are not affected by sampling intervals.

Other GPS measurements can be useful for road ex-
traction. We render these measurements as separate input
layers. More speciﬁcally, the pixel values of the interval,
speed, and bearing layers are the average sampling interval,
average speed, and average sinusoid of the bearing for all
the samples projected to the pixel, respectively.

5. Experiments

We experiment with the satellite imagery and our GPS

datasets from two cities, and report our results here.

Datasets For satellite imagery, we crawled 350 images
in Beijing and 50 images in Shanghai from Gaode map [2].
All these images are 1024 x 1024 in size and 50 cm/pixel
in resolution, a total area of about 100 km2. Like the Deep-

7513

Table 2: Different input and model combinations

input

GPS

image

image + GPS

method

KDE [9]

DeepLab (v3+) [8]

U-Net [24]

Res U-Net [38]

LinkNet [7]

D-LinkNet [39]
DeepLab (v3+)

U-Net

Res U-Net

LinkNet

D-LinkNet

DeepLab (v3+)

U-Net

Res U-Net

LinkNet

D-LinkNet

IoU (%) on test set
plain

1D decoder

34.06
47.65
43.63
45.33
49.98
48.46
43.40
51.85
50.26
53.96
54.42
50.81
53.22
52.29
57.48
56.96

-
-

48.10
48.52
51.06
49.95

-

52.10
51.77
54.84
55.15

-

54.88
54.24
57.89
57.96

Globe dataset, we manually created the training labels by
masking out road pixels in the images. We choose the same
input image size as the DeepGlobe data set for the conve-
nience of comparison. It is also an appropriate size because
a smaller one would lose the context and a larger size may
not ﬁt in GPU memory. The DeepGlobe dataset is for much
larger areas but we do not have GPS data in the areas for
experiments. Some other research work used large datasets
by rendering OSM road vectors with ﬁxed width, typically
for developed countries [5, 18]. Roads in developing coun-
tries vary in width more signiﬁcantly, and misalignments
are prevalent on OSM. Therefore we have to label road pix-
els manually. Nevertheless, our dataset is among the largest
in research work that do not use DeepGlobe datasets or
OSM labels [16, 40].

Our GPS datasets are taxi and bus samples that include
timestamp, latitude, longitude, speed, bearing, and vehicle
status ﬂags. As discussed in Section 3, our GPS datasets
are from different devices with varying sampling rates and
different resolutions for the measurements.

Similar to the competition and the other research work,
we use the intersection over union (IoU) as the main eval-
uation criteria, and report the average IoU among all test
image patches. We randomly split our dataset into three
partitions, 70% for training, 10% for validation, and the rest
20% for testing. Other than the last experiment that evalu-
ates the ability for our model to predict new areas, we use
only the Beijing satellite images and GPS dataset for train-
ing and testing.

Models Our GPS rendering method applies to all ex-
isting segmentation models. Here we choose DeepLab, two
variants of U-Net, and two variants of LinkNet to evaluate.
The two variants of U-Net are the original one and the one

with ResNet style encoder and decoder, denoted as Res U-
Net. The two variants of LinkNet are the original one and
D-LinkNet that achieved top performance in the DeepGlobe
challenge. For road extraction using GPS input only, we
also add KDE method for comparison since it was among
the best using traditional machine learning techniques [15].
Baseline Our ﬁrst experiment takes the GPS input
alone; see the top section of Table 2. For the KDE method,
since we measure IoU only and do not extract road center-
lines, we simply pick the best kernel size and the threshold
to binarize the Gaussian smoothed image. The results show
that deep neural nets perform much better than the KDE
method to extract roads from GPS data only. Our 1D de-
coder is very useful against relatively shallow neural nets,
and give about 1 % increase against more complex models.
LinkNet shows the best result here. Although D-LinkNet
performed better in the DeepGlobe challenge, its additional
complexity over LinkNet leads to more severe overﬁtting of
the relatively simple GPS data. We do not apply 1D decoder
to DeepLab since it uses a bi-linear interpolation decoder
without any transpose convolution.

Next we examine the performance of the different seg-
mentation models with the satellite image input only; see
the second section of Table 2. The result is consistent with
the numbers reported in the DeepGlobe challenge, where D-
LinkNet is slightly better than the other models [39]. The
best IoU in our test is lower than the number in the chal-
lenge because the Beijing area is more challenging than the
rural areas and towns used in the challenge. Many roads
are completely blocked by tree canopy in the old city center
area, and the road boundaries are not easy to deﬁne with the
prevalent express/local/bike way systems. DeepLab has the
worst performance among the models we use. Visually ex-
amining the output reveals much coarser borders than in the
other model output, likely due to the bi-linear interpolation
decoder instead of transpose convolution used.

Finally, with both the image and the GPS input, D-
LinkNet remains the top performer. Here the largest perfor-
mance gain for the additional GPS input is DeepLab. For
the other models that already perform relatively well on the
image input, the performance gain is about 2 %, and the 1D
decoder adds about another 1 %.

Augmentation Figure 7 shows the effectiveness of our
GPS data augmentation. Figure 7a and Figure 7b are the
performance of different augmentation techniques with a
subset of input data and a reduced resolution of input data,
respectively. With our data augmentation, our model not
only performs much better with degraded GPS data input,
but also gains about 0.5% over the top-of-the-line perfor-
mance.

Rendering As described in Section 4.3, Fig. 8 shows
the performance of Gaussian kernel rendering with differ-
ent kernel sizes and different rendering scale. We also

7514

)

%

(
U
o
I

59

57

55

53

51

49

47

45

w/o augmentation
sub-sampling
sub-resolution

omission
perturbation
best combination

1/8

1/4

1/2

1

(a) Performance with different GPS quantity

Table 3: Using GPS features and data augmentation

settings (all using D-LinkNet)

IoU (%)

image
image + GPS
image + GPS + 1D decoder
image + GPS + 1D decoder + augment.
image + GPS + interval + 1D decoder
image + GPS + interval + 1D decoder + augment.

54.42
56.96
57.96
58.55
58.55
59.18

tions when GPS input is added. Map matching could give
additional conﬁdence by matching GPS traces to roads by
topology [21], which is beyond the scope of this paper.

(b) Performance with different GPS resolution

Figure 7: GPS data augmentation results (D-LinkNet with
image+GPS input)

experimented with various combination of GPS measure-
ments, sampling interval, vehicle speed, and vehicle bear-
ing. Adding another input layer of sampling interval alone
gives the best performance gain. Based on these results, we
use two input layers for the GPS data for the rest of the ex-
periments, Gaussian kernel rendering of the GPS samples
with kernel size three and the sampling interval channel.

Table 3 is the overall performance gain with various im-
provements over the baseline using the image input only.
Altogether we achieved 4.76% performance gain.

Figure 8: Rendering with different Gaussian kernel sizes

GPS as veriﬁcation As discussed in Section 1, local
veriﬁcation is often required for mapping. Figure 9 shows
how the crowdsourced GPS data can serve the veriﬁcation
purpose without local survey. Here the green pixels are high
conﬁdence predictions by both the image-only input and the
image + GPS input, while red pixels are high conﬁdence
predictions by image-only input but low conﬁdence predic-

(a) GPS samples over satellite image

(b) Roads conﬁrmed by GPS

Figure 9: Road veriﬁcation using GPS data

New testing area Table 4 is the testing results with our
Shanghai dataset using different training data and methods.
Despite the different GPS data characteristics, it is evident
that prediction with additional GPS input is more resilient
in the new domain, 18.9% IoU drop for the model trained
with both datasets instead of 31.6% for the model trained
with image input only. The performance gain is enhanced
when employing the GPS data augmentation, conﬁrming its
effect against overﬁtting.

Table 4: Shanghai testing dataset results

train

Beijing

+

Shanghai

Beijing

method

GPS
image

image + GPS (w/o augment)
image + GPS (w/ augment)

GPS
image

image + GPS (w/o augment)
image + GPS (w/ augment)

IoU(%)

relative

44.88
55.76
59.30
60.00
42.82
38.16
44.57
48.69

–
–
–
–

-4.6%
-31.6%
-24.9%
-18.9%

Qualitative results Figure 10 visualizes the road ex-
traction results of different methods in different testing ar-
eas of Beijing and Shanghai, trained using Beijing dataset
only. Overall, prediction using GPS data only largely
matches the sample distribution. With the image input only,

7515

1/81/41/214547495153555759IoU(%)w/oaugmentationsub-samplingsub-resolutionomissionperturbationbestcombination135921549952545658IoU(%)logscalelinearscaleSatellite + GT

GPS Points

GPS only

Image only

Image+GPS (plain)

Image+GPS (ours)

(a)

BJ

(b)

BJ

(c)

BJ

Figure 10: Prediction results using different methods on Beijing and Shanghai testing datasets trained on Beijing dataset only

occlusion and other image issues can cause poor perfor-
mance. Both image and GPS input give the best results, and
our enhancement techniques give a bit cleaner output. As
examples, the areas pointed by red arrows show false posi-
tives removed with our model using GPS data. The one in
the ﬁrst row is a railway and the one in the third row is from
GPS noise. The red square shows an area with dense tree
canopy and relatively sparse GPS samples. Only the combi-
nation of image and GPS data extracts a relatively complete
road network.

tation techniques, our GPS data augmentation is very ef-
fective against overﬁtting, and thus our method performs
much better in new testings areas than other models.
In
our experiences, aerial imagery works best for residential
roads detection because they are relatively simple, numer-
ous, and infrequently traveled. In contrast, GPS data can
recover arterial roads with ease even for complicated high-
way systems and under severe image occlusion. Therefore,
the two data sources well complement each other for road
extraction tasks.

6. Conclusion

Acknowledgement

With large-scale crowdsourced GPS datasets, fusing
GPS data with aerial image input gives much better road
segmentation results than using images or GPS data alone
with deep neural net models. Inspired by image augmen-

We thank anonymous reviewers for valuable feedback.
This research is supported by NSFC General Program
41771481, Shanghai Science and Technology Commission
program 17511104502, and a gift fund from Facebook.

7516

(d)SH(e)SHReferences

[1] AI-assisted road tracing. wiki.openstreetmap.org/

wiki/AI-Assisted_Road_Tracing. 1, 2

[2] Gaode Map. www.amap.com. 5

[3] OpenStreetMap. www.openstreetmap.org. 1, 2

[4] S. Aksoy, B. Ozdemir, S. Eckert, F. Kayitakire, M. Pesarasi,
O. Aytekin, C. C. Borel, J. Cech, E. Christophe, S. Duzgun,
et al. Performance evaluation of building detection and dig-
ital surface model extraction algorithms: Outcomes of the
prrs 2008 algorithm performance contest. In IAPR Workshop
on Pattern Recognition in Remote Sensing. IEEE, 2008. 1, 2

[5] F. Bastani, S. He, S. Abbar, M. Alizadeh, H. Balakrishnan,
S. Chawla, S. Madden, and D. DeWitt. Roadtracer: Auto-
matic extraction of road networks from aerial images.
In
Computer Vision and Pattern Recognition (CVPR), 2018. 2,
6

[6] J. Biagioni and J. Eriksson. Map inference in the face of
In SIGSPATIAL Conference on Geo-

noise and disparity.
graphic Information Systems (GIS), 2012. 2

[7] A. Chaurasia and E. Culurciello. Linknet: Exploiting en-
coder representations for efﬁcient semantic segmentation.
In Visual Communications and Image Processing (VCIP),
2017. 4, 6

[8] L.-C. Chen, G. Papandreou, I. Kokkinos, K. Murphy, and
A. L. Yuille. Deeplab: Semantic image segmentation with
deep convolutional nets, atrous convolution, and fully con-
nected crfs. IEEE transactions on pattern analysis and ma-
chine intelligence, 40(4):834–848, 2018. 2, 4, 6

[9] J. J. Davies, A. R. Beresford, and A. Hopper. Scalable, dis-
tributed, real-time map generation. IEEE Pervasive Comput-
ing, 5(4):47–54, 2006. 2, 5, 6

[10] I. Demir, K. Koperski, D. Lindenbaum, G. Pang, J. Huang,
S. Basu, F. Hughes, D. Tuia, and R. Raskar. Deepglobe
2018: A challenge to parse the earth through satellite im-
ages. In Computer Vision and Pattern Recognition (CVPR)
Workshops, 2018. 2, 4

[11] B. Huang, K. Lu, N. Audebert, A. Khalel, Y. Tarabalka,
J. Malof, A. Boulch, B. Le Saux, L. Collins, K. Bradbury,
et al. Large-scale semantic classiﬁcation: outcome of the
ﬁrst year of inria aerial image labeling benchmark. In IEEE
International Geoscience and Remote Sensing Symposium
(IGARSS), 2018. 2

[12] S. Karagiorgou, D. Pfoser, and D. Skoutas. A layered ap-
proach for more robust generation of road network maps
from vehicle tracking data. ACM Transactions on Spatial
Algorithms and Systems (TSAS), 3(1):3, 2017. 2

[13] Y. LeCun, L. Bottou, Y. Bengio, and P. Haffner. Gradient-
based learning applied to document recognition. Proceed-
ings of the IEEE, 86(11):2278–2324, 1998. 2

[14] P. Li, Y. Zang, C. Wang, J. Li, M. Cheng, L. Luo, and Y. Yu.
Road network extraction via deep learning and line integral
convolution. In IEEE International Geoscience and Remote
Sensing Symposium (IGARSS), 2016. 2

[15] X. Liu, J. Biagioni, J. Eriksson, Y. Wang, G. Forman, and
Y. Zhu. Mining large-scale, sparse gps traces for map infer-
ence: comparison of approaches. In ACM SIGKDD interna-

tional conference on Knowledge discovery and data mining,
2012. 2, 5, 6

[16] G. M´attyus, W. Luo, and R. Urtasun. Deeproadmapper: Ex-
tracting road topology from aerial images. In The IEEE In-
ternational Conference on Computer Vision (ICCV), 2017.
2, 6

[17] H. Mayer, S. Hinz, U. Bacher, and E. Baltsavias. A test of au-
tomatic road extraction approaches. International Archives
of Photogrammetry, Remote Sensing, and Spatial Informa-
tion Sciences, 36(3):209–214, 2006. 1, 2

[18] V. Mnih. Machine Learning for Aerial Image Labeling. PhD

thesis, University of Toronto, 2013. 2, 6

[19] V. Mnih and G. E. Hinton. Learning to label aerial images
In International conference on machine

from noisy data.
learning (ICML), 2012. 1, 2

[20] A. J. Mosinska, P. Marquez Neila, M. Kozinski, and P. Fua.
Beyond the pixel-wise loss for topology-aware delineation.
In Computer Vision and Pattern Recognition (CVPR), 2018.
2

[21] P. Newson and J. Krumm. Hidden markov map matching
through noise and sparseness. In SIGSPATIAL Conference
on Geographic Information Systems (GIS), 2009. 7

[22] D. Patel. Osm at facebook. State of the Map, 2018. 1, 2
[23] S. Rogers, P. Langley, and C. Wilson. Mining gps data to
augment road models. In ACM SIGKDD international con-
ference on Knowledge discovery and data mining, 1999. 2

[24] O. Ronneberger, P. Fischer, and T. Brox. U-net: Convo-
In
lutional networks for biomedical image segmentation.
International Conference on Medical image computing and
computer-assisted intervention, pages 234–241. Springer,
2015. 2, 4, 6

[25] S. Schr¨odl, S. Schr¨odl, K. Wagstaff, S. Rogers, P. Langley,
and C. Wilson. Mining GPS traces for map reﬁnement. Data
Mining Knowledge Discovery, 9(1):59–87, 2004. 2

[26] Z. Shan, H. Wu, W. Sun, and B. Zheng. Cobweb: a robust
map update system using gps trajectories. In ACM Interna-
tional Joint Conference on Pervasive and Ubiquitous Com-
puting (UbiComp), 2015. 2

[27] E. Shelhamer, J. Long, and T. Darrell. Fully convolutional
networks for semantic segmentation. IEEE transactions on
pattern analysis and machine intelligence, 39(4):640–651,
2017. 2, 4

[28] T. Sun, Z. Di, and Y. Wang. Combining satellite imagery and
gps data for road extraction. 2018. SIGSPATIAL Conference
on Geographic Information Systems (GIS) workshop. 2

[29] M. Trifunovic. Robot tracers - extraction and classiﬁcation

at scale using & cntk. State of the Map, 2018. 1, 2

[30] F. van Diggelen. Gnns accuracy: Lies, damn lies, and statis-

tics. GPS World, pages 26–32, 2007. 3

[31] M. Volpi and D. Tuia. Dense semantic labeling of sub-
decimeter resolution images with convolutional neural net-
works. IEEE Transactions on Geoscience and Remote Sens-
ing, 55(2):881–893, 2017. 2

[32] S. Wang, M. Bai, G. Mattyus, H. Chu, W. Luo, B. Yang,
J. Liang, J. Cheverie, S. Fidler, and R. Urtasun. Torontoc-
ity: Seeing the world with a million eyes. In International
Conference on Computer Vision (ICCV), 2017. 2

7517

[33] Y. Wang. Scaling Maps at Facebook. In SIGSPATIAL Con-
ference on Geographic Information Systems (GIS), 2016.
keynote. 2

[34] Y. Wang, X. Liu, H. Wei, G. Forman, C. Chen, and Y. Zhu.
Crowdatlas: Self-updating maps for cloud and personal use.
In International Conference on Mobile Systems, Applica-
tions, and Services (MobiSys), 2013. 1, 2

[35] G.-S. Xia, X. Bai, J. Ding, Z. Zhu, S. Belongie, J. Luo,
M. Datcu, M. Pelillo, and L. Zhang. Dota: A large-scale
dataset for object detection in aerial images.
In Computer
Vision and Pattern Recognition (CVPR), 2018. 2

[36] N. Yokoya, P. Ghamisi, J. Xia, S. Sukhanov, R. Heremans,
I. Tankoyeu, B. Bechtel, B. Le Saux, G. Moser, and D. Tuia.
Open data for global multimodal land use classiﬁcation: Out-
come of the 2017 ieee grss data fusion contest. IEEE Jour-
nal of Selected Topics in Applied Earth Observations and
Remote Sensing, 11(5):1363–1377, 2018. 2

[37] J. Yuan and A. M. Cheriyadat. Image feature based gps trace
ﬁltering for road network generation and road segmentation.
Machine Vision and Applications, 27(1):1–12, 2016. 2

[38] Z. Zhengxin, L. Qingjie, and W. Yunhong. Road extraction
In IEEE GEOSCIENCE AND RE-

by deep residual u-net.
MOTE SENSING LETTERS, 2017. 6

[39] L. Zhou, C. Zhang, and M. Wu. D-linknet: Linknet with
pretrained encoder and dilated convolution for high resolu-
tion satellite imagery road extraction.
In Computer Vision
and Pattern Recognition (CVPR) Workshops, 2018. 4, 6

[40] X. X. Zhu, D. Tuia, L. Mou, G.-S. Xia, L. Zhang, F. Xu, and
F. Fraundorfer. Deep learning in remote sensing: a compre-
hensive review and list of resources. IEEE Geoscience and
Remote Sensing Magazine, 5(4):8–36, 2017. 2, 6

7518

