Attentive Feedback Network for Boundary-Aware Salient Object Detection

Mengyang Feng1, Huchuan Lu1, and Errui Ding2

1Dalian University of Technology, China

2Department of Computer Vision Technology (VIS), Baidu Inc.

mengyang feng@mail.dlut.edu.cn, lhchuan@dlut.edu.cn, dingerrui@baidu.com

Abstract

Recent deep learning based salient object detection
methods achieve gratifying performance built upon Fully
Convolutional Neural Networks (FCNs). However, most
of them have suffered from the boundary challenge. The
state-of-the-art methods employ feature aggregation tech-
nique and can precisely ﬁnd out wherein the salient object,
but they often fail to segment out the entire object with ﬁne
boundaries, especially those raised narrow stripes. So there
is still a large room for improvement over the FCN based
models.
In this paper, we design the Attentive Feedback
Modules (AFMs) to better explore the structure of objects.
A Boundary-Enhanced Loss (BEL) is further employed for
learning exquisite boundaries. Our proposed deep model
produces satisfying results on the object boundaries and
achieves state-of-the-art performance on ﬁve widely tested
salient object detection benchmarks. The network is in a
fully convolutional fashion running at a speed of 26 FPS
and does not need any post-processing.

1. Introduction

Different from other dense-labeling tasks, e.g. semantic
segmentation and edge detection, the goal in salient object
detection is to identify the visually distinctive regions or ob-
jects in an image and then segment the targets out. Such a
useful processing is usually served as the ﬁrst step to beneﬁt
other computer vision tasks including content-aware image
editing [6] and image resizing [2], visual tracking [3], per-
son re-identiﬁcation [35] and image segmentation [7].

Along with the breakthrough of deep learning ap-
proaches, convolutional neural networks (CNNs, e.g.
VGG [25] and ResNet [9]) trained for the image recogni-
tion task have been further developed to other computer vi-
sion ﬁelds via transfer learning. One successful transform
is the fully convolutional neural networks (FCNs) in seman-
tic segmentation. In order to perform predictions for every
image pixel, [23, 24] usually bring in up-sampling opera-
tions by interpolation or learning deconvolutional ﬁlters be-

Figure 1. previous multi-scale aggregation methods fail to segment
exquisite boundaries.

fore the inferences. Beneﬁting from such an effective and
efﬁcient approach, a large margin of performance gain for
dense-labeling tasks has been achieved compared to previ-
ous traditional methods. However, the imperfection of the
generic fully convolutional frameworks is that they suffer
from the scale space problem. The repeated stride and pool-
ing operations in CNN architectures result in the loss of es-
sential ﬁne details (low-level visual cues), which cannot be
reconstructed by up-sampling operations.

To address the aforementioned problem, multi-scale
mechanisms for conducting communications among hier-
archical deep features are introduced to reinforce the spatial
information, such as skip-connections, short-connections
and feature aggregations proposed in [30], [10] and [33], re-
spectively. These mechanisms are based on the observations
that 1) deeper layers encode high-level knowledge and are
good at locating objects; 2) shallower layers capture more
spatial representations and can better reconstruct spatial de-
tails. Although these strategies have brought satisfactory
improvements, they fail to predict the overall structures and
have difﬁculties in detecting ﬁne boundaries (see Fig. 1).
For the sake of getting exquisite object boundaries, some
of the researchers have to employ time-consuming CRF to
reﬁne the ﬁnal saliency maps.

This paper concentrates on proposing a boundary-aware

1623

network for salient object detection, which does not need
any costly post-processing. We construct a novel encoder-
decoder network in the fully convolutional style. First, we
implement a Global Perception Module (GPM) on top of
the encoder network to generate a low-resolution saliency
map for roughly capturing the salient object. Then we
introduce Attentive Feedback Modules (AFMs) which are
built by adopting every encoder block and the correspond-
ing decoder block to reﬁne the coarse prediction scale-by-
scale. The AFMs contribute to capturing the overall shape
of targets. Moreover, a Boundary-Enhanced Loss (BEL)—
serving to produce exquisite boundaries—is employed to
assist the learning of saliency predictions on the object con-
tours. Our model has the abilities to learn to produce precise
and structurally complete salient object detection results, in
the meanwhile, the contours of targets can be clearly cut out
without post-processing.

Our main contributions are as follows:

- We propose an Attentive Feedback Network (AFNet)
to deal with the boundary challenge in saliency de-
tection. Multi-scale features from encoder blocks are
transmitted into corresponding decoder ones and used
to produce preferable segmentation results through the
proposed Attentive Feedback Modules (AFMs). The
AFNet learns to predict precise and structurally com-
plete segmentations scale-by-scale and ends up getting
the ﬁnest-resolution saliency map.

- We introduce a Boundary-Enhanced Loss (BEL) as an
assistant to learn exquisite object contours. Thus the
AFNet does not need any post-processing or extra pa-
rameters to reﬁne the boundaries of the salient object.

- The proposed model can run at a real-time speed of 26
FPS and achieves state-of-the-art performance on ﬁve
large-scale salient object detection datasets including
ECSSD [31], PASCAL-S [19], DUT-OMRON [32],
HKU-IS [15], and test set from DUTS [27].

2. Related Work

Multi-scale fusion methods. For the task of salient object
detection, the earlier improvements [10, 33] are all bene-
ﬁted from the fully convolutional neural networks (FCNs).
The authors attempt to ﬁnd the optimal multi-scale fusion
solutions to deal with the scale space problem caused by
down-sampling operations. Both of [10, 33] conduct con-
nections among hierarchical deep features into multiple
subnetworks, and each predicts ﬁnest-resolution saliency
map. The uncovering problem is that linking features from
different layers may suffer from the boundary challenge.
Although the features from deeper layers could help locate
the target, the loss of spatial details might obstruct the fea-
tures from shallower layers for recovering the object bound-

aries. A more proper way is to employ the multi-scale fea-
tures in a coarse-to-ﬁne fashion and gradually predict the
ﬁnal saliency map.
Coarse-to-ﬁne solution. Considering that simply concate-
nating features from different scales may fail if disordered
by the ambiguous information, coarse-to-ﬁne solutions are
employed in recent state-of-the-art methods such as Re-
ﬁneNet [20], PiCANet [22] and RAS [5]. The authors ad-
dress this limitation by introducing a recursive aggregation
method which fuses the coarse features to generate high-
resolution semantic features stage-by-stage. In this paper,
we similarly integrate hierarchical features from coarse to
ﬁne scales by constructing skip-connections between scale-
matching encoder and decoder blocks. However, we think
the weakness of the recursive aggregation method is that the
coarse information may still mislead the ﬁner one without
proper guidance. Thus, we build Attentive Feedback Mod-
ules (AFMs) to guide the message passing among encoder
and decoder blocks.
Attention models. Attention models are popularly used in
recent neural networks to mimic the visual attention mech-
anism in the human visual system. The G-FRNet proposed
by Islam et al. [11] applies gate units between each encoder
and decoder blocks as attention models. These gate units
control the feedforward message passing for the sake of ﬁl-
tering out ambiguous information. However, the message
passing is controlled by Hadamard product, which means
that once the previous stage makes a mistake, the inaccu-
rate guidance and the overuse of these features may cause
unexpected drift on segmenting the salient targets. To cir-
cumvent this barrier, our attentive feedback module uses
ternary attention maps as the guidance between encoder
and decoder blocks.
Inspired by morphological dilation
and erosion, the ternary attention map—indicating the con-
ﬁdent foreground, conﬁdent background, and inconclusive
regions—is constructed according to the initial saliency pre-
dictions. The experiments show that the inconclusive re-
gions in the ternary attention map are mainly around the
object boundaries. We apply the ternary attention maps on
the input of each encoder block, and then generate the up-
dated multi-scale features for saliency prediction so that
the network can make further efforts on those inconclusive
pixels. Thus, by employing the attention models, our net-
work not only integrates the features among different stages
by guidance but also has an opportunity for error corrections
at each stage through the attentive feedback modules.

3. Proposed Method

In this paper, we propose an Attentive Feedback Net-
work (AFNet) with novel multi-scale Attentive Feedback
Modules and Boundary-Enhanced Loss to predict salient
objects with entire structure and exquisite boundaries. The
following subsections start from the backbone network ﬁrst

1624

Figure 2. Network pipeline. Our network is in an encoder-decoder style, and we denote the lth-scale encoder and decoder block as E(l) and
D(l), respectively. The input image is ﬁrst passed over E(1)
∼E(5) to extract multi-scale convolutional features. Then, a Global Perception
Module (GPM) is built on top of the E(5) to give a global saliency prediction SG. The decoder network takes as inputs SG and multi-scale
convolutional features to generate ﬁner saliency predictions S(5)
∼S(1) scale-by-scale. We control the message passing among E(l) and
D(l) through the Attentive Feedback Modules (AFMs, one illustration is on the right.), in which the built-in ternary attention maps T (l)
guide the boundary-aware learning progress. We generate ground truth with multiple resolutions and use cross-entropy loss as supervision.
Besides, in order to produce exquisite boundaries, extra Boundary-Enhanced Loss (BEL) is applied to the last two AFMs.

and then the detailed implementations of each component.

3.1. Network Overview

Similar to most previous approaches for salient object
detection, we choose the VGG-16 [25] as our backbone net-
work and develop it in an encoder-decoder style. The net-
work illustration is shown in Fig. 2. Five pairs of encoder
and decoder blocks are denoted as E(l) and D(l), respec-
tively (l ∈ {1, 2, 3, 4, 5} represents the scale).
Encoder Network. Similar to [14], we modify the VGG-
16 network into a fully convolutional network by casting
away the last two fully-connected layers along with the last
pooling layer. In another hand, we skip the down-scaling
operations before the last convolutional block E(5) and use
dilated convolutions [4] with rate=2 for E(5) to maintain
the original receptive ﬁeld of the ﬁlters. We operate such
surgery to avoid losing excessive spatial details.
Global Perception Module.
The GPM, described in
Sec. 3.2, takes the advantages of semantic resourceful fea-
tures learned from E(5) and predicts the global saliency map
SG which will be fed into the decoder blocks for reﬁnement.
Decoder Network. The decoder network comprises of
ﬁve convolutional blocks. We apply 2× up-sampling lay-
ers between the decoder blocks to ensure having the same
scale with corresponding encoder blocks. Each D(l) has
three 3 × 3 convolutional layers with output number of
32, 32 and 1, respectively. Among the scale-matching
pairs, the learned multi-level information can be transmit-
ted through the Attentive Feedback Modules (AFMs) with

built-in ternary attention map T (l). We discuss the imple-
mentation details in Sec. 3.3. When training the network,
every D(l) recursively estimates two saliency maps (S(l,1)
and S(l,2)) and each is supervised by the same scale ground
truth G(l) via cross-entropy loss. Particularly, we add extra
Boundary-Enhanced Loss (see Sec. 3.4) on D(1) and D(2) to
enforce their distinguishing capacity on object boundaries.

3.2. Global Perception Module

As for global saliency prediction, Liu et al. [21]
straightly employ a fully connected layer in its Global-View
CNN. The problems are 1) the neighboring elements in the
deepest layer have large overlapped receptive ﬁelds, mean-
ing that a same pixel on the input image contributes a lot
of redundant times to compute a single saliency value; (2)
employing all pixels is useful for determining general loca-
tions, but the local patterns got lost. These facts motivate us
to propose a Global Perception Module (see Fig. 3) to take
full use of the local and global information.

Let X of size N × N × C be the feature maps ex-
tracted from E(5) (the channel number is reduced to C = 16
through one 1 × 1 convolution). We ﬁrst split X into n × n
cells {x1, . . . , xn×n}, and then conduct global convolution
with kernel size Kg × Kg on X to get the global features
F(n) ∈ RN ×N ×C . The Fig. 3 gives an illustration when
n = 2 and Kg = 6. As can be observed, in our global con-
volution operation, each element (the red one) in a certain
cell is connected to Kg × Kg − 1 ‘neighbors’, i.e. the other
elements in blue in every cell. It is similar to introduce holes

1625

illustrated in Fig. 2 (AFM-3, t = 1). However, after the
ﬁrst time-step reﬁnement, we could not guarantee the qual-
ity of the results since the guidance from the former block
involves an up-scaling operation which pulls in many inac-
curate values, especially on object boundaries. Beyond that,
supposing the previous block failed to segment out the en-
tire target, the subsequent ones would never take a chance
to perform a structurally complete detection.

The AFM provides an opportunity for error corrections
using a ternary attention map in the second time-step feed-
back stream. We introduce to provide credible templates of
foreground and background for reference. A proper way for
our end-to-end training strategy is to exploit the reﬁned pre-
diction S(l,1) in the ﬁrst time-step as a reference. Reviewing
the morphological dilation and erosion, the former can gain
weight for lightly drawn ﬁgures, and the latter is a dual op-
eration which allows the thicker ﬁgures to get skinny. Mo-
tivated by that, we can ease the negative effects on bound-
aries by thinning down the salient regions through erosion.
On the other hand, we can expand the salient regions to
pull in more around pixels via dilation operation. Thus
when t = 2, the ternary attention map—indicating the con-
ﬁdent background, conﬁdent foreground, and inconclusive
regions—is generated by operating dilation and erosion on
S(l,1). We achieve morphological dilation D(l)(·) and ero-
sion E(l)(·) utilizing the max-pooling operation Pmax
M (l) (·),
written as,

D(l) (S(l,1)) = Pmax
E(l) (S(l,1)) = −Pmax

d (S(l,1)) ,
e (−S(l,1)) ,

M (l)

M (l)

(1)

and M (l)
e

where M (l)
represent the kernel size of the pool-
d
ing layer at level l. The ternary attention map T (l) is then
calculated as the average of D(l) (S(l,1)) and E(l) (S(l,1)).

As a consequence, 1) the pixels’ value in eroded saliency
regions are approaching 1; 2) the margin between these two
transformation have scores close to 0.5; 3) and the remain-
ing areas are almost 0 as can be observed in Fig. 2 (AFM-3).
Then the T (l) goes to weight the input of E(l) via pixel-wise
multiplication and an updated attentive feature map f (l,2)
is
e
produced from the encoder. Likewise, the S(l,1), f (l,1)
and
f (l,2)
are collected resulting the updated features I (l,2). In
e
the end, the decoder block performs the reﬁnement process
once again to generate S(l,2), which has more outstanding
boundaries, and goes to the next level. The whole stream
is illustrated in Fig. 2 (AFM-3, t = 2). We take the output
S(1,2) from the last decoder block as our ﬁnal saliency map.

d

3.4. Boundary Enhanced Loss

Along with the increased spatial resolution, the over-
all structure of objects gradually appears with the help
of AFMs. Even though, the convolutional network still

1626

Figure 3. Illustration for Global Perception Module.

in dilated convolution. The difference is that we also con-
sider the local neighbors. In this way, the local patterns and
global diagram are simultaneously guaranteed. The global
saliency map SG is generated from F(n) and then delivered
into decoder network for reﬁnement along with the multi-
scale convolutional features from E(1)∼E(5).
Implementation. We implement the global convolution in
a step-by-step style. First, the split cells {x1, . . . , xn×n}
are stored along the channels via concatenation, resulting a
reshaped version XR
(n). Then, the global convolutional fea-
tures F(n) can be generated through a kg × kg convolution
on XR
(n) and restoring the results to size N × N × C. The ﬁ-
nal step in GPM is applying a 3 × 3 convolution to generate
our global saliency prediction SG.

3.3. Attentive Feedback Module

, the input I (l,t), the features from D(l) as f (l,t)

We control the message passing between scale-matching
encoder and decoder blocks via Attentive Feedback Mod-
ules. The right part in Fig. 2 zooms in a detailed architec-
ture, and the AFM works in a two-step recurrent style. To
explain how it works more clearly, we illustrate the message
passing streams in two time-steps using solid and dashed
lines, respectively. We denote the features from E(l) as
f (l,t)
, and
e
output prediction as S(l,t), where t represents the time-step.
When t = 1, the decoder block D(l) takes as inputs
f (l,1)
from the l-th encoder block together with S(l+1,2) and
e
f (l+1,2)
from D(l+1). One 1 × 1 convolution is applied on
d
f (l,1)
to reduce its channels to 32 for saving memory. The
e
outputs from D(l+1) are up-sampled by the factor of 2 for
matching the spatial resolution with f (l,1)
. Then we con-
catenate all the input elements, and this formulates an atten-
tive feature I (l,1) guided by the coarse prediction from the
last scale. The reﬁned prediction S(l,1) in the ﬁrst time-step
can be easily generated through three convolutional layers
with batch normalization and ReLU. The whole stream is

d

e

holds a common problem that they usually generate blurred
boundaries and has troubles in distinguishing the narrow
background margins between two foreground areas (such
as the space between two legs). We apply a Boundary-
Enhanced Loss to work together with the cross-entropy
loss for saliency detection to overcome this problem. The
A(l) (·) with kernel size A(l) is
average-pooling operation Pave
employed to extract the smooth boundaries in the predic-
tions. We avoid directly predicting the boundaries since it
is really a tough task and the object contour map should be
consistent with its saliency mask. We use B(l) (X) to de-
note the operation for producing object contour map given
a saliency mask X, as follows,

B(l) (X) = (cid:12)(cid:12)X − Pave

A(l) (X)(cid:12)(cid:12) ,

(2)

where |·| remarks the absolute value function. We visualize
the B(l) (G(l)) and B(l) (S(l,t)) in Fig. 2 (BEL). The loss
function for l = 1, 2 can be written as,

L(S(l,t), G(l)) = λ1 · Lce (S(l,t), G(l)) +

λ2 · Le (B(l)(S(l,t)), B(l)(G(l))) .

(3)

The ﬁrst term Lce (·, ·) stands for the cross-entropy loss for
saliency detection, while the second term is our Boundary-
Enhanced Loss. Le (·, ·) represents the Euclidean loss. We
use λ1 and λ2 to control the loss weights, and we set
λ1 : λ2 = 1 : 10 to strengthen the learning progress on ob-
ject contours in our implementation. For l = 3, 4, 5, the loss
function just contains the ﬁrst term, i.e. the cross-entropy
loss for saliency detection. It is because that these layers
do not maintain the details needed for recovering exquisite
outlines. By extracting boundaries from the saliency pre-
dictions themselves, the boundary-enhanced loss enhances
the model to take more efforts on boundaries.

4. Experiments

4.1. Datasets and Evaluation Metrics

We carry out experiments on ﬁve public salient object
detection datasets which are ECSSD [31], PASCAL-S [19],
DUT-OMRON [32], HKU-IS [15] and DUTS [27]. The
ﬁrst four are widely used in saliency detection ﬁeld while
the last DUTS dataset is a recently released large-scale
benchmark with the explicit training (10533)/test (5019)
evaluation protocol. We train our model on the training set
from DUTS and test on its test set along with other four
datasets. We evaluate the performance using the following
metrics.

Precision-Recall curves. It is a standard metric to evalu-
ate saliency performance. One should binarize the saliency
map with a threshold sliding from 0 to 255 and then com-
pare the binary maps with the ground truth.

Table 1. Parameter settings for AFM and BEL.

l

M (l)
d
M (l)
e

5

11

5

4

11

5

3

13

5

2

13

7

AFM

BEL

A(l) — — — 3

1

15

7

5

F-measure. As an overall measurement, it can be com-
puted both from precision and recall by thresholding the
saliency map via 2× mean saliency value, as follows:

Fβ = (1 + β2) · precision · recall

β2 · precision + recall

,

(4)

where β2 is set to 0.3 as suggested in [1] to emphasize the
precision. We also report the maximum F-measure (Fmax
)
computed from all precision-recall pairs.

β

Mean Absolute Error. MAE is a complementary to
PR curves and measures the average difference between the
prediction and the ground truth quantitatively in pixel level.
S-measure. S-measure is proposed by Fan et al. [8],
and it can be used to evaluate non-binary foreground maps.
This measurement simultaneously evaluates region-aware
and object-aware structural similarity between the saliency
map and ground truth.

4.2. Implementation Details

We do data augmentation by horizontal- and vertical-
ﬂipping and image cropping to relieve over-ﬁtting inspired
by Liu et al. [21]. When fed into the AFNet, each image is
warped to size 224 × 224 and subtracted using a mean pixel
provided by VGG net at each position.

Our system is built on the public platform Caffe [12]
and the hyper-parameters are set as follows: We train our
network on two GTX 1080 Ti GPUs for 40K iterations,
with a base learning rate (0.01), momentum parameter (0.9)
and weight decay (0.0005). The mini-batch is set to 8
on each GPU. The ‘step’ policy with gamma = 0.5 and
stepsize = 10K is used. The parameters of the ﬁrst 13
convolutional layers in encoder network are initialized by
the VGG-16 model [25] and their learning rates are multi-
plied by 0.1. For other convolutional layers, we initialize
the weights using “gaussian” method with std = 0.01. The
SGD method is selected to train our neural networks.

4.3. Parameter Settings

Parameters for AFM and BEL. The Table. 1 shows the
kernel size of pooling layers implemented in AFM and
BEL. All of the strides are ﬁxed to 1, and the padding widths
are set for maintaining the spatial resolution. These param-
eters are adjusted following the observations: 1) for predic-
tions with low-resolution, the ternary attention map should

1627

Table 2. Quantitative comparisons. The best three results are shown in red, green and blue. The method DHS use 3500 images from
DUT-OMRON to train, so its results here are excluded in this table. The index in the ﬁrst column regards the publication year.

Method

LEGS15
RFCN16
ELD16
DCL16
DS16
DHS16
Amulet17

DSS17

C2SNet18

RAS18
DGRL18
PiCANet18

AFNet

ECSSD

PASCAL-S

DUT-OMRON

HKU-IS

DUTS-test

Fmax

β

Sm MAE Fmax

β

Sm MAE Fmax

β

Sm MAE Fmax

β

Sm MAE Fmax

β

Sm MAE

.827
.890
.867
.890
.882
.907
.915
.916
.911
.921
.922
.931
.935

.787
.860
.839
.828
.821
.884
.894
.882
.895
.893
.903
.914
.914

.118
.095
.079
.088
.122
.059
.059
.052
.053
.056
.041
.047
.042

.762
.837
.773
.805
.765
.829
.837
.836
.852
.837
.854
.868
.868

.725
.808
.757
.754
.739
.807
.820
.797
.838
.795
.836
.850
.850

.155
.118
.123
.125
.176
.094
.098
.096
.080
.104
.072
.077
.071

.669
.742
.715
.739
.745
—
.742
.771
.757
.786
.774
.794
.797

.714
.774
.750
.713
.750
—
.780
.788
.798
.814
.806
.826
.826

.133
.095
.092
.097
.120
—
.098
.066
.072
.062
.062
.068
.057

.766
.892
.739
.885
.865
.890
.895
.910
.898
.913
.910
.921
.923

.742
.858
.820
.819
.852
.870
.883
.879
.887
.887
.895
.906
.905

.119
.079
.074
.072
.080
.053
.052
.041
.046
.045
.036
.042
.036

.655
.784
.738
.782
.777
.807
.778
.825
.809
.831
.829
.851
.862

.694
.792
.753
.735
.793
.817
.803
.822
.828
.839
.841
.861
.866

.138
.091
.093
.088
.090
.067
.085
.057
.063
.060
.050
.054
.046

involve in enough regions in case of excluding the target
object. Thus the kernel size should be relatively large to
the spatial size. With the increasing of spatial resolution,
we could decrease the kernel size cause the overall shape
of targets could be recognized already; 2) the kernel size of
the Erosion M (l)
should be smaller than the kernel size of
e
the Dilation M (l)
d because that we need to perceive as much
as possible details around the boundary regions. The M (l)
d ,
M (l)
e and A(l) are experimentally set according to the above
observations.
Parameters for GPM. The kernel size Kg = n × kg in the
global convolution, and we ﬁx the local convolutional ker-
nel size kg in GPM to 3. Regarding the number of split cells
n × n, we do ablation studies in Sec. 4.5. In our ﬁnal imple-
mented version, we employ the multi-scale strategy to form
the global prediction module by combining 3 GPMs with
different settings. Each GPM receives the features from
E(5) as input, and their output features are concatenated for
producing SG through one 3 × 3 convolution.

4.4. Comparisons with State of the art Results

We compared our algorithm with other 12 state-of-
the-art deep learning methods, which are LEGS [26],
RFCN [28], ELD [13], DCL [16], DS [18], DHS [21],
Amulet [33], DSS [10], C2SNet [17], RAS [5], DGRL [29]
and PiCANet [22]. The saliency maps of other methods are
provided by the authors or computed by their released codes
with default settings for fair comparisons.
Quantitative Evaluation.
1) We evaluate our saliency
maps using the standard PR curves in Fig. 4. In the ﬁrst
two rows, the ﬁve ﬁgures compare the proposed method
(red) with other state-of-the-art algorithms. As can be ob-
served, our method performs comparably with PiCANet
and much better than the other algorithms. In the last two
rows, we calculate PR curves on image boundaries to prove

our boundary-aware approach. The ground truth boundary
mask is obtained by subtracting the dilated saliency mask
with the eroded one. The structuring element is a 5 × 5
diamond matrix. We can produce the predicted bound-
ary map in the same way and then compute PR curves.
The curves demonstrate that our predicted saliency map has
ﬁner object boundaries and can better capture the overall
shapes than PiCANet and other methods. Note that PGRL
and C2SNet also propose ways to reﬁne the object bound-
aries. PGRL adopts extra parameters (the BRN) to reﬁne the
boundaries while C2SNet needs extra contour/edge ground
truth to train another branch (contour branch). Our pro-
posed AFNet does not need extra parameters or training
data of edges and can produce saliency and contour maps
using the same set of parameters. We also achieve bet-
ter performance on the PR curves of the object boundaries.
2) Table. 2 presents maximum F-measure, S-measure, and
MAE on ﬁve datasets. Our AFNet ranks comparable with
PiCANet or even better, but is much faster. The speed
(without post-processing) in FPS (frames-per-second) of Pi-
CANet, DGRL, C2SNet, DSS, Amulet are 6, 4, 18, 13 and
12, respectively. Ours achieves the real-time speed of 26
FPS which is comparable with RAS (33 FPS) and DHS (28
FPS). Some methods like DCL and DSS apply CRF to re-
ﬁne their ﬁnal saliency maps while our AFNet does not need
any post-processing.

Qualitative Evaluation. We illustrate the visual compari-
son with other approaches in Fig. 5. In the ﬁrst four rows,
the raised narrow stripes such as tentacles and horns are
highlighted in ours but missed in all other methods. Be-
sides, AFNet can produce the knife-edge-shaped bound-
aries and more close to the ground truth compared with
PGRL and C2SNet which use extra parameters or edge data
to reﬁne the boundaries. For the two arm-stretched girls
in the last two rows, almost all the other methods generate
blurred responses on arms while ours gives clear decisions.

1628

Figure 4. The PR Curves of the proposed algorithm and other state-of-the-art methods over ﬁve datasets. First two rows: evaluation on
saliency maps. Last two rows: evaluation of boundary maps extracted from saliency predictions via dilation and erosion.

Figure 5. Visual comparison with state-of-the-art methods.

1629

Figure 6. Visual comparison among different model settings. Left columns show the comparison of global models. Right columns
illustrate the effectiveness of AFM and BEL.

Table 3. The effectiveness of Global Perception Module. (x) stands for the different number of split cells in GPMs.

FC

S-Conv L-Conv D-Conv

PPM GPM(22) GPM(42) GPM(72) GPM(22 + 42 + 72)

mean IOU
IOU(@Fmax

β
Fmax

β

)

.534
.571
.769

.523
.568
.768

.500
.560
.759

. 541
.580
.779

.550
.585
.781

.551
.594
.783

.555
.597
.787

.552
.583
.780

.558
.603
.791

Table 4. The effectiveness of Attentive Feedback Module (AFM) and Boundary-Enhanced Loss (BEL).

Metric

Precision Recall

Fβ

Fmax

β

Sm MAE IOU(@Fmax

β

) mean IOU

Model Name

G-FRNet

AFNet

w/o AFM
w/o BEL

full implementation

.7573

.7742
.7829
.7925

.8709

.7579

.8319

.8381

.0562

.8899
.8907
.8941

.7771
.7872
.7974

.8586
.8557
.8624

.8621
.8618
.8664

.0512
.0493
.0461

.6667

.7069
.7140
.7213

.6500

.6960
.7001
.7186

4.5. Ablation Studies

We conduct ablation studies on DUTS-test dataset, and

β

β

we use some extra metrics for a better demonstration.
The effectiveness of GPM. We design some simple mod-
ules to produce SG for comparisons with GPMs. The re-
sults are shown in the Table. 3. We use some short names
for convenience, i.e. FC: fully-connected layer; S-Conv:
convolutional layer with small kernels (3×3); L-Conv: con-
volutional layer with large kernels (7 × 7); D-Conv: dilated
convolutional layer with small kernels (3×3) and large rates
(rate = 7); PPM: pyramid pooling module in PSPNet [34].
We calculate the Fmax
, the intersection over union (IOU) at
Fmax
and the mean IOU. Our GPMs achieve better results
and their combination performs best. The visual effects in
Fig. 6 (left columns) also illustrate that GPM can better
capture the overall shapes and local patterns.
The effectiveness of AFM and BEL. The Table. 4 shows
add-on effectiveness of AFM and BEL. We also implement
G-FRNet [11] for a better demonstration in this part, and the
G-FRNet is also trained on DUTS-train dataset in the same
environment. We calculate 8 evaluations—the Fβ, the pre-
cision and recall at Fβ, the three scores used in Table 2, the
intersection over union (IOU) at Fmax
and the mean IOU—
for detailed comparisons. As stated in Sec. 2, G-FRNet
performs less than satisfactory on saliency detection as its
gated unit drives the network excessively rely on the coarse
results at previous stages, which might make mistakes. The

β

ﬁrst row for ‘AFNet’ in the Table.4 excludes the feedback
path with the trimap (the dashed lines, t = 2), the second
row is the AFNet trained without the assistance of BEL, and
the last row is our full implemented version. The AFM and
BEL both contribute alone and perform better than the G-
FRNet. From the visualizations in Fig. 6 (right columns)
we could observe that AFM helps to recognize the structure
of the targets while BEL takes charge of capturing boundary
details.

5. Conclusion

In this paper, we have introduced a scale-wise solution
for boundary-aware saliency detection. A novel and
lightweight Global Perception Module is employed for
global saliency prediction, then the encoder and decoder
networks are communicated through Attentive Feedback
Modules for reﬁning the coarse prediction and predicting
the ﬁnal saliency map. The whole network can learn to
capture the overall shape of objects, and experimental
results demonstrate that the proposed architecture achieves
state-of-the-art performance on ﬁve public saliency bench-
marks. Our AFNet does not need any post-processing and
runs at a real-time speed of 26 FPS.

Acknowledgements.
This work was supported by
the Natural Science Foundation of China under Grant
61725202, 61829102 and 61751212.

1630

References

[1] R. Achanta, S. Hemami, F. Estrada, and S. Susstrunk.
Frequency-tuned salient region detection. In Proceedings of
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 1597–1604, 2009.

[2] S. Avidan and A. Shamir. Seam carving for content-aware

image resizing. ACM Trans. Graph., 26(3):10, 2007.

[3] A. Borji, S. Frintrop, D. N. Sihite, and L. Itti. Adaptive ob-
ject tracking by learning background context. In Proceedings
of IEEE Conference on Computer Vision and Pattern Recog-
nition, pages 23–30, 2012.

[4] L.-C. Chen, G. Papandreou, I. Kokkinos, K. Murphy, and
A. L. Yuille. Deeplab: Semantic image segmentation with
deep convolutional nets, atrous convolution, and fully con-
nected crfs. arXiv:1606.00915, 2016.

[5] S. Chen, X. Tan, B. Wang, and X. Hu. Reverse attention for
salient object detection. In European Conference on Com-
puter Vision, 2018.

[6] M. Cheng, F. Zhang, N. J. Mitra, X. Huang, and S. Hu.
Repﬁnder: ﬁnding approximately repeated scene elements
for image editing. ACM Trans. Graph., 29(4):83:1–83:8,
2010.

[7] M. Donoser, M. Urschler, M. Hirzer, and H. Bischof.
Saliency driven total variation segmentation. In Proceedings
of the IEEE International Conference on Computer Vision,
pages 817–824, 2009.

[8] D.-P. Fan, M.-M. Cheng, Y. Liu, T. Li, and A. Borji.
Structure-measure: A New Way to Evaluate Foreground
Maps. In Proceedings of the IEEE International Conference
on Computer Vision, 2017.

[9] K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learning
for image recognition. In Proceedings of IEEE Conference
on Computer Vision and Pattern Recognition, pages 770–
778, 2016.

[10] Q. Hou, M.-M. Cheng, X. Hu, A. Borji, Z. Tu, and P. Torr.
Deeply supervised salient object detection with short con-
nections. In Proceedings of the IEEE Conference on Com-
puter Vision and Pattern Recognition, 2017.

[11] M. A. Islam, M. Rochan, N. D. B. Bruce, and Y. Wang. Gated
feedback reﬁnement network for dense image labeling.
In
Proceedings of IEEE Conference on Computer Vision and
Pattern Recognition, pages 4877–4885, 2017.

[12] Y. Jia, E. Shelhamer, J. Donahue, S. Karayev, J. Long, R. B.
Girshick, S. Guadarrama, and T. Darrell. Caffe: Convolu-
tional architecture for fast feature embedding. In Proceed-
ings of the ACM International Conference on Multimedia,
MM ’14, Orlando, FL, USA, November 03 - 07, 2014, pages
675–678, 2014.

[13] G. Lee, Y. Tai, and J. Kim. Deep saliency with encoded low
level distance map and high level features. In Proceedings of
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 660–668, 2016.

[14] G. Li, Y. Xie, L. Lin, and Y. Yu. Instance-level salient ob-
In Proceedings of IEEE Conference on

ject segmentation.
Computer Vision and Pattern Recognition, 2017.

[15] G. Li and Y. Yu. Visual saliency based on multiscale deep
features. In Proceedings of IEEE Conference on Computer
Vision and Pattern Recognition, pages 5455–5463, 2015.

[16] G. Li and Y. Yu. Deep contrast learning for salient object
detection. In Proceedings of IEEE Conference on Computer
Vision and Pattern Recognition, pages 478–487, 2016.

[17] X. Li, F. Yang, H. Cheng, W. Liu, and D. Shen. Contour
knowledge transfer for salient object detection. In Proceed-
ings of European Conference on Computer Vision, 2018.

[18] X. Li, L. Zhao, L. Wei, M.-H. Yang, F. Wu, Y. Zhuang,
H. Ling, and J. Wang. Deepsaliency: Multi-task deep neural
network model for salient object detection. IEEE Transac-
tions on Image Processing, 25(8):3919–3930, 2016.

[19] Y. Li, X. Hou, C. Koch, J. Rehg, and A. Yuille. The secrets
of salient object segmentation. In Proceedings of IEEE Con-
ference on Computer Vision and Pattern Recognition, pages
280–287, 2014.

[20] G. Lin, A. Milan, C. Shen, and I. Reid. Reﬁnenet: Multi-path
reﬁnement networks for high-resolution semantic segmenta-
tion. 2016.

[21] N. Liu and J. Han. Dhsnet: Deep hierarchical saliency net-
work for salient object detection.
In Proceedings of IEEE
Conference on Computer Vision and Pattern Recognition,
pages 678–686, 2016.

[22] N. Liu, J. Han, and M.-H. Yang. Picanet: Learning pixel-
wise contextual attention for saliency detection. In Proceed-
ings of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 3089–3098, 2018.

[23] J. Long, E. Shelhamer, and T. Darrell. Fully convolutional
networks for semantic segmentation. In Proceedings of IEEE
Conference on Computer Vision and Pattern Recognition,
pages 3431–3440, 2015.

[24] H. Noh, S. Hong, and B. Han. Learning deconvolution net-
work for semantic segmentation. In Proceedings of the IEEE
International Conference on Computer Vision, pages 1520–
1528, 2015.

[25] K. Simonyan and A. Zisserman.

Very deep convolu-
tional networks for large-scale image recognition. CoRR,
abs/1409.1556, 2014.

[26] L. Wang, H. Lu, X. Ruan, and M.-H. Yang. Deep networks
for saliency detection via local estimation and global search.
In Proceedings of IEEE Conference on Computer Vision and
Pattern Recognition, pages 3183–3192, 2015.

[27] L. Wang, H. Lu, Y. Wang, M. Feng, D. Wang, B. Yin, and
X. Ruan. Learning to detect salient objects with image-level
supervision.
In Proceedings of IEEE Conference on Com-
puter Vision and Pattern Recognition, 2017.

[28] L. Wang, L. Wang, H. Lu, P. Zhang, and X. Ruan. Saliency
In
detection with recurrent fully convolutional networks.
Proceedings of European Conference on Computer Vision,
pages 825–841, 2016.

[29] T. Wang, L. Zhang, S. Wang, H. Lu, G. Yang, X. Ruan, and
A. Borji. Detect globally, reﬁne locally: A novel approach to
saliency detection. In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, pages 3127–
3135, 2018.

1631

[30] S. Xie and Z. Tu. Holistically-nested edge detection. In Pro-
ceedings of the IEEE International Conference on Computer
Vision, pages 1395–1403, 2015.

[31] Q. Yan, L. Xu, J. Shi, and J. Jia. Hierarchical saliency de-
In Proceedings of IEEE Conference on Computer

tection.
Vision and Pattern Recognition, pages 1155–1162, 2013.

[32] C. Yang, L. Zhang, H. Lu, X. Ruan, and M.-H. Yang.
Saliency detection via graph-based manifold ranking. In Pro-
ceedings of IEEE Conference on Computer Vision and Pat-
tern Recognition, pages 3166–3173, 2013.

[33] P. Zhang, D. Wang, H. Lu, H. Wang, and X. Ruan. Amulet:
Aggregating multi-level convolutional features for salient
object detection. In Proceedings of the IEEE International
Conference on Computer Vision, 2017.

[34] H. Zhao, J. Shi, X. Qi, X. Wang, and J. Jia. Pyramid scene
In Proceedings of IEEE Conference on

parsing network.
Computer Vision and Pattern Recognition, 2017.

[35] R. Zhao, W. Ouyang, and X. Wang. Unsupervised salience
learning for person re-identiﬁcation. In Proceedings of IEEE
Conference on Computer Vision and Pattern Recognition,
pages 3586–3593, 2013.

1632

