Deep Robust Subjective Visual Property Prediction in Crowdsourcing

Qianqian Xu1
Xiaochun Cao2,3

Zhiyong Yang2,3

Yangbangyan Jiang2,3

Qingming Huang1,4,5

Yuan Yao6

1 Key Lab of Intell. Info. Process., Inst. of Comput. Tech., CAS, Beijing, 100190, China

2 State Key Laboratory of Info. Security (SKLOIS), Inst. of Info. Engin., CAS, Beijing, 100093, China

3 School of Cyber Security, University of Chinese Academy of Sciences, Beijing,100049, China

4 School of Computer Science and Tech., University of Chinese Academy of Sciences, Beijing, 101408, China

5 BDKM, University of Chinese Academy of Sciences, Beijing, 100190, China

6 Department of Mathematics, Hong Kong University of Science and Technology, Hong Kong

xuqianqian@ict.ac.cn

{yangzhiyong,jiangyangbangyan,caoxiaochun}@iie.ac.cn

qmhuang@ucas.ac.cn

yuany@ust.hk

Abstract

The problem of estimating subjective visual properties
(SVP) of images (e.g., Shoes A is more comfortable than
B) is gaining rising attention. Due to its highly subjective
nature, different annotators often exhibit different interpre-
tations of scales when adopting absolute value tests. There-
fore, recent investigations turn to collect pairwise compar-
isons via crowdsourcing platforms. However, crowdsourc-
ing data usually contains outliers. For this purpose, it is
desired to develop a robust model for learning SVP from
crowdsourced noisy annotations.
In this paper, we con-
struct a deep SVP prediction model which not only leads
to better detection of annotation outliers but also enables
learning with extremely sparse annotations. Speciﬁcally,
we construct a comparison multi-graph based on the col-
lected annotations, where different labeling results corre-
spond to edges with different directions between two ver-
texes. Then, we propose a generalized deep probabilis-
tic framework which consists of an SVP prediction module
and an outlier modeling module that work collaboratively
and are optimized jointly. Extensive experiments on vari-
ous benchmark datasets demonstrate that our new approach
guarantees promising results.

1. Introduction

In recent years, estimating subjective visual properties
(SVP) of images [9, 19, 24] is gaining rising attention in
computer vision community. SVP measures a user’s subjec-
tive perception and feeling, with respect to a certain prop-
erty in images/videos. For example, estimating properties
of consumer goods such as shininess of shoes [9] improves
customer experiences on online shopping websites; and es-

timating interestingness [8] from images/videos would be
helpful for media-sharing websites (e.g., Youtube). Mea-
suring and ensuring good estimation of SVP is thus highly
subjective in nature. Traditional methods usually adopt ab-
solute value to specify a rating from 1 to 5 (or, 1 to 10)
to grade the property of a stimulus. For example, in im-
age/video interestingness prediction, 5 being the most in-
teresting, 1 being the least interesting. However, since by
deﬁnition these properties are subjective, different raters of-
ten exhibit different interpretations of the scales and as a re-
sult the annotations of different people on the same sample
can vary hugely. Moreover, it is unable to concretely deﬁne
the concept of scale (for example, what a scale 3 means for
an image), especially without any common reference point.
Therefore, recent investigations turn to an alternative ap-
proach with pairwise comparison. In a pairwise compari-
son test, an individual is simply asked to compare two stim-
uli simultaneously, and votes which one has the stronger
property based on his/her perception. Therefore individual
decision process in pairwise comparison is simpler than in
the typical absolute value tests, as the multiple-scale rating
is reduced to a dichotomous choice. It not only promises
assessments that are easier and faster to obtain with less de-
manding task for raters, but also yields more reliable feed-
back with less personal scale bias in practice. However, a
shortcoming of pairwise comparison is that it has more ex-
pensive sampling complexity than the absolute value tests,
since the number of pairs grows quadratically with the num-
ber of items to be ranked.

With the growth of crowdsourcing [2] platforms such as
MTurk, InnoCentive, CrowdFlower, CrowdRank, and Al-
lOurIdeas, recent studies thus resort to using crowdsourcing
tools to tackle the cost problem. However, since the partic-
ipants in the crowdsourcing experiments often work in the

18993

absence of supervision, it is hard to guarantee the annota-
tion quality in general [5]. If the experiment lasts too long,
the raters always lose their patience and end the test in a
hurry with random annotations. Worse, the bad users might
even provide wrong answers deliberately to corrupt the sys-
tem. Such contaminated decisions are useless and may de-
viate signiﬁcantly from other raters’ decisions thus should
be identiﬁed and removed in order to achieve a robust SVP
prediction result.

Therefore, existing approaches on SVP prediction are of-
ten split into two separate steps: the ﬁrst is a standard outlier
detection problem (e.g., majority voting) and the second is
a regression or learning to rank problem. However, it has
been found that when pairwise local rankings are integrated
into a global ranking, it is possible to detect outliers that
can cause global inconsistency and yet are locally consis-
tent, i.e., supported by majority votes [14]. To overcome
this limitation, [9] proposes a more principled way to iden-
tify annotation outliers by formulating the SVP prediction
task as a uniﬁed robust learning to rank problem, tackling
both the outlier detection and SVP prediction tasks jointly.
Different from this work which only enjoys the limited rep-
resentation power of the image low-level features, our goal
in this paper is to leverage the strong representation power
of deep neural networks to explore the SVP prediction issue
from a deep perspective.

When it comes to deep learning, it is known that several
kinds of factors can drive the deep learning model away
from a perfect one, with the data perturbation issue as an
typical example. Besides the notorious issue coming from
the crowdsourcing process, deep learning is in itself known
to be more vulnerable to contaminated data since the ex-
tremely high model complexity brings extra risks to overﬁt
the noisy/contaminated data [20, 10, 30, 32, 15, 25, 22]. We
believe that how to guarantee the robustness is one of the
biggest challenges when constructing deep SVP prediction
models. In this sense, we propose a deep robust model for
learning SVP from crowdsourcing. As an overall summary,
we list our main contributions as follows:

• A novel method for robust prediction of SVP is pro-
posed. To the best of our knowledge, our framework
offers the ﬁrst attempt to carry out the prediction pro-
cedure with automatic detection of sparse outliers from
a deep perspective.

• In the core of the framework lies the uniﬁed proba-
bilistic model, which is used to formulate the generat-
ing process of the labels when outliers exist. Based on
this model, we then propose a Maximum A Posterior
(MAP) based objective function.

• An alternative optimization scheme is adopted to solve
the corresponding model. Speciﬁcally, the network

parameters could be updated from the gradient-based
method with the back-propagation, whereas the outlier
pattern could be solved from an ordinal gradient de-
scent method or a proximal gradient method.

2. Related Work

2.1. Subjective visual properties

Subjective visual property prediction has gained rising
attention in the last several years. It covers a large variety
of computer vision problems, including image/video inter-
estingness [8], memorability [16], and quality of experience
[27] prediction, etc. When used as a semantically meaning-
ful representation, the subjective visual properties are of-
ten referred to as relative attributes [29, 19]. The original
SVP prediction approach treats this task as a learning-to-
rank problem. The main idea is to use ordered pairs of train-
ing images to train a ranking function that will generalize to
new images. Speciﬁcally, a set of pairs ordered according
to their perceived property strength is obtained from human
annotators, and a ranking function that preserves those or-
derings is learned. Given a new image pair, the ranker indi-
cates which image has the property more. A naive way to
learn the ranker is to resort to traditional pairwise learning-
to-rank methods such as RankSVM [17], RankBoost [6],
and RankNet [3], etc. However, these methods are not a
natural ﬁt in the scenarios with crowdsourced outliers. In
[9], it proposes a uniﬁed robust learning to rank (URLR)
framework to solve jointly both the outlier detection and
learning to rank problems. Different from this line of re-
search, we study the robust SVP prediction in the context
of deep learning. Equipped with better feature representa-
tion power, we show both theoretically and experimentally
that by solving both the outlier detection and ranking pre-
diction problems jointly in a deep framework, we achieve
better outlier detection and better ranking prediction.

2.2. Learning with noisy data

Learning from noisy data has been studied extensively in
recent years. Traditionally, such methods could be tracked
back to statistical studies such as Majority voting, M -
estimator
[13], Huber-LASSO [27], and Least Trimmed
Squares (LTS) [28], etc. However, these work do not have
prediction (especially with the power of deep learning) abil-
ity for unseen samples. Recently, there is a wave to explore
robust methods to learn from noisy labels, in the context
of deep learning. Generally speaking, there are four types
of existing methods: (I) robust learning based on proba-
bilistic graphical models where the noisy patterns are of-
ten modeled as latent variables [30, 25]; (II) progressive
and self-paced learning, where easy and clean examples are
learned ﬁrst, whereas the hard and noisy labels are pro-
gressively considered [10]; (III) loss-correction methods,

8994

Figure 1: Overview of our approach. (1) Constructing a comparison graph from the crowdsourcing annotations, which is
contaminated with outlier labels. (2) We propose a generalized deep probabilistic framework, where an outlier indicator γ
is learned along with the network parameters Θ. (3) Our Framework will output a clean graph on the training set, where
contaminated annotations are eliminated. Furthermore, our model could predict a rank-preserved score for each unseen
instance. Best viewed in color.

where the loss function is corrected iteratively [22]; (IV)
network architecture-based method, where the noisy pat-
terns are modeled with speciﬁcally designed modules [15].
Meanwhile, there are also some efforts on designing deep
robust models for speciﬁc tasks and applications: [20] pro-
poses a method to learn from weak and noisy labels for se-
mantic segmentation; [32] proposes a deep robust unsuper-
vised method for saliency detection, etc.

Compared with these recent achievements, our work dif-
fers signiﬁcantly in the sense that: a) We provide the ﬁrst
trial to explore the deep robust learning problem in the con-
text of crowdsourced SVP learning. b) We adopt a pairwise
learning framework, whereas the existing work all adopt
instance-wise frameworks.

3. Methodology

3.1. Problem deﬁnition

Our goal in this paper is two-fold:

(a) We aim to learn a deep SVP prediction model from
a set of sparse and noisy pairwise comparison labels.
Speciﬁcally the ranking patterns should be preserved.

(b) To guarantee the quality of the model, we expect that
all the noisy annotations could be detected and re-
moved along with the training process.

We denote the id of two images in the ith pair as i1 and
i2, and denote the corresponding image pair as (xi1 , xi2 ).
More precisely, we are given a pool with n training images
and a set of SVPs. In addition, for each SVP, we are given
a set of pairwise comparison labels. Such pairwise com-
parison data can be represented by a directed multi-graph
where multiple edges could be found between two vertexes.
Mathematically, we denote the graph as G = (V, E). V

is the set of vertexes which contains all the distinct image
items occurred in the comparisons. E is the set of com-
parison edges. For a speciﬁc user with id j and a speciﬁc
comparison pair i deﬁned on two item vertexes i1 and i2,
if the user believes that i1 holds a stronger/weaker pres-
ence of the SVP, we then have an edge (i1, i2, j)/(i2, i1, j),
respectively. Equivalently we also denote this relation as

j
≻ i2/i2

j
≻ i1. Since multiple users take part in the anno-
i1
tation process, it is natural to observe multi-edges between
two vertexes. Now we could denote the labeling results as a
function Y : E → {−1, 1}. For a given pair i and a rater j
who annotates this pair, the corresponding label is denoted
as yij , which is deﬁned as:

(cid:26)yij = −1,

yij = −1,

(i1, i2, j) ∈ E;
(i2, i1, j) ∈ E.

(1)

Now we present an example of the deﬁned comparison
graph. See step 1 in Figure 1. In this ﬁgure, the SVP in
question is the age of the humans in the images. Suppose
we have 5 images with ground truth ages (marked with
red in the lower right corner of each image), we then have
V = {1, 2, · · · , 5}. Furthermore, we have three users with
id 1, 2, 3 who take part in the annotation. According to the
labeling results shown in the lower left side, we have E =
{(1, 2, 1), (1, 2, 2), (2, 1, 3), · · · , (1, 5, 1), (5, 1, 2), (5, 1, 3)}.
As shown in this example, we would be most likely to
observe both i1 ≻ i2 and i2 ≻ i1 for a speciﬁc pair i. This
is mainly caused by the bad and ugly users who provide
erroneous labels. For example for vertexes 1 and 2, the
edge (2, 1, 3) is obviously an abnormal annotation. With
the above deﬁnitions and explanations, we are ready to
introduce the input and output of our proposed model.
Input. The input of our deep model is the deﬁned multi-
graph G along with the image items, where each time a spe-
ciﬁc edge is fed to the network.

8995

Output. As will be seen in the next subsection, our model
will output the relative score si1 and si2 of the image pair
along with an outlier indicator which could automatically
remove the abnormal directions on G. Note that learning si1
and si2 directly achieves our goal (a), while detecting and
removing outlier directions on the graph directly achieves
goal (b).

3.2. A deep robust SVP prediction model

In contrast to traditional methods, we propose a deep ro-
bust SVP ranking model in this paper. According to step
2 in Figure 1, we employ a deep Siamese [4, 21] convolu-
tional neural network as the ranking model to calculate the
relative scores for image pairs. In this model, the input is an
edge in the graph G together with the image pair (xi1 , xi2 ).
Each branch of the network is fed with an image and outputs
the corresponding scores s(xi1 ) and s(xi2 ). Then we pro-
pose a robust probabilistic model based on the difference
of the scores. As a note for the network architecture, we
choose an existing popular CNN architecture, ResNet-50
[11], as the backbone of the Siamese network. Such resid-
ual network is equipped with shortcut connections, bringing
in promising performance in image tasks.

With the network given, we are ready to elaborate a novel
probabilistic model to simultaneously prune the outliers and
learn the network parameters for SVP prediction.
In our
model, the noisy annotations are treated as a mixture of
reliable patterns and outlier patterns. More precisely, to
guarantee the performance of the whole model, we expect
s(xi1 ), s(xi2 ), i.e., the scores returned by the network to
capture the reliable patterns in the labels. Meanwhile, we
introduce an outlier indicator term γ(yij) to model the noisy
nature of the annotations. During the training process, our
prediction is an additive mixture of the reliable score and
the outlier indicator.

To see how the inclusion of γ could help us detect and
remove outlier, one should realize that, since yij must be
either 1 or -1, there are only two distinct values for γ(yij),
with one for each direction. If we can learn a reasonable
γ(yij) such that γ(yij) 6= 0 only if the corresponding direc-
tion is not reliable, we can then remove the contaminated
directions in G and obtain a clean graph. To illustrate it in
an easier way, let us back to step 1 in Figure 1. According
to the lower left contents, we have three annotations for pair
(V1, V2). We have two distinct γ(yij) for these annotations:
For the correct direction, we have a γ(1) for (1, 2, 1) and
(1, 2, 2); For the contaminated direction, we have a differ-
ent gamma with value γ(−1) for (2, 1, 3). Now if we can
learn γ(yij) in a way that γ(1) = 0 and γ(−1) 6= 0, then
we can easily detect the contaminated direction (2, 1).

Given the clariﬁcation above, our next step is to propose
a probabilistic model of the labels based on the outlier indi-
cator γ, the network parameters Θ, and the predicted scores

s(·). Speciﬁcally, we model the conditional distribution of
the annotations along with the prior distribution of γ and Θ
in the following form:

yij | xi1 , xi2 , Θ, γ(yij) i.i.d∼ f (yij, s(xi,1, xi,2, Θ)+γ(yij)),

γ(yij) | λ1

i.i.d∼ h(γ(yij), λ1), Θ | λ2 ∼ g(Θ, λ2).

• s(xi1 , xi2 , Θ) = s(xi1 , Θ) − s(xi2 , Θ) is the rela-
tive score of the annotation, which will be directly
learned from the deep learning model with the param-
eter set Θ. As mentioned above, s(xi1 , xi2 , Θ) are
expected to model the reliable pattern in the annota-
tions. The prior distribution of Θ is assumed to be
associated with a p.d.f. (probability density function)
p(Θ | λ2) = g(Θ, λ2) (λ2 is a predeﬁned hyperparam-
eter), which is denoted as g in short.

• γ(yij) is the outlier indicator which induces unre-
liability. Since only outliers have a nonzero indi-
cator, we model the randomness of γ(yij) with an
i.i.d sparsity-inducing prior distribution (e.g., Lapla-
cian distribution) with the p.d.f. being p(γ(yij)|λ1) =
h(γ(yij), λ1) (λ1 denotes the hyperparameter), which
is denoted as hij in short.

• As we have mentioned above, the noisy prediction
s(xi1 , xi2 , Θ) + γ(yij) is an additive mixture of the
reliable score and outlier indicator.

• f (yij, s(xi,1, xi,2, Θ) + γ(yij)) is the conditional

p.d.f. of the labels, which is denoted as fij in short.

Let γ = {γ(yij)}(i1,i2,j)∈E , y = {yij}(i1,i2,j)∈E .
Now our next step is to construct a loss function for this
probabilistic model. According to the Maximum A Pos-
terior (MAP) rule in statistics, a reasonable solution of
the parameters should have a large posterior probability
P (Θ, γ | y, X, λ1, λ2).
In other words, with high prob-
ability, the parameters (γ, Θ in our model) should be ob-
served after seeing the data (y, X in our model) and the
predeﬁned hyperparameters (λ1, λ2). This motivates us to
maximize the posterior probability in our objective function.
Furthermore, to simplify the calculation of the derivatives,
we adopt an equivalent form where the negative log poste-
rior probability is minimized:

min
Θ,γ

− log (P (Θ, γ | y, X, λ1, λ2)) .

Following the Bayesian rule, one has:

P (Θ, γ | y, X, λ1, λ2)

=

P (y| X, Θ, γ) · P (Θ| λ1) · P (γ|λ2) · P (X)

RΘRγ P (X, y| Θ, γ) · P (Θ| λ1) · P (γ|λ2)dΘdγ

.

8996

It then becomes clear that P (Θ, γ|y, X, λ1, λ2) is not di-
rectly tractable. Fortunately, since X, y are given and
we only need to optimize Θ and γ,
the tedious term
P (X, y| Θ,γ)·P (Θ| λ1)·P (γ|λ2)dΘdγ becomes a con-

P (X)

RΘ Rγ
stant, which suggests that:

P (Θ, γ | y, X, λ1, λ2)

∝ Y

(i,j)∈D

p(yij | xi,1, xi,2, γ(yi,j ), Θ) · p(γ(yij ) | λ1) · p(Θ | λ2)

= Y

g · hij · fij .

(i,j)∈D

(2)
where D : {(i, j) : (i1, i2, j) ∈ E or (i2, i1, j) ∈ E}. This
implies that our loss function could be simpliﬁed as:

min

Θ,γ X(i,j)∈D

− (log(fij) + log(hij)) − log(g).

3.3.1 Fix γ, Learn Θ

When ﬁxing γ, we see that Θ could be solved from the
following subproblem:

min

Θ

−X(i,j)∈D

log(fij) − log(g)

Since Θ only depends on the network, one could ﬁnd an
approximated solution by updating the network. For Model
A, this subproblem becomes:

min

Θ X(i,j)∈D

1
2

(yij − s(xi,1, xi,2, Θ) − γ(yij))2 + λ2 Xθ∈Θ

θ2.

Similarly, for Model B, we come to a subproblem in the
form:

min

Θ X(i,j)∈D

log(1 + ∆ij) + λ2 Xθ∈Θ

θ2.

With the general framework given, we provide two spec-
iﬁed models with different assumptions on the distributions:

3.3.2 Fix Θ, Learn γ

• Model A: If the prior distribution of γ(yij)|λ1 is
a Laplacian distribution with a zero location param-
) =
eter and a scale parameter of
2 exp(− |γ|
λ1
the prior distribution of Θ is an
element-wise Gaussian distribution N (0, 1
); and
2λ2
yij conditionally subjects to a Gaussian distribution
N (s(xi,1, xi,2, Θ) + γ(yij), 1), then the problem be-
comes:

λ1 : Lap(0, 1

) ;

1/λ1

λ1

1

Similarly, when Θ is ﬁxed, we could solve γ from:

min

γ X(i,j)∈D

− (log(fij) + log(hij))

This is a simple model of γ which does not involve the net-
work. For Model A, this subproblem becomes:

min

γ X(i,j)∈D

1
2

(yij − s(xi,1, xi,2, Θ) − γ(yij))2 + λ1kγk1.

(yij − s(xi,1, xi,2, Θ) − γ(yij))2+

It enjoys a closed-form solution with the proximal operator
of ℓ1 norm:

1
2

min

Θ,γ X(i,j)∈D
X(i,j)∈D

λ1kγk1 + λ2 Xθ∈Θ

θ2,

where kγk1 = P(i,j)∈D |γ(yij)|.

• Model B: If we adopt the same assumption as above,
except that we assume that yij conditionally subjects
to a Logistic-like distribution, then the problem could
be simpliﬁed as:

min

γ,Θ X(i,j)∈D

log(1 + ∆ij) + λ1kγk1 + λ2 Xθ∈Θ

θ2,

where ∆ij = exp(−yij(s(xi,1, xi,2, Θ) + γ(yij))).

3.3. Optimization

With the model and network clariﬁed, we then introduce
the optimization method we adopt in this paper. Speciﬁ-
cally, we employ an iterative scheme where γ and the net-
work parameters Θ are alternatively updated until the con-
vergence is reached.

γ(yij) = max(|cij| − λ1, 0) · sign(cij),

(3)

where

cij = yij − s(xi,1, xi,2, Θ).

For Model B, this subproblem becomes:

min

γ X(i,j)∈D

log(1 + ∆ij) + λ1kγk1.

Generally, there is no closed-form solution for this sub-
In this paper, we adopt the proximal gradient

problem.
method [1] to ﬁnd a numerical solution.

4. Experiments

In this section, experiments are exhibited on three bench-
mark datasets (see Table 1) which fall into two categories:
(1) experiments on human age estimation from face images
(Section 4.1), which can be considered as synthetic exper-
iments. With the ground truth available, this set of experi-
ments enables us to perform in-depth evaluation of the sig-
niﬁcance of our proposed method, (2) experiments on esti-
mating SVPs as relative attributes (Section 4.2 and 4.3).

8997

Table 1: Dataset summary.

Dataset
FG-Net Face Age Dataset
LFW-10 Dataset[23]
Shoes Dataset [18]

No.Pairs No.Images No.Classes

15,000
29,454
87,946

1002
2000
14,658

1
10
7

Table 2: Experimental results on Human age dataset.

Algorithm
Maj-LS
LS-with γ
Maj-Logistic
Logistic-with γ
Maj-RankNet [3]
Maj-RankBoost [6]
Maj-RankSVM [17]
Maj-GBDT [7]
Maj-DART [26]
URLR [9]

LS-Deep-w/o γ
Logit-Deep-w/o γ
LS-Deep-with γ
Logit-Deep-with γ

ACC
.5555
.5594
.5421
.5585
.5611
.5425
.5838
.5827
.5940
.5765

.7313
.7439
.7967
.7917

F1

.4673
.4729
.4687
.4743
.4804
.5991
.3858
.3880
.3668
.4633

.6694
.6818
.7414
.7370

Prec. Rec. AUC
.5650
.4369
.4414
.5759
.5489
.4264
.5735
.4410
.5792
.4445
.4507
.6458
.5665
.4517
.4504
.5619
.5690
.4648
.5748
.5762

.5022
.5093
.5205
.5131
.5227
.5587
.3367
.3408
.3029
.5131

.6407
.6584
.7323
.7228

.7008
.7070
.7508
.7518

.8060
.8168
.8784
.8739

4.1. Human age dataset

In this experiment, we consider age as a subjective vi-
sual property of a face. The main difference between this
SVP with the other SVPs evaluated so far is that we do have
the ground truth, i.e., the person’s age when the picture was
taken. This enables us to perform in-depth evaluation of the
signiﬁcance of our proposed framework.
Dataset The FG-NET 1 image age dataset contains 1002
images of 82 individuals labeled with ground truth ages
ranging from 0 to 69. The training set is composed of
the images of 41 randomly selected individuals and the rest
used as the test set. For the training set, we use the ground
truth age to generate the pairwise comparisons, with the
preference direction following the ground-truth order. To
create sparse outliers, a random subset (i.e., 20%) of the
pairwise comparisons is reversed in preference direction. In
this way, we create a paired comparison graph, possibly in-
complete and imbalanced, with 1002 nodes and 15,000 pair-
wise comparison samples.
Competitors We compare our method Model A and Model
B with 10 competitors. Note that Model A is the least
square based deep model, while Model B is a logistic re-
gression based deep model. In the following experiments,
we give Model A an alias as LS-Deep, and give Model B
an alias as Logit-Deep:
1) Maj-LS: This method uses majority voting for outlier
pruning and least squares problem for learning to rank.
2) LS-with γ: To test the improvement of merely adopting
the robust model, we jointly employ the linear regression
model and our proposed robust mechanism as a baseline.
3) Maj-Logistic: This method stands for another baseline

1http://www.fgnet.rsunit.com/

in our work, where the majority voting is adopted for label
processing followed with the logistic regression.
4) Logistic-with γ: Again, to test the improvement of
merely adopting the robust model, we jointly employ the
logistic regression model and our proposed robust mecha-
nism as a baseline.
5) Maj-RankSVM [17]: We record the performance of
RankSVM to show the superiority of the representation
learning.
6) Maj-RankNet [3]: To show the effectiveness of using a
deeper network, we compare our method with the classical
RankNet model preprocessed by the majority voting.
7) Maj-RankBoost [6]: Besides the deep learning frame-
work, it is also known that the ensemble-based methods
could also serve a model for hierarchical learning and rep-
resentation.
In this sense, we compare our method with
the RankBoost model, one of the most classical ensemble
method.
8) Maj-GBDT [7]: Gradient Boosting Decision Tree
(GBDT) has gained surprising improvements in many tra-
ditional tasks. Accordingly, we compare our methods with
GBDT to show its strength.
9) Maj-DART [26]: Recently, the well-known drop-out
trick has also been applied to ensemble-based learning, be
it the DART method. We also record the performance of
DART to show the superiority of our method.
10) URLR [9]: URLR is a uniﬁed robust learning to rank
framework which aims to tackle both the outlier detection
and learning to rank jointly. We compare our algorithm with
this method to show the effectiveness of using a generalized
probabilistic model and a deep architecture.
Ablation: To show the effectiveness of the proposed prob-
abilistic model, we additionally add two competitors as the
ablation. Note that the key element to detect outlier is the
factor γ. In this way, the ablation competitors are formed
with γ eliminated:
1) LS-Deep-w/o γ: This is a partial implementation of LS-
Deep, where the factor γ is removed.
2) Logit-Deep-w/o γ: This is a partial implementation of
Logit-Deep, where the factor γ is removed.

Evaluation metrics Because the ground-truth age is avail-
able, we adopt ACC, Precision, Recall, F1-score and AUC
as the evaluation metrics to demonstrate the effectiveness of
our proposed method.

Implementation Details For the four deep learning meth-
ods, the learning rate is set as 10−4, and λ2 is set as 10−3.
For LS-Deep-with γ, λ1 is set as 1.2. For Logit-Deep-with
γ, λ1 is set as 0.6.
Comparative Results In all the non-deep competitive ex-
periments, we adopt LBP as the low-level features. Look-
ing at the ﬁve-metrics results in Table 2, we see that our
method (marked with red and green color) consistently out-
performs all the benchmark algorithms by a signiﬁcant mar-

8998

Figure 2: Outlier examples detected on Human age dataset.

gin. This validates the effectiveness of our method. In par-
ticular, it can be observed that: (1) LS-with γ (or Logistic-
with γ) is superior to Maj-LS (or Maj-Logistic) because the
global outlier detection is better than local outlier detection
(i.e., Majority voting). (2) The performance of deep meth-
ods is better than all non-deep methods, interestingly even
the ablation baseline methods without γ give better results
than traditional methods with outlier detection, which sug-
gests the strong representation power of deep neural net-
works in SVP prediction tasks. (3) It is worth mentioning
that our proposed Deep-with γ methods successfully ex-
hibit roughly 5% − 8% improvement on all the ﬁve-metrics
than Deep-without γ methods, demonstrating the superior
outlier detection ability of our proposed framework.
(4)
Our proposed two models A (i.e., LS-Deep-with γ) and B
(i.e., Logit-Deep-with γ) show comparable results on this
dataset, while model A holds the lead by a slight margin.

Moreover, we visualize some examples of outliers de-
tected by model A in Figure 2, while results returned by
model B are very similar. It can be seen that those in the
blue/green boxes are clearly outliers and are detected cor-
rectly by our method. For better illustration, the ground-
truth age is printed under each image. Moreover, blue boxes
show pairs with a large age differences while green boxes
illustrate samples with subtle age differences, which indi-
cates that our method not only can detect the easy pairs
with a large age gap, but also can handle hard samples with
small age gap (e.g., within only 1-2 years difference). Four
failure cases are shown in red boxes, in which our method
treats the images on the left are older than the right one as
an outlier, but the ground truth agrees with the annotation.
We can easily ﬁnd that this often occurs on pairs with small
age differences, which indicates that our methods may oc-
casionally lose its power when meeting highly competitive
or confused pairs.

4.2. LFW 10 dataset

Dataset The LFW-10 dataset [23] consists of 2,000 face
images, taken from the Labeled Faces in the Wild [12]
dataset. It contains 10 relative attributes, like smiling, big
eyes, etc. Each pair was labeled by 5 people. For exam-

Table 3: Experimental results (ACC) of 10 attributes on
LFW-10 dataset.

Algorithm
Maj-LS
LS-with γ
Maj-Logistic
Logistic-with γ
Maj-RankNet [3]
Maj-RankBoost [6]
Maj-RankSVM [17]
Maj-GBDT [7]
Maj-DART [26]
URLR [9]

LS-Deep-w/o γ
Logit-Deep-w/o γ
LS-Deep-with γ
Logit-Deep-with γ

Bald D.Hai B.Eye GLook Masc. Mouth Smile Teeth Foreh. Young Aver.
.5029
.4767 .5368 .4787 .4788
.5672
.5805 .6400 .5506 .5932
.5784
.6123 .6716 .5146 .5890
.6059 .6400 .5640 .6038
.5832
.5862
.6123 .6421 .5551 .6208
.5797
.5996 .7053 .5236 .5975
.5415
.4852 .6526 .4180 .5805
.5528
.5551 .6253 .4899 .5466
.5581
.5508 .6337 .4899 .5339
.5889 .6538 .6505 .5258
.5742

.5588 .4774 .5220 .5073 .4759 .5162
.6009 .5097 .5178 .5198 .5680 .5911
.6253 .5032 .5031 .5322 .5724 .6599
.6275 .5269 .5073 .5405 .5724 .6437
.6275 .5097 .5304 .5468 .5899 .6275
.6231 .5097 .5199 .5094 .6053 .6032
.5588 .4882 .5283 .5156 .5482 .6397
.5721 .4903 .5094 .5198 .5965 .6235
.5698 .4989 .5597 .5364 .5943 .6134
.5614 .6319 .5311 .4968 .5446 .5570

.5932 .7095 .5551 .6081
.5551 .6758 .5124 .6335
.6335 .7684 .5551 .6377
.6631 .7726 .5798 .6419

.5543 .5742 .6436 .6133 .5746 .6741
.6253 .5806 .6038 .6175 .5724 .6235
.6253 .7312 .7421 .7547 .6469 .7308
.5965 .7032 .7358 .7069 .6075 .6862

.6100
.6000
.6826
.6694

Figure 3: Outlier examples of 4 representative attributes on
LFW-10 dataset.

ple, given a speciﬁc attribute, the user will choose which
one to be stronger in the attribute. As the goal of our pa-
per is to predict SVP from noisy labels, we do not conduct
any pro-precessing steps to meet the agreement of labels as
[31]. The resulting dataset has 29,454 total annotated sam-
ple pairs, on average 2945 binary pairs per attribute.
Implementation Details In competitive experiments, we
adopt GIST as the low-level features. For the four deep
learning methods, the learning rate is set as 10−4, and λ2
is set as 10−3. For LS-Deep-with γ, λ1 is set as 1.2. For
Logit-Deep-with γ, λ1 is set as 0.5.
Comparative Results Table 3 reports the summary ACC
for each attribute. The following observations can be made:
(1) Our deep-methods always outperform traditional non-
deep methods and ablation baseline methods for all exper-
iment settings with higher average ACC on all attributes
(0.6826 vs. 0.6100 and 0.6694 vs. 0.6000 on two mod-
els, respectively). (2) The performance of other methods is
in general consistent with what we observed in the Human
age experiments.

Moreover, Figure 3 gives some examples of the pruned
pairs of 4 randomly selected attributes. In the success cases,
the left images are (incorrectly) annotated to have more of
the attribute than the right ones. However, they are either
wrong or too ambiguous to give consistent answers, and as

8999

such are detrimental to learning to rank. A number of fail-
ure cases (false positive pairs identiﬁed by our models) are
also shown. Some of them are caused by unique viewpoints
(e.g., for ‘dark hair’ attribute, the man has sparse scalp, so
it is hard to tell who has dark hair more); others are caused
by the weak feature representation, e.g., in the ‘young’ at-
tribute example, as ‘young’ would be a function of multiple
subtle visual cues like face shape, skin texture, hair color,
etc., whereas something like baldness or smiling has a bet-
ter visual focus captured well by part-based features.

4.3. Shoes dataset

Dataset The Shoes dataset is collected from [18] which
contains 14,658 online shopping images.
In this dataset,
7 attributes are annotated by users with a wide spectrum of
interests and backgrounds. For each attribute, there are at
least 190 users who take part in the annotation, and each
user is assigned with 50 images. Note that the dataset ac-
tually uses binary annotations rather than pairwise annota-
tions (1 for Yes, -1 for No). We then randomly sample posi-
tive annotations and negatives annotations from each user’s
records to form the pairs we need. For each attribute, we
randomly select such 2000 distinct pairs, ﬁnally yielding a
volume of 87,946 total personalized comparisons.
Implementation Details In competitive experiments, we
concatenate the GIST and color histograms provided by the
original dataset as the low-level features. For the LS-based
deep methods, the learning rate is set as 10−3. For the
Logit-based deep methods, the learning rate is set as 10−5.
λ2 is set as 10−3 for all four methods. For LS-Deep-with γ,
λ1 is set as 1.2. For Logit-Deep-with γ, λ1 is set as 0.8.
Comparative Results Similar to the Human age and LFW-
10 datasets, Table 4 again shows that the performance of
our proposed deep models is signiﬁcantly better than that
of other competitors. Moreover, some outlier detection ex-
amples are shown in Figure 4. In the top four rows with
successful detection examples, the right images clearly have
more of the attribute than the left ones, however are incor-
rectly annotated by crowdsourced raters. The failure cases
are caused by the invisibility (e.g., for ‘comfortable’ at-
tribute, though the transparent rain-boots itself is ﬂat, there
is in fact a pair of high-heeled shoes inside with red color);
others are caused by different visual deﬁnitions of attributes
(e.g., for ‘open’ attribute, it has multiple shades of meaning,
e.g., peep-toed (open at toe) vs. slip-on (open at heel) vs.
sandal-like (open at toe and heel)); The remaining may be
caused by ambiguity: both images have this attribute with
similar degree. This thus corresponds to a truly ambiguous
case which can go either way.

5. Conclusion

This work explores the challenging task of SVP predic-
tion from noisy crowdsourced annotations from a deep per-

Table 4: Experimental results (ACC) of 7 attributes on
Shoes dataset.

Algorithm
Maj-LS
LS-with γ
Maj-Logistic
Logistic-with γ
Maj-RankNet [3]
Maj-RankBoost [6]
Maj-RankSVM [17]
Maj-GBDT [7]
Maj-DART [26]
URLR [9]

LS-Deep-w/o γ
Logit-Deep-w/o γ
LS-Deep-with γ
Logit-Deep-with γ

Comf. Fash. Form. Pointy Brown Open Ornate
.7300
.8150
.7600
.8375
.7425
.7525
.7425
.7075
.6900
.8200

.7897
.7860
.7970
.7934
.7860
.7675
.8081
.8007
.8376
.7860

.6950
.7275
.6900
.7250
.6925
.6975
.6850
.6750
.6975
.7325

.7331
.7444
.7068
.7444
.7444
.6955
.7331
.7519
.7857
.7444

.7825
.8125
.7850
.8175
.7850
.7300
.7925
.7325
.7275
.8150

.7325
.7975
.7475
.7825
.7200
.7275
.7925
.7425
.7375
.7900

.7300
.7625
.7175
.7525
.7300
.6725
.7200
.7550
.7125
.7550

.7100
.7100
.8500
.8550

.8075
.8025
.8550
.8500

.7400
.7500
.8125
.8200

.7749
.8044
.8044
.8339

.7725
.7525
.8250
.8125

.7669
.7857
.7782
.7481

.7050
.6975
.8300
.8325

Aver.
.7418
.7779
.7434
.7790
.7429
.7204
.7534
.7379
.7412
.7775

.7538
.7575
.8222
.8217

Figure 4: Outlier examples of 4 representative attributes on
Shoes dataset.

spective. We present a simple but effective general prob-
abilistic model to simultaneously predict rank preserving
scores and detect the outliers annotations, where an outlier
indicator γ is learned along with the network parameters
Θ. Practically, we present two speciﬁc models with dif-
ferent assumptions on the data distribution. Furthermore,
we adopt an alternative optimization scheme to update γ
and Θ iteratively. In our empirical studies, we perform a
series of experiments on three real-world datasets: Human
age dataset, LFW-10, and Shoes. The corresponding results
consistently show the superiority of our proposed model.

6. Acknowledgments

This work was supported in part by National Basic Re-
search Program of China (973 Program): 2015CB351800
in part by National Natural Sci-
and 2015CB85600,
ence Foundation of China:
61620106009, U1636214,
61861166002, 61672514, and 11421110001,
in part by
Key Research Program of Frontier Sciences, CAS: QYZDJ-
SSW-SYS013, in part by Beijing Natural Science Founda-
tion (4182079), in part by Youth Innovation Promotion As-
sociation CAS, and in part by Hong Kong Research Grant
Council (HKRGC) grant 16303817.

9000

References

[1] A. Beck and M. Teboulle. A fast iterative shrinkage-
thresholding algorithm for linear inverse problems. SIAM
Journal on Imaging Sciences, 2(1):183–202, 2009. 5

[2] S. Branson, G. Van Horn, and P. Perona. Lean crowdsourc-
ing: Combining humans and machines in an online system.
In IEEE Conference on Computer Vision and Pattern Recog-
nition, pages 7474–7483, 2017. 1

[3] C. Burges, T. Shaked, E. Renshaw, A. Lazier, M. Deeds,
N. Hamilton, and G. Hullender. Learning to rank using gradi-
ent descent. In International Conference on Machine Learn-
ing, pages 89–96, 2005. 2, 6, 7, 8

[4] S. Chopra, R. Hadsell, and Y. LeCun. Learning a similarity
metric discriminatively, with application to face veriﬁcation.
In IEEE Conference on Computer Vision and Pattern Recog-
nition, volume 1, pages 539–546, 2005. 4

[5] F. Daniel, P. Kucherbaev, C. Cappiello, B. Benatallah, and
M. Allahbakhsh. Quality control in crowdsourcing: A survey
of quality attributes, assessment techniques, and assurance
actions. ACM Computing Surveys, 51(1):7, 2018. 2

[6] Y. Freund, R. Iyer, R. E. Schapire, and Y. Singer. An efﬁcient
boosting algorithm for combining preferences. Journal of
Machine Learning Research, 4(Nov):933–969, 2003. 2, 6, 7,
8

[7] J. H. Friedman. Greedy function approximation: A gradi-
ent boosting machine. The Annals of Statistics, 29(5):1189–
1232, 2001. 6, 7, 8

[8] Y. Fu, T. M. Hospedales, T. Xiang, S. Gong, and Y. Yao. In-
terestingness prediction by robust learning to rank. In Euro-
pean Conference on Computer Vision, pages 488–503, 2014.
1, 2

[9] Y. Fu, T. M. Hospedales, T. Xiang, J. Xiong, S. Gong,
Y. Wang, and Y. Yao. Robust subjective visual prop-
erty prediction from crowdsourced pairwise labels.
IEEE
Transactions on Pattern Analysis and Machine Intelligence,
38(3):563–577, 2016. 1, 2, 6, 7, 8

[10] B. Han, I. W. Tsang, L. Chen, P. Y. Celina, and S.-F. Fung.
Progressive stochastic learning for noisy labels. IEEE Trans-
actions on Neural Networks and Learning Systems, (99):1–
13, 2018. 2

sources.
1062, 2017. 2

IEEE Transactions on Multimedia, 19(5):1050–

[17] T. Joachims. Optimizing search engines using clickthrough
data. In ACM International Conference on Knowledge Dis-
covery and Data Mining, pages 133–142, 2002. 2, 6, 7, 8

[18] A. Kovashka and K. Grauman. Discovering attribute shades
of meaning with the crowd. International Journal of Com-
puter Vision, 114(1):56–73, 2015. 6, 8

[19] A. Kovashka and K. Grauman. Attributes for image retrieval.

In Visual Attributes, pages 89–117. Springer, 2017. 1, 2

[20] Z. Lu, Z. Fu, T. Xiang, P. Han, L. Wang, and X. Gao. Learn-
ing from weak and noisy labels for semantic segmentation.
IEEE Transactions on Pattern Analysis and Machine Intelli-
gence, 39(3):486–500, 2017. 2, 3

[21] M. Norouzi, D. J. Fleet, and R. R. Salakhutdinov. Hamming
distance metric learning. In Annual Conference on Neural
Information Processing Systems, pages 1061–1069, 2012. 4
[22] G. Patrini, A. Rozza, A. Krishna Menon, R. Nock, and L. Qu.
Making deep neural networks robust to label noise: A loss
correction approach. In IEEE Conference on Computer Vi-
sion and Pattern Recognition, pages 1944–1952, 2017. 2,
3

[23] R. N. Sandeep, Y. Verma, and C. Jawahar. Relative parts:
Distinctive parts for learning relative attributes.
In IEEE
Conference on Computer Vision and Pattern Recognition,
pages 3614–3621, 2014. 6, 7

[24] H. Squalli-Houssaini, N. Q. Duong, M. Gwena¨elle, and C.-
H. Demarty. Deep learning for predicting image memorabil-
ity. In IEEE International Conference on Acoustics, Speech
and Signal Processing, pages 2371–2375, 2018. 1

[25] A. Vahdat. Toward robustness against label noise in train-
In Annual Con-
ing deep discriminative neural networks.
ference on Neural Information Processing Systems, pages
5601–5610, 2017. 2

[26] R. K. Vinayak and R. Gilad-Bachrach. DART: dropouts meet
multiple additive regression trees. In International Confer-
ence on Artiﬁcial Intelligence and Statistics, 2015. 6, 7, 8

[27] Q. Xu, J. Xiong, Q. Huang, and Y. Yao. Robust evaluation for
quality of experience in crowdsourcing. In ACM Conference
on Multimedia, pages 43–52, 2013. 2

[11] K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learning
In IEEE Conference on Computer

for image recognition.
Vision and Pattern Recognition, pages 770–778, 2016. 4

[28] Q. Xu, M. Yan, C. Huang, J. Xiong, Q. Huang, and Y. Yao.
Exploring outliers in crowdsourced ranking for qoe. In ACM
Conference on Multimedia, pages 1540–1548, 2017. 2

[12] G. B. Huang, M. Mattar, T. Berg, and E. Learned-Miller. La-
beled faces in the wild: A database for studying face recogni-
tion in unconstrained environments. In Workshop on faces in
‘Real-Life’ Images: detection, alignment, and recognition,
2008. 7

[13] P. Huber. Robust Statistics. New York: Wiley, 1981. 2
[14] X. Jiang, L.-H. Lim, Y. Yao, and Y. Ye. Statistical ranking
and combinatorial Hodge theory. Mathematical Program-
ming, 127(6):203–244, 2011. 2

[15] I. Jindal, M. Nokleby, and X. Chen. Learning deep networks
from noisy labels with dropout regularization. In IEEE Inter-
national Conference on Data Mining, pages 967–972, 2016.
2, 3

[16] P. Jing, Y. Su, L. Nie, and H. Gu. Predicting image mem-
orability through adaptive transfer learning from external

[29] X. Yang, T. Zhang, C. Xu, S. Yan, M. S. Hossain, and
IEEE Transactions

A. Ghoneim. Deep relative attributes.
on Multimedia, 18(9):1832–1842, 2016. 2

[30] J. Yao, J. Wang, I. W. Tsang, Y. Zhang, J. Sun, C. Zhang,
and R. Zhang. Deep learning from noisy image labels with
quality embedding. IEEE Transactions on Image Processing,
2018. 2

[31] A. Yu and K. Grauman. Just noticeable differences in visual
attributes. In IEEE International Conference on Computer
Vision, pages 2416–2424, 2015. 7

[32] J. Zhang, T. Zhang, Y. Dai, M. Harandi, and R. Hartley. Deep
unsupervised saliency detection: A multiple noisy labeling
perspective.
In IEEE Conference on Computer Vision and
Pattern Recognition, pages 9029–9038, 2018. 2, 3

9001

