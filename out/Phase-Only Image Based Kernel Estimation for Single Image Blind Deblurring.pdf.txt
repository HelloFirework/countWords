Phase-only Image Based Kernel Estimation for Single Image Blind Deblurring

Liyuan Pan1,2, Richard Hartley1,2, Miaomiao Liu1,2, and Yuchao Dai3

1 Australian National University, Canberra, Australia

2 Australian Centre for Robotic Vision

3 School of Electronics and Information, Northwestern Polytechnical University, Xi’an, China

{liyuan.pan, Richard.Hartley, miaomiao.liu}@anu.edu.au, daiyuchao@nwpu.edu.cn

Abstract

The image motion blurring process is generally mod-
elled as the convolution of a blur kernel with a latent im-
age. Therefore, the estimation of the blur kernel is essen-
tially important for blind image deblurring. Unlike existing
approaches which focus on approaching the problem by en-
forcing various priors on the blur kernel and the latent im-
age, we are aiming at obtaining a high quality blur kernel
directly by studying the problem in the frequency domain.
We show that the auto-correlation of the absolute phase-
only image1 can provide faithful information about the mo-
tion (e.g., the motion direction and magnitude, we call it
the motion pattern in this paper.)
that caused the blur,
leading to a new and efﬁcient blur kernel estimation ap-
proach. The blur kernel is then reﬁned and the sharp image
is estimated by solving an optimization problem by enforc-
ing a regularization on the blur kernel and the latent im-
age. We further extend our approach to handle non-uniform
blur, which involves spatially varying blur kernels. Our ap-
proach is evaluated extensively on synthetic and real data
and shows good results compared to the state-of-the-art de-
blurring approaches.

1. Introduction

Blind image deblurring aims at estimating the blur ker-
nel and the latent image from an input blurry image. This
is an ill-posed problem as there are inﬁnitely many pairs of
blur kernels and images that could generate the same blurry
image. Blind image deblurring has been extensively stud-
ied in computer vision and is still a very active research
area [10, 28, 6, 25, 19, 34], where blur kernel estimation is
essentially important in obtaining a high quality sharp im-
age.

Existing blind image deblurring methods tend to formu-

1Phase-only image means the image is reconstructed only from the

phase information of the blurry image.

late the problem within the Maximum A Posteriori (MAP)
framework, where the blur kernel and the latent sharp image
are optimized jointly. To resolve the ill-posed underlining
optimization problem, various assumptions, or regulariza-
tions, have been proposed for the blur kernel and the desired
latent image, such as the dark channel prior [23], extreme
channel prior [43], l0 regularized prior [22, 41], learned im-
age prior using a CNN [18], uniform blur [17, 42], non-
uniform blur from multiple homographies [8, 21], constant
depth [7, 39], in-plane rotation [32], and forward motion
[45]. The resultant optimization problem is non-convex in
general. The blur kernel and the latent image are usually
solved in an alternating fashion. Thus, a proper and effec-
tive initialization is demanded to achieve a good local opti-
mum solution and makes the algorithm converge quickly.

In this paper, we aim at estimating a high-quality blur
kernel directly from the input image with motion blur by
studying the problem in the frequency domain. We ex-
ploit the phase-only image of the input blurry image, which
is reconstructed from the Fourier transformed image using
the phase information only. The phase-only image con-
tains edge and texture information about the image struc-
ture [20, 27]. The motion (either camera or object mo-
tion) information is encoded as repeated image edges in
the phase-only image (see Fig. 1 for an example). We show
that the auto-correlation of the absolute phase-only image
reveals the motion information including the motion direc-
tion and motion magnitude, which is referred to as the mo-
tion pattern in this paper. It provides information about the
blur kernel, thereby leading to a new approach to estimating
the blur kernel.

We further improve the blur kernel and latent image es-
timation by enforcing a spatial sparsity prior on the kernel
as well as the latent image gradient in a simple optimiza-
tion framework. Furthermore, our blur kernel estimation
approach can be naturally extended to handle non-uniform
blur in order to deal with the spatially-variant blur kernels
that arise in complex image deblurring problems. Exten-
sive experiment on both synthetic and real images demon-

6034

(c) Auto-correlation

(a) Blurry Image

(b) P (B)

(d) Kernel

(e) Nah [19]

(f) Tao [34]

(g) Pan [23]

(h) Yan [43]

(i) Ours

Figure 1. Our deblurring result compared with the state-of-the-art methods. (a) Input blurry image. (b) The phase-only image. (c) The
auto-correlation for the phase-only image. (d) The estimated blur kernel. (e) Deblurring result of [19]. (f) Deblurring result of [34]. (g)
Deblurring result of [23]. (h) Deblurring result of [43]. (i) Our deblurring result. (Best viewed on screen).

strate the superiority of our approach over the state-of-the-
art methods.

Our main contributions are summarized as follows

1) We propose a new phase-only image-based approach to
directly estimating the blur kernel from the input blurry
image. The approach for motion pattern estimation is
easy and efﬁcient, consisting of a few lines of code.

2) Our single-image blind deblurring model can be natu-
rally extended to handle non-uniform blur in an effective
manner. Furthermore, the estimated blur kernel can be
easily reﬁned by only enforcing spatial sparsity.

3) Evaluated on both synthetic and real images, our pro-
posed approach shows impressive results compared to
other state-of-the-art blind deblurring approaches.

2. Related Work

Single-image blind deblurring. Single-image deblurring
jointly estimates the blur kernel and the latent sharp im-
age from the blurry one, which is highly under-constrained
since the blurry image could be explained by many pairs

of blur kernel and sharp image [11, 24].
In general, im-
age deblurring is formulated in a MAP framework with pri-
ors on blur kernels or latent images. The Sparsity prior has
proved effective in blur kernel estimation. For instance, Kr-
ishnan et al. [15] applied normalized sparsity in their MAP
framework to estimate the blur kernel. Xu et al. [42] pro-
posed an approximation of the l0-norm as a sparsity prior
in order to jointly estimate sharp image and blur kernels.
Edge-based methods for blur kernel estimation have been
exploited recently [38, 12, 3, 33]. Xu et al. [38] proposed
a two-phase method for single-image deblurring. The blur
kernel is ﬁrst estimated based on the selected image edges
and reﬁned by ISD optimization. The latent sharp image is
then restored by total-variation (TV)-l1 deconvolution. In
addition, a Gaussian prior is imposed to help the estimation
of the blur kernel [12, 3], which leads to an efﬁcient solver.
Moreover, the blur kernel has been modelled based on var-
ious motion assumptions, such as in-plane camera rotation
[32] or camera forward motion [45]. A few works have ex-
ploited the layer-wise scene structure to model the blur ker-
nel [7, 8, 21]. Gupta et al. [7] represent the camera motion

6035

trajectory using a motion density function, which requires
a constant depth or fronto-parallel scene assumption. Hu et
al. [8] proposed jointly estimating the depth layering and
remove the blur caused by in-plane motion from a single
blurry image. Pan et al. [21] proposed jointly estimating
object segmentation and camera motion by incorporating
soft segmentation. Note that both approaches require user
input for initial depth layer segmentation.

Video image blind deblurring. In order to better model
non-uniform blur, monocular video and stereo based deblur-
ring approaches are proposed to handle blurring in realistic
scenes [26, 39]. Cho et al. [5] proposed a method relying
on the assumption that salient sharp frames frequently ex-
ist in videos, which only allows for slowly moving objects
in dynamic scenes. Wulff and Black [37] proposed a lay-
ered model to estimate both foreground motion and back-
ground motion. However, these motions are restricted to
afﬁne models, and it is difﬁcult to extended them to multi-
layer scenes due to the difﬁculty in depth ordering. Kim
and Lee [9] incorporated optical ﬂow estimation to guide
the blur kernel estimation, which is able to deal with certain
object motion blur. In [10], a new method is proposed to si-
multaneously estimate optical ﬂow and tackle general blur
by minimizing a single non-convex energy function. Stereo
images and videos can provide depth information which al-
lows to better model pixel-wise blur kernel. Sellent et al.
[28] proposed a stereo video deblurring technique, where
3D scene ﬂow is estimated from the blurry images using a
piecewise rigid scene representation. Pan et al. [25] pro-
posed a single framework to jointly estimate the scene ﬂow
and deblur the images.

Deep learning based image deblurring. Recently, image
deblurring has greatly beneﬁted from the great advances in
deep learning [16, 32, 44, 34]. Sun et al. [32] proposed
a convolutional neural network (CNN) to estimate locally
linear blur kernels. Gong et al. [6] learned optical ﬂow
ﬁeld from a single blurry image directly through a fully-
convolutional deep neural network. The blur kernel is then
obtained from the estimated optical ﬂow which is applied
in an MAP framework to restore the sharp image. Su et
al. [31] trained an end-to-end CNN to accumulate informa-
tion across frames for video deblurring. Nah et al. [19]
proposed a multi-scale CNN that restores latent images in
an end-to-end learning manner without any assumption on
the blur kernel model. Li et al. [18] used a learned im-
age prior to distinguish whether an image is sharp or not
and embedded the learned prior into the MAP framework.
Tao et al. [34] proposed a light and compact network, SRN-
DeblurNet, to deblur the image. While achieving reason-
able performance on various scenarios, the success of these
deep learning based methods depends on the consistency
between the training datasets and the testing datasets, which
can hinder the generalization ability.

(a) Sharp Image

(b) |P (L)|

(c) Blurry Image

(d) |P (B)|

Figure 2. We use a circle image as an example. The image is
blurred by a linear kernel, where the kernel length is 20 pixels and
the direction is 10 degree.

3. Method

3.1. Fourier Theory of Phase only Images

This section contains the main theoretical insights of this
paper. Our goal is to ﬁnd the latent sharp image from a
single blurry image. The blurry image can be modelled as a
convolution of the latent image with a blur kernel,

B = L ⊗ k,

(1)

where B is the known blurry image, L denotes the latent
sharp image, k is the blur kernel, ⊗ is the convolution op-
erator. Note that this problem is highly under-determined
since multiple pairs of L and k can lead to the same blurry
image.

In the Fourier domain, Eq. (1) corresponds to F(B) =
F(L)⊙F(k), where ⊙ represents the component-wise mul-
tiplication.
The phase and amplitude of a complex number z = keiθ
are eiθ and k ≥ 0 respectively. Applying these component-
by-component to a Fourier transformed image F(L) gives
the phase and amplitude components. We denote taking
the phase of a complex signal by P(·). Taking the inverse
Fourier transform of the phase-component gives the phase-
only image, P (L) = F −1(P(F(L))).
It is well known
that the phase-only image bears more similarity to the orig-
inal image than the analogously deﬁned amplitude image.
Fig. 2 shows an example of the phase-only image derived
from a clean and blurry image. As may be observed, taking
a phase-only image acts as a sort of edge-extractor. This is
related to the fact, noted in [14] that the Fourier components

6036

(a)

(b)

(c)

(d)

Figure 3. Given a top-hat function (a), its fourier transform is a sinc shown in (b). (The central peak has twice the width of the others.
Note that since the top-hat is symmetric, its Fourier transform is real, hence its phase is either +1 or −1 shown in (c).) The phase-only
image of the top-hat shown in (d) is obtained by taking the inverse Fourier transform of the function in (c).

of an edge tend to be in-phase with each other. For a real
image L, the phase-only image will also be real. Another
simple property is rotation-covariance: if R represents ro-
tation then P (R(L)) = R(P (L)). It is also shift-covariant.
We now make a basic observation regarding the phase-

kernel with the phase-only kernel, shown in Fig. 3(d). This
results in the creation of multiple copies (“ghosts”), of the
phase-only image, P (L), separated by the width of the ﬁl-
ter. (The copies due to the principal peaks will be the most
noticeable.)2 This is shown in Fig. 4.

only image of a convolution.

lemma 1. The phase-only image of a convolution P (L ⊗
k), equals the convolution of the phase-only image and the
phase-only kernel.

P (L ⊗ k) = F −1(P(F(L ⊗ k))) = P (L) ⊗ P (k) . (2)

This results from a simple calculation.

Linearly-blurred image.
For a simple linear (straight-
line) blur kernel, the form of P (k) can be computed. By
rotation and shift covariance, it may be assumed without
loss of generality, that k is axis-aligned, in which case
k(x, y) = δ(y)H(x), where δ(y) is a Dirac delta function
and H(x) is a top-hat. The Fourier transform is separable,
so it follows that P (k)(x, y) = δ(y)P (H)(x). Hence, we
investigate what the 1D phase-only signal P (H) is. The
result is shown in Fig. 3. A formula for the shape of the
phase-only top-hat of width w is derived (for the continuous
Fourier Transform) in the supplementary material, and is
equal to (√2π/w) sinc(πx/w)/ cos(πx/w), which is plot-

ted in Fig. 3(d). More details of the properties of this func-
tion are given in the supplementary material.

According to Eq. (2), if B = L ⊗ k, then P (B) is ob-
tained by convolving P (L) in the orientation of the linear

The key advantage of phase-only image.
This analysis
and the examples show the advantage and purpose in con-
sidering the phase-only image as a means of determining the
blur kernel, and subsequently deblurring the image. This is
illustrated by the analysis of the linear kernel.

The effect of blurring is to smear the image in the blur
direction, as shown in Fig. 4 (top left). From this image, it is
not easy to discern the shape of the kernel, particularly the
linear extent of the kernel. On the other hand, in the phase-
only image, the effect of blurring is to create two princi-
pal identical copies of P (L) separated by the extent of the
blur kernel. This is immediately evident from Fig. 4(b), or
Fig. 2(d). Thus, the continuous smear in the blurred image
is replaced by a simple sum of two (principle) copies in the
phase-only blurred image. This simpliﬁcation of the effect
of blurring makes the further image-processing to compute
the blur-kernel much simpler.

This discovery of the application of the phase-only im-
age to deblurring is the key original contribution of this
paper, and the supplementary material provides a rigor-
ous mathematical justiﬁcation of the empirical observation,

2 A more exact statement is that P (B) consists of multiple ghosts,
separated by the ﬁlter width, of the gradient of P (L) in the ﬁlter direction.
An exact derivation is given in the supplementary material. This includes
also an exact derivation of P (H).

6037

020040060080010000.20.40.60.81.02004006008001000-1.0-0.50.51.020040060080010000.10.20.30.42004006008001000-10-5510(a) Blurry Image

(b) |P (B)|

(c) A(|P (B)|)

(d) Deblurring Results

Figure 4.
(a) Input blurry images, the top one is a synthetic image created by ourselves and the bottom one is a real image from dataset
[29]. (b) The absolute phase-only image of the blurry image, |P (B)|, results in two principal copies (others more faint) of P (L). (c) The
autocorrelation of the absolute phase-only image, A(|P (B)|), showing two distinct peaks (separated by the length of the ﬁlter kernel).
Distinguishing the two principal peaks of the autocorrelation (apart from the origin) can be used to determine the orientation and width of
a linear (straight-line) blur kernel. (d) shows our deblurring results with sharp edges.

which we hope the reader will enjoy.

3.2. Autocorrelation

Using phase-only to obtain P (B) from a blurry image
results in multiple (two principal) shifted copies of P (L).
Note that P (L) is not known. However, this suggests the
use of autocorrelation of P (B).

Autocorrelation of a signal I (1 or 2-dimensional) is

computed using Fourier transform as:

A(I) = F −1(F(I) ⊙ F(I)).

The autocorrelation of the absolute phase-only image
shows several bright points that indicate the motion of the
camera, e.g., the motion direction and magnitude, which is
referred to as motion pattern. The autocorrelation image
will consist of a central peak plus two side-peaks separated
by the extent (and in the direction) of the blur-kernel.

Consequently, the motion of the camera will provide
faithful information for obtaining the blur kernel. There-
fore, in the following section, we will present our approach
to image deblurring based on the analysis of the autocorre-
lation of the absolute phase-only image.

Unfortunately, if I is itself a phase-only image, derived from
J, then

4. Uniform Deblurring

F(I) = F(F −1P(F(J))) = P(F(J)).
So A(I) = F −1(P(F (J)) ⊙ P(F (J))) = F −1(1) = δ
where δ is a Dirac delta function at
In
other words, a phase-only image is completely un-
selfcorrelated.

the origin.

In other words, we cannot derive any information what-
ever from the autocorrelation of a phase-only image. The
solution is to use the absolute value of the phase-only im-
age instead. In other words, we compute A(|P (B)|), which
should show the desired behaviour.
Fig. 4 shows the absolute phase-only image |P (B)| and
its autocorrelation A(|P (B)|).
It is noticed that multiple
copies of |P (L)| are shown in |P (B)|. The most noticeable
repeated edges are due to the principal peak of P (k) (as
analyzed above) indicating the start and end point of the
moving camera.

Based on the analysis of the Fourier theory of phase-only
images, we introduce our approach to estimate the blur ker-
nel and deblur the images.

4.1. Uniform Blur from Linear Motion

Consider the blur caused by a pure linear motion. By
computing the autocorrelation of the absolute phase-only
image, the motion pattern, namely the motion direction and
the motion magnitude, is extracted by directly connecting
the two end bright points in A(|P (B)|). The blur kernel
is then formed based on the extracted motion pattern. In
particular, the motion magnitude determines the kernel size.
The non-zero kernel values are uniformly distributed along
the motion direction (see Fig. 4 the top row for an example).
Given the built blur kernel, the latent image can be easily
obtained by solving the Eq. (3) which will be introduced in
the following section.

6038

(a) Blurry Image

(b) Nah [19]

(c) Coarse Kernel

(d) Reﬁned Kernel

Figure 5.
(a) The blurry image from dataset [23]. (b) Deblur-
ring results of [19]. (c) Our deblurring result with the coarse blur
kernel built from the autocorrelation of the absolute phase-only
image. (d) Our deblurring result with the reﬁned kernel. The re-
ﬁned kernel can better improve the deblurring result by looking at
the close-up of the part of the sail with detailed sharp edges. Note
that the blur kernel is zoomed in the corner.

4.2. Uniform Blur from Non linear Motion

The blurry image is formed by the integral of light in-
tensity over the exposure period. For more complex mo-
tion, the autocorrelation image A(|P (B)|) will show more
bright points representing high correlation values (see Fig.
1 (c) and Fig. 4 (c) for examples).

In general, in the case of uniform (spatially-invariant)
blur, one may write B = k ⊗ L, so, allowing for the possi-
bility of noise, the deblurring problem (with known kernel)
may be formulated as ﬁnding argminL kk ⊗ L − Bk2
2. In
most cases, however, blurring acts as a form of low-pass
ﬁlter – high-frequency information is lost. Consequently,
this problem is not well-conditioned. Thinking of convo-
lution with known k as being a linear operator, there ex-
ist near-zero eigenvalues whose eigenvectors correspond to
high-frequency components of the signal (image). The de-
blurring process is to restore the lost frequency compo-
nents of the image. If high-frequency components are over-
emphasized in the deblurring process, the resulting latent
image L will be noisy, or edges will show ringing. A com-
mon solution to this is to add a regularization term that
discourages excessive high-frequency components. One is
therefore led to the following minimization problem.

min

L

kk ⊗ L − Bk2

2 + µ2 h(∇L) ,

(3)

where h(·) is a penalty term used to discourage exces-
sive gradients, which are indicative of noise and over-
emphasized edges.

In the case of non-linear motion, the kernel is not known
exactly, but an initial value of k may be estimated directly

from the autocorrelation of the absolute phase-only image
as described previously. Our ﬁnal goal is to further reﬁne
the kernel k and estimate the latent sharp image L by solv-
ing

L,k kk ⊗ L − Bk2
min

2 + µ1 kkk2

2 + µ2 h(∇L) ,

(4)

where µ1 and µ2 are weight parameters. The ﬁrst term en-
codes the fact that the modelled blurry image should be sim-
ilar to the observed image. The second term is to regularize
the solution of the blur kernel. The third term prevents over-
sharpening.

The optimization of our energy function deﬁned in
Eq. (4) involves two sets of variables, the kernel and the
latent image. We perform the minimization iteratively start-
ing with the initial estimate of k given by the phase-only
technique. (See Fig. 5 for an example).

4.2.1 Estimating the Latent Image

The goal is to minimize Eq. (4) by alternation.
known, the problem comes down to minimizing Eq. (3).

If k is

Speciﬁcally, we use a truncated-quadratic gradient regu-

larization term

h(∇L) = X

min (cid:0) k∇xy L/ǫk2 , 1(cid:1)

x,y

where ǫ ∈ [0.1, 1] and ∇xy L represents the gradient of L at
image coordinates (x, y). This regularization term smooths
out small noise, while allowing occasional large gradients
(intensity differences). This type of term, proposed by [2]
is widely used to regularize noise and gradients in stereo
[35] and was also used in deblurring in [42]). Because the
truncated quadratic is non-convex, the optimization prob-
lem is non-convex. We use the method of half quadratic
splitting, as in [40], to minimize this cost function, though
other methods such as Iterative Reweighted Least Squares
could be used for such truncated-quadratic cost [1].

4.2.2 Reﬁning the Kernel

Now, with L known, the motion blur kernel can be reﬁned
by solving

min

k

kk ⊗ L − Bk2

2 + µ1 kkk2

2 .

This is a quadratic problem, and can be solved directly by
taking gradients, which results in a set of linear equations.
More efﬁciently, we solve it in the Fourier domain, in which
case there is a closed-form solution

F (k) = F (L) ⊙ F (B) (cid:14) (cid:0)F (L) ⊙ F (L) + µ1(cid:1) ,

where the division is carried out point-wise (as are the mul-
tiplications). Then k is found by the inverse transform, and
then normalized to sum to 1.

The algorithm alternates between recomputing L and k

until convergence, or for a ﬁxed number of steps.

6039

(a) Blurry Image

(b) Ours (Uniform)

(c) Nah [19]

(d) Gong [6]

(e) Blur Kernel

(f) Ours (Non-uniform)

Figure 6. Example of our non-uniform blur kernel where the real
blurry image is from [6]. (a) Input blurry image. (b) Our deblur-
ring results by using uniform blur model and its blur kernel. We
can see clearly that the man in a plaid shirt seems not deblurred
because of the improper kernel. (c) Deblurring result of [19]. (d)
Deblurring result of [6].
(f) Our
deblurring result by using non-uniform blur model and kernel.

(e) Non-uniform blur kernel.

5. Extension to Non-uniform Deblurring

Our method can be easily extended to handle non-
uniform blur (e.g., the background and foreground undergo
different blur) by deblurring the image patch-by-patch or
layer-by-layer. Each patch or layer of the image corre-
sponds to a different blur kernel. The new non-uniform blur
model can be expressed as

B =

N

X

i=1

ki ⊗ li,

(5)

where N denotes the number of segmented patches or lay-
ers, li = Mi ⊙ L is to extract the i-th patch or layer of
the latent image, Mi is a binary mask with non-zeros val-
ues in the region corresponding to the i-th patch or layer in
L, and ki denotes the blur kernel corresponding to the i-th
patch. Similary, we deﬁne Bi = ki⊗ li and B = PN
Bi.
Each layer can be handled using our proposed uniform de-
blurring approach in Section 4. The ﬁnal latent image L is
PN
li. In Fig. 6, we give an example of the deblurring re-
sults for uniform and non-uniform blur models. The image
is a real blurry image from dataset [6]. Clearly, our non-
uniform deblurring achieves better results than our uniform-

i=1

i=1

100

 

t
n
e
c
r
e
p
s
s
e
c
c
u
S

80

60

40

20

Yan
Pan
Cho
Ours(no phase)
Ours

0

0

1

2

3
Error ratios

4

5

Figure 7. Quantitative evaluations on dataset [17]. We report the
experimental results with and without using the blur kernel es-
timated from the phase-only image (’Ours(no phase)’). The re-
sults further demonstrate the effectiveness of blur kernel estima-
tion from the phase-only image.

Table 1. Quantitave comparison on the dataset [17].

Cho [4]

Pan [23]

Yan [43]

PSNR(dB)

SSIM
SSD

25.63
0.7907
2.6688

27.54
0.8626
1.2747

24.70
0.8760
1.6802

Our

(no phase)

25.74
0.7842
3.2517

Our

28.38
0.9250
0.8776

deblurring model and the other existing non-uniform de-
blurring methods which either use additional depth, camera
pose information [8, 7, 36] or use deep convolutional neural
networks [6, 19].

6. Experiment

6.1. Experimental Setup
Dataset. We evaluate our approach on the datasets provided
by [13, 23, 30, 6, 17] and images captured by ourselves,
which covers images from man-made scene, natural scene
and images containing text (see Fig. 5, 6, 8 for examples).
Baselines and evaluation metric. Since our proposed ap-
proach can handle both uniform and non-uniform blurs, we
compare with state-of-the-art methods for both cases sep-
arately. For traditional methods (non-deep learning meth-
ods), we compare with [43, 23, 3, 36, 42]. For deep learn-
ing based methods, we compare with [6, 19, 16] which can
handle spatially-variant blur. We report the PSNR, SSIM
on datasets [17, 13] and error ratio3 on dataset [17] which
provides the ground truth blur kernels for evaluation.
Implementation details. We validate the parameters in our
model on three reserved images for each dataset and use
coarse-to-ﬁne strategy for deblurring. We set µ1 = 2, µ2 =
0.005 for our experiment. Our framework is implemented
using MATLAB with C++ wrappers.
It takes around 40
second to process one image (800× 800) on a single i7 core
running at 3.6 GHz.

3 Error ratio is introduced in [17] which measures the ratio between
the SSD (Sum of Squared Distance) of the deconvolution error computed
with the estimated kernel and the ground truth kernel.

6040

(a) Blurry Image

(b) Yan [43]

(c) Pan [23]

(d) Ours

Figure 8. Qualitative comparison on example images from dataset [13](top), [17](bottom) and image taken by ourselves (middle). (a) Input
blurry images. (b) Deblurring results of [43]. (c) Deblurring results of [23]. (d) Our deblurring result. (Best viewed on screen).

Table 2. Quantitative comparisons on the dataset [13], where [19, 16] are deep based methods.

Blurry Image Whyte et al. [36]

Xu et al. [42]

Pan et al. [23]

Yan et al. [43]

Nah et al. [19]

Kupyn et al. [16]

PSNR(dB)

SSIM

24.93
0.783

27.03
0.809

27.47
0.811

29.95
0.932

28.42
0.897

26.48
0.807

26.10
0.816

Ours
30.18
0.933

6.2. Experimental Results

The dataset introduced in [17] is a widely used uniform
blur dataset, which contains 32 blurry images generated by
4 ground truth images and 8 blur kernels. We perform the
quantitative and qualitative evaluation on this dataset. Re-
sults are shown in Fig. 7, 8 and Table 1, which demonstrates
that our proposed approach achieves competitive results.

The Natural dataset is generated by [13] with camera
motion measured and controlled by a Vicon tracking sys-
tem. Speciﬁcally, the dataset provides blurry image, its
latent image, and ground truth blur kernel, which allows
the quantitative comparison of our approach with baselines.
The captured images are of size 800 × 800.
In Table 2,
we show the quantitative comparison with the state-of-the-
art Single-image deblurring approaches on dataset [13]. It
demonstrates that our approach can achieve the best perfor-
mance on the PSNR and SSIM score.

We further show the corresponding qualitative compari-
son results on example images in [13] in Fig. 8. It clearly
shows that our approach can recover more sharp details and
with less ringing artifacts than other approaches, which are

highlighted in the presented results. We also report our de-
blurring result in Fig. 1, 4, 5 and 6, respectively. Note that
our deblurring results can recover the color more faithfully
than the baselines.

7. Conclusions

Our proposed phase-only image based kernel estima-
tion approach is simple (implemented in a few lines of
code). The resulted image deblurring algorithm achieves
better quantitative results (using PSNR, SSIM, and SSD),
than the state-of-the-art methods by extensive evaluation on
the benchmark datasets. While our approach can handle the
general blur cases, it still suffers from low lighting condition
like other deblurring methods. Our future work will explore
how to remove blurs less sensitive to lighting conditions.

Acknowledgement

This research was supported in part by Australia Cen-
tre for Robotic Vision (CE140100016),
the Australian
Research Council grants (DE140100180, DE180100628)
and the Natural Science Foundation of China grants
(61871325,
61603303).

61420106007,

61671387,

6041

References

[1] Khurrum Aftab and Richard Hartley. Convergence of iter-
atively re-weighted least squares to robust m-estimators. In
Applications of Computer Vision (WACV), 2015 IEEE Winter
Conference on, pages 480–487. IEEE, 2015. 6

[2] Andrew Blake and Andrew Zisserman. Visual Reconstruc-

tion. MIT Press, Cambridge, MA, USA, 1987. 6

[3] Sunghyun Cho and Seungyong Lee. Fast motion deblurring.

ACM Trans. Graph., 28:145:1–145:8, 2009. 2, 7

[4] Sunghyun Cho, Jue Wang, and Seungyong Lee. Handling
In Proc. IEEE

outliers in non-blind image deconvolution.
Int. Conf. Comp. Vis., pages 495–502. IEEE, 2011. 7

[5] Sunghyun Cho, Jue Wang, and Seungyong Lee. Video de-
blurring for hand-held cameras using patch-based synthesis.
ACM Transactions on Graphics (TOG), 31(4):64, 2012. 3

[6] Dong Gong, Jie Yang, Lingqiao Liu, Yanning Zhang, Ian
Reid, Chunhua Shen, Anton van den Hengel, and Qinfeng
Shi. From motion blur to motion ﬂow: A deep learning solu-
tion for removing heterogeneous motion blur. In Proc. IEEE
Conf. Comp. Vis. Patt. Recogn., pages 2319–2328, 2017. 1,
3, 7

[7] Ankit Gupta, Neel Joshi, C Lawrence Zitnick, Michael Co-
hen, and Brian Curless. Single image deblurring using mo-
tion density functions. In Proc. Eur. Conf. Comp. Vis., pages
171–184. Springer, 2010. 1, 2, 7

[8] Zhe Hu, Li Xu, and Ming-Hsuan Yang.

Joint depth esti-
mation and camera shake removal from single blurry image.
In Proc. IEEE Conf. Comp. Vis. Patt. Recogn., pages 2893–
2900, 2014. 1, 2, 3, 7

[9] Tae Hyun Kim and Kyoung Mu Lee. Segmentation-free dy-
namic scene deblurring. In Proc. IEEE Conf. Comp. Vis. Patt.
Recogn., pages 2766–2773, 2014. 3

[10] Tae Hyun Kim and Kyoung Mu Lee. Generalized video de-
blurring for dynamic scenes. In Proc. IEEE Conf. Comp. Vis.
Patt. Recogn., pages 5426–5434, 2015. 1, 3

[11] Hui Ji and Chaoqiang Liu. Motion blur identiﬁcation from
In 2008 IEEE Conference on Computer

image gradients.
Vision and Pattern Recognition, pages 1–8. IEEE, 2008. 2

[12] Neel Joshi, Richard Szeliski, and David J Kriegman. Psf
estimation using sharp edge prediction. In Proc. IEEE Conf.
Comp. Vis. Patt. Recogn., pages 1–8, 2008. 2

[13] Rolf K¨ohler, Michael Hirsch, Betty Mohler, Bernhard
Sch¨olkopf, and Stefan Harmeling. Recording and playback
of camera shake: Benchmarking blind deconvolution with a
real-world database. In Proc. Eur. Conf. Comp. Vis., pages
27–40. Springer, 2012. 7, 8

[14] Peter Kovesi. Phase congruency detects corners and edges.

In DICTA, 2003. 3

[15] Dilip Krishnan, Terence Tay, and Rob Fergus. Blind decon-
volution using a normalized sparsity measure. In Proc. IEEE
Conf. Comp. Vis. Patt. Recogn., pages 233–240, 2011. 2

[16] Orest Kupyn, Volodymyr Budzan, Mykola Mykhailych,
Dmytro Mishkin, and Jiri Matas. Deblurgan: Blind motion
deblurring using conditional adversarial networks. ArXiv e-
prints, 2017. 3, 7, 8

[17] Anat Levin, Yair Weiss, Fredo Durand, and William T Free-
man. Understanding and evaluating blind deconvolution al-
gorithms.
In Proc. IEEE Conf. Comp. Vis. Patt. Recogn.,
pages 1964–1971, 2009. 1, 7, 8

[18] Lerenhan Li, Jinshan Pan, Wei-Sheng Lai, Changxin Gao,
Nong Sang, and Ming-Hsuan Yang. Learning a discrimina-
tive prior for blind image deblurring. In Proc. IEEE Conf.
Comp. Vis. Patt. Recogn., pages 6616–6625, 2018. 1, 3

[19] Seungjun Nah, Tae Hyun Kim, and Kyoung Mu Lee. Deep
multi-scale convolutional neural network for dynamic scene
deblurring. In Proc. IEEE Conf. Comp. Vis. Patt. Recogn.,
July 2017. 1, 2, 3, 6, 7, 8

[20] A Oppenheim and J. Lim. The importance of phase in sig-

nals. Proceedings of the IEEE, 69:529–541, 1981. 1

[21] Jinshan Pan, Zhe Hu, Zhixun Su, Hsin-Ying Lee, and Ming-
Hsuan Yang. Soft-segmentation guided object motion de-
blurring.
In Proc. IEEE Conf. Comp. Vis. Patt. Recogn.,
pages 459–468, 2016. 1, 2, 3

[22] Jinshan Pan, Zhe Hu, Zhixun Su, and Ming-Hsuan Yang. De-
blurring text images via l0-regularized intensity and gradient
prior. In Proc. IEEE Conf. Comp. Vis. Patt. Recogn., pages
2901–2908, 2014. 1

[23] Jinshan Pan, Deqing Sun, Hanspeter Pﬁster, and Ming-
Hsuan Yang. Blind image deblurring using dark channel
prior. In Proc. IEEE Conf. Comp. Vis. Patt. Recogn., pages
1628–1636, 2016. 1, 2, 6, 7, 8

[24] Liyuan Pan, Yuchao Dai, and Miaomiao Liu. Single image
deblurring and camera motion estimation with depth map. In
2019 IEEE Winter Conference on Applications of Computer
Vision (WACV), pages 2116–2125. IEEE, 2019. 2

[25] Liyuan Pan, Yuchao Dai, Miaomiao Liu, and Fatih Porikli.
Simultaneous stereo video deblurring and scene ﬂow estima-
tion.
In Proc. IEEE Conf. Comp. Vis. Patt. Recogn., July
2017. 1, 3

[26] Liyuan Pan, Yuchao Dai, Miaomiao Liu, and Fatih Porikli.
Depth map completion by jointly exploiting blurry color im-
ages and sparse depth maps. In IEEE Winter Conference on
Applications of Computer Vision (WACV), pages 1377–1386,
2018. 3

[27] Giuseppe Papari and Nicolai Petkov. Edge and line oriented
contour detection: State of the art. Image and Vision Com-
puting, 29(2-3):79–103, 2011. 1

[28] Anita Sellent, Carsten Rother, and Stefan Roth. Stereo video
deblurring. In Proc. Eur. Conf. Comp. Vis., pages 558–575.
Springer, 2016. 1, 3

[29] Jianping Shi, Li Xu, and Jiaya Jia. Discriminative blur detec-
tion features. In Proc. IEEE Conf. Comp. Vis. Patt. Recogn.,
pages 2965–2972, 2014. 5

[30] J¨urgen Sturm, Nikolas Engelhard, Felix Endres, Wolfram
Burgard, and Daniel Cremers. A benchmark for the evalua-
tion of rgb-d slam systems. In IEEE/RSJ International Con-
ference on Intelligent Robots and Systems, pages 573–580,
2012. 7

[31] Shuochen Su, Mauricio Delbracio, Jue Wang, Guillermo
Sapiro, Wolfgang Heidrich, and Oliver Wang. Deep video
deblurring for hand-held cameras.
In Proc. IEEE Conf.
Comp. Vis. Patt. Recogn., July 2017. 3

6042

[32] Jian Sun, Wenfei Cao, Zongben Xu, and Jean Ponce. Learn-
ing a convolutional neural network for non-uniform motion
blur removal. In Proc. IEEE Conf. Comp. Vis. Patt. Recogn.,
pages 769–777, 2015. 1, 2, 3

[33] Libin Sun, Sunghyun Cho, Jue Wang, and James Hays.
Edge-based blur kernel estimation using patch priors.
In
Proc. IEEE Int. Conf. Computational Photography, 2013. 2
[34] Xin Tao, Hongyun Gao, Xiaoyong Shen, Jue Wang, and Ji-
aya Jia. Scale-recurrent network for deep image deblurring.
In Proc. IEEE Conf. Comp. Vis. Patt. Recogn., June 2018. 1,
2, 3

[35] Olga Veksler. Stereo matching by compact windows via min-
imum ratio cycle. In Proc. IEEE Int. Conf. Comp. Vis., vol-
ume 1, pages 540–547. IEEE, 2001. 6

[36] Oliver Whyte, Josef Sivic, Andrew Zisserman, and Jean
Ponce. Non-uniform deblurring for shaken images. Int. J.
Comp. Vis., 98(2):168–186, 2012. 7, 8

[37] Jonas Wulff and Michael Julian Black. Modeling blurred
In Proc. Eur. Conf. Comp. Vis., pages

video with layers.
236–252. Springer, 2014. 3

[38] Li Xu and Jiaya Jia. Two-phase kernel estimation for robust
In Proc. Eur. Conf. Comp. Vis., pages

motion deblurring.
157–170. Springer, 2010. 2

[39] Li Xu and Jiaya Jia. Depth-aware motion deblurring.

In
Proc. IEEE Int. Conf. Computational Photography, pages 1–
8, 2012. 1, 3

[40] Li Xu, Cewu Lu, Yi Xu, and Jiaya Jia. Image smoothing via
l0 gradient minimization. ACM Trans. Graph., 30:174:1–
174:12, 2011. 6

[41] Li Xu, Xin Tao, and Jiaya Jia. Inverse kernels for fast spatial
deconvolution. In Proc. Eur. Conf. Comp. Vis., pages 33–48.
Springer, 2014. 1

[42] Li Xu, Shicheng Zheng, and Jiaya Jia. Unnatural l0 sparse
representation for natural image deblurring. In Proc. IEEE
Conf. Comp. Vis. Patt. Recogn., pages 1107–1114, 2013. 1,
2, 6, 7, 8

[43] Yanyang Yan, Wenqi Ren, Yuanfang Guo, Rui Wang, and
Xiaochun Cao. Image deblurring via extreme channels prior.
In Proc. IEEE Conf. Comp. Vis. Patt. Recogn., pages 6978–
6986, 2017. 1, 2, 7, 8

[44] Jiawei Zhang, Jinshan Pan, Jimmy Ren, Yibing Song, Lin-
chao Bao, Rynson W.H. Lau, and Ming-Hsuan Yang. Dy-
namic scene deblurring using spatially variant recurrent neu-
ral networks. In Proc. IEEE Conf. Comp. Vis. Patt. Recogn.,
June 2018. 3

[45] Shicheng Zheng, Li Xu, and Jiaya Jia. Forward motion de-
In Proc. IEEE Int. Conf. Comp. Vis., December

blurring.
2013. 1, 2

6043

