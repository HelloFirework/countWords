Self-Supervised Adaptation of High-Fidelity Face Models for

Monocular Performance Tracking

Jae Shin Yoon†

Takaaki Shiratori‡

Shoou-I Yu‡

Hyun Soo Park†

†University of Minnesota
{jsyoon, hspark}@umn.edu

‡Facebook Reality Labs

{tshiratori, shoou-i.yu}@fb.com

Figure 1: Results of high-ﬁdelity 3D facial performance tracking from our method, which automatically adapts a high-
quality face model [12] captured in a controlled lab environment (left) to in-the-wild imagery (right) through our proposed
self-supervised domain adaptation method. Note the ﬁne details we are able to recover from cellphone quality video.

Abstract

1. Introduction

Improvements in data-capture and face modeling tech-
niques have enabled us to create high-ﬁdelity realistic face
models. However, driving these realistic face models re-
quires special input data, e.g. 3D meshes and unwrapped
textures. Also, these face models expect clean input data
taken under controlled lab environments, which is very dif-
ferent from data collected in the wild. All these constraints
make it challenging to use the high-ﬁdelity models in track-
ing for commodity cameras.
In this paper, we propose a
self-supervised domain adaptation approach to enable the
animation of high-ﬁdelity face models from a commodity
camera. Our approach ﬁrst circumvents the requirement
for special input data by training a new network that can di-
rectly drive a face model just from a single 2D image. Then,
we overcome the domain mismatch between lab and un-
controlled environments by performing self-supervised do-
main adaptation based on “consecutive frame texture con-
sistency” based on the assumption that the appearance of
the face is consistent over consecutive frames, avoiding the
necessity of modeling the new environment such as lighting
or background. Experiments show that we are able to drive
a high-ﬁdelity face model to perform complex facial motion
from a cellphone camera without requiring any labeled data
from the new domain.

High-ﬁdelity face models enable the building of realistic
avatars, which play a key role in communicating ideas,
thoughts and emotions. Thanks to the uprising of data-
driven approaches, highly realistic and detailed face models
can be created with active appearance models (AAMs) [6,
5], 3D morphable models (3DMMs) [1], or deep appearance
models (DAMs) [12]. These data-driven approaches jointly
model facial geometry and appearance, thus empowering
the model to learn the correlation between the two and syn-
thesize high-quality facial images. Particularly, the recently
proposed DAMs can model and generate realistic anima-
tion and view-dependent textures with pore-level details by
leveraging the high capacity of deep neural networks.

Unfortunately, barriers exist when applying these high-
quality models to monocular in-the-wild imagery due to
modality mismatch and domain mismatch. Modality mis-
match refers to the fact that high-ﬁdelity face modeling
and tracking requires specialized input data, (e.g. DAMs re-
quire tracked 3D meshes and unwrapped textures) which is
not easily accessible on consumer-grade mobile capture de-
vices. Domain mismatch refers to the fact that the visual
statistics of in-the-wild imagery are considerably different
from that of a controlled lab environment used to build the
high-ﬁdelity face model. In-the-wild imagery includes var-

4601

ious background clutter, low resolution, and complex am-
bient lighting. Such domain gap breaks the correlation be-
tween appearance and geometry learned by the data-driven
model and the model may no longer work well in the new
domain. The existence of these two challenges greatly in-
hibits the wide-spread use of the high-ﬁdelity face models.

In this paper, we present a method to perform high-ﬁdelity
face tracking for monocular in-the-wild imagery based on
DAMs face model learned from lab-controlled imagery.
Our method bridges the controlled lab domain and in-
the-wild domain such that we can perform high-ﬁdelity
face tracking with DAM face models on in-the-wild video
camera sequences. To tackle the modality mismatch, we
train I2ZNet, a deep neural network that takes a monoc-
ular image as input and directly regresses to the interme-
diate representation of the DAM, thus circumventing the
need for 3D meshes and unwrapped textures required in
DAMs. As I2ZNet relies on data captured in a lab en-
vironment and cannot handle the domain mismatch, we
present a self-supervised domain adaptation technique that
can adapt I2ZNet to new environments without requiring
any labeled data from the new domain. Our approach lever-
ages the assumption that the textures (appearance) of a face
between consecutive frames should be consistent and incor-
porates this source of supervision to adapt the domain of
I2ZNet such that ﬁnal tracking results preserve consistent
texture over consecutive frames on target-domain imagery,
as shown in Figure 1. The resulting face tracker outper-
forms state-of-the-art face tracking methods in terms of ge-
ometric accuracy, temporal stability, and visual plausibility.

The key strength of this approach is that we do not make any
other assumptions on the scene or lighting of in-the-wild
imagery, enabling our method to be applicable to a wide
variety of scenes. Furthermore, our method computes con-
sistency for all visible portions of the texture, thus provid-
ing signiﬁcantly more supervision and useful gradients than
per-vertex based methods [19, 7]. Finally, we emphasize
that the consecutive frame texture consistency assumption is
not simply a regularizer to avoid overﬁtting. This assump-
tion provides an additional source of supervision which en-
ables our model to adapt to new environments and achieve
considerable improvement of accuracy and stability.

In summary, the contributions of this paper are as follows:

1. I2ZNet, a deep neural network that can directly pre-
dict the intermediate representation of a DAM from a
single image.

2. A self-supervised domain adaptation method based on
consecutive frame texture consistency to enhance face
tracking. No labeled data is required for images from
the target domain.

3. High-ﬁdelity 3D face tracking on in-the-wild videos

captured with a commodity camera.

2. Related Work

Humans are evolved to decode, understand and convey non-
verbal information from facial motion, e.g., a subtle unnat-
ural eye blink, symmetry, and reciprocal response can be
easily detected. Therefore, the realistic rendering of facial
motion is key to enable telepresence technology [12]. This
paper lies in the intersection between high ﬁdelity face mod-
eling and 3D face reconstruction from a monocular camera,
which will be brieﬂy reviewed here.

3D Face Modeling Faces have underlying spatial struc-
tural patterns where low dimensional embedding can ef-
ﬁciently and compactly represent diverse facial conﬁg-
urations, shapes, and textures. Active Shape Models
(ASMs) [6] have shown strong expressibility and ﬂexibil-
ity to describe a variety of facial conﬁgurations by lever-
aging a set of facial landmarks. However, the nature of the
sparse landmark dependency limits the reconstruction accu-
racy that is fundamentally bounded by the landmark local-
ization. AAMs [5] address the limitation by exploiting the
photometric measure using both shape and texture, resulting
in compelling face tracking. Individual faces are combined
into a single 3DMM [1] by computing dense correspon-
dences based on optical ﬂow in conjunction with the shape
and texture priors in a linear subspace. Large-scale face
scans (more than 10,000 people) from diverse population
enables modeling of accurate distributions of faces [3, 2].
With the aid of multi-camera systems and deep neural net-
works, the limitation of the linear models can be overcome
using DAMs [12] that predicts high quality geometry and
texture. Its latent representation is learned by a conditional
variational autoencoder [11] that encodes view-dependent
appearance from different viewpoints. Our approach elimi-
nates the multi-camera requirement of the DAMs by adapt-
ing the networks to a video from a monocular camera.

Single View Face Reconstruction The main beneﬁt of the
compact representation of 3D face modeling is that it al-
lows estimating the face shape, appearance, and illumina-
tion parameters from a single view image. For instance,
the latent representation of the 3DMMs can be recovered
by jointly optimizing pixel intensity, edges and illumina-
tion (approximated by spherical harmonics) [16]. The re-
covered 3DMMs can be further reﬁned to ﬁt to a target
face using a collection of photos [17] or depth based cam-
era [4].
[20] leveraged expert designed rendering layers
which model face shape, expression, and illumination and
utilized inverse rendering to estimate a set of compact pa-
rameters which renders a face that best ﬁts the input. This
is often an simpliﬁcation and cannot model all situations.
In contrast, our method does not make any explicit assump-
tions on the lighting of the scene, and thus achieves more
ﬂexibility to different environments.

4602

lenges: modality mismatch and domain mismatch. Modal-
ity mismatch occurs when the existing face model requires
input data to be represented in a face centric representation
such as 3D meshes with unwrapped texture in a pre-deﬁned
topology. This representation does not comply with an im-
age centric representation, thus preventing us from using
these face models. Domain mismatch occurs when the vi-
sual statistics of in-the-wild images are different from that
of the scenes used to construct the models. In the follow-
ing sections, we ﬁrst present I2ZNet for the modality mis-
match, and then describe how to adapt I2ZNet in a self-
supervised fashion for the domain mismatch.

3.1. Handling Modality Mismatch

Many face models including DAMs can be viewed as an
encoder and decoder framework. The encoder EX takes an
input X = (G, T), which corresponds to the geometry and
unwrapped texture, respectively. G ∈ RG×3 represents the
3D locations of G vertices which form a 3D mesh of the
face. Note that rigid head motion has already been removed
from the vertex locations, i.e. G represents only local defor-
mations of the face. The unwrapped texture T ∈ RT ×T ×3
is a 2D image that represents the appearance at different lo-
cations on G in the UV space. The output of EX is the inter-
mediate code z. The decoder D then takes z and computes

coder and decoder are learned by minimizing the difference

a reconstructed output eX = D(z) = D(EX (X)). The en-
between X and eX for a large number of training samples.

The challenge is that X = (G, T), i.e., the 3D geometry
and unwrapped texture, is not readily available in a monoc-
ular image I. Therefore, we learn a separate deep encoder
called I2ZNet (Image-to-z network): (z, H) ← EI(I),
which takes a monocular image I as input and directly out-
puts z and the rigid head pose H.
I2ZNet ﬁrst extracts
the domain independent two-stream features using the pre-
trained VGGNet [18] and HourglassNet [13], which pro-
vides perceptual information and facial landmarks, respec-
tively. The multiple depth-level two-stream features are
combined with skip connections, and are regressed respec-
tively to the intermediate representation z ∈ R128 and
the head pose H ∈ R6 using several fully connected lay-
ers [23]. This architecture allows to directly predicts the pa-
rameters (z, H) based on the category-level semantic infor-
mation from the deep layers and local geometric/appearance
details from the shallow layers at the same time. z can be
given to the existing decoder D to decode the 3D mesh and
texture, while H allows to reproject the decoded 3D mesh
onto the 2D image. Figure 2 illustrates the overall architec-
ture of I2ZNet, and more details are described in the sup-
plementary manuscript.

EI is trained in a supervised way with multiview image se-

4603

Figure 2: Illustration of the I2ZNet architecture.
I2ZNet
extracts the domain-invariant perceptual features and fa-
cial image features using the pre-trained VGGNet [18] and
HourglassNet [13], respectively, from an input image I. The
combined multiple depth-level features are then regressed
to the latent code z of the pre-trained DAMs (D) [12] and
the head pose H via fully connected layers.
I2ZNet is
trained with the losses deﬁned for z and H, namely Lz and
LH, as well as the view consistency loss in Eq. (4).

Other methods include [9, 26], which used cascaded CNNs
which densely align the 3DMM with a 2D face in an iter-
ative way based on facial landmarks. The geometry of a
3D face is regressed in a coarse-to-ﬁne manner [15], and
asymmetric loss enforces the network to regress the iden-
tity consistent 3D face [21]. [19] utilizes jointly learned ge-
ometry and reﬂectance correctives to ﬁt in-the-wild faces.
[8] trained UV regression maps which jointly align with the
3DMM to directly reconstruct a 3D face.

Tackling Domain Mismatch A key challenge is the often-
times signiﬁcant gap between the distribution of training
and testing data. To this end, [14, 21] utilized synthetic
data to boost 3D face reconstruction performance. A chal-
lenge here is to generate synthetic data that is representative
of the testing distribution. [7] utilized domain invariant mo-
tion cues to perform unsupervised domain adaptation for
facial landmark tracking. While their method was tested on
sparse landmarks and beneﬁted from a limited source of su-
pervision, our method performs dense per-pixel matching of
textures, providing more supervision for domain adaptation.

3. Methodology

When applying existing face models such as AAMs and
DAMs to monocular video recordings, we face two chal-

FCHourglassNet𝐆𝐓𝐳Landmark reprojectionCompressorLoss: Feature concatenation𝐈𝐇FCDVGGNet𝐿𝐳𝐿𝐇quences used for training EX and D of DAMs. The by-
product of learning EX and D are the latent code zgt and the
head pose Hgt at each time. As a result of DAM training,
we acquire as many tuples of {Iv, zgt, Hgt} as the camera
views {v} at every time t as training data for EI.

The total loss to train EI is deﬁned as

LEI = λzLz + λHLH + λviewLview,

(1)

where Lz and LH are the losses for z and H, respectively,
and Lview is the view-consistency loss. λz, λH and λview
are weights for Lz, LH and Lview, respectively.

Lz is the direct supervision term for z deﬁned as

Lz = X

v,t

(cid:13)(cid:13)zIt

v − zt

gt(cid:13)(cid:13)2

2

,

(2)

where zI is a DAM latent code regressed from I via EI.

Inspired by [19, 10], we formulate LH as the reprojection
error of the 3D landmarks predicted via EI w.r.t. the 2D
ground-truth landmarks Kgt ∈ RK×2 for the head pose
prediction:

LH =

1

K X

k,v,t

(cid:13)(cid:13)ΠHIt

v

Kk(GIt

v ) − Kk

gt(cid:13)(cid:13)2

2

,

(3)

where K is the number of landmarks, Π = [1 0 0; 0 1 0]
is a weak perspective projection matrix, and HI is the head
pose regressed from I via I2ZNet. GI is the set of vertex
locations decoded from zI via D, and Kk(·) computes the
3D location of k-th landmark from GI.

Because the training image data is captured with synchro-
nized cameras, we want to ensure that the regressed z is the
same for images from different views captured at the same
time. Therefore, we incorporate the view-consistency loss
Lview, deﬁned as

Lview = X

v,w,t

(cid:13)(cid:13)zIt

w(cid:13)(cid:13)2

2

v − zIt

.

(4)

We randomly select two views at every training iteration.

3.2. Handling Domain Mismatch

To handle the domain mismatch, we adapt I2ZNet to a new
domain using a set of unlabeled images in a self-supervised
manner. The overview of the proposed domain adaptation
is illustrated in Figure 3. Given a monocular video, we
reﬁne the encoder EI by minimizing the domain adapta-
tion loss LDA (Eq. (5)), which consists of (1) consecutive
frame texture consistency LCFTC, (2) model-to-observation
texture consistency LMOTC, and (3) facial landmark repro-
jection consistency LFLRC:

Lt

DA = λCFTCLt

CFTC + λMOTCLt

MOTC + λFLRCLt

FLRC,

(5)

Figure 3: Overview of our self-supervised domain adapta-
tion process. Given two consecutive frames (It−1, It), we
run EI followed by D to acquire the geometry (Gt−1, Gt),
textures (Tt−1, Tt) and head poses (Ht−1, Ht). Then, I,

G and H are used to compute observed textures (eTt−1,
eTt). These enable us to compute LCFTC and LMOTC. For

frame t, we run a hourglass facial landmark detector to get
2D landmark locations Kt
2D, which is then used to compute
LFLRC. These losses can back-propagate gradients back to
EI to perform self-supervised domain adaptation.

where λCFTC, λMOTC and λFLRC correspond to the weights
for each loss term. LCFTC is our key contribution. It adapts
EI such that textures computed from predicted geometry are
temporally coherent. LMOTC enforces the consistent color of
DAM generated texture with the observed texture via pixel-
wise matching. LFLRC anchors the tracked 3D face by min-
imizing the reprojection error of the 3D model landmarks
with the detected facial landmarks.

3.2.1 Consecutive Frame Texture Consistency

Inspired by the brightness constancy assumption employed
in many optical ﬂow algorithms, we can reasonably assume
that 3D face tracking for two consecutive frames is accurate
only if unwrapped textures for the two frames are nearly
identical. Inversely, if we see large changes in unwrapped
texture across consecutive frames, it is highly likely due
to inaccurate 3D geometry predictions. We make the as-
sumption that environmental lighting and the appearance of
the face does not change signiﬁcantly between consecutive

4604

EIDEIDFrame 𝑡−1Frame 𝑡𝐇𝑡−1𝐳𝑡−1𝐳𝑡𝐇𝑡Unwrap texture with𝐆𝑡−1𝐓𝑡−1𝐓𝑡𝐆𝑡𝐊2D𝑡( 𝐈𝑡−1,𝐆𝑡−1, 𝐇𝑡−1)𝐿MOTC𝑡𝐿CFTC𝑡𝐿FLRC𝑡HourglassNet𝐈𝑡−1𝐈𝑡෩𝐓𝑡−1෩𝐓𝑡Figure 4: Illustration of how to compute LCFTC.

frames, which is satisﬁed in most scenarios. Otherwise, we
do not make any assumptions on the lighting environment
of a new scene, which makes our method more generaliz-
able than existing methods which, for example, approxi-
mates lighting with spherical harmonics [19].

The consecutive frame texture consistency loss LCFTC is:

Lt

CFTC =

1

W t,t−1 (cid:13)(cid:13)(cid:13)(Wt ⊙ Wt−1) ⊙ (eTt − eTt−1)(cid:13)(cid:13)(cid:13)

2

F

,

(6)

where W ∈ RT ×T is a conﬁdence matrix, eT is a tex-

ture obtained by projecting GI onto I with HI, and ⊙ is
element-wise multiplication. We use the cosine of inci-
dent angle of the ray from the camera center to each texel
as the conﬁdence to reduce the effect of texture distortion
caused at grazing angles. Elements smaller than a thresh-
old in Wt ⊙ Wt−1 are set to 0. W t,t−1 is the number of
non-zero elements in Wt ⊙ Wt−1. Figure 4 show example
conﬁdence matrices and textures as well as computation of
LCFTC.

eT is obtained by projecting the 3D location of each texel

decoded from z to an observed image I.

eTij = I(ΠHIX(GI, i, j)),

(7)

where (i, j) is texel coordinates. Unlike existing methods
that compute per-vertex texture loss [19, 7], LCFTC consid-
ers all visible texels, providing signiﬁcantly richer source
of supervision and gradients than per-vertex-based meth-
ods. The aforementioned steps are all differentiable, thus
the entire model can be updated in an end-to-end fashion.

3.2.2 Model-to-Observation Texture Consistency

This loss enforces the predicted textures T to match the tex-

photometric loss used in [19], a challenge in our technique
is the aforementioned domain mismatch: T could be sig-

ture observed in the image eT. Although this is similar to the
niﬁcantly different from eT mainly due to lighting condition

Figure 5: Proposed method during testing phase.

changes. Therefore, we incorporate an additional network
T ← C(T) to convert the color of the predicted texture
to the one of the currently observed texture. C(T) is also
learned, and since training data is limited, we learn a sin-
gle 1-by-1 convolutional ﬁlter which can be viewed as the
color correction matrix and corrects the white-balance be-
tween the two textures. The model-to-observation texture
consistency (MOTC) is formulated as

Lt

MOTC =

1

W t (cid:13)(cid:13)(cid:13)Wt ⊙(cid:16)eTt − C(cid:0)Tt(cid:1)(cid:17)(cid:13)(cid:13)(cid:13)

2

F

.

(8)

3.2.3 Facial Landmark Reprojection Consistency

This loss enforces a sparse set of vertices on the 3D mesh
corresponding to the landmark locations to be consistent
with 2D landmark predictions. Given K facial landmarks,
the facial landmark reprojection consistency (FLRC) loss is
formulated as:

Lt

FLRC =

1

K X

k

(cid:13)(cid:13)(cid:13)Kk,t

2D − ΠHt

IKk(Gt

2

2

,

(9)

I)(cid:13)(cid:13)(cid:13)

where Kk,t

2D is the location of the k-th detected 2D landmark.

3.3. Testing Phase

Figure 5 depicts the steps required during the testing
phase of our network, which is simply a feed-forward pass
through the adapted EI and the estimated color correction

function C. Note that eT and the landmark detection are

no longer required. Therefore, the timing of the network is
still exactly the same as the original network except for the
additional color correction, which itself is simple and fast.

4. Experiments

To demonstrate the effectiveness of our proposed self-
supervised domain adaptation method for high-ﬁdelity 3D
face tracking, we perform both quantitative and qualitative
analysis. Though qualitative analysis is relatively straight
forward, quantitative analysis for evaluating the accuracy
and stability of tracking results requires a high-resolution

4605

0000Apply headpose 𝐇𝑡−1Apply headpose 𝐇𝑡𝐈𝑡−1𝐆𝑡−1Frame 𝑡−1Frame t𝐈𝑡𝐆𝑡෩𝐓𝑡−෩𝐓𝑡−1𝐖𝑡⊙𝐖𝑡−1෩𝐓𝑡−1෩𝐓𝑡𝐖𝑡𝐖𝑡−1EIDIn-the-wild image𝐳𝑡𝐇𝑡Predicted texture 𝐓C(𝐓)Color correctedRendered avatarPredicted geometry + head posein-the-wild video dataset with ground-truth 3D meshes,
which unfortunately is difﬁcult to collect because scanning
high quality 3D facial scans usually requires being in a spe-
cial lab environment with controlled settings. Thus quanti-
tative analysis of recent 3D face tracking methods such as
[19, 20] are limited to static image datasets [4], or video se-
quences shot in a controlled environment [22]. Therefore,
in light of the aforementioned limitations, we collected a
new dataset and devised two metrics for quantitatively eval-
uating 3D face tracking performance.

Evaluation metrics: We employ two metrics, accuracy and
temporal stability, which are denoted as "Reprojection" and
"Temporal" in Table 1, respectively. For accuracy, since we
do not have ground truth 3D meshes for in-the-wild data, we
utilize average 2D landmark reprojection error as a proxy
for the accuracy of the predicted 3D geometry. First, a 3D
point corresponding to a 2D landmark is projected into 2D,
and then the Euclidean distance between the reprojected
point and ground truth 2D point is computed. For tempo-
ral stability, we propose a smoothness metric as

1
G

GX

i=1

(cid:13)(cid:13)Gt+1

i − Gt

i(cid:13)(cid:13)2 +(cid:13)(cid:13)Gt
i (cid:13)(cid:13)2

i − Gt−1

(cid:13)(cid:13)Gt+1

i − Gt−1

i (cid:13)(cid:13)2

,

(10)

where Gt
i corresponds to the 3D location of vertex i at time
t. This metric assumes that the vertices of the 3D mesh
should move on a straight line over the course of three
frames, thus unstable or jittering predictions will lead to
higher (worse) score. The lowest (best) metric score is 1.

Dataset collection and annotation: We recorded
1920×1080 resolution facial performance data in the wild
for four different identities. Recording environments in-
clude indoor, outdoor, plain background and cluttered back-
ground under various lighting conditions.

150 frames of facial performance data were annotated for
each of the 4 identities. For each frame, we annotate on
the person’s face 5 salient landmarks that do not corre-
spond to any typical facial landmark such as eye corners and
mouth corners that can be detected by our landmark detec-
tor. These points are selected because our domain adapta-
tion method already optimizes for facial landmark reprojec-
tion consistency, so our evaluation metric should use a sep-
arate set of landmarks for evaluation. Therefore, we focus
on annotating salient personalized landmarks, such as pim-
ples or moles on a person’s face, which can be easily iden-
tiﬁed and accurately annotated by a human. In this way, our
annotations enable us to measure performance of tracking
in regions where there are no generic facial landmarks and
provide a more accurate measure of tracking performance.

Implementation Details: DAMs [12] are ﬁrst created for
all four identities from multi-view images captured in a

Table 1: Evaluation on in-the-wild dataset. “Ours w/o DA”
represents EI before doing any domain adaptation.

HPEN

3DDFA

PRNet

Ours

Subject1

Subject2

Subject3

Subject4

Average

Temporal

1.5197

1.2951

1.8206

1.3559

1.4978

Reprojection

8.8075

5.5475

13.3823

10.4688

9.5515

Temporal

1.5503

1.4500

1.8608

1.5139

1.5938

Reprojection

14.1171

10.2568

21.5077

18.1647

16.011

Temporal

1.5551

1.3701

1.5700

1.4973

Reprojection

8.4867

7.2522

14.052

9.6586

Temporal

1.4106

1.2476

1.8322

1.4169

w/o DA

Reprojection

Temporal

Ours
w/ LFLRC Reprojection

6.2171

7.4914

10.9225

9.5953

1.3624

1.3274

1.6583

1.132

5.7558

6.982

10.1258

7.5230

Ours

Temporal

Reprojection

1.1299

5.5689

1.0498

6.7281

1.2934

9.6015

1.0915

7.1368

1.4981

9.8624

1.4768

8.5566

1.3700

7.5960

1.1412

7.2588

Figure 6: Temporal stability graph for subject 4. Note that
smaller stability score means more stable results.

lighting-controlled environment, and our I2ZNet is newly
trained for each identity. Our proposed self-supervised do-
main adaptation method is then applied to videos of the
four identities in a different lighting and background en-
vironment. For DAM, the unwrapped texture resolution is
T = 1024, and the geometry had G = 7306 vertices. We
train the I2ZNet with Stochastic Gradient Decent (SGD).
The face is cropped and resized to 256×256 image and
given to EI. During the self-supervised domain adaptation,
the related parameters are set to λCFTC = 100, λMOTC =
100, λFLRC = 1.

4.1. Results on In the wild Dataset

We compare our method against three state-of-the-art base-
lines: HPEN [25]: 3DMM ﬁtting based on landmarks,
3DDFA [24]: 3DMM ﬁtting based on landmarks and dense
correspondence, and PRNet [8]: 3DMM ﬁtting based on
the direct depth regression map. The system input im-
age size is 256×256 except for 3DDFA (100×100). We
also add our method without domain adaptation (Ours w/o
DA) and only with facial landmark reprojection consistency
(Ours w/ LFLRC). As shown in Table 1, the proposed do-
main adaptation consistently increases the performance of
the our model without domain adaptation for all 4 sub-

4606

HPEN3DDFPRNetOursOursw/o DA20406080100120140FrameTemporal Stability1234Figure 7: Qualitative comparisons with baseline methods.

jects.
In terms of stability, the proposed domain adapta-
tion method improves our model by 22% relative. Partic-
ularly, we are able to achieve 1.05 stability score for sub-
ject 2, which is close to the lowest possible stability score
(1.0). This demonstrates the effectiveness of our proposed
method. For the other baselines, our model without the do-
main adaptation already outperforms them in terms of ge-
ometry. This may be because our model is pre-trained with
many pairs of (I, H, z) training data, while the baselines
were used out of the box. But on the other hand, all base-
lines including Ours w/o DA perform similarly in terms
of stability (between 1.45-1.60), but our domain adaptation
method is able to improve it to 1.14, which clearly demon-
strates the effectiveness of our method.

Figure 6 visualizes the temporal stability metric for all the
different methods for a single sequence. Our method has a
consistently better (i.e., smaller) stability score than all the
other methods for nearly all the frames, and demonstrates
not only the effectiveness, but also the reliability and ro-
bustness of our method for in-the-wild sequences.

Figure 7 shows qualitative comparisons with baselines.
Overall, our face tracking results most closely resemble the
input facial conﬁguration, especially for the eyes and the
mouth. For example, in the second row, the baselines erro-
neously predicted that the person’s mouth is opened, while

Figure 8: Visualization of 3D face tracking for in-the-wild
video. For each input image, we show in the bottom right
corner the predicted geometry overlaid on top of the face,
and the predicted color corrected face.

our method correctly predicted that the person’s mouth is
closed. We can also clearly see the effectiveness of our color
correction approach, which is able to correct the relatively
green-looking face to better match to the appearance in the
input.

Figure 8 shows the visualization of our in-the-wild face
tracking results. Our method is able to track complex mo-
tion in many different backgrounds, head pose, and lighting
conditions that are difﬁcult to approximate with spherical
harmonics such as hard shadow. Our method is also able to
adapt to the white-balance of the current scene. Note that
the gaze direction is also tracked for most cases.

4.2. Ablation Studies

To gain more insight to our model, we performed the fol-
lowing ablation experiments.

4.2.1 Evaluation of I2ZNet Structure

To validate the performance gain of each component on our
regression network, we compare I2ZNet against three base-
line networks: VGG+Skip+Key denotes I2ZNet, which
uses VGGNet, multi-level features (skip connections), and
landmarks from HourglassNet. VGG+Skip:
landmarks
guidance is removed. VGG: Multi-level features (skip con-
nection) are further removed and only deep features are
used for regression. VGG Scratch has the same structure
with VGG but it is trained from scratch. For other settings
which use VGG, pre-trained VGG-16 features are used, and

4607

HPEN3DFAPRNetOurs w/o DAOursInputTable 2: Ablation test on I2ZNet. The average score with
respect to all subjects are reported.

VGG Scratch

VGG

VGG+Skip

VGG+Skip+Key

Geometry

Texture

Temporal

1.011

0.016

2.143

1.481

0.027

3.138

0.411

0.007

1.499

0.315

0.004

1.446

Figure 9: Ablation test on I2ZNet with a representative sub-
ject. The vertex-wise error is visualized with the associated
average score for subject 1.

the VGG portion of the network is not updated during train-
ing. The models are tested on unseen test datasets where
the vertex-wise dense ground-truth is available. Three met-
rics are employed to evaluate performance: (1) accuracy for
geometry is computed by Euclidean distance between pre-
dicted and ground-truth 3D vertices, (2) accuracy for texture
is calculated by pixel intensity difference between predicted
and ground-truth texture, and (3) the temporal stability is
measured in the same way as Eq. 10.

The average scores with respect to the four test subjects
are reported in Table 2, and the representative subject re-
sults are visualized in Figure 9. We observe that multi-level
features (VGG+Skip) signiﬁcantly improves performance
over VGG, while adding keypoints (VGG+Skip+Key) fur-
ther improves performance. VGG seems to lack of capac-
ity to directly regress the latent parameters with only pre-
trained deep features which are not updated. More ablation
studies (e.g., tests on view consistency and robustness to
the synthetic visual perturbation) on I2ZNet are described
in the supplementary manuscript.

4.2.2 Effect of Image Resolution

The cropped image resolution plays a key role in the accu-
racy of face tracking. In this experiment, we quantify the

Figure 10: Ablation studies on the performance degradation
under various input resolution.

performance degradation according to the resolution using
relative reprojection error metric. Relative reprojection er-
ror is computed by comparing the 2D reprojected vertices
location of the estimated geometry from different resolution
images with the one of the gold-standard geometry, which is
the geometry acquired when using the highest image resolu-
tion 256×256. Figure 10 shows the results. Until 175×175,
we achieve average error less than 4 pixel-error, but per-
formance degrades signiﬁcantly as the resolution becomes
further smaller.

4.3. Limitations

There are two main limitations to the proposed approach.
The ﬁrst limitation is that our method assumes that a person-
speciﬁc DAM already exists for the person to be tracked, as
our method takes the DAM as input. The second limitation
is that our MOTC color correction cannot handle complex
lighting and specularities. For example, in Figure 8 ﬁrst row
ﬁrst image, a portion of the face is brighter due to the sun,
but since we only have a global color correction matrix for
color correction, the sun’s effect could not be captured and
thus not reﬂected in the output.

5. Conclusion

We proposed a deep neural network that predicts the in-
termediate representation and head pose of a high-ﬁdelity
3D face model from a single image and its self-supervised
domain adaptation method, thus enabling high-quality fa-
cial performance tracking from a monocular video in-the-
wild. Our domain adaptation method leverages the assump-
tion that the textures of a face over two consecutive frames
should not change drastically, and this assumption enables
us to extract supervision from unlabeled in-the-wild video
frames to ﬁne-tune the existing face tracker. The results
demonstrated that the proposed method not only improves
face-tracking accuracy, but also the stability of tracking.

4608

GeometryTextureTemporal0.01641.13112.35401.50780.02162.73940.49130.00711.64420.29050.00441.5782VGGScratchVGGVGG+SkipVGG+Skip+Key12.5 <01.5 <00.15 <Reprojection error4812165075100125150175200225Input resolution256References

[1] Volker Blanz and Thomas Vetter. A morphable model
In Proc. ACM SIG-

for the synthesis of 3D faces.
GRAPH, pages 187–194, 1999. 1, 2

[2] James Booth, Epameinondas Antonakos, Stylianos
Ploumpis, George Trigeorgis, and Yannis Panagakis
andStefanos Zafeiriou. 3D face morphable models
“in-the-wild”. In Proc. CVPR, 2017. 2

[3] James Booth, Anastasios Roussos, Allan Ponniah,
David Dunaway, and Stefanos Zafeiriou. Large scale
3D morphable models.
IJCV, 126(2-4):233–254,
2018. 2

[4] Chen Cao, Yanlin Weng, Shun Zhou, Yiying Tong,
and Kun Zhou. FaceWarehouse: A 3D facial ex-
pression database for visual computing. IEEE TVCG,
20(3):413–425, 2014. 2, 6

[5] Timothy F Cootes, Gareth J Edwards, and Christo-
IEEE

pher J Taylor. Active appearance models.
TPAMI, (6):681–685, 2001. 1, 2

[6] Timothy F Cootes, Christopher J Taylor, David H
Cooper, and Jim Graham. Active shape models-their
training and application. CVIU, 61(1):38–59, 1995. 1,
2

[7] Xuanyi Dong, Shoou-I Yu, Xinshuo Weng, Shih-En
Wei, Yi Yang, and Yaser Sheikh. Supervision-by-
registration: An unsupervised approach to improve the
precision of facial landmark detectors. In Proc. CVPR,
2018. 2, 3, 5

[8] Yao Feng, Fan Wu, Xiaohu Shao, Yanfeng Wang, and
Xi Zhou. Joint 3D face reconstruction and dense align-
ment with position map regression network. In Proc.
ECCV, 2018. 3, 6

[9] László A Jeni, Jeffrey F Cohn, and Takeo Kanade.
Dense 3D face alignment from 2D video for real-time
use. Image Vision Comput., 58(C):13–24, 2017. 3

[10] Angjoo Kanazawa, Michael J. Black, David W. Ja-
cobs, and Jitendra Malik. End-to-end recovery of hu-
man shape and pose. In Proc. CVPR, 2018. 4

[11] Diederik P. Kingma and Max Welling. Auto-encoding

variational Bayes. In Proc. ICLR, 2014. 2

[12] Stephen Lombardi, Tomas Simon, Jason Saragih, and
Yaser Sheikh. Deep appearance models for face ren-
dering. ACM TOG, 37(4), 2018. 1, 2, 3, 6

[13] Alejandro Newell, Kaiyu Yang, and Jia Deng. Stacked
In

hourglass networks for human pose estimation.
Proc. ECCV, 2016. 3

[14] Elad Richardson, Matan Sela, and Ron Kimmel. 3D
face reconstruction by learning from synthetic data. In
Proc. 3DV, 2016. 3

[15] Elad Richardson, Matan Sela, Roy Or-El, and Ron
Kimmel. Learning detailed face reconstruction from
a single image. In Proc. CVPR, 2017. 3

[16] Sami Romdhani and Thomas Vetter. Estimating 3D
shape and texture using pixel intensity, edges, specular
highlights, texture constraints and a prior.
In Proc.
CVPR, 2005. 2

[17] Joseph Roth, Yiying Tong, and Xiaoming Liu. Adap-
tive 3D face reconstruction from unconstrained photo
collections. In Proc. CVPR, 2016. 2

[18] Karen Simonyan and Andrew Zisserman. Very deep
convolutional networks for large-scale image recogni-
tion. In Proc. ICLR, 2015. 3

[19] Ayush Tewari, Michael Zollhöfer, Pablo Garrido, Flo-
rian Bernard, Hyeongwoo Kim, Patrick Pérez, and
Christian Theobalt. Self-supervised multi-level face
model learning for monocular reconstruction at over
250 Hz. In Proc. CVPR, 2018. 2, 3, 4, 5, 6

[20] Ayush Tewari, Michael Zollhöfer, Hyeongwoo Kim,
Pablo Garrido, Florian Bernard, Patrick Pérez, and
Christian Theobalt. MoFA: Model-based deep convo-
lutional face autoencoder for unsupervised monocular
reconstruction. In Proc. ICCV, 2017. 2, 6

[21] Anh Tuan Tran, Tal Hassner, Iacopo Masi, and Gérard
Medioni. Regressing robust and discriminative 3D
morphable models with a very deep neural network.
In Proc. CVPR, 2017. 3

[22] Levi Valgaerts, Chenglei Wu, Andrés Bruhn, Hans-
Peter Seidel, and Christian Theobalt. Lightweight
binocular facial performance capture under uncon-
trolled lighting. ACM TOG, 31(6):187–1, 2012. 6

[23] Jae Shin Yoon, Francois Rameau, Junsik Kim, Seokju
Lee, Seunghak Shin, and In So Kweon. Pixel-level
matching for video object segmentation using convo-
lutional neural networks. In Proc. ICCV, 2017. 3

[24] Xiangyu Zhu, Zhen Lei, Xiaoming Liu, Hailin Shi,
and Stan Z. Li. Face alignment across large poses: A
3D solution. In Proc. CVPR, 2016. 6

[25] Xiangyu Zhu, Zhen Lei, Junjie Yan, Dong Yi, and
Stan Z. Li. High-ﬁdelity pose and expression nor-
malization for face recognition in the wild. In Proc.
CVPR, 2015. 6

[26] Xiangyu Zhu, Xiaoming Liu, Zhen Lei, and Stan Z.
Li. Face alignment in full pose range: A 3D total so-
lution. IEEE TPAMI, 2019. 3

4609

