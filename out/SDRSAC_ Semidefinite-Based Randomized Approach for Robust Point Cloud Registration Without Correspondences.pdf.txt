SDRSAC: Semideﬁnite-Based Randomized Approach for
Robust Point Cloud Registration without Correspondences

Huu M. Le1, Thanh-Toan Do2

,

3, Tuan Hoang1, and Ngai-Man Cheung1

1Singapore University of Technology and Design 2University of Liverpool 3AIOZ Pte Ltd

Abstract

This paper presents a novel randomized algorithm for
robust point cloud registration without correspondences.
Most existing registration approaches require a set of pu-
tative correspondences obtained by extracting invariant de-
scriptors. However, such descriptors could become unreli-
able in noisy and contaminated settings. In these settings,
methods that directly handle input point sets are preferable.
Without correspondences, however, conventional random-
ized techniques require a very large number of samples in
order to reach satisfactory solutions. In this paper, we pro-
pose a novel approach to address this problem. In partic-
ular, our work enables the use of randomized methods for
point cloud registration without the need of putative cor-
respondences. By considering point cloud alignment as a
special instance of graph matching and employing an efﬁ-
cient semi-deﬁnite relaxation, we propose a novel sampling
mechanism, in which the size of the sampled subsets can be
larger-than-minimal. Our tight relaxation scheme enables
fast rejection of the outliers in the sampled sets, resulting
in high quality hypotheses. We conduct extensive experi-
ments to demonstrate that our approach outperforms other
state-of-the-art methods. Importantly, our proposed method
serves as a generic framework which can be extended to
problems with known correspondences. 1

1. Introduction

Point cloud registration is important in many computer
vision applications, including range scan alignment [37],
3D object recognition and localization [18, 48], large scale
reconstruction [2, 44]. Given two sets of points in three-
dimensional (3D) Euclidean space, the objective is to search
for the optimal rigid transformation, which comprises a ro-
tation matrix R∗ ∈ SO(3) and a translation vector t∗ ∈ R3,
that optimally aligns the two input point sets.
In many
practical applications, the input data contains a signiﬁcant
amount of noise. Moreover, the overlapping region between

1Source code is available at: https://github.com/intellhave/SDRSAC.

the two point sets can be small, resulting in a large number
of outliers, i.e., non-overlapping points. Therefore, the reg-
istration needs to be conducted in a robust manner so that
the ﬁnal estimates are not affected by the contamination.
i=1 and D = {dj ∈ R3}Nd
Formally, let S = {si ∈ R3}Ns
j=1
denote the source and destination (target) point clouds, re-
spectively, the problem of robust rigid registration can be
formulated as

min

R∈SO(3),t∈R3

Ns

Xi=1

ρ (kRsi + t − djk) ,

(1)

where the notation k · k represents the ℓ2 norm, dj is a point
in the target set D that is closest to the transformed point
Rsi + t, i.e.,

dj = arg min
dk ∈D

kRsi + t − dkk,

(2)

and ρ is a robust loss function. Here, SO(3) denotes the
space of rotation matrices. In order for the registration to be
robust, ρ is typically chosen from a set of robust kernels [27,
1, 33]. In this work, we make use of the popular maximum
consensus criterion [26], in which ρ is deﬁned as

ρ(x) =(0 if x ≤ ǫ,

1 otherwise.

(3)

The threshold ǫ > 0 is a user-deﬁned parameter that speci-
ﬁes the maximum allowable distance for a correspondence
pair to be considered as an inlier.
Intuitively, by solv-
ing (1) with ρ deﬁned as per (3), we search for the optimal
alignment (R∗, t∗) that maximizes the set of overlapping
points, where si ∈ S overlaps dj ∈ D if the transforma-
tion (R∗, t∗) brings si to a new location that lies within the
ball (dj, ǫ). The problem (1) is an active research topic in
computer vision due to its computational complexity.

Many existing algorithms need to take as input a set
of putative correspondences, which are usually obtained
(as a pre-processing step) by extracting local invariant fea-
tures on the given point sets, and executing multiple rou-
tines of nearest neighbor search to propose initial key-

1124

point matches [5, 25]. Several types of 3D local fea-
tures [45, 15, 52, 43] have demonstrated to provide promis-
ing results throughout a variety of challenging datasets.
However, noise and contamination would degrade the qual-
ity of extracted features. Furthermore, in order for the lo-
cal features to be precisely computed, many feature extrac-
tors require the surface representation to be dense; however,
sparse point clouds are common in practice. In particular,
it has been demonstrated in [4] that, for noisy datasets with
high proportion of outliers, alignments using features have
poorer results compared with using raw data. Therefore,
there is interest to develop registration algorithms that di-
rectly align raw point cloud data without the need of a priori
correspondences [11, 4, 9, 36, 21].

Due to the computational complexity of the problem
under different input settings, randomized hypothesize-
and-verify algorithms such as RANSAC [22] and its vari-
ants [17, 16, 47, 46, 42, 32] are popular approaches. Ran-
domized techniques have been employed to address prob-
lems with known correspondences. On the other hand, sim-
ilar random sampling strategy as that of RANSAC can also
be applied to problems of without correspondences. Specif-
ically, at each iteration, a minimal subset (of three points) on
each point cloud can be sampled to form three pairs of cor-
respondences, which are used for estimating and validating
one hypothesis. Such procedure can then be repeated un-
til a satisfactory solution is obtained. However, with noise
and outliers, the likelihood of picking outlier-free subsets
degrades rapidly. Therefore, much efforts have been de-
voted to develop better sampling strategies, notably the 4-
Points Congruent Sets (4PCS) method proposed in [4] and
its improved variant [38]. Although 4PCS provides consid-
erable advantages over conventional randomized methods,
the enumeration of (approximately) congruent sets that un-
derpins this algorithm is the main issue when working with
point clouds with large number of points and high outlier
rates. In fact, for dense point clouds, 4PCS and its variants
need to down-sample the point cloud before conducting the
sampling process to reduce processing time.

In this paper, we address the above-mentioned limita-
tions. Speciﬁcally, by employing a special instance of
graph matching formulation, we propose a new larger-than-
minimal sampling strategy for point cloud registration with-
out correspondences. The advantage of our method is that
the task of searching for correspondences is quickly approx-
imated by solving a relaxed convex problem, rather than
subset enumeration. This allows us to sample subsets with
arbitrarily large size, in which sets of correspondences are
obtained from solutions of convex semi-deﬁnite program-
ming. These correspondences can then be used for estimat-
ing and validating hypotheses. A large subset of points in
the source point cloud represent better its structure, and by
identifying its corresponding points on the target set, the

two point clouds can be coarsely align faster, which can
then be reﬁned by local methods, e.g., ICP [8]. Empirical
results show that the proposed method is very competitive.
Our main contributions are:

• We apply graph matching for the registration problem
without correspondences using a novel cost function
to enforce robustness and a tight semideﬁnite (SDP)
relaxation.

• From the SDP formulation, we then develop a new
larger-than-minimal subset sampling scheme, leading
to an effective randomized algorithm that outperforms
other state-of-the-art methods.

2. Related Work

In practice, if the two input point clouds are coarsely
aligned, the well-known Iterative Closest Point (ICP) [8]
is commonly employed. Like other iterative algorithms,
ICP alternates between establishing correspondences and
estimating the transformation. The main drawback of this
method lies in the fact that it requires a good starting point
(initial pose) to prevent itself from converging to poor align-
ments. Additionally, in terms of robustness, ICP suffers
from the same weakness as that of the least squares esti-
mator, i.e., it is easily biased by erroneous outliers. Sev-
eral works [13, 7, 40] have been proposed to improve the
such shortcomings of ICP. However, these variants still need
to be bootstrapped by a descent initial pose. ICP is there-
fore commonly employed as a local reﬁnement procedure,
which is executed after the point clouds are roughly regis-
tered by some type of global alignment algorithms.

Algorithms that offer globally optimal solutions are
also actively developed in the literature. To address the
initialization-dependent issue of ICP, Go-ICP [50] employs
the branch and bound strategy to search in the space of R
and t for the optimal transformation. However, due to the
least squares objective of Go-ICP, its returned optimal so-
lutions are still non-robust to outliers. The robustness of
Go-ICP can be improved by incorporating robust loss func-
tions in place of least squares. Another globally optimal
algorithm to tackle the robust registration without corre-
spondences was proposed by Bustos et al. [11]. Unlike
Go-ICP, [11] solves (1) directly and its solution is robust
to outliers. Branch and bound is also the mechanism be-
hind [11], with a novel steographic projection implementa-
tion for fast matching query and tighter bound computation.
Although the convergence to globally optimal solutions is
guaranteed for these methods, they are still impractical for
large datasets due to their expensive computational cost.

As previously mentioned, in some point cloud registra-
tion applications, randomized strategies – with the famous
RANSAC [22] representative – are still the dominant ap-
proaches. Our work also belongs to this category. Gener-

125

ally speaking, for most randomized methods, the underlying
sampling strategy signiﬁcantly affects the run time, since
the termination of a sampling mechanism depends largely
on its ability to quickly identify outlier-free subsets. For
the case with no correspondences, it is even harder since
two outlier-free subsets, one in each input point cloud, need
to be identiﬁed and the elements in these two subsets must
form correct correspondences. Different sampling strate-
gies have been proposed in the literature [17, 16, 49]. For
instance, in problems with known correspondences, one of
the notable improvements for RANSAC is LO-RANSAC
(Locally Optimal RANSAC) [17], which proposes to sam-
ple larger-than-minimal subsets when RANSAC solution is
updated. This improved strategy has been shown to sig-
niﬁcantly outperform conventional RANSAC. Randomized
methods can also be improved using local reﬁnement tech-
niques [31, 12, 41].

In the context of robust point cloud alignment without
correspondences, however, the idea of larger-than-minimal
sampling has yet to be thoroughly explored. Unlike the
case of known correspondences, the “inlier” set at each
RANSAC iteration may not be true inliers, and purely ap-
plying LO-RANSAC to these subsets may not be of any
help, while the run time is increased. Besides, even if true
inliers reside in the subset, a larger-than-minimal subset
may be contaminated with outliers, which can deteriorate
the estimation since it is done solely by solving least squares
over the sampled subsets. From the insight discussed above,
it can be seen that from any larger-than-minimal subsets, if
the outliers are efﬁciently rejected, the ability to discover
good hypotheses can be accelerated. This idea is analyzed
in our paper, in which we propose a new algorithm that en-
ables the sampling of any arbitrarily large subsets. Such
sampling scheme is incorporated with an oracle that allows
the outliers in the sampled point sets to be efﬁciently dis-
carded. Our experiments show that this newly-proposed al-
gorithm outperforms previous approaches.

Our work is closely related to 4PCS [3], which is the
state-of-the-art sampling approach that also solves the same
problem as ours. Instead of randomly picking minimal sub-
sets of three points, 4PCS works on sampled tuples of four
co-planar points. This method is later improved by Su-
per4PCS [38], where the complexity of congruent set ex-
traction is reduced from quadratic to linear with respect to
the number of points. Though efﬁcient, especially with the
improvements introduced in [38], 4PCS still suffers from
the same weakness as RANSAC, e.g., the low likelihood of
quickly sorting out the right subsets under the presence of
high outliers. In fact, for each subset of 4 co-planar points
on one point cloud, 4PCS needs to enumerate all congru-
ent subsets on the other point cloud. Therefore, this method
needs to subsample the point set into a smaller subset before
the sampling is conducted.

The technique developed in this work is also inspired by
the class of methods that solve 3D registration problem us-
ing graph matching [21, 35, 34] and recent semi-deﬁnite
relaxation for non-rigid registration [19, 28, 30]. These al-
gorithms, however, can only work for a small number of
data points, which is very inefﬁcient if applied directly on
large point clouds. We, on the other hand, propose to em-
ploy graph matching as sub-problems embedded in a ran-
dom sampling framework. This allows us to combine the
strengths of both classes of methods, i.e., randomized tech-
niques and graph matching, to derive an efﬁcient sampling
mechanism for point cloud registration.

3. Semideﬁnite-Based Randomized Approach

3.1. The Correspondence Problem

When the putative correspondences are not given, the
task of solving (1) can be viewed as jointly estimating the
transformation (R∗, t∗) and the best subset of correspon-
dences C ∗. Hence, if C ∗ is provided, the optimal align-
ment can be computed in a straightforward manner, and
vice versa. With that in mind, in this section, we ﬁrst in-
troduce the correspondence problem to search for C ∗.
In
the latter sections, we then discuss its semideﬁnite (SDP)
relaxation, which can be employed as a fast hypothesis gen-
eration mechanism that lies at the core of our efﬁcient ran-
domized algorithm.

To simplify the formulation, let us for now assume that
we are given two 3D point sets P = {pi}N
i=1 and Q =
{qj}N
j=1, each contains N data points. The task is to ﬁnd
the optimal set of correspondences C ∗
PQ that can be used to
robustly align P and Q. Note that we use different notations
for input data here compared to (1), since this new problem
will be used as sub-problem for solving (1), which will be
clariﬁed in the latter sections.

Let X ∈ {0, 1}N ×N be the permutation matrix in which
the element at the i−th row and j−th column (denoted by
Xi,j ) is assigned the value of 1 if the pair pi ∈ P and qj ∈
P belongs to the set of correspondences and 0 otherwise. To
account for outliers, let us further assume that the optimal
solution contains m ≤ N pairs of correspondences. The
value of m can be chosen to be greater than or equal to 3
(the size of the minimal subset), or estimated based on the
known outlier ratio of the problem at hand. Note that with
the introduction of m, X is now a sub-permutation matrix.
Denote by ˆX the vectorization of the matrix X obtained by
stacking its columns:

ˆX = [XT

:,1 XT

:,2 . . . XT

:,N ]T ,

(4)

where X:,j denotes the j−th column of X.
In order to
search for the best correspondence assignments, consider

126

the following optimization problem:

max

X

ˆXT A ˆX,

(5a)

subject to Xi,j ∈ {0, 1} ∀i, j ∈ {1, . . . , N },

(5b)

N

Xi,j ≤ 1 ∀i ∈ {1, . . . , N },

(5c)

Xi,j ≤ 1 ∀j ∈ {1, . . . , N },

(5d)

designed based on the fact that if pa ∈ P corresponds to
qb ∈ Q and pc ∈ P corresponds to qd ∈ Q, since the
transformation is rigid, the lengths of the two line segments
papc and qbqd must be approximately the same (due to the
effect of noise). With the new formulation (6), instead of
assigning the matching potentials to all the elements of A,
we only allow pairs of segments whose lengths differ by a
small value γ to be considered as candidate for matching,
while pairs having large gap are rejected.

3.2. Semideﬁnite Relaxation

Xi,j = m,

N

Xj=1

(5e)

Let us ﬁrst consider the equivalent formulation of (5).

Let Y = ˆX ˆXT ∈ RN 2×N 2

, the problem (5) becomes

N

Xj=1
Xi=1
Xi=1

N

where A ∈ RN 2×N 2
is the symmetric matrix that charac-
terizes the matching potentials between pairs of points (line
segments) in P and Q. In particular, we deﬁne the elements
of the matrix A as

max
X,Y

subject to

trace(AY),

Y = ˆX ˆXT ,
trace(Y) = m,
0 ≤ Xi,j ≤ 1 ∀i, j,
(5c), (5d), (5e).

(7a)

(7b)

(7c)

(7d)

(7e)

Aab,cd =(f (pa, pc, qb, qd) if|δ(pa, pc) − δ(qb, qd)| ≤ γ,

otherwise,

0

(6)
where a, b, c, d ∈ {1..N } are point indexes, ab = a + (b −
1)N and cd = c + (d − 1)N are the indexes for the row
and column of A, respectively; pa, pc ∈ P; qb, qd ∈ Q;
γ > 0 is a predeﬁned threshold and δ(p1, p2) computes the
Euclidean distance between two 3D points p1 and p2; f is
a function that takes as input two pairs of points (pa, pc)
and (qb, qd) and outputs a scalar that represents matching
potential for these two pairs. Typically, f in (6) is chosen
to be the function that penalizes the difference in length be-
tween the two line segments. For simplicity, we choose f
to be exp(−|δ(pa, pc) − δ(qb, qd)|).

The constraints in (5) are to assure that X must lie in
the space of permutation matrices. Speciﬁcally, besides the
binary constraint (5b) to restrict Xi,j ∈ {0, 1}, it is also
required that each point pi ∈ P can only be assigned to at
most one point in Q and vice versa, which is reﬂected by the
constraints (5c) and (5d). Finally, by enforcing (5e), the op-
timal solution of (5) will only contain m pairs of correspon-
dences. The solution to (5) provides the optimal assignment
such that the sum of matching potentials gained yield from
the corresponding pairs is maximized.

While the use of graph matching has been explored in
several rigid and non-rigid registration problems [21, 35,
30, 28], most previous work consider solving graph match-
ing for the whole input data, which is infeasible for large
datasets. This work proposes to solve graph matching on
very small subsets of points, then embed them into a ran-
dom sampling framework. Additionally, we also propose
an better formulation of the matrix A for the special case
of robust rigid registration. Particularly, the matrix A is

Note that in (7), the constraint (5b) can be removed with-
out affecting the equivalence between (7) and (5). Indeed,
i,j = m. On

since trace(Y) = m, it must hold thatPi,j X2
the other hand, due to the constraint (5e), Pi,j Xi,j = m.
These conditions result in Pi,j X2
i,j = Pi,j Xi,j . Also,

due to the condition 0 ≤ Xi,j ≤ 1, Xi,j can only be ei-
ther 0 or 1. In other word, X can now be constrained in the
convex hull of the sub-permutation matrices [39].

By introducing Y, the problem is lifted into the domain
of RN 2×N 2
and the binary constraint of X can be relaxed
without changing the solution of the problem. However,
the problem (7) is still non-convex due to the rank-one con-
straint (7b).
In order to approximate (7), we employ the
common convex relaxation approach, in which (7b) is re-
laxed to the semideﬁnite constraint Y − ˆX ˆXT (cid:23) 0. Then,
we arrive at the following convex optimization problem:

max
X,Y

subject to

trace(AY),

Y − ˆX ˆXT (cid:23) 0,
(5c), (5d), (5e), (7c), (7d).

(8a)

(8b)

(8c)

The problem (8) introduced above is a convex semideﬁnite
program (SDP), whose globally optimal solution can be ob-
tained using many off-the-shelf SDP solvers. In this work,
we use SDPNAL+ [51] throughout all the experiments.

3.2.1 Tightening the Relaxation

As (8) is solved as an approximation for (7) with rank-one
constraint, one would expect that the two solutions to be as

127

close as possible. Inspired by [30], we add the following
constraints to (8) to tighten the relaxation:

with the highest scores are chosen as the approximate solu-
tion for (5). This approach has been empirically shown to
be very efﬁcient throughout our experiments.

0,

if a = c, b 6= d,

0,
min(Xab, Xcd),

if b = d, a 6= c,

(9)

3.4. Main Algorithm

otherwise.

Yab,cd ≤


The intuition behind (9) is that one point in S is not al-
lowed to match with more than one point in D and vice
versa. Also, since Yab,cd = XabXcd and these are binary
numbers, it must hold that Yab,cd ≤ min(Xab, Xcd).

In addition, thanks to the special case of robust registra-
tion, (8) can be further tightened. Observe that, based on
the discussion of formulating the matrix A, the following
constraints can be enforced:

Yab,cd = 0 if Aab,cd = 0,

(10)

which means if the pairs papc and pbpd differ too much
in length (more than γ , we directly disallow them to be
matched.

Finally, with the addition of (9) and (10), our SDP relax-

ation becomes:

max
X,Y

trace(AY)

(11a)

subject to

(8b), (7c), (7d), (8c), (9), (10)

(11b)

Note that (11) is still a convex SDP since the additional con-
straints (9) and (10) are linear.

3.3. Projection of Solutions to Permutation Matrix

After solving (11) up to its global optimality using a con-
vex solver, the remaining task is to project its solution back
to the space of permutation matrices. This task can be done
using different strategies [23]. In this work, we apply the
linear assignment problem [10], in which the projection can
be computed efﬁciently by solving a linear program (LP).
Speciﬁcally, let ˜X be the optimal solution of (11). The LP
for projection can be formulated as

max

X

hX, ˜Xi

subject to 0 ≤ Xi,j ≤ 1 Xi

Xi,j = 1, Xj

Xi,j = 1

(12)

where h·, ·i represents the inner product of two matrices.

The solution of (12) provides us with a set of N corre-
spondences. However, in (5), we only want to pick m pairs.
To tackle this with a simple heuristic, observe that in the
optimal solution X∗ of (5), only m rows/columns of X∗
contain the value of 1, while the rest of the rows/columns
contain all zeros. Therefore, from correspondence set ob-
tained from (12), we associate each pair of correspondence
(pi, qj) with a score that is equal to ˜Xi,j . Finally, m pairs

Algorithm 1 SDRSAC
Require: Input
data

inner iters,

S

max iter,
size of sampled subsets Nsample

and D,

1: iter← 0; best score← 0;
2: while iter< max iter do
3:

S ′ ← Randomly sample Nsample points from S
for t = 1 to inner iters do

4:

5:

6:

7:

8:

9:

10:

11:

12:

13:

14:

D′ ← Randomly sample Nsample points from D
{M, R, t} ← SDRMatching (S, D, S ′, D′)
/*Described in Alg. 2 */
if |M| > best score then

best score← |M|; R∗ ← R; t∗ ← t

end if
end for
iter← iter+ inner iters
T ← Number of iterations that satisﬁes the proba-
bilistic stopping criteria (Sec. 3.5)
if iter≥ T then

return

end if

15:
16: end while
17: return Best transformation (R∗, t∗), best score

Algorithm 2 SDRMatching
Require: Input data S and D, sampled subsets S ′ and D′,

threshold ǫ.

1: A ← Matrix generated using Eq. (6) with P = S ′ and

Q = D′

2: ˜X ← Solve (11) with A generated from Step 1.
3: X ← Solve (12) with ˜X obtained from Step 2.
4: M′ ← {(s′
5: ( ˜R, ˜t) ← Estimate transformation based on correspon-

j ∈ D′)|Xi,j = 1}

i ∈ S ′, d′

dence set M′ [20, 29].

6: (R, t) ← Reﬁnement using ICP, initialized by ( ˜R, ˜t)
7: M ← {(si ∈ S, dj ∈ D) | kRsi + t − djk ≤ ǫ}

/*dj is deﬁned in (2) */

8: return M, R, t

Although (11) is convex, solving it for large value of N
is inefﬁcient since the lifted variable Y belongs to the do-
main of RN 2×N 2
. However, for a small value of N (typi-
cally, N ≤ 20), this problem can be optimized efﬁciently
and (11) provides a good approximation for the original
problem (7). Taking advantage of this observation, one can

128

develop a sampling approach where the number of points
in each sample can be of any size, up to the limit that the
employed solver can handle (11) efﬁciently. More specif-
ically, at each iteration, two subsets of points S ′ ⊆ S and
D′ ⊆ D are randomly sampled from S and D, respectively.
The cardinality of S ′ and D′ can be controlled depending
on the capability of the employed convex solver. By solv-
ing (11), the outliers in the sampled subsets can be rejected
and the best subset in each sample is retained for estimating
the transformation. Like other randomized paradigms, this
process can be repeated after a ﬁxed number of iterations
or until the stopping criteria is satisﬁed. The insight be-
hind this strategy is that by sampling large subsets at each
iteration, one is more likely to encounter the right subsets
that contains inliers, since if any sampled subset is contam-
inated, the outliers can be rejected efﬁciently by solving the
SDP approximation discussed in Section 3.1. Algorithm 1
summarizes our method.

3.5. Stopping Criterion

We follow [4] to derive our stopping criterion. Let us
denote by pI be the probability of selecting one inlier (cor-
rect correspondence pair), and by T the number of trials.
Note that from statistics [24], the expected inlier rate in a
sample of size Nsample is also pI . Moreover, after running
Alg. 2, only m pairs of correspondences remain, allowing
us to compute the stopping criterion based on m. Denote
by pf the probability that the algorithm fails to ﬁnd an all-
inlier correspondence set after T trials, pf can be computed
as

pf = (1 − pm

I )T ,

(13)

Therefore, in order to get a success probability to be greater
than ps, we must have the number of iterations greater than

T ≥

log(1 − ps)
log(1 − pm
I )

.

(14)

Since the real inlier rate pI is not known in advance, fol-
lowing common practice of several randomized methods,
we update this value during the sampling process, i.e., pI is
iteratively updated using the inlier ratio of the current best-
so-far solutions.

4. Experimental Results

To evaluate the performance of our proposed algo-
rithm (SDRSAC), we conduct experiments on multiple sets
of synthetic and real datasets and compare our approach
against several state-of-the-art algorithms that can be used
to solve point cloud registration without correspondences,
including ICP [8], Trimmed ICP (TrICP) [13], Iteratively
Re-weighted Least Squares (IRLS) [6], 4PCS [4] and its
improvement Super4PCS [38]. Within the class of globally

optimal algorithms, we also compare SDRSAC against Go-
ICP [50] and its robust version with trimming (TrGoICP).
Note that conventional RANSAC method [22] performs
poorly for this type of problem, and in many cases it turns
into a brute-force type algorithm. Thus, to save space, we
only show results from established methods listed above.

As we focus on validating the effectiveness of robust
global registration, throughout the experiments, we measure
and report the number of matches (objective function of (1))
and run time for each method.

All experiments are executed on a standard Ubuntu ma-
chine with 16GB of RAM. SDRSAC, ICP, TrimmedICP
were implemented using MATLAB. For 4PCS, Su-
per4PCS [38], Go-ICP [50], we use the released C++ code
and the parameters suggested by the authors. All results
of randomized methods are reported by averaging the out-
comes obtained from 20 different runs. In the following, we
only report representative results. More results, implemen-
tation details and extensions to the case with known corre-
spondences can be found in the supplementary material.

4.1. Synthetic Data

We ﬁrst evaluate the performance of SDRSAC on syn-
thetically generated data. The bunny point cloud from the
Stanford dataset2 is loaded and uniformly sampled to yield
a source point cloud S containing Ns = 10, 000 points. To
generate the target set D, we apply a random transforma-
tion ( ˜R, ˜t) to S. Each point in D is then perturbed with a
Gaussian noise of zero mean and variance of σnoise = 0.01.
To simulate partial overlapping, we randomly pick and re-
move r% of the points in D. In order to evaluate the perfor-
mance of the algorithms with different outlier ratios, we re-
peat the experiments with r = 10, 15, . . . , 50%. The thresh-
old ǫ in (3) was chosen to be 0.01 for all the methods. For
SDRSAC, we choose the sample size to be Nsample= 16,
and m = 4. (The choice of Nsample and m will be stud-
ied in Sec. 4.3). Figure 1 shows the number of matches
(inliers) and run time for all the methods.
It is evident
that SDRSAC outperforms other methods in terms of cor-
respondences obtained with faster (or comparable) execu-
tion time. Note that the run time of SDRSAC is very close
to Super4PCS, though SDRSAC consistently attains higher
solution quality. The performance of ICP, as anticipated, is
unstable due to the effect of initialization (i.e., wrong initial-
ization may lead to poor convergence), as shown in Fig. 1.
Moreover, as the outlier ratio increases, the consensus sizes
produced by most ICP-based methods are poor due to their
non-robustness.

4.2. Real Data

In this section, we evaluate the performance of our pro-
posed method on real datasets and compare it with existing

2http://graphics.stanford.edu/data/3Dscanrep/

129

Figure 1. Results for experiments with synthetic data. Left: Number of correspondences (Objective of (1)). Right: Run time (in log scale).

Pairs

SDRSAC 4PCS

S-4PCS

ICP

TrICP

IRLS GoICP

TrGoICP

Ofﬁce1 1,2

Ofﬁce1 8, 9

Ofﬁce1 15, 16

Ofﬁce1 51, 52

Living1 1, 2

Living1 25, 26

Living1 54, 55

Living1 32, 33

#Corrs
Time(s)
#Corrs
Time(s)
#Corrs
Time(s)
#Corrs
Time(s)
#Corrs
Time(s)
#Corrs
Time(s)
#Corrs
Time(s)
#Corrs
Time(s)

6990
8.69
4353
9.53
4992
7.56
4490
10.05
5817
8.34
4768
9.27
5558
9.2
5570
8.32

5922
11.18
4184
15.08
4954
15.95
2998
15.45
5602
15.09
3615
15.07
5155
15.05
5459
15.15

6388
10.05
2901
15.06
4933
15.45
3714
15.03
4590
15.39
4327
15.95
5433
15.65
3269
15.23

2433
4.69
2132
4.44
655
4.35
60
4.29
3609
4.26
1350
4.34
4104
4.29
2028
4.65

4455
4.35
1205
4.45
487
4.63
612
4.55
4599
4.96
1364
4.42
4783
4.32
1519
4.44

2429
3.16
2125
4.06
673
4.19
178
4.39
4016
5.13
4240
4.35
4009
5.19
2808
5.1

2664
50.9
2253
63.2
1513
60.3
554
60.5
4060
32.5
4398
65.3
5120
61.2
2334
34.6

6828
33.4
4101
38.3
1413
37.6
848
38.5
5655
35.6
4567
36.1
5250
35.9
5319
33.3

Table 1. Results for real data experiments. For each pairs, the ﬁrst row is the number of correspondences (#Corrs) and the second row
shows the run time in second. Note that S-4PCS represent Super4PCS.

approaches. The input point clouds for this experiment are
obtained from the challenging Redwood 3D dataset [14].
We randomly pick eight pairs of point clouds from the Of-
ﬁce and Living Room repository, then uniformly sampled
the point sets to obtain 10, 000 points on each input set. The
input threshold ǫ in (3) was chosen to be in the range of 0.01
to 0.05 and for each set of input data, ǫ was chosen to be the
same for all benchmarking methods.

Table 1 shows the number of matches and run time for
each method. The sample qualitative results are displayed
in Figure 2. As can be seen, on average, SDRSAC ob-
tains higher matches compared to other competitors. We
also observe that local methods such as ICP or IRLS can
sometimes converge fast to very good results, but are un-
stable due to the effect of bad initializations. The robust
version TrGo-ICP performs slightly better than Go-ICP, but

130

Figure 2. Examples of alignments using SDRSAC. From top to
bottom: Ofﬁce 8 and Ofﬁce 9; LivingRoom 1 and LivingRoom 2.

also fails in some cases due to high outlier ratios residing in
the input data.

4.3. Ablation Studies

This section analyzes the effect of different parameter
settings to the performance of our proposed method, and
suggest the choices for the hyperparameters.

4.3.1 Effect of Sample Size Nsample

Figure 3. Performance analysis for different values of Nsample.
Left: Consensus size, Middle:# Iterations, Right: Run time.

Fig. 3 plots the accuracy (consensus size), number of it-
erations (to satisfy the stopping criterion (14)), and the total
run time when Nsample increases from 8 to 18 and m = 4
for a synthetic dataset (generated as described in Sec. 4.1)
with N = 10, 000 and pI ≈ 30% (the plotted results are the
median over 20 runs). Our obtained results conform to sta-
tistical theory [24]. Speciﬁcally, the inlier rates in the sub-
sets of Nsample points have a mean of pI and standard devi-

Nsample

ation (SD) ofq pI (1−pI )

. From Fig. 3, we observe that for
small Nsample (Nsample< 16), the obtained consensus sizes
are low and the algorithm requires a large number of itera-
tions. In particular, if Nsample
is small, then SD of the in-
lier rates is large among sampled subsets, thus some subsets
may be contaminated with large numbers of outliers, which
affects the quality and stability of our algorithm. When
16 ≈ 0.1, hence the
inlier rates vary only slightly among subsets, leading to a
stable performance, as shown in Fig. 3 (left, middle). While
it is good to use large Nsample
from the statistical point of
view, SDP solver would take more time at each iteration for
large Nsample , resulting in longer overall run time as shown
in Fig. 3 (right). Empirically, we found that Nsample = 16
provides a good trade-off between algorithm stability (ac-
curacy) and run time in many settings.

Nsample reaches around 16, SD isq 0.3∗0.7

4.3.2 Effect of m

This experiment is conducted to study on the effect of m
(introduced in Sec. 3.1) on the solution quality and run time
of our approach. We repeat the experiment for a synthetic
dataset containing N = 5, 000 points per point cloud with
10% outliers. The sample size Nsample is set to 16. All
results are obtained as median over 20 runs. Fig. 4 (left)
plots the number of inliers obtained at termination (using

the stopping criterion (14)). Observe that the performance
is quite stable at different values of m, which demonstrates
the effectiveness of SDP to reject outliers and the strengths
of our proposed sampling scheme.
In Fig. 4 (right), we
also plot the run time required until termination. Appar-
ently, although the solution qualities for different values of
m are similar as discussed above, the run time is affected by
m. Speciﬁcally, as m increases, SDRSAC takes more itera-
tions before the stopping criterion (14) is met. This can be
explained by recalling from (13) that large m increase the
failure probability pf . Moreover, for any sampled subset,
the expected number of inliers is Nsample × pI , hence if m
is larger than this value, outliers may be included. In our
experiments, the choice of m = 4 works best in most sce-
narios (the minimal case of m = 3 may not be very stable
due to noise in 3D data points and the 3 correspondences
could be near each other spatially).

Figure 4. Plots of consensus sizes (left) and run times (right) over
different values of m.

5. Conclusions

We have presented a novel and efﬁcient randomized ap-
proach for robust point cloud registration without corre-
spondences. We apply graph matching formulation for the
correspondence problem. We propose a novel cost function
and a tight SDP relaxation scheme. We embed the formu-
lation into a new sampling strategy which samples larger-
than-minimal subsets. Extensive experiments with several
synthetic and real datasets show that our algorithm is com-
petitive. Our framework can also be extended for the prob-
lems with known correspondences.

Acknowledgement

This work was supported in part by both ST Electronics
and the National Research Foundation(NRF), Prime Minis-
ter’s Ofﬁce, Singapore under Corporate Laboratory @ Uni-
versity Scheme (Programme Title: STEE Infosec - SUTD
Corporate Laboratory).

References

[1] Khurrum Aftab and Richard Hartley. Convergence of iter-
atively re-weighted least squares to robust m-estimators. In
Applications of Computer Vision (WACV), 2015 IEEE Winter
Conference on, pages 480–487. IEEE, 2015.

131

[2] Sameer Agarwal, Yasutaka Furukawa, Noah Snavely, Ian Si-
mon, Brian Curless, Steven M Seitz, and Richard Szeliski.
Building rome in a day. Communications of the ACM,
54(10):105–112, 2011.

[3] Sameer Agarwal, Noah Snavely, and Steven M Seitz. Fast
algorithms for l problems in multiview geometry. In Com-
puter Vision and Pattern Recognition, 2008. CVPR 2008.
IEEE Conference on, pages 1–8. IEEE, 2008.

[4] Dror Aiger, Niloy J Mitra, and Daniel Cohen-Or. 4-points
In
congruent sets for robust pairwise surface registration.
ACM Transactions on Graphics (TOG), volume 27, page 85.
ACM, 2008.

[5] Aitor Aldoma, Zoltan-Csaba Marton, Federico Tombari,
Walter Wohlkinger, Christian Potthast, Bernhard Zeisl,
Radu Bogdan Rusu, Suat Gedikli, and Markus Vincze. Tuto-
rial: Point cloud library: Three-dimensional object recogni-
tion and 6 dof pose estimation. IEEE Robotics & Automation
Magazine, 19(3):80–91, 2012.

[6] Per Bergstr¨om and Ove Edlund. Robust registration of point
sets using iteratively reweighted least squares. Computa-
tional Optimization and Applications, 58(3):543–561, 2014.
[7] Per Bergstr¨om and Ove Edlund. Robust registration of sur-
faces using a reﬁned iterative closest point algorithm with
a trust region approach. Numerical Algorithms, 74(3):755–
779, 2017.

[8] Paul J Besl and Neil D McKay. Method for registration of
3-d shapes.
In Sensor Fusion IV: Control Paradigms and
Data Structures, volume 1611, pages 586–607. International
Society for Optics and Photonics, 1992.

[9] Thomas M Breuel. Implementation techniques for geometric
branch-and-bound matching methods. Computer Vision and
Image Understanding, 90(3):258–294, 2003.

[11]

[10] Rainer E Burkard and Eranda Cela. Linear assignment prob-
In Handbook of combinatorial opti-

lems and extensions.
mization, pages 75–149. Springer, 1999.
´Alvaro Parra Bustos, Tat-Jun Chin, Anders Eriksson, Hong-
dong Li, and David Suter. Fast rotation search with stereo-
graphic projections for 3d registration.
IEEE Transactions
on Pattern Analysis and Machine Intelligence, 38(11):2227–
2240, 2016.

[12] Zhipeng Cai, Tat-Jun Chin, Huu Le, and David Suter. De-
terministic consensus maximization with biconvex program-
ming. In Proceedings of the European Conference on Com-
puter Vision (ECCV), pages 685–700, 2018.

[13] Dmitry Chetverikov, Dmitry Svirko, Dmitry Stepanov, and
Pavel Krsek. The trimmed iterative closest point algorithm.
In Pattern Recognition, 2002. Proceedings. 16th Interna-
tional Conference on, volume 3, pages 545–548. IEEE, 2002.
[14] Sungjoon Choi, Qian-Yi Zhou, and Vladlen Koltun. Robust
reconstruction of indoor scenes. In Computer Vision and Pat-
tern Recognition (CVPR), 2015 IEEE Conference on, pages
5556–5565. IEEE, 2015.

[15] Chin Seng Chua and Ray Jarvis. Point signatures: A new
representation for 3d object recognition. International Jour-
nal of Computer Vision, 25(1):63–85, 1997.

[16] Ondrej Chum and Jiri Matas. Matching with prosac-
progressive sample consensus. In 2005 IEEE Computer So-

ciety Conference on Computer Vision and Pattern Recogni-
tion (CVPR’05), volume 1, pages 220–226. IEEE, 2005.

[17] Ondˇrej Chum, Jiˇr´ı Matas, and Josef Kittler. Locally opti-

mized ransac. In DAGM. Springer, 2003.

[18] Bertram Drost, Markus Ulrich, Nassir Navab, and Slobodan
Ilic. Model globally, match locally: Efﬁcient and robust 3d
object recognition. In Computer Vision and Pattern Recog-
nition (CVPR), 2010 IEEE Conference on, pages 998–1005.
Ieee, 2010.

[19] Nadav Dym, Haggai Maron, and Yaron Lipman. Ds++: a
ﬂexible, scalable and provably tight relaxation for match-
ing problems.
ACM Transactions on Graphics (TOG),
36(6):184, 2017.

[20] David W Eggert, Adele Lorusso, and Robert B Fisher. Esti-
mating 3-d rigid body transformations: a comparison of four
major algorithms. Machine vision and applications, 9(5-
6):272–290, 1997.

[21] Olof Enqvist, Klas Josephson, and Fredrik Kahl. Optimal
correspondences from pairwise constraints. In Computer Vi-
sion, 2009 IEEE 12th International Conference on, pages
1295–1302. IEEE, 2009.

[22] Martin A Fischler and Robert C Bolles. Random sample
consensus: a paradigm for model ﬁtting with applications to
image analysis and automated cartography. Communications
of the ACM, 24(6):381–395, 1981.

[23] Fajwel Fogel, Rodolphe Jenatton, Francis Bach, and Alexan-
dre d’Aspremont. Convex relaxations for permutation prob-
lems.
In Advances in Neural Information Processing Sys-
tems, pages 1016–1024, 2013.

[24] David Forsyth. Probability and Statistics for Computer Sci-

ence. Springer, 2018.

[25] Ran Gal and Daniel Cohen-Or. Salient geometric features
for partial shape matching and similarity. ACM Transactions
on Graphics (TOG), 25(1):130–150, 2006.

[26] Richard Hartley and Andrew Zisserman. Multiple view ge-
ometry in computer vision. Cambridge university press,
2003.

[27] Peter J Huber et al. Robust estimation of a location param-
eter. The Annals of Mathematical Statistics, 35(1):73–101,
1964.

[28] M Hullin, R Klein, T Schultz, and A Yao. Efﬁcient lifted

relaxations of the quadratic assignment problem. 2017.

[29] Wolfgang Kabsch. A solution for the best rotation to re-
late two sets of vectors. Acta Crystallographica Section A:
Crystal Physics, Diffraction, Theoretical and General Crys-
tallography, 32(5):922–923, 1976.

[30] Itay Kezurer, Shahar Z Kovalsky, Ronen Basri, and Yaron
Lipman. Tight relaxation of quadratic matching. In Com-
puter Graphics Forum, volume 34, pages 115–128. Wiley
Online Library, 2015.

[31] Huu Le, Tat-Jun Chin, and David Suter. An exact penalty
method for locally convergent maximum consensus. In Com-
puter Vision and Pattern Recognition (CVPR), 2017 IEEE
Conference on. IEEE, 2017.

[32] Huu Le, Tat-Jun Chin, and David Suter. Ratsac-random tree
sampling for maximum consensus estimation.
In 2017 In-
ternational Conference on Digital Image Computing: Tech-
niques and Applications (DICTA), pages 1–8. IEEE, 2017.

132

[33] Huu Le, Anders Eriksson, Michael Milford, Thanh-Toan Do,
Tat-Jun Chin, and David Suter. Non-smooth m-estimator for
maximum consensus estimation. 2018.

[34] D Khuˆe Lˆe-Huu and Nikos Paragios. Alternating direction
graph matching.
In 2017 IEEE Conference on Computer
Vision and Pattern Recognition (CVPR), pages 4914–4922.
IEEE, 2017.

[35] Marius Leordeanu and Martial Hebert. A spectral technique
for correspondence problems using pairwise constraints. In
Computer Vision, 2005. ICCV 2005. Tenth IEEE Interna-
tional Conference on, volume 2, pages 1482–1489. IEEE,
2005.

[36] Hongdong Li and Richard Hartley. The 3d-3d registration
problem revisited.
In Computer Vision, 2007. ICCV 2007.
IEEE 11th International Conference on, pages 1–8. IEEE,
2007.

[37] Feng Lu and Evangelos Milios. Globally consistent range
Autonomous

scan alignment for environment mapping.
robots, 4(4):333–349, 1997.

[38] Nicolas Mellado, Dror Aiger, and Niloy J Mitra. Super 4pcs
fast global pointcloud registration via smart indexing.
In
Computer Graphics Forum, volume 33, pages 205–215. Wi-
ley Online Library, 2014.

[39] NS Mendelsohn and AL Dulmage. The convex hull of sub-
permutation matrices. Proceedings of the American Mathe-
matical Society, 9(2):253–254, 1958.

[40] Jeff M Phillips, Ran Liu, and Carlo Tomasi. Outlier robust
icp for minimizing fractional rmsd. In 3-D Digital Imaging
and Modeling, 2007. 3DIM’07. Sixth International Confer-
ence on, pages 427–434. IEEE, 2007.

[41] Pulak Purkait, Christopher Zach, and Anders Eriksson. Max-
imum consensus parameter estimation by reweighted l1
methods.
In International Workshop on Energy Minimiza-
tion Methods in Computer Vision and Pattern Recognition,
pages 312–327. Springer, 2017.

[42] Rahul Raguram, Ondrej Chum, Marc Pollefeys, Jiri Matas,
and Jan-Michael Frahm. Usac: a universal framework for
random sample consensus.
IEEE transactions on pattern
analysis and machine intelligence, 35(8):2022–2038, 2013.
[43] Radu Bogdan Rusu, Nico Blodow, and Michael Beetz.
In
Fast point feature histograms (fpfh) for 3d registration.
Robotics and Automation, 2009. ICRA’09. IEEE Interna-
tional Conference on, pages 3212–3217. IEEE, 2009.

[44] Johannes L Schonberger and Jan-Michael Frahm. Structure-
from-motion revisited.
In Proceedings of the IEEE Con-
ference on Computer Vision and Pattern Recognition, pages
4104–4113, 2016.

[45] Paul Scovanner, Saad Ali, and Mubarak Shah. A 3-
dimensional sift descriptor and its application to action
recognition. In Proceedings of the 15th ACM international
conference on Multimedia, pages 357–360. ACM, 2007.

[46] Ben J Tordoff and David W Murray. Guided-mlesac: Faster
image transform estimation by using matching priors. IEEE
transactions on pattern analysis and machine intelligence,
27(10):1523–1535, 2005.

[47] Philip HS Torr and Andrew Zisserman. Mlesac: A new ro-
bust estimator with application to estimating image geome-

try. Computer vision and image understanding, 78(1):138–
156, 2000.

[48] Ngoc-Trung Tran, Dang-Khoa Le Tan, Anh-Dzung Doan,
Thanh-Toan Do, Tuan-Anh Bui, Mengxuan Tan, and Ngai-
Man Cheung. On-device scalable image-based localization
via prioritized cascade search and fast one-many ransac.
IEEE Transactions on Image Processing, 28(4):1675–1690,
2019.

[49] Quoc Huy Tran, Tat-Jun Chin, Wojciech Chojnacki, and
David Suter. Sampling minimal subsets with large spans for
robust estimation. International journal of computer vision,
106(1):93–112, 2014.

[50] Jiaolong Yang, Hongdong Li, Dylan Campbell, and Yunde
Jia. Go-icp: a globally optimal solution to 3d icp point-set
registration. IEEE transactions on pattern analysis and ma-
chine intelligence, 38(11):2241–2254, 2016.

[51] Liuqin Yang, Defeng Sun, and Kim-Chuan Toh. Sdpnal
+ +: a majorized semismooth newton-cg augmented la-
grangian method for semideﬁnite programming with non-
negative constraints. Mathematical Programming Compu-
tation, 7(3):331–366, 2015.

[52] Hao Zhang, Wenjun Zhou, Christopher Reardon, and
Lynne E Parker. Simplex-based 3d spatio-temporal feature
description for action recognition.
In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recog-
nition, pages 2059–2066, 2014.

133

