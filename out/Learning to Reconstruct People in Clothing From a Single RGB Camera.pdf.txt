Learning to Reconstruct People in Clothing from a Single RGB Camera

Thiemo Alldieck1,2,*

Marcus Magnor1

Bharat Lal Bhatnagar2

Christian Theobalt2

Gerard Pons-Moll2

1Computer Graphics Lab, TU Braunschweig, Germany

2Max Planck Institute for Informatics, Saarland Informatics Campus, Germany

{alldieck,magnor}@cg.cs.tu-bs.de {bbhatnag,theobalt,gpons}@mpi-inf.mpg.de

Figure 1: We present a deep learning based approach to estimate personalized body shape, including hair and clothing, using a single

RGB camera. The shapes shown above have been calculated using only 8 input images, and re-posed using SMPL.

Abstract

1. Introduction

We present Octopus, a learning-based model to infer the
personalized 3D shape of people from a few frames (1-8)
of a monocular video in which the person is moving with
a reconstruction accuracy of 4 to 5mm, while being orders
of magnitude faster than previous methods. From semantic
segmentation images, our Octopus model reconstructs a 3D
shape, including the parameters of SMPL plus clothing and
hair in 10 seconds or less. The model achieves fast and ac-
curate predictions based on two key design choices. First,
by predicting shape in a canonical T-pose space, the net-
work learns to encode the images of the person into pose-
invariant latent codes, where the information is fused. Sec-
ond, based on the observation that feed-forward predictions
are fast but do not always align with the input images, we
predict using both, bottom-up and top-down streams (one
per view) allowing information to ﬂow in both directions.
Learning relies only on synthetic 3D data. Once learned,
Octopus can take a variable number of frames as input, and
is able to reconstruct shapes even from a single image with
an accuracy of 5mm. Results on 3 different datasets demon-
strate the efﬁcacy and accuracy of our approach. Code is
available at [2].

* Work partly conducted during an internship at the Real Virtual Hu-

mans group of Max Planck for Informatics.

The automatic acquisition of detailed 3D human shape
and appearance, including clothing and facial details is re-
quired for many applications such as VR/AR, gaming, vir-
tual try-on, and cinematography.

A common way to acquire such models is with a scan-
ner or a multi-view studio [3, 46]. The cost and size pre-
vent the wide-spread use of such setups. Therefore, nu-
merous works address capturing body shape and pose with
more practical setups, e.g.
from a low number of video
cameras [60], or using one or more depth cameras, either
speciﬁcally for the human body [9, 77, 84] or for general
free-form surfaces [88, 51, 54, 37, 26, 70]. The most prac-
tical but also challenging setting is capturing from a single
monocular RGB camera. Some methods attempt to infer
the shape parameters of a body model from a single im-
age [41, 53, 10, 24, 8, 32, 86, 39, 55], but reconstructed de-
tail is constrained to the model shape space, and thus does
not capture personalized shape detail and clothing geome-
try. Recent work [6, 5] estimates more detailed shape, in-
cluding clothing, from a video sequence of a person rotating
in front of a camera while holding a rough A-pose. While
reconstructed models have high quality, the optimization
approach takes around 2 minutes only for the shape com-
ponent. More importantly, the main bottleneck is the pre-
processing step, which requires ﬁtting the SMPL model to
each of the frame silhouettes using time-consuming non-

11175

linear optimization (≈ 120 min for 120 frames). This is
impractical for many applications that require fast acquisi-
tion such as telepresence and gaming.

In this work, we address these limitations and intro-
duce Octopus, a convolutional neural network (CNN) based
model that learns to predict 3D human shapes in a canoni-
cal pose given a few frames of a person rotating in front of a
single camera. Octopus predicts using both, bottom-up and
top-down streams (one per view) allowing information to
ﬂow in both directions. It can make bottom-up predictions
in 50ms per view, which are effectively reﬁned top-down
using the same images in 10s. Inference, both bottom-up
and top-down, is performed fully-automatically using the
same model. Octopus is therefore easy to use and more
practical than previous work [6]. Learning only relies on
synthetic 3D data, and on semantic segmentation images
and keypoints derived from synthesized video sequences.
Consequently, Octopus can be trained without paired data –
real images with ground truth 3D shape annotations – which
is very difﬁcult to obtain in practice.

Octopus predicts SMPL body model parameters, which
represent the undressed shape and the pose, plus additional
3D vertex offsets that model clothing, hair, and details be-
yond the SMPL space. Speciﬁcally, a CNN encodes F
frames of the person (in different poses) into F latent codes
that are fused to obtain a single shape code. From the shape
code, two separate network streams predict the SMPL shape
parameters, and the 3D vertex offsets in the canonical T-
pose space, giving us the “unpose” shape or T-shape. Pre-
dicting the T-shape forces the F latent codes to be pose-
invariant, which is necessary to fuse the shape information
contained in each frame. Octopus also predicts a pose for
each frame, which allows to “pose” the T-shape and ren-
der a silhouette to evaluate the overlap against the input im-
ages in a top-down manner during both training and infer-
ence. Speciﬁcally, since bottom-up models do not have a
feedback loop, the feed-forward 3D predictions are correct
but do not perfectly align with the input images. Conse-
quently, we reﬁne the prediction top-down by optimizing
the F poses, the T-shape, and the vertex offsets to maxi-
mize silhouette overlap and joint re-projection error.

Experiments on a newly collected dataset (LifeScans),
the publicly available PeopleSnapshot dataset [6], and on
the dataset used in [9] demonstrate that our model infers
shapes with a reconstruction accuracy of 4mm in less than
10 seconds.
In summary, Octopus is faster than purely
optimization-based ﬁtting approaches such as [6], it com-
bines the advantages of bottom-up and top-down methods
in a single model, and can reconstruct detailed shapes and
clothing from a few video frames. Examples of reconstruc-
tion results are shown in Fig. 1. To foster further research
in this direction, we made Octopus available for research
purposes [2].

2. Related Work

Methods for 3D human shape and pose reconstruction
can be broadly classiﬁed as top-down or bottom-up. Top-
down methods either ﬁt a free-form surface or a statistical
body model (model-based). Bottom-up methods directly in-
fer a surface or body model parametrization from sensor
data. We will review bottom-up and top-down methods for
human reconstruction.

non-rigidly

free-form methods

Top-down,
deform
meshes [14, 22, 12] or volumetric shape representa-
tions [36, 4]. These methods are based on multi-view stereo
reconstruction [42], and therefore require multiple RGB
or depth cameras, which is a practical barrier for many
applications. Using depth cameras, KinectFusion [38, 52]
approaches reconstruct 3D scenes by incrementally fusing
frame geometry, and appearance [85], in a canonical frame.
Several methods build on KinectFusion for body scan-
ning [64, 47, 82, 20]. The problem is that these methods
require the person to stand still while the camera is turned
around. DynamicFusion [51] generalized KinectFusion
to non-rigid objects by combining non-rigid tracking and
fusion. Although template-free approaches [52, 37, 65]
are ﬂexible, they can only handle very careful motions.
Common ways to add robustness are pre-scanning the
template [88], or using multiple kinects [26, 54] or multi-
view [67, 44, 19]. These methods, however, do not register
the temporal 3D reconstructions to the same template
and focus on other applications such as streaming or
telepresence [54]. Estimating shape by compensating for
pose changes can be tracked back to Cheung et al. [17, 18],
where they align visual hulls over time to improve shape
estimation. To compensate for articulation, they merge
shape information in a coarse voxel model. However,
they need to track each body part separately and require
multi-view input. All free-form works require multi-view
input, depth cameras or cannot handle moving humans.

Top-down, model-based methods exploit a parametric
body model consisting of pose and shape [7, 33, 48, 89,
57, 40] to regularize the ﬁtting process. Some Depth-
based methods [77, 34, 79, 84, 9] exploit the temporal in-
formation by optimizing a single shape and multiple poses
(jointly or sequentially). This leads to expensive optimiza-
tion problems. Using mutli-view, some works achieve fast
performance [60, 61] at the cost of using a coarser body
model based on Gaussians [68], or a pre-computed tem-
plate [80]. Early RGB-based methods were restricted to es-
timating the parameters of a body model, and required mul-
tiple views [8] or manually clicked points [30, 86, 39, 63].
Shape and clothing have been recovered from RGB im-
ages [31, 15], depth [16], or scan data [56], but require man-
ual intervention or clothing is limited to a pre-deﬁned set of
templates. In [78] a fuzzy vertex association from clothing

1176

to body surface is introduced, which allows complex cloth-
ing modeled as body offsets. Some works are in-between
free-form and model-based methods. In [27, 76], authors
pre-scan a template and insert a skeleton, and in [70] authors
combine the SMPL model with a volumetric representation
to track the clothed human body from a depth camera.

Bottom-up. Learning of features for multi-view photo-
consistency [45], and auto-encoders combined with visual
hulls [28, 72] have shown to improve free-form perfor-
mance capture. These works, however, require more than
one camera view. Very few works learn to predict personal-
ized human shape from images–lack of training data and the
lack of a feedback loop between feed-forward predictions
and the images makes the problem hard. Variants of random
forests and neural networks have been used [24, 23, 25, 75]
to regress shape from silhouettes. The problem here is that
predictions tend to look over-smooth, are conﬁned to the
model shape space, and do not comprise clothing. Garments
are predicted [21] from a single image, but a single model
for every new garment needs to be trained, which makes it
hard to use in practice. Recent pure bottom-up approaches
to human analysis [50, 49, 58, 87, 69, 71, 62] typically pre-
dict shape represented as a coarse stick ﬁgure or bone skele-
ton, and can not estimate body shape or clothing.

Hybrid methods. A recent
trend of works combines
bottom-up and top-down approaches–a combination that
has been exploited already in earlier works [66]. The most
straightforward way is by ﬁtting a 3D body model [48] to
2D pose detections [10, 43]. These methods, however, can
not capture clothing and details beyond the model space.
Clothing, hair and shape [6, 5] can be inferred by fusing
dynamic silhouettes (predicted bottom-up) of a video to a
canonical space. Even with good 2D predictions, these
methods are susceptible to local minima when not initial-
ized properly, and are typically slow. Furthermore, the
2D prediction network and the model ﬁtting is de-coupled.
Starting with a feed-forward 3D prediction, semantic seg-
mentation, keypoints and scene constraints are integrated
top-down in order to predict the pose and shape of multiple
people [81]. Other recent works integrate the SMPL model,
or a voxel representation [74], as a layer within a network
architecture [41, 55, 53, 73]. This has several advantages:
(i) predictions are constrained by a shape space of humans,
and (ii) bottom-up 3D predictions can be veriﬁed top-down
using 2D keypoints and silhouettes during training. How-
ever, the shape estimates are conﬁned to the model shape
space and tend to be close to the average. The focus of these
works is rather on robust pose estimation, while we focus on
personalized shapes. We also integrate SMPL within our ar-
chitecture but our work is different in several aspects. First,
our architecture fuses the information of several images of
the same person in different poses. Second, our model in-
corporates a fast top-down component during training and

at test time. As a result, we can predict clothing, hair and
personalized shapes using a single camera.

3. Method

The goal of this work is to create a 3D model of a subject
from a few frames of a monocular RGB video, and in less
than 10 seconds. The model should comprise body shape,
hair, and clothing and should be animatable. We take inspi-
ration from [6] and focus on the cooperative setting with
videos of people rotating in front of a camera holding a
rough A-pose – this motion is easy and fast to perform, and
ensures that non-rigid motion of clothing and hair is not too
large. In contrast to previous work [6], we aim for fast and
fully automatic reconstruction. To this end, we train a novel
convolutional neural network to infer a 3D mesh model of a
subject from a small number of input frames. Additionally,
we train the network to reconstruct the 3D pose of the sub-
ject in each frame. This allows us to reﬁne the body shape
by utilizing the decoder part of the network for instance-
speciﬁc optimization (Fig. 2).

In Sec. 3.1 we describe the shape representation used in
this work followed by its integration into the used predictor
(Sec. 3.2). In Sec. 3.3 we explain the losses, that are used in
the experiments. We conclude by describing the instance-
speciﬁc top-down reﬁnement of results (Sec. 3.4).

3.1. Shape representation

Similar to previous work [83, 6], we represent shape us-
ing the SMPL statistical body model [48], which represents
the undressed body, and a set of offsets modeling instance
speciﬁc details including clothing and hair.

SMPL is a function M (·) that maps pose θ and shape β
to a mesh of V = 6890 vertices. By adding offsets D to the
template T, we obtain a posed shape instance as follows:

M (β, θ, D) = W (T (β, θ, D), J(β), θ, W)

T (β, θ, D) = T + Bs(β) + Bp(θ) + D,

(1)

(2)

where linear blend-skinning W (·) with weights W, to-
gether with pose-dependent deformations Bp(θ) allow to
pose the T-shape (T + Bs(β)) based on its skeleton joints
J(·). SMPL plus offsets, denoted as SMPL+D, is fully dif-
ferentiable with respect to pose θ, shape β and free-form
deformations D. This allows us to directly integrate SMPL
as a ﬁxed layer in our convolutional architecture.

3.2. Model and data representation

Given a set of images I = {I0, . . . , IF −1} depicting a
subject from different sides with corresponding 2D joints
J = {J0, . . . , JF −1}, we learn a predictor f ∗
w that in-
fers the body shape β, personal and scene speciﬁc body
features D, and 3D poses P = {θ0, . . . , θF −1} along
with 3D positions T = {t0, . . . , tF −1} for each image.

1177

I

J

CNN

Shape

β, D

Poses

P, T

θ0, t0

+

θ1, t1

θ2, t2

Render

Figure 2. Overview of our method: Our novel CNN predicts 3D human shapes from semantic images in an canonical pose together with
per-image pose information calculated from 2D joint detections (left to center). The pose information can be used to reﬁne the shape via
‘render and compare’ optimization using the same predictor (right to center).

S(I)

N3D(I, J , i)

N2D(I, J , i)

f ∗
w : (I, J ) 7→ (β, D, P, T ) is a CNN parametrized by
network parameters w.

Input modalities. Images of humans are highly diverse
in appearance, requiring large datasets of annotated images
in the context of deep learning. Therefore, to abstract away
as much information as possible while still retaining shape
and pose signal, we build on previous work [29, 13] to sim-
plify each RGB image to a semantic segmentation and 2D
keypoint detections. This allows us to train the network us-
ing only synthetic data and generalize to real data.

Model parametrization. By integrating the SMPL+D
model (Sec. 3.1) into our network formulation, we can uti-
lize its mesh output in the training of f ∗
w. Concretely, we su-
pervise predicted SMPL+D parameters in three ways: Im-
posing a loss directly on the mesh vertices M (β, θ, D), on
the predicted joint locations J(β) and their projections on
the image, and densely on a rendering of the mesh using a
differential renderer [35].

The T-shape (T + Bs(β) + D) in Eq. 2 is now predicted

from the set of semantic images I with the function:

S(I) = T + Bs(f β

w (I)) + f D

w (I),

(3)

where f ∗
w are the regressors to be learned. Similarly, the
mesh posed N3D(I, J , i) is predicted from the image Ii
and 2D joints Ji with the function:

N3D(I, J , i) = W (P (I, i), J(f β

w (I)), f θi

w (I, J ), W)

P (I, J , i) = S(I) + Bp(f θi

w (I, J )),

(4)

(5)

from which the 3D Joints are predicted with the linear re-
gressor JB25:

NJ3D (I, J , i) = JB25(N3D(I, J , i))

(6)

JB25 has been trained to output 25 joint locations consistent
with the BODY 25 [1] keypoint ordering. The estimated
posed mesh N3D can be rendered in uniform color with the
image formation function R(·) paramerized by camera c:

N2D(I, J , i) = Rc(N3D(I, J , i))

(7)

Similarly, we can project the the joints NJ3D to the image
plane by perspective projection π:

NJ2D (I, J , i) = πc(NJ 3D(I, J , i))

(8)

All these operations are differentiable, which we can con-
veniently use to formulate suitable loss functions.

3.3. Loss functions

Our architecture permits two sources of supervision: (i)
3D supervision (in our experiments, from synthetic data de-
rived by ﬁtting SMPL+D to static scans), and (ii) 2D super-
vision from video frames alone. In this section, we discuss
different loss functions used to train the predictors f ∗
w.

Losses on body shape and pose For a paired sample
in the dataset {(I, J ), (β, D, P, T )} we use the following
losses between our estimated model N3D and the ground
truth model M (·) scan:

• Per-vertex loss in the canonical T-pose 0θ. This loss
provides a useful 3D supervision on shape indepen-
dently of pose:

LS = ||S(I) − M (β, 0θ, D)||2

(9)

• Per-vertex loss in posed space. This loss supervises

both pose and shape on the Euclidean space:

LN3D =

F −1

X

i=0

||N3D(I, J , i) − M (β, θi, D)||2

(10)

• Silhouette overlap:

LN2D =

F −1

X

i=0

||Rc(N3D(I, J , i)) − b(Ii)||2,

(11)

where b(Ii) is the binary segmentation mask and Rc is
the image formation function deﬁned in Eq. 7. LN2D is
a weakly supervised loss as it does not require 3D anno-
tations and b(Ii) can be estimated directly from RGB im-
ages. In the experiments, we investigate whether such self-
supervised loss can reduce the amount 3D supervision re-
quired (see 4.4). Additionally, we show that N2D can be

1178

used at test time to reﬁne the bottom-up predictions and cap-
ture instance speciﬁc details in a top-down manner (see 3.4).

• Per-vertex SMPL undressed body loss:

The aforementioned losses only penalize the ﬁnal SMPL+D
3D shape. It is useful to include an ”undressed-body” ( ˆS)
loss to force the shape parameters β to be close to the
ground truth

L ˆS = || ˆS(I) − M (β, 0θ, 0D)||2

ˆS(I) = T + Bs(f β

w (I)),

(12)

(13)

where 0D are vectors of length 0. This also prevents that
the offsets D explain the overall shape of the person.

Pose speciﬁc losses. In addition to the posed space LN3D
and silhouette overlap LN2D losses, we train for the pose
using a direct loss on the predicted parameters Lθ,t

Lθ,t =

F −1

X

i=0

(cid:16)||R(f θi

w ) − R(θi)||2 + ||f ti

w − ti||2(cid:17) ,

(14)

where R are vectorized rotation matrices of the 24 joints.
Similar to [53, 43, 55], we use differentiable SVD to force
the predicted matrices to lie on the manifold of rotation ma-
trices. This term makes the pose part of the network con-
verge faster.

Losses on joints. We further regularize the pose training

by imposing a loss on the joints in Euclidean space:

LJ3D =

F −1

X

i=0

||NJ3D (I, J , i) − JB25(M (β, θi, D))||2

(15)

Similar to the 2D image projection loss on model LN2D (Eq.
11), we also have a weakly supervised 2D joint projection
loss LJ2D

LJ2D =

F −1

X

i=0

||NJ2D (I, J , i) − πc(JB25(M (β, θi, D)))||2.

(16)

3.4. Instance speciﬁc top down optimization

The bottom-up predictions of the neural model can be
reﬁned top-down at test time to capture instance speciﬁc
details. It is important to note that this step requires no 3D
annotation as the network ﬁne-tunes using only 2D data.
Speciﬁcally, at the test time, given a subject’s images I and
2D joints J we optimize a small set of layers in f ∗
w using
image and joint projection losses LN2D , LJ2D (see 4.1). By
ﬁxing most layers of the network and optimizing only la-
tent layers, we ﬁnd a compromise between the manifold
of shapes learned by the network and new features, that
have not been learned. We further regularize this step us-
ing Laplacian smoothness, face landmarks, and symmetry
terms from [6, 5]. Table 1 illustrates the performance of the
pipeline before and after optimization (see 4.2, 4.3).

Figure 3. Sample scans from the LifeScans dataset.

4. Experiments

The following section focuses on the evaluation of our
method. In Sec. 4.1 we introduce technical details of the
used dataset and network architecture. The following sec-
tions describe experiments for quantitative and qualitative
evaluation as well as ablation and parameter analysis.

4.1. Experimental setup

Dataset. To alleviate the lack of paired data, we use
2043 static 3D scans of people in clothing. We pur-
chased 163 scans from renderpeople.com and 54 from axyz-
design.com. 1826 scans were kindly provided from Twin-
dom (https://web.twindom.com/). Unfortunately,
in the
2043 there is not enough variation in pose and shape to
learn a model that generalizes. Hence, we generate syn-
thetic 3D data by non-rigidly registering SMPL+D to each
of the scans. This allows us to change the underlying body
shape and pose of the scan using SMPL, see Fig. 3. Like [6],
we focus on a cooperative scenario where the person is
turning around in front of the camera. Therefore, we ani-
mate the scans with turn-around poses and random shapes
and render video sequences from them. We call the re-
sulting dataset LifeScans, which consists of rendered im-
ages paired with 3D animated scans in various shapes and
poses. Since the static scans are from real people, the gen-
erated images are close to photo-realistic, see Fig 3. To
prevent overﬁtting, we use semantic segmentation together
with keypoints as intermediate image representation, which
preserve shape and pose signatures while abstracting away
appearance. This reduces the amount of appearance vari-
ation required for training. To be able to render synthetic
semantic segmentation, we ﬁrst render the LifeScans sub-
jects from different viewpoints and segment the output with
the method of [29]. Then we project the semantic labels
back in the SMPL texture space and fuse different views
using graph cut-based optimization. This ﬁnal step enables
full synthetic generation of paired training data.

Scale ambiguity. Scale is an inherent ambiguity in
monocular imagery. Three factors determine the size of
an object in an image: distance to the camera, camera in-
trinsics, and the size of the object. As it is not possible to
decouple this ambiguity in a monocular set-up with moving
objects, we ﬁx two factors and regress one. In other works
[53, 41, 55] authors have assumed ﬁxed distance to the cam-

1179

era. We cannot make this assumption, as we leverage mul-
tiple images of the same subject, where the distances to
the camera may vary. Consequently, we ﬁx the size of the
subject to average body height. Precisely, we make SMPL
height independent, by multiplying the model by 1.66m di-
vided by the y-axis distance of vertices describing ankles
and eyes. Finally, we ﬁx the focal length to sensor height.

i

i

.

In our experiments we ﬁxed the size of linv

Network architecture.
In the following we describe de-
tails of the convolutional neural network f ∗
w. An overview
is given in Fig. 4. The input to f ∗
w is a set of 1080x1080px
semantically segmented images I and corresponding 2D
joint locations J . f ∗
w encodes each image Ii with a set
of ﬁve, 3x3 convolutions with ReLU activations followed
by 2x2 max-pooling operations into a pose invariant latent
code linv
to
20. The pose branch maps both joint detections Ji and out-
put of the last convolutional layer to a vector of size 200
and ﬁnally to the pose-dependent latent code lpose
of size
100 via fully connected layers. The shape branch aggre-
gates pose invariant information across images and com-
putes mean linv. Note that this formulation allows us to ag-
gregate pose-dependent and invariant information across an
arbitrary and varying number of views. The shape branch
goes on to predict SMPL shape parameters β and free-form
deformations D on the SMPL mesh. β is directly calculated
from linv with a linear layer. In order to predict per-vertex
offsets from the latent code linv, we use a four-step graph
convolutional network with Chebyshev ﬁlters and mesh up-
sampling layers similar to [59]. Each convolution is fol-
lowed by ReLU activation. We prefer a graph convolutional
network over a fully connected decoder due to memory con-
straints and in order to get structured predictions.

i

Training scheme. The proposed method, including ren-
dering, is fully differentiable and end-to-end trainable. Em-
pirically we found it better to train the pose branch before
training the shape branch. Thereafter, we optimize the net-
work end-to-end. We use a similar training schedule for our
pose branch as [55], where we ﬁrst train the network us-
ing losses on the joints and pose parameters (LJ3D , Lθ,t)
followed by training using losses on the vertices and pose
parameters (LN3D , Lθ,t). We also experiment with various
training schemes, and show that weakly supervised training
can signiﬁcantly reduce the dependence on 3D annotated
data (see Sec. 4.4). For that experiment, we train the model
with alternating full (LS, L ˆS, LN3D , LJ3D ) and weak super-
vision (LN2D , LJ2D ). During instance-speciﬁc optimization
we keep most layers ﬁxed and only optimize latent pose
lpose, latent shape linv and the last graph convolutional layer,
that outputs free-form displacements D.

4.2. Numerical evaluation

We quantitatively evaluate our method on a separated test
set of the LifeScans dataset containing 55 subjects. We use

Before optimization

After optimization

Full Pipeline
GT Poses

4.47 ±4.45
4.47 ±4.41

4.00 ±3.94
3.17 ±3.41

Table 1. Mean vertex error (mm) of 55 test samples computed on
F = 8 input images. The full method with inferred poses produces
comparable results to using GT poses. Both variants gain accuracy
from subsequent optimization.

F = 8 semantic segmentation images and 2D poses as in-
put and optimize the results for a maximum budget of 10
seconds. All results have been computed without intensive
hyper-parameter tuning. To quantify shape reconstruction
accuracy, we adjust the pose of the estimation to match the
ground truth, following [83, 9]. This disentangles errors
in pose from errors in shape and allows to quantify shape
accuracy. Finally, we compute the bi-directional vertex to
surface distance between scans and reconstructions. We re-
port mean errors in millimeters (mm) across the test set in
Tab. 1. We differentiate between full method and ground
truth (GT) poses. Full method refers to our method as de-
scribed in Sec. 4.1. The latter is a variant of our method
that uses ground truth poses, which allows to study the ef-
fect of pose errors. In Fig. 5 we display subjects in the test
set for both variants along with per-vertex error heatmaps.
Visually the results look almost indistinguishable, which is
corroborated by the fact that the numerical error increases
only by ≈ 1mm between GT and predicted pose models.
This demonstrates the robustness of our approach. We show
more examples with the corresponding texture for qualita-
tive assessment in Fig. 1. The textures have been computed
using graph cut-based optimization using semantic labels as
described in [5].

4.3. Analysis of key parameters

Our method comes with two key hyper-parameters,
namely number of input images F , and number of optimiza-
tion steps. In the following section, we study these param-
eters and how they affect the performance of our approach.
We also justify our design choices.

Fig. 7 illustrates the performance of our method with
growing number of optimization steps. While the perfor-
mance gain saturates at around 70 − 80 steps, we use 25
steps in following experiments as a compromise between
accuracy and speed. For the case of F = 8 input images op-
timization for 25 steps takes ≈ 10s on a single Volta V100
GPU. We believe 10s is a practical waiting time and a good
compromise for many applications. Therefore we ﬁx the
time budget to 10s for the following experiments.

Including more input views at test time can potentially
improve the performance of the method. However, in prac-
tice, this means more data pre-processing and longer infer-
ence times. Fig. 8 illustrates the performance with differ-
ent number of input images. Perhaps surprisingly, the per-
formance saturates already at around 5 images before opti-

1180

v
n
i
l

e
s
o
p
l

β

D

T
,

P

Figure 4. Network architecture: Our bottom-up inference network ﬁrst encodes the input (semantically segmented images I and 2D joints
J2D) into a decoupled, pose dependent lpose and pose invariant linv latent space. The pose branch subsequently infers per-frame pose and
translation parameters P and T from lpose. The shape branch infers the body shape β and free-form deformations D in T-pose from linv.
We use a graph convolution based decoder, to learn per-vertex offsets D. The entire model is end-to-end trainable. The orange FC layers
and the ﬁnal graph convolution layer can be ﬁne-tuned at test time to better model instance-speciﬁc details (see Sec. 3.4).

Figure 5. Results from LifeScans in comparison to ground truth shapes (green). We show results computed with ground truth poses (blue)
and results of the full method (yellow) with corresponding error heatmaps with respect to ground truth shapes (red means ≥ 2cm).

mization. After optimization, the error saturates at around
8 images. While more images potentially means better su-
pervision, we cannot see improved results for optimization
on many images. This can be explained with the ﬁxed time
budget in this experiment, where more images mean fewer
optimization steps. While we could potentially use fewer
images, we found F = 8 views as a practical number of
input views. This has the following reason: A calculated
avatar should not only be numerically accurate but also vi-
sually appealing. Results based on more number of views
show more ﬁne details and most importantly allow accurate
texture calculation.

Before optimization

After optimization

100%
50%
20%
10%

4.47 ±4.41
4.57 ±4.52
4.74 ±4.65
4.73 ±4.56

3.17 ±3.41
3.19 ±3.43
3.29 ±3.53
3.46 ±3.62

Table 2. Mean vertex error (mm) of 55 test samples with different
amount of full supervision during training of the shape branch.
f ∗
w can be trained with only 10% full supervision with minimal
accuracy lose.

vision. This experiment suggests that we could potentially
improve performance by supervising our model with addi-
tionally recorded videos. We leave this for future work.

4.4. Type of supervision

4.5. Qualitative results and comparisons

Since videos are easier to obtain than 3D annotations, we
evaluate to which extent they can substitute full 3D supervi-
sion to train our network. To this end, we split the LifeScans
dataset. One part is used for full supervision, the other part
is used for weak supervision in form of image masks and
2D keypoints. All forms of supervision can be syntheti-
cally generated from the LifeScans dataset. We train f ∗
w
with 10%, 20%, 50%, and 100% full supervision and com-
pare the performance on the test set in Tab. 2. In order to
factor out the effect of problematic poses during the train-
ing, we used ground truth poses in this experiment. The
results suggest that f ∗
w can be trained with only minimal
amount of full supervision, given strong pose predictions.
The performance of the network decreases only slightly for
less than 100% full supervision. Most interestingly, the re-
sults are almost identical for 10%, 20%, and 50% full super-

We qualitatively compare our method against the most
relevant work [6] on their PeopleSnapshot dataset. While
their method leverages 120 frames, we still use F = 8
frames for our reconstructions. For a fairer comparison,
we optimize for ≈ 20s in this experiment. This is still
several magnitudes faster than the 122min needed by [6].
Their method needs 2 minutes for shape optimization plus
1 minute per frame for the pose. In Fig. 6 we show side-by-
side comparison to [6]. Our results are visually still on par
while requiring a fraction of the data.

We also compare our method against [9], a RGB-D based
optimization method. Their dataset displays subjects in
minimal clothing rotating in front of the camera in T-pose.
Unfortunately, the semantic segmentation network is not
able to successfully segment subjects in minimal clothing.
Therefore we sightly change the set-up for this experiment.

1181

Conv - 1Conv - 2Conv - 3Conv - 4FCFCConv - 5FC2D JointsImagesFCAvg. poolFCG. Conv 1G. Conv 2G. Conv 3G. Conv 4SMPLa)

b)

Figure 6. Comparison to the state-of-the-art optimization based method [6]. Their method (a) uses 120 frames, while ours (b) only uses 8
images and is several magnitudes faster.

Figure 7. Error decrease of the test set with increased number of
optimization steps computed on F = 8 input images.

Figure 8. Error development on the test set with increased number
of input views F before (dashed) and after optimization (solid).
Optimization has been limited by a time budget of 10s allowing
very few gradient steps for large numbers of views, which explains
why the error plateaus for more than 8 views.

We segment their dataset using the semi-automatically ap-
proach [11] and re-train our predictor to be able to process
binary segmentation masks. Additionally, we augment the
LifeScans dataset with T-poses. We show side-by-side com-
parisons in Fig. 9. Again our results are visually similar,
despite the use of less and only monocular data.

5. Discussion and Conclusion

We have proposed a novel method for automatic 3D body
shape estimation from only 1 − 8 frames of a monocular
video of a person moving. Our Octopus model predicts
mesh-based pose invariant shape and per-image 3D pose
from a ﬂexible number of views. Experiments demonstrate
that the feed-forward predictions are already quite accurate
(4.5mm), but often lack detail and do not perfectly overlap
with the input images. This motivates reﬁning the estimates
with top-down optimization against the input images. Re-
ﬁning brings the error down to 4mm and aligns the model
with the input image silhouettes, which allows texture map-

a)

b)

Figure 9. Comparison to the RGB-D method [9] (a). Our method
(b) is visually on par, despite using only 8 RGB images as input.

ping. In summary, we improve over the state-of-the-art in
the following aspects: Our method allows, for the ﬁrst time,
to estimate full body reconstructions of people in clothing in
a fully automatic manner. We signiﬁcantly reduce the num-
ber of needed images at test time, and compute the ﬁnal
result several magnitudes faster than state-of-the-art (from
hours to seconds). Extensive experiments on the LifeScans
dataset demonstrate the performance and inﬂuence of key
parameters of the predictor. While our model is indepen-
dent on the number of input images and can be reﬁned for
different numbers of optimization steps, we have shown that
using 8 views and reﬁning for 10 seconds are good compro-
mises between accuracy and practicability. Qualitative re-
sults on two real-world datasets demonstrate generalization
to real data, despite training from synthetic data alone.

Future work should enable the proposed method for sce-
narios where the subject is not cooperating, for example
from Youtube videos, or legacy movie material. Further-
more, clothing with geometry far from the body, such as
skirts and coats or hairstyles like ponytails will require a
different formulation.

By enabling fully automatic 3D body shape reconstruc-
tion from a few images in only a few seconds, we prepare
the ground for wide-spread acquisition of personalized 3D
avatars. People are now able to quickly digitize themselves
using only a webcam and can use their model for various
VR and AR applications.

Acknowledgments
The authors gratefully acknowledge funding by Deutsche
Forschungsgemeinschaft (DFG German Research Foundation)
from projects MA2555/12-1 and 409792180. We would like to
thank Twindom for providing us with the scan data. Another
thanks goes to Verica Lazova for great help in data processing.

1182

01020304050607080Optimizationsteps3.03.54.04.5Meanvertexerror(mm)FullMethodGTPoses1358101215Numberofinputimages3.03.54.04.55.05.5Meanvertexerror(mm)FullMethodGTPosesReferences

[1] https://github.com/cmu-perceptual-computing-

lab/openpose. 4

[2] http://virtualhumans.mpi-inf.mpg.de/octopus/. 1, 2
[3] Naveed Ahmed, Edilson de Aguiar, Christian Theobalt, Mar-
cus Magnor, and Hans-Peter Seidel. Automatic generation
of personalized human avatars from multi-view video.
In
Proc. of the ACM Symposium on Virtual Reality Software
and Technology, VRST ’05, pages 257–260, New York, NY,
USA, 2005. ACM. 1

[4] Benjamin Allain,

Jean-S´ebastien Franco, and Edmond
Boyer. An Efﬁcient Volumetric Framework for Shape Track-
ing. In IEEE Conf. on Computer Vision and Pattern Recog-
nition, pages 268–276, Boston, United States, 2015. IEEE.
2

[5] Thiemo Alldieck, Marcus Magnor, Weipeng Xu, Christian
Theobalt, and Gerard Pons-Moll. Detailed human avatars
from monocular video. In International Conf. on 3D Vision,
sep 2018. 1, 3, 5, 6

[6] Thiemo Alldieck, Marcus Magnor, Weipeng Xu, Christian
Theobalt, and Gerard Pons-Moll. Video based reconstruction
of 3D people models. In IEEE Conf. on Computer Vision and
Pattern Recognition, 2018. 1, 2, 3, 5, 7, 8

[7] Dragomir Anguelov, Praveen Srinivasan, Daphne Koller, Se-
bastian Thrun, Jim Rodgers, and James Davis. SCAPE:
shape completion and animation of people. In ACM Transac-
tions on Graphics, volume 24, pages 408–416. ACM, 2005.
2

[8] Alexandru O B˘alan and Michael J Black. The naked truth:
Estimating body shape under clothing. In European Conf. on
Computer Vision, pages 15–29. Springer, 2008. 1, 2

[9] Federica Bogo, Michael J. Black, Matthew Loper, and Javier
Romero. Detailed full-body reconstructions of moving peo-
ple from monocular RGB-D sequences.
In IEEE Interna-
tional Conf. on Computer Vision, pages 2300–2308, 2015. 1,
2, 6, 7, 8

[10] Federica Bogo, Angjoo Kanazawa, Christoph Lassner, Pe-
ter Gehler, Javier Romero, and Michael J Black. Keep it
SMPL: Automatic estimation of 3D human pose and shape
from a single image. In European Conf. on Computer Vision.
Springer International Publishing, 2016. 1, 3

[11] Sergi Caelles, Kevis-Kokitsi Maninis, Jordi Pont-Tuset,
Laura Leal-Taix´e, Daniel Cremers, and Luc Van Gool. One-
shot video object segmentation. In IEEE Conf. on Computer
Vision and Pattern Recognition, 2017. 8

[12] Cedric Cagniart, Edmond Boyer, and Slobodan Ilic. Proba-
bilistic deformable surface tracking from multiple videos. In
Kostas Daniilidis, Petros Maragos, and Nikos Paragios, ed-
itors, European Conf. on Computer Vision, volume 6314 of
Lecture Notes in Computer Science, pages 326–339, Herak-
lion, Greece, 2010. Springer. 2

[13] Zhe Cao, Tomas Simon, Shih-En Wei, and Yaser Sheikh.
Realtime multi-person 2d pose estimation using part afﬁn-
ity ﬁelds.
In IEEE Conf. on Computer Vision and Pattern
Recognition, 2017. 4

[14] Joel Carranza, Christian Theobalt, Marcus A Magnor, and
Hans-Peter Seidel. Free-viewpoint video of human actors.

In ACM Transactions on Graphics, volume 22, pages 569–
577. ACM, 2003. 2

[15] Xiaowu Chen, Yu Guo, Bin Zhou, and Qinping Zhao.
Deformable model for estimating clothed and naked hu-
man shapes from a single image. The Visual Computer,
29(11):1187–1196, 2013. 2

[16] Xiaowu Chen, Bin Zhou, Feixiang Lu, Lin Wang, Lang Bi,
and Ping Tan. Garment modeling with a depth camera. ACM
Transactions on Graphics, 34(6):203, 2015. 2

[17] German KM Cheung, Simon Baker, and Takeo Kanade.
Shape-from-silhouette of articulated objects and its use for
human body kinematics estimation and motion capture. In
IEEE Conf. on Computer Vision and Pattern Recognition,
volume 1, pages I–I. IEEE, 2003. 2

[18] German KM Cheung, Simon Baker, and Takeo Kanade. Vi-
sual hull alignment and reﬁnement across time: A 3d recon-
struction algorithm combining shape-from-silhouette with
stereo.
In IEEE Conf. on Computer Vision and Pattern
Recognition, volume 2, pages II–375. IEEE, 2003. 2

[19] Alvaro Collet, Ming Chuang, Pat Sweeney, Don Gillett, Den-
nis Evseev, David Calabrese, Hugues Hoppe, Adam Kirk,
and Steve Sullivan. High-quality streamable free-viewpoint
video. ACM Transactions on Graphics, 34(4):69, 2015. 2

[20] Yan Cui, Will Chang, Tobias N¨oll, and Didier Stricker.
Kinectavatar: fully automatic body capture using a single
kinect. In Asian Conf. on Computer Vision, pages 133–147,
2012. 2

[21] R Danˇeˇrek, Endri Dibra, C ¨Oztireli, Remo Ziegler, and
Markus Gross. Deepgarment: 3d garment shape estimation
from a single image.
In Computer Graphics Forum, vol-
ume 36, pages 269–280. Wiley Online Library, 2017. 3

[22] Edilson De Aguiar, Carsten Stoll, Christian Theobalt,
Naveed Ahmed, Hans-Peter Seidel, and Sebastian Thrun.
Performance capture from sparse multi-view video. In ACM
Transactions on Graphics, page 98, 2008. 2

[23] Endri Dibra, Himanshu Jain, Cengiz ¨Oztireli, Remo Ziegler,
and Markus Gross. Hs-nets: Estimating human body shape
from silhouettes with convolutional neural networks. In In-
ternational Conf. on 3D Vision, pages 108–117, 2016. 3

[24] Endri Dibra, Himanshu Jain, Cengiz Oztireli, Remo Ziegler,
and Markus Gross. Human shape from silhouettes using gen-
erative hks descriptors and cross-modal neural networks. In
IEEE Conf. on Computer Vision and Pattern Recognition,
2017. 1, 3

[25] Endri Dibra, Cengiz ¨Oztireli, Remo Ziegler, and Markus
Gross. Shape from selﬁes: Human body shape estimation
using cca regression forests. In European Conf. on Computer
Vision, pages 88–104. Springer, 2016. 3

[26] Mingsong Dou, Sameh Khamis, Yury Degtyarev, Philip
Davidson, Sean Ryan Fanello, Adarsh Kowdle, Sergio Orts
Escolano, Christoph Rhemann, David Kim, Jonathan Tay-
lor, et al. Fusion4d: Real-time performance capture of chal-
lenging scenes. ACM Transactions on Graphics, 35(4):114,
2016. 1, 2

[27] Juergen Gall, Carsten Stoll, Edilson De Aguiar, Christian
Theobalt, Bodo Rosenhahn, and Hans-Peter Seidel. Motion
capture using joint skeleton tracking and surface estimation.

1183

In IEEE Conf. on Computer Vision and Pattern Recognition,
pages 1746–1753. IEEE, 2009. 3

[28] Andrew Gilbert, Marco Volino, John Collomosse, and
Adrian Hilton. Volumetric performance capture from min-
imal camera viewpoints.
In European Conf. on Computer
Vision, 2018. 3

[29] Ke Gong, Xiaodan Liang, Yicheng Li, Yimin Chen, Ming
Yang, and Liang Lin. Instance-level human parsing via part
grouping network. In European Conf. on Computer Vision,
2018. 4, 5

[30] Peng Guan, Alexander Weiss, Alexandru O B˘alan, and
Michael J Black. Estimating human shape and pose from
a single image.
In IEEE International Conf. on Computer
Vision, pages 1381–1388. IEEE, 2009. 2

[31] Yu Guo, Xiaowu Chen, Bin Zhou, and Qinping Zhao.
Clothed and naked human shapes estimation from a single
image. Computational Visual Media, pages 43–50, 2012. 2
[32] Nils Hasler, Hanno Ackermann, Bodo Rosenhahn, Thorsten
Thormahlen, and Hans-Peter Seidel. Multilinear pose and
body shape estismation of dressed subjects from image sets.
In IEEE Conf. on Computer Vision and Pattern Recognition,
pages 1823–1830. IEEE, 2010. 1

[33] Nils Hasler, Carsten Stoll, Martin Sunkel, Bodo Rosenhahn,
and H-P Seidel. A statistical model of human pose and body
shape. In Computer Graphics Forum, volume 28, pages 337–
346, 2009. 2

[34] Thomas Helten, Andreas Baak, Gaurav Bharaj, Meinard
Muller, Hans-Peter Seidel, and Christian Theobalt. Person-
alization and evaluation of a real-time depth-based full body
tracker. In International Conf. on 3D Vision, pages 279–286,
Washington, DC, USA, 2013. 2

[35] Paul Henderson and Vittorio Ferrari. Learning to generate
In

and reconstruct 3d meshes with only 2d supervision.
British Machine Vision Conference, 2018. 4

[36] Chun-Hao Huang, Benjamin Allain, Jean-S´ebastien Franco,
Nassir Navab, Slobodan Ilic, and Edmond Boyer. Volumetric
3d tracking by detection. In IEEE Conf. on Computer Vision
and Pattern Recognition, pages 3862–3870, 2016. 2

[37] Matthias Innmann, Michael Zollh¨ofer, Matthias Nießner,
Christian Theobalt, and Marc Stamminger. Volumedeform:
Real-time volumetric non-rigid reconstruction. In European
Conf. on Computer Vision, 2016. 1, 2

[38] Shahram Izadi, David Kim, Otmar Hilliges, David
Molyneaux, Richard Newcombe, Pushmeet Kohli, Jamie
Shotton, Steve Hodges, Dustin Freeman, Andrew Davison,
et al. Kinectfusion: real-time 3d reconstruction and inter-
action using a moving depth camera.
In ACM symposium
on User interface software and technology, pages 559–568.
ACM, 2011. 2

[39] Arjun Jain, Thorsten Thorm¨ahlen, Hans-Peter Seidel, and
Christian Theobalt. Moviereshape: Tracking and reshaping
of humans in videos.
In ACM Transactions on Graphics,
volume 29, page 148. ACM, 2010. 1, 2

[40] Hanbyul Joo, Tomas Simon, and Yaser Sheikh. Total capture:
A 3d deformation model for tracking faces, hands, and bod-
ies. In IEEE Conf. on Computer Vision and Pattern Recog-
nition, pages 8320–8329, 2018. 2

[41] Angjoo Kanazawa, Michael J. Black, David W. Jacobs, and
Jitendra Malik. End-to-end recovery of human shape and
pose. In IEEE Conf. on Computer Vision and Pattern Recog-
nition. IEEE Computer Society, 2018. 1, 3, 5

[42] Reinhard Koch, Marc Pollefeys, and Luc Van Gool. Multi
viewpoint stereo from uncalibrated video sequences. In Eu-
ropean conf. on computer vision, pages 55–71. Springer,
1998. 2

[43] Christoph Lassner, Javier Romero, Martin Kiefel, Federica
Bogo, Michael J Black, and Peter V Gehler. Unite the peo-
ple: Closing the loop between 3d and 2d human representa-
tions. In IEEE Conf. on Computer Vision and Pattern Recog-
nition, 2017. 3, 5

[44] Vincent Leroy, Jean-S´ebastien Franco, and Edmond Boyer.
Multi-View Dynamic Shape Reﬁnement Using Local Tem-
poral Integration. In IEEE International Conf. on Computer
Vision, Venice, Italy, 2017. 2

[45] Vincent Leroy, Jean-S´ebastien Franco, and Edmond Boyer.
Shape reconstruction using volume sweeping and learned
photoconsistency. In European Conf. on Computer Vision,
pages 796–811. Springer, Cham, 2018. 3

[46] Guannan Li, Chenglei Wu, Carsten Stoll, Yebin Liu, Kiran
Varanasi, Qionghai Dai, and Christian Theobalt. Capturing
relightable human performances under general uncontrolled
illumination.
In Computer Graphics Forum (Proc. Euro-
graphics), volume 32, pages 1–8, 2013. 1

[47] Hao Li, Etienne Vouga, Anton Gudym, Linjie Luo,
Jonathan T Barron, and Gleb Gusev. 3d self-portraits. ACM
Transactions on Graphics, 32(6):187, 2013. 2

[48] Matthew Loper, Naureen Mahmood, Javier Romero, Ger-
ard Pons-Moll, and Michael J Black. SMPL: A skinned
multi-person linear model. ACM Transactions on Graphics,
34(6):248:1–248:16, 2015. 2, 3

[49] Dushyant Mehta, Oleksandr Sotnychenko, Franziska
Mueller, Weipeng Xu, Srinath Sridhar, Gerard Pons-Moll,
and Christian Theobalt. Single-shot multi-person 3d pose
estimation from monocular rgb.
In International Conf. on
3D Vision, sep 2018. 3

[50] Dushyant Mehta, Srinath Sridhar, Oleksandr Sotnychenko,
Helge Rhodin, Mohammad Shaﬁei, Hans-Peter Seidel,
Weipeng Xu, Dan Casas, and Christian Theobalt. Vnect:
Real-time 3d human pose estimation with a single rgb cam-
era. ACM Transactions on Graphics, 36(4):44, 2017. 3

[51] Richard A Newcombe, Dieter Fox, and Steven M Seitz.
Dynamicfusion: Reconstruction and tracking of non-rigid
scenes in real-time. In IEEE Conf. on Computer Vision and
Pattern Recognition, pages 343–352, 2015. 1, 2

[52] Richard A Newcombe, Shahram Izadi, Otmar Hilliges,
David Molyneaux, David Kim, Andrew J Davison, Pushmeet
Kohi, Jamie Shotton, Steve Hodges, and Andrew Fitzgib-
bon. Kinectfusion: Real-time dense surface mapping and
tracking.
In IEEE International Symposium on Mixed and
Augmented Reality, pages 127–136, 2011. 2

[53] Mohamed Omran, Christop Lassner, Gerard Pons-Moll, Pe-
ter Gehler, and Bernt Schiele. Neural body ﬁtting: Unifying
deep learning and model based human pose and shape esti-
mation.
In International Conf. on 3D Vision, 2018. 1, 3,
5

1184

[54] Sergio Orts-Escolano, Christoph Rhemann, Sean Fanello,
Wayne Chang, Adarsh Kowdle, Yury Degtyarev, David Kim,
Philip L Davidson, Sameh Khamis, Mingsong Dou, et al.
Holoportation: Virtual 3d teleportation in real-time. In Sym-
posium on User Interface Software and Technology, pages
741–754. ACM, 2016. 1, 2

[55] Georgios Pavlakos, Luyang Zhu, Xiaowei Zhou, and Kostas
Daniilidis. Learning to estimate 3D human pose and shape
from a single color image. In IEEE Conf. on Computer Vision
and Pattern Recognition, 2018. 1, 3, 5, 6

[56] Gerard Pons-Moll, Sergi Pujades, Sonny Hu, and Michael
Black. ClothCap: Seamless 4D clothing capture and retar-
geting. ACM Transactions on Graphics, 36(4), 2017. 2

[57] Gerard Pons-Moll, Javier Romero, Naureen Mahmood, and
Michael J Black. Dyna: a model of dynamic human shape in
motion. ACM Transactions on Graphics, 34:120, 2015. 2

[58] Alin-Ionut Popa, Mihai Zanﬁr, and Cristian Sminchisescu.
Deep multitask architecture for integrated 2d and 3d human
sensing.
In IEEE Conf. on Computer Vision and Pattern
Recognition, 2017. 3

[59] Anurag Ranjan, Timo Bolkart, Soubhik Sanyal, and
Michael J. Black. Generating 3D faces using convolutional
mesh autoencoders. In European Conf. on Computer Vision,
pages 725–741, 2018. 6

[60] Helge Rhodin, Nadia Robertini, Dan Casas, Christian
Richardt, Hans-Peter Seidel, and Christian Theobalt. Gen-
eral automatic human shape and motion capture using volu-
metric contour cues. In European Conf. on Computer Vision,
pages 509–526. Springer, 2016. 1, 2

[61] Nadia Robertini, Dan Casas, Helge Rhodin, Hans-Peter Sei-
del, and Christian Theobalt. Model-based outdoor perfor-
mance capture. In International Conf. on 3D Vision, 2016.
2

[62] Gregory Rogez, Philippe Weinzaepfel, and Cordelia Schmid.
Lcr-net: Localization-classiﬁcation-regression for human
pose. In IEEE Conf. on Computer Vision and Pattern Recog-
nition, 2017. 3

[63] Lorenz Rogge, Felix Klose, Michael Stengel, Martin Eise-
mann, and Marcus Magnor. Garment replacement in monoc-
ular video sequences.
ACM Transactions on Graphics,
34(1):6, 2014. 2

[64] Ari Shapiro, Andrew Feng, Ruizhe Wang, Hao Li, Mark Bo-
las, Gerard Medioni, and Evan Suma. Rapid avatar capture
and simulation using commodity depth sensors. Computer
Animation and Virtual Worlds, 25(3-4):201–211, 2014. 2

[65] Miroslava Slavcheva, Maximilian Baust, Daniel Cremers,
and Slobodan Ilic. Killingfusion: Non-rigid 3d reconstruc-
tion without correspondences. In IEEE Conf. on Computer
Vision and Pattern Recognition, volume 3, page 7, 2017. 2

[66] Cristian Sminchisescu, Atul Kanaujia,

and Dimitris
Metaxas. Learning joint top-down and bottom-up processes
for 3d visual inference. In IEEE Conf. on Computer Vision
and Pattern Recognition, pages 1743–1752. IEEE, 2006. 3

[67] Jonathan Starck and Adrian Hilton. Surface capture for
IEEE Computer Graphics

performance-based animation.
and Applications, 27(3), 2007. 2

[68] Carsten Stoll, Nils Hasler, Juergen Gall, Hans-Peter Seidel,
and Christian Theobalt. Fast articulated motion tracking us-
ing a sums of gaussians body model. In IEEE International
Conf. on Computer Vision, pages 951–958. IEEE, 2011. 2

[69] Xiao Sun, Jiaxiang Shang, Shuang Liang, and Yichen Wei.
In IEEE Interna-

Compositional human pose regression.
tional Conf. on Computer Vision, volume 2, 2017. 3

[70] Yu Tao, Zerong Zheng, Kaiwen Guo, Jianhui Zhao, Dai
Quionhai, Hao Li, G. Pons-Moll, and Yebin Liu. Double-
fusion: Real-time capture of human performance with inner
body shape from a depth sensor. In IEEE Conf. on Computer
Vision and Pattern Recognition, 2018. 1, 3

[71] Denis Tome, Chris Russell, and Lourdes Agapito. Lifting
from the deep: Convolutional 3d pose estimation from a sin-
gle image. In IEEE Conf. on Computer Vision and Pattern
Recognition, 2017. 3

[72] Matthew Trumble, Andrew Gilbert, Adrian Hilton, and John
Collomosse. Deep autoencoder for combined human pose
estimation and body model upscaling. In European Conf. on
Computer Vision, sep 2018. 3

[73] Hsiao-Yu Tung, Hsiao-Wei Tung, Ersin Yumer, and Katerina
Fragkiadaki. Self-supervised learning of motion capture. In
Advances in Neural Information Processing Systems, pages
5236–5246, 2017. 3

[74] G¨ul Varol, Duygu Ceylan, Bryan Russell, Jimei Yang, Ersin
Yumer, Ivan Laptev, and Cordelia Schmid. Bodynet: Vol-
umetric inference of 3d human body shapes.
In European
Conf. on Computer Vision, 2018. 3

[75] G¨ul Varol, Javier Romero, Xavier Martin, Naureen Mah-
mood, Michael J. Black, Ivan Laptev, and Cordelia Schmid.
Learning from synthetic humans.
In IEEE Conf. on Com-
puter Vision and Pattern Recognition, 2017. 3

[76] Daniel Vlasic, Ilya Baran, Wojciech Matusik, and Jovan
Popovi´c. Articulated mesh animation from multi-view sil-
houettes.
In ACM Transactions on Graphics, volume 27,
page 97. ACM, 2008. 3

[77] Alexander Weiss, David Hirshberg, and Michael J Black.
Home 3d body scans from noisy image and range data. In
IEEE International Conf. on Computer Vision, pages 1951–
1958. IEEE, 2011. 1, 2

[78] Jinlong Yang,

Jean-S´ebastien Franco, Franck H´etroy-
Wheeler, and Stefanie Wuhrer. Analyzing clothing layer de-
formation statistics of 3d human motions. In European Conf.
on Computer Vision, pages 237–253, 2018. 3

[79] Mao Ye and Ruigang Yang. Real-time simultaneous pose
and shape estimation for articulated objects using a single
depth camera. In IEEE Conf. on Computer Vision and Pat-
tern Recognition, pages 2345–2352, 2014. 2

[80] Rui Yu, Chris Russell, Neill D. F. Campbell, and Lourdes
Agapito. Direct, dense, and deformable: Template-based
non-rigid 3d reconstruction from rgb video. In IEEE Inter-
national Conf. on Computer Vision, 2015. 2

[81] Andrei Zanﬁr, Elisabeta Marinoiu, and Cristian Sminchis-
escu. Monocular 3d pose and shape estimation of mul-
tiple people in natural scenes–the importance of multiple
scene constraints.
In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, pages 2148–
2157, 2018. 3

1185

[82] Ming Zeng, Jiaxiang Zheng, Xuan Cheng, and Xinguo Liu.
Templateless quasi-rigid shape modeling with implicit loop-
closure.
In IEEE Conf. on Computer Vision and Pattern
Recognition, pages 145–152, 2013. 2

[83] Chao Zhang, Sergi Pujades, Michael Black, and Gerard
Pons-Moll. Detailed, accurate, human shape estimation from
clothed 3D scan sequences. In IEEE Conf. on Computer Vi-
sion and Pattern Recognition, 2017. 3, 6

[84] Qing Zhang, Bo Fu, Mao Ye, and Ruigang Yang. Qual-
ity dynamic human body modeling using a single low-cost
depth camera. In IEEE Conf. on Computer Vision and Pat-
tern Recognition, pages 676–683. IEEE, 2014. 1, 2

[85] Qian-Yi Zhou and Vladlen Koltun. Color map optimization
for 3d reconstruction with consumer depth cameras. ACM
Transactions on Graphics, 33(4):155, 2014. 2

[86] Shizhe Zhou, Hongbo Fu, Ligang Liu, Daniel Cohen-Or, and
Xiaoguang Han. Parametric reshaping of human bodies in
images. In ACM Transactions on Graphics, volume 29, page
126. ACM, 2010. 1, 2

[87] Xingyi Zhou, Qixing Huang, Xiao Sun, Xiangyang Xue, and
Yichen Wei. Towards 3d human pose estimation in the wild:
A weakly-supervised approach. In IEEE Conf. on Computer
Vision and Pattern Recognition, pages 398–407, 2017. 3

[88] Michael Zollh¨ofer, Matthias Nießner, Shahram Izadi,
Christoph Rehmann, Christopher Zach, Matthew Fisher,
Chenglei Wu, Andrew Fitzgibbon, Charles Loop, Christian
Theobalt, et al. Real-time non-rigid reconstruction using an
rgb-d camera. ACM Transactions on Graphics, 33(4):156,
2014. 1, 2

[89] Silvia Zufﬁ and Michael J Black. The stitched puppet: A
graphical model of 3d human shape and pose. In IEEE Conf.
on Computer Vision and Pattern Recognition, pages 3537–
3546. IEEE, 2015. 2

1186

