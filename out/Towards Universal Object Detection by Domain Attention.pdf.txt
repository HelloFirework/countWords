Towards Universal Object Detection by Domain Attention

Xudong Wang1, Zhaowei Cai1, Dashan Gao2 and Nuno Vasconcelos1

1University of California, San Diego, 212 Sigma Technologies

{xuw080,zwcai,nuno}@ucsd.edu, dgao@12sigma.ai

Abstract

WiderFace

Watercolor

LISA

Despite increasing efforts on universal representations
for visual recognition, few have addressed object detection.
In this paper, we develop an effective and efﬁcient univer-
sal object detection system that is capable of working on
various image domains, from human faces and trafﬁc signs
to medical CT images. Unlike multi-domain models, this
universal model does not require prior knowledge of the
domain of interest. This is achieved by the introduction
of a new family of adaptation layers, based on the princi-
ples of squeeze and excitation, and a new domain-attention
mechanism. In the proposed universal detector, all param-
eters and computations are shared across domains, and
a single network processes all domains all the time. Ex-
periments, on a newly established universal object detec-
tion benchmark of 11 diverse datasets, show that the pro-
posed detector outperforms a bank of individual detectors,
a multi-domain detector, and a baseline universal detec-
tor, with a 1.3× parameter increase over a single-domain
baseline detector. The code and benchmark are available at
http://www.svcl.ucsd.edu/projects/universal-detection/.

1. Introduction

There has been signiﬁcant progress in object detection
in recent years [11, 44, 2, 26, 13, 3], powered by the avail-
ability of challenging and diverse object detection datasets,
e.g. PASCAL VOC [6], COCO [27], KITTI [9], WiderFace
[58], etc. However, existing detectors are usually domain-
speciﬁc, e.g. trained and tested on a single dataset. This is
partly due to the fact that object detection datasets are di-
verse and there is a nontrivial domain shift between them.
As shown in Figure 1, detection tasks can vary in terms of
categories (human face, horse, medical lesion, etc.), camera
viewpoints (images taken from aircrafts, autonomous vehi-
cles, etc.), image styles (comic, clipart, watercolor, medi-
cal), etc. In general, high detection performance requires a
detector specialized on the target dataset.

This poses a signiﬁcant problem for practical applica-
tions, which are not usually restricted to any one of the

DOTA

Clipart

MS-COCO

KITTI

Kitchen

Pascal VOC

Comic

DeepLesion

Figure 1. Samples of our universal object detection benchmark.

domains of Figure 1. Hence, there is a need for systems
capable of detecting objects regardless of the domain in
which images are collected. A simple solution is to design
a specialized detector for each domain of interest, e.g. use
D detectors trained on D datasets, and load the detector
specialized to the domain of interest at each point in time.
This, however, may be impractical, for two reasons. First,
in most applications involving autonomous systems the do-
main of interest can change frequently and is not necessar-
ily known a priori. Second, the overall model size increases
linearly with the number of domains D. A recent trend,
known as general AI, is to request that a single universal
model solves multiple tasks [21, 25, 62], or the same task
over multiple domains [40, 1]. However, existing efforts in
this area mostly address image classiﬁcation, rarely target-
ing the problem of object detection. The fact that modern
object detectors are complex systems, composed of a back-
bone network, proposal generator, bounding box regressor,
classiﬁer, etc., makes the design of a universal object detec-

7289

O1

O2

O3

O1

O2

O3

O1

O2

O3

O1

O2

O3

Feature 
Extractor

Feature 
Extractor

Feature 
Extractor

A1

A2

A3

Feature 
Extractor

A1

A2

A3

Feature 
Extractor

DA

Feature 
Extractor

DA

D1

D2

D3

D1

D2

D3

D1

D2

D3

D1

D2

D3

(a) Single-domain Detector Bank

(b) Adaptive

(c) Universal Detector

Multi-domain Detector

(d) Domain-attentive
Universal Detector

Figure 2. Multi-domain and universal object detectors for three domains. “D” is the domain, “O” the output, “A” domain-speciﬁc adapter,
and “DA” the proposed domain attention module. The blue color and the DA are domain-universal, but the other colors domain-speciﬁc.

tor much more challenging than a universal image classiﬁer.

In this work, we consider the design of an object detec-
tor capable of operating over multiple domains. We begin
by establishing a new universal object detection benchmark,
denoted as UODB, consisting of 11 diverse object detection
datasets (see Figure 1). This is signiﬁcantly more challeng-
ing than the Decathlon [40] benchmark for multi-domain
recognition. To the best of our knowledge, we are the ﬁrst
to attack universal object detection using deep learning. We
expect this new benchmark will encourage more efforts in
the area. We then propose a number of architectures, shown
in Figure 2, to address the universal/multi-domain detection
problem.

The two architecture on the left of Figure 2 are multi-
domain detectors, which require prior knowledge of the do-
main of interest. The two architectures on the right are uni-
versal detectors, with no need for such knowledge. When
operating on an unknown domain, the multi-domain detec-
tor have to repeat the inference process with different sets
of domain-speciﬁc parameters, while the universal detector
performs inference only once. The detector of Figure 2 (a)
is a bank of domain-speciﬁc detectors, with no sharing of
parameters/computations. Multi-domain learning (MDL)
[20, 35, 24, 59, 19, 5] improves on this, by sharing pa-
rameters across various domains, and adding small domain-
speciﬁc layers. In [40, 1], expensive convolutional layers
are shared and complemented with light-weight domain-
speciﬁc adaptation layers. Inspired by these, we propose
a new class of light adapters for detection, based on the
squeeze and excitation (SE) mechanism of [15], and de-
noted SE adapters. This leads to the multi-domain detector
of Figure 2 (b), where domain-speciﬁc SE adapters are in-
troduced throughout the network to compensate for domain
shift. On UODB, this detector outperforms that of Figure 2
(a) with ∼5 times fewer parameters.

In contrast,

the universal detector of Figure 2 (c)
shares all parameters/computations (other than output lay-

ers) across domains. It consists of a single network, which
is always active. This is the most efﬁcient solution in terms
of parameter sharing, but it is difﬁcult for a single model to
cover many domains with nontrivial domain shifts. Hence,
this solution underperforms the multi-domain detector of
Figure 2 (b). To overcome this problem, we propose the
domain-attentive universal detector of Figure 2 (d). This
leverages a novel domain attention (DA) module, in which
a bank of the new universal SE adapters (active at all times)
is ﬁrst added, and a feature-based attention mechanism is
then introduced to achieve domain sensitivity. This mod-
ule learns to assign network activations to different do-
mains, through the universal SE adapter bank, and soft-
routs their responses by the domain-attention mechanism.
This enables the adapters to specialize on individual do-
mains. Since the process is data-driven, the number of do-
mains does not have to match the number of datasets and
datasets can span multiple domains. This allows the net-
work to leverage shared knowledge across domains, which
is not available in the common single-domain detectors.
Our experiments, on the newly established UODB, show
that this data-driven form of parameter/computation sharing
enables substantially better multi-domain detection perfor-
mance than the remaining architectures of Figure 2.

2. Related Work

Object Detection: The two stage detection framework of
the R-CNN [12], Fast R-CNN [11] and Faster R-CNN [44]
detectors has achieved great success in recent years. Many
works have expanded this base architecture. For example,
MS-CNN [2] and FPN [26] built a feature pyramid to effec-
tively detect objects of various scales; the R-FCN [4] pro-
posed a position-sensitive pooling to achieve further speed-
ups; and the Cascade R-CNN [3] introduced a multi-stage
cascade for high quality object detection. In parallel, single-
stage object detectors, such as YOLO [42] and SSD [29],
became popular for their fairly good performance and high

7290

speed. However, none of these detectors could reach high
detection performance on more than one dataset/domain
without ﬁnetuning. In the pre-deep learning era, [23] pro-
posed a universal DPM [8] detector, by adding dataset spe-
ciﬁc biases to the DPM. But this solution is limited since
DPM is not comparable to deep learning detectors.
Multi-Task Learning: Multi-task learning (MTL) investi-
gates how to jointly learn multiple tasks simultaneously, as-
suming a single input domain. Various multi-task networks
[25, 62, 13, 28, 50, 63] have been proposed for joint solu-
tion of tasks such as object recognition, object detection,
segmentation, edge detection, human pose, depth, action
recognition, etc., by leveraging information sharing across
tasks. However, the sharing is not always beneﬁcial, some-
times hurting performance [7, 22]. To address this, [32]
proposed a cross-stitch unit, which combines tasks of dif-
ferent types, eliminating the need to search through several
architectures on a per task basis. [62] studied the common
structure and relationships of several different tasks.
Multi-Domain Learning/Adaptation: Multi-domain
learning (MDL) addresses the learning of representations
for multiple domains, known a priori [20, 36].
It uses
a combination of parameters that are shared across do-
mains and domain-speciﬁc parameters.
The latter are
adaptation parameters,
inspired by works on domain
adaptation [38, 30, 46, 31], where a model learned from a
source domain is adapted to a target domain. [1] showed
that multi-domain learning is feasible by simply adding
domain-speciﬁc BN layers to an otherwise shared network.
[40] learned multiple visual domains with residual adapters,
while [41] empirically studied efﬁcient parameterizations.
However, they build on BN layers and are not suitable for
detection, due to the batch constraints of detector training.
Instead, we propose an alternative SE adapters, inspired by
“Squeeze-and-Excitation” [15], to solve this problem.
Attention Module: [49] proposed a self-attention module
for machine translation, and similarly, [51] proposed a non-
local network for video classiﬁcation, based on a spacetime
dependency/attention mechanism.
[15] focused on chan-
nel relationships, introducing the SE module to adaptatively
recalibrate channel-wise feature responses, which achieved
good results on ImageNet recognition. In this work, we in-
troduce a domain attention module inspired by SE to make
data-driven domain assignments of network activations, for
the more challenging problem of universal object detection.

3. Multi-domain Object Detection

The problem of multi-domain object detection is to de-

tect objects on various domains.

3.1. Universal Object Detection Benchmark

To train and evaluate universal/multi-domain object de-
tection systems, we established a new universal object de-

tection benchmark (UODB) of 11 datasets: Pascal VOC [6],
WiderFace [58], KITTI [9], LISA [33], DOTA [53], COCO
[27], Watercolor [17], Clipart [17], Comic [17], Kitchen
[10] and DeepLesions [55]. This set includes the popu-
lar VOC [6] and COCO [27], composed of images of ev-
eryday objects, e.g. bikes, humans, animals, etc. The 20
VOC categories are replicated on CrossDomain [17] with
three subsets of Watercolor, Clipart and Comic, with objects
depicted in watercolor, clipart and comic styles, respec-
tively. Kitchen [10] consists of common kitchen objects,
collected with an hand-held Kinect, while WiderFace [58]
contains human faces, collected on the web. Both KITTI [9]
and LISA [33] depict trafﬁc scenes, collected with cameras
mounted on moving vehicles. KITTI covers the categories
of vehicle, pedestrian and cyclist, while LISA is composed
of trafﬁc signs. DOTA [53] is a surveillance-style dataset,
containing objects such as vehicles, planes, ships, harbors,
etc. imaged from aerial cameras. Finally DeepLesion [55]
is a dataset of lesions on medical CT images. A represen-
tative example of each dataset is shown in Figure 1. Some
more details are summarized in Table 1. Altogether, UODB
covers a wide range of variations in category, camera view,
image style, etc, and thus establishes a good suite for the
evaluation of universal/multi-domain object detection.

3.2. Single-domain Detector Bank

The Faster R-CNN [44] is used as the baseline architec-
ture of all detectors proposed in this work. As a single-
domain object detector, the Faster R-CNN is implemented
in two stages. First, a region proposal network (RPN) pro-
duces preliminary class-agnostic detection hypotheses. The
second stage processes these with a region-of-interest de-
tection network to output the ﬁnal detections.

As illustrated in Figure 2 (a), the simplest solution to
multi-domain detection is to use an independent detector
per dataset. We use this detector bank as a multi-domain de-
tection baseline. This solution is the most expensive, since
it implies replicating all parameters of all detectors. Fig-
ure 3 shows the statistics (mean and variance) of the convo-
lutional activations of the 11 detectors on the correspond-
ing dataset. Some observations can be made. First, these
statistics vary non-trivially across datasets. While the acti-
vation distributions of VOC and COCO are similar, DOTA,
DeepLesion and CrossDomain have relatively different dis-
tributions. Second, the statistics vary across network layers.
Early layers, which are more responsible for correcting do-
main shift, have more evident differences than latter layers.
This tends to hold up to the output layers. These are respon-
sible for the assignment of images to different categories
and naturally differ. Interestingly, this behavior also holds
for RPN layers, even though they are category-independent.
Third, many layers have similar statistics across datasets.
This is especially true for intermediate layers, suggesting

7291

n
a
e
m

e
c
n
a
i
r
a
v

stage1 to stage4

rpn stage5 rcnn

Figure 3. The activation statistics of all single-domain detectors.

layer index

that they can be shared by at least some domains.

3.3. Adaptive Multi-domain Detector

Inspired by Figure 3, we propose an adaptive multi-
domain detector, shown in Figure 2 (b). In this model, the
output and RPN layers are domain-speciﬁc. The remain-
der of the network, e.g. all convolutional layers, is shared.
However, to allow adaptation to new domains, we intro-
duce some additional domain-speciﬁc layers, as is com-
monly done in MDL [40, 1]. These extra layers should be 1)
sufﬁciently powerful to compensate for domain shift; 2) as
light as possible to minimize parameters/computation. The
adaptation layers of [40, 1] rely extensively on BN. This is
unfeasible for detection, where BN layers have to be frozen,
due to the small batch sizes allowable for detector training.
Instead, we have experimented with the squeeze-and-
excitation (SE) module [15] of Figure 4 (a). There are
a few reasons for this. First, feature-based attention is
well known to be used in mammalian vision as a mech-
anism to adapt perception to different tasks and environ-
ments [61, 37, 52, 18, 60]. Hence, it seems natural to con-
sider feature-based attention mechanisms for domain adap-
tation. Second, the SE is a module that accounts for in-
terdependencies among channels to modulate channel re-
sponses. This can be seen as a a feature-based attention
mechanism. Third the SE module has enabled the SENet to
achieve state-of-the-art classiﬁcation on ImageNet. Finally,
it is a light-weight module. Even when added to each resid-
ual block of the ResNet [14] it increases the total parameter
count by only ∼10%. This is close to what was reported
by [40] for BN-based adapters. For all these reasons, we
adopt the SE module as the atomic adaptation unit, used to
build all domain adaptive detectors proposed in this work,
and denote it by the SE adapter.

Residual

Residual

Global pooling

(cid:27)
(cid:6)(cid:3400)(cid:11)(cid:3400)(cid:26)
(cid:6)(cid:3400)(cid:883)(cid:3400)(cid:883)
(cid:6)(cid:148)(cid:3400)(cid:883)
(cid:6)(cid:148)(cid:3400)(cid:883)
(cid:6)(cid:3400)(cid:883)
(cid:6)(cid:3400)(cid:883)(cid:3400)(cid:883)

FC

ReLU

FC

Sigmoid

(cid:6)(cid:3400)(cid:11)(cid:3400)(cid:26)

Scale

(cid:3561)(cid:27)

(cid:6)(cid:3400)(cid:11)(cid:3400)(cid:26)

Global pooling

FC

FC

FC

ReLU ReLU ReLU

FC

FC

FC

Sigmoid

(cid:27)
(cid:6)(cid:3400)(cid:883)(cid:3400)(cid:883)
(cid:6)(cid:148)(cid:3400)(cid:883)
(cid:6)(cid:148)(cid:3400)(cid:883)
(cid:6)(cid:3400)(cid:883)
(cid:6)(cid:3400)(cid:883)(cid:3400)(cid:883)
(cid:3561)(cid:27)

Scale

(cid:6)(cid:3400)(cid:11)(cid:3400)(cid:26)

(a) SE adapter

(b) SE adapter bank

Figure 4. (a) block diagram of SE adapter and (b) SE adapter bank.

3.4. SE Adapters

Following [15], the SE adapter consists of the sequence
of operations of Figure 4 (a): a global pooling layer, a fully
connected (FC) layer, a ReLU layer, and a second FC layer,
implementing the computation

XSE = FSE(Favg(X)),

(1)

where Favg is a global average pooling operator, and FSE
the combination of FC+ReLU+FC layers. The channel di-
mension reduction factor r, in Figure 4, is set as 16 in our
experiments. To enable multi-domain object detection, the
SE adapter is generalized to the architecture of Figure 4 (b),
which is denoted as the SE adapter bank. This consists
of adding a SE adapter branch per domain and a domain-
switch, which allows the selection of the SE adapter associ-
ated with the domain of interest. Note that this architecture
assumes this domain to be known a priori. It leads to the
multi-domain detector of Figure 2 (b). Compared to Figure
2 (a), this model is up to 5 times smaller, while achieving
better overall performance across the 11 datasets.

4. Universal Object detection

The detectors of the previous section require prior
knowledge of the domain of interest. This is undesirable for
autonomous systems, like robots or self-driving cars, where
determining the domain is part of the problem to solve. In
this section, we consider the design of universal detectors,
which eliminate this problem.

4.1. Universal Detector

The simplest solution to universal detection, shown in
Figure 2 (c), is to share a single detector by all tasks. Note
that, even for this detector, the output layer has to be task-
speciﬁc, by deﬁnition of the detection problem. We have
found that there is also a beneﬁt in using task-speciﬁc RPN
layers, due to the observations of Figure 3. This is not a

7292

domain attention

global average 

pooling

global average 

pooling

global average 

pooling

(cid:6)(cid:3400)(cid:11)(cid:3400)(cid:26)

SE Adapter 1

adaptive 

recalibration

SE Adapter 2

adaptive 

recalibration

SE Adapter N

adaptive 

recalibration

(cid:6)(cid:3400)(cid:883)(cid:3400)(cid:883)
(cid:6)(cid:3400)(cid:883)(cid:3400)(cid:883)
(cid:6)(cid:3400)(cid:883)(cid:3400)(cid:883)

channel attention 

channel attention 

(cid:6)(cid:3400)(cid:883)
(cid:6)(cid:3400)(cid:883)
(cid:6)(cid:3400)(cid:883)

channel attention 

skip connection

concatenate

(cid:6)(cid:3400)(cid:17) (cid:17)(cid:3400)(cid:883)

domain assignment

×

matrix 

multiplication

universal SE 
adapter bank

domain sensitive 
channel attention

(cid:6)(cid:3400)(cid:883)(cid:3400)(cid:883)

×

channel-wise
multiplication

(cid:6)(cid:3400)(cid:11)(cid:3400)(cid:26)

Residual

FC

FC

ReLU

(cid:27)
(cid:6)(cid:3400)(cid:11)(cid:3400)(cid:26)
(cid:6)(cid:3400)(cid:883)(cid:3400)(cid:883)
(cid:6)(cid:148)(cid:3400)(cid:883)
(cid:6)(cid:148)(cid:3400)(cid:883)
(cid:6)(cid:3400)(cid:883)
(cid:6)(cid:3400)(cid:17)
(cid:6)(cid:3400)(cid:883)(cid:3400)(cid:883)
(cid:6)(cid:3400)(cid:883)(cid:3400)(cid:883)
(cid:3561)(cid:27)

(cid:6)(cid:3400)(cid:11)(cid:3400)(cid:26)

Scale

Global pooling

FC

FC

ReLU

ReLU

FC

FC

Concatenate

Scale

Sigmoid

Global pooling (cid:6)(cid:3400)(cid:883)
(cid:17)(cid:3400)(cid:883)
(cid:17)(cid:3400)(cid:883)

Domain Assignment

Softmax

FC

Figure 5. The block diagram (left) and the detailed view (right) of the proposed domain adaptation module.

problem because the task, namely what classes the system is
trying to detect, is always known. Universality refers to the
domain of input images that the detector processes, which
does not have to be known in the case of Figure 2 (c). Be-
yond universal, the fully shared detector is the most efﬁcient
of all detectors considered in this work, as it has no domain-
speciﬁc parameters. On the other hand, by forcing the same
set of parameters/representations on all domains, it has little
ﬂexibility to deal with the statistical variations of Figure 3.
In our experiments, this detector usually underperforms the
multi-domain detectors of Figure 2 (a) and (b).

4.2. Domain-attentive Universal Detector

Ideally, a universal detector should have some domain
sensitivity, and be able to adapt to different domains. While
this has a lot in common with multi-domain detection, there
are two main differences. First, the domain must be inferred
automatically. Second, there is no need to tie domains and
tasks. For example, the trafﬁc tasks of Figure 1 operate on
a common visual domain, “trafﬁc scenes”, which can have
many sub-domains, e.g. due to weather conditions (sunny
vs. rainy), environment (city vs. rural ), etc. Depending on
the speciﬁc operating conditions, any of the tasks may have
to be solved in any of the domains. In fact, the domains may
not even have clear semantics, i.e. they can be data-driven.
In this case, there is no need to request that each detector
operates on a single domain, and a soft domain-assignment
makes more sense. Given all of this, while domain adapta-
tion can still be implemented with the SE adapter of Fig-
ure 4 (a), the hard attention mechanism of Figure 4 (b),
which forces the network to fully attend to a single domain,
can be suboptimal. To address this limitations, we propose
the domain adaptation (DA) module of Figure 5. This has
two components, a universal SE adapter bank and a domain
attention mechanism, which are discussed next.

4.3. Universal SE Adapter Bank

The universal SE (USE) Adapter Bank, shown in Figure
5, is an SE adapter bank similar to that of Figure 4 (b). The
main difference is that there is no domain switching, i.e. the

adapter bank is universal. This is implemented by concate-
nating the outputs of the individual domain adapters to form
a universal representation space

XU SE = [X1

SE, X2

SE, ..., XN

SE] ∈ RC×N ,

(2)

where N is the number of adapters and Xi
SE the output of
each adapter, given by (1). Note that N is not necessar-
ily identical to the number of detection tasks. The USE
adapter bank can be seen as a non-linear generalization of
the ﬁlter banks commonly used in signal processing [48].
Each branch (non-linearly) projects the input along a sub-
space matched to the statistics of a particular domain. The
attention component then produces a domain-sensitive set
of weights that are used to combine these projections in a
data-driven way. In this case, there is no need to know the
operating domain in advance. In fact there may not even be
a single domain, since an input image can excite multiple
SE adapter branches.

4.4. Domain Attention

The attention component, of Figure 5, produces a
domain-sensitive set of weights that are used to combine
the SE bank projections. Motivated by the SE module, the
domain attention component ﬁrst applies a global pooling
to the input feature map, to remove spatial dimensions, and
then a softmax layer (linear layer plus softmax function)

SDA = FDA(X) = softmax(WDAFavg(X)),

(3)

where WDA ∈ RN ×C is the matrix of softmax layer
weights. The vector SDA is then used to weigh the USE
bank output XU SE, to produce a vector of domain adaptive
responses

XDA = XU SESDA ∈ RC×1.

(4)

As in the SE module of [15], XDA is ﬁnally used to channel-
wise rescale the activations X ∈ RC×H×W being adapted,

åX = Fscale(X, σ(XDA))

(5)

where Fscale(·) implements a channel-wise multiplication,
and σ is the sigmoid function.

7293

dataset

KITTI

WiderFace

VOC

LISA

DOTA

COCO

Watercolor

Clipart

Comic

Kitchen

DeepLesion

Average

dataset details

hyperparameters

class

T/V/T

domain

size BS

RoIs S/R

3

1

20

4

15

80

6

6

20

11

1

-

7k/-/7k

trafﬁc

13k/3k/16k

face

8k/8k/5k

natural

8k/-/2k

14k/5k/10k

trafﬁc

aerial

35k/5k/-

natural

576

800

600

800

600

800

1k/-/1k watercolor 600

0.5k/-/0.5k

clipart

1k/-/1k

5k/-/2k

comic

indoor

23k/5k/5k medical

-

-

600

600

800

512

-

256

256

256

64

128

256

256

256

256

256

128

-

128

256

256

32

128

256

256

256

256

256

64

-

12/3

12/1

4/3

4/3

12/3

4/3

4/3

4/3

4/3

12/3

12/3

-

mAP

64.3

48.9

78.5

88.3

57.5

47.3

52.4

32.1

45.8

87.7

51.3

59.4

Table 1. The dataset details, the domain-speciﬁc hyperparame-
ters and the performance of the single-domain detectors. “T/V/T”
means train/val/test, “size” the shortest side of inputs, BS RPN
batch size, and S/R anchor “scales/aspect ratios”.

In this way, the USE bank captures the feature subspaces
of the domains spanned by all datasets, and the DA mech-
anism soft-routes the USE projections. Both operations are
data-driven, and operate with no prior knowledge of the do-
main. Unlike the hard attention mechanism of Figure 4
(b), this DA module enables information sharing across do-
mains, leading to a more effective representation. In our ex-
periments, the domain-attentive universal detector outper-
forms the other detectors of Figure 2.

5. Experiments

In all experiments, we used a PyTorch implementation
[57] of the Faster R-CNN with the SE-ResNet-50 [15] pre-
trained on ImageNet, as the backbone for all detectors.
Training started with a learning rate of 0.01 for 10 epochs
and 0.001 for another 2 epochs on 8 synchronized GPUs,
each holding 2 images per iteration. All samples of a batch
are from a single (randomly sampled) dataset, and in each
epoch, all samples of each dataset are processed only once.
As is common for detection, the ﬁrst convolutional layer,
the ﬁrst residual block and all BN layers are frozen, during
training. These settings were used in all experiments, unless
otherwise noted. Both multi-domain and universal detectors
were trained on all domains of interest simultaneously.

The Faster R-CNN has many hyperparameters.

In the
literature, where detectors are tested on a single domain,
these are tuned to the target dataset, for best performance.
This is difﬁcult, and very tedious, to do over the 11 datasets
now considered. We use the same hyperparameters across
datasets, except when this is critical for performance and
relatively easy to do, e.g. the choice of anchors. The main
dataset-speciﬁc hyperparameters are shown in Table 1.

5.1. Datasets and Evaluation

Our experiments used the new UODB benchmark intro-
duced in Section 3.1. For Watercolor [17], Clipart [17],

Params

time KITTI VOC WiderFace LISA Kitchen Avg

single-domain

31.06M×5

adaptive

BNA [1]

RA [40]

universal
universal+DA†

42.37M

31.72M

82.72M

31.64M

5x

6x

5x

6x

1x

42.37M 1.3x

universal+DA

42.44M 1.33x

64.3

67.8

64.0

64.3

66.3

67.5

67.9

78.5

78.9

71.9

70.5

76.7

79.0

79.2

48.8

49.9

44.0

46.9

45.5

49.8

52.2

88.3

88.5

66.8

69.1

88.4

88.2

87.5

87.7

86.0

84.3

84.6

85.4

88.0

88.5

73.5

74.2

66.2

67.1

72.5

74.6

75.1

Table 2. The comparison on multi-domain detection. † denotes
ﬁxed assignment. “time” is the relatively run-times on the ﬁve
datasets when the domain is unknown.

Comic [17], Kitchen [10] and DeepLesion [55], we trained
on the ofﬁcial trainval sets and tested on the test set.
For Pascal VOC [6], we trained on VOC2007 and VOC2012
trainval set and tested on VOC2007 test set. For
WiderFace [58], we trained on the train set and tested on
the val set. For KITTI [9], we followed the train/val split-
ting of [2] for development and trained on the trainval
set for the ﬁnal results on test set. For LISA [33], we
trained on the train set and tested on the val set. For
DOTA [53], we followed the pre-processing of [53], trained
on train set and tested on val set. For MS-COCO
[27], we trained on COCO 2014 valminusminival and
tested on minival, to shorten the experimental period.

All detectors were evaluated on each dataset individu-
ally. The Pascal VOC mean average precision (mAP) was
used for evaluation in all cases. The average mAPs was
used as the overall measure of universal/multi-domain de-
tection performance. The domain attentive universal detec-
tor was also evaluated using the ofﬁcial evaluation tool of
each dataset, for comparison with the literature.

5.2. Single-domain Detection

Table 1 shows the results of the single-domain detector
bank of Figure 2 (a) on all datasets. Our VOC baseline with
the SE-ResNet-50 is 78.5, and better than the Faster R-CNN
performance of [45, 14] (76.4 mAP for ResNet-101). The
other entries in the table are incomparable to the literature,
where different evaluation metrics/tools are used for differ-
ent datasets. The detector bank is a fairly strong baseline
for multi-domain detection (average mAP of 59.4).

5.3. Multi-domain Detection

Table 2 compares the multi-domain object detection per-
formance of all architectures of Figure 2. For simplic-
ity, only ﬁve datasets (VOC, KITTI, WiderFace, LISA and
Kitchen) were used in this section. The table conﬁrms that
the adaptive multi-domain detector of Section 3.3 (“adap-
tive”) is light-weight, only adding ∼11M parameters to the
Faster R-CNN over the ﬁve datasets. Nevertheless, it out-
performs the much more expensive single-domain detector
bank by 0.7 points. Note that the latter is a strong base-
line, showing the multi-domain detector can beat individu-
ally trained models with a fraction of the computation. Ta-

7294

# adapters

Params

DA index KITTI VOC WiderFace LISA Kitchen COCO DOTA DeepLesion Comic Clipart Watercolor

single-domain

universal

adaptive

universal+DA

universal+DA*

-

-

11

11

6

31.06M×11

32.60M

58.13M

58.29M

-

-

-

all

41.74M ﬁrst+middle

64.3

67.5

68.0

68.1

67.6

78.5

80.9

82.1

82.0

82.7

48.8

45.5

50.6

51.6

51.8

88.3

87.1

88.5

88.3

87.9

87.7

88.5

87.2

90.1

88.7

47.3

45.5

45.7

46.5

46.8

57.5

54.7

54.1

57.0

57.0

51.2

45.3

53.0

57.3

54.8

45.8

51.1

50.0

50.7

52.6

32.1

43.1

56.1

53.1

54.6

52.6

47.0

57.8

58.4

58.2

Avg

59.4

59.7

63.0

63.8

63.9

Table 3. Overall results on the full universal object detection benchmark (11 datasets).

# adapters

Params

KITTI VOC WiderFace LISA Kitchen Avg

single

31.06M×5

1

3

5

7

32.32M

37.38M

42.44M

47.50M

64.3

66.3

67.8

67.9

67.9

78.5

74.9

78.4

79.2

79.6

48.8

43.5

47.1

52.2

52.2

88.3

87.4

87.7

87.5

89.5

87.7

85.4

89.0

88.5

88.7

73.5

71.3

74.1

75.1

75.6

Table 4. The effect of SE adapters number.

ble 2 also shows that the proposed SE adapter signiﬁcantly
outperforms the BN adapter (BNA) of [1] and the residual
adapter (RA) or [40], previously proposed for classiﬁcation.
This is not surprising, given the above discussed inadequacy
of BN as an adaptation mechanism for object detection.

The universal detector of Figure 2 (c) is even more
efﬁcient, adding only 0.5M parameters to the Faster R-
CNN, accounting for domain-speciﬁc RPN and output lay-
ers. However, its performance (“universal” in Table 2) is
much weaker than that of the adaptive multi-domain de-
tector (1.7 points). Finally, the domain-attentive universal
detector (“universal+DA”) has the best performance. With
a ∼7% parameter increase per domain, i.e. comparable to
the multi-domain detector, it outperforms the single-domain
bank baseline by 1.6 points. To assess the importance of
data-driven domain attention mechanism of Figure 5 (b),
we ﬁxed the soft domain assignments, simply averaging
the SE adapter responses, during both training and infer-
ence. This (denoted “universal+DA†”) caused a perfor-
mance drop of 0.5 point. Finally, Table 2 shows the rela-
tive run-times of all methods on the ﬁve datasets, when the
domain is unknown. It can be seen that “universal+DA” is
about 4× faster than the multi-domain detectors (“single-
domain” and “adaptive”) and only 1.33× slower than “uni-
versal”.

5.4. Effect of the number of SE adapters

For the USE bank of Figure 5 (b), the number N of SE
adapters does not have to match the number of detection
tasks. Table 4 summarizes how the performance of the do-
main attentive universal detector depends on N . For sim-
plicity, we again use 5 datasets in this experiment. For a
single adapter, the DA module reduces to the standard SE
module, and the domain attentive universal detector to the
universal detector. This has the worst performance. Perfor-
mance improves with the number of adapters. On the other
hand, the number of parameters increases linearly with the
number of adapters. In these experiments, the best trade-off
between performance and parameters is around 5 adapters.

Figure 6. Soft assignments across SE units for all datasets.

This suggests that, while a good rule of thumb is to use
“as many adapters as domains”, fewer adapters can be used
when complexity is at a premium.

5.5. Results on the full benchmark

Table 3 presents results on the full benchmark. The set-
tings are as above, but we used 10 epochs with learning rate
0.1, and then 4 epochs with 0.01 on 8 GPUs, each hold-
ing 2 images. The universal detector performs compara-
bly to the single-domain detector bank, with 10 times fewer
parameters. The domain-attentive universal detector (“uni-
versal+DA”) improves baseline performance by 4.4 points
with a 5-fold parameter decrease. It has large performance
gains (>5 points) on DeepLesion, Comic, and Clipart. This
is because Comic/Clipart contain underpopulated classes,
greatly beneﬁting from information leveraged from other
domains. The large gain of DeepLesion is quite interest-
ing, given the nontrivial domain shift between its medical
CT images and the RGB images of the other datasets. The
gains are mild for VOC, KITTI, Kitchen, WiderFace and
WaterColor (1∼5 points), and none for COCO, LISA and
DOTA. In contrast, for the universal detector, joint training
is not always beneﬁcial. This shows the importance of do-
main sensitivity for universal detection.

To investigate what was learned by the domain attention
module of Figure 5 (b), we show the soft assignments of
each dataset, averaged over its validation set, in Figure 6.
Only the ﬁrst and last blocks of the 4th and 5th residual

7295

Backbone
ResNet-101
ResNet-50

Faster-RCNN [44]
R-FCN [4]
Faster-RCNN‡ [45]
Faster-RCNN (ours) SE-ResNet-50
SE-ResNet-50
Faster-RCNN+DA
Faster-RCNN+DA† SE-ResNet-50

VGG16

mAP
76.4
77.0
78.8
78.5
79.6
82.7

Faster-RCNN [44]
MS-CNN [2]
HR [16]
SSH [34]
Faster-RCNN (ours)
Faster-RCNN+DA

Backbone
VGG-16
VGG-16

ResNet-101

VGG-16

SE-ResNet-50
SE-ResNet-50

Easy Medium Hard
0.907
0.492
0.802
0.916
0.806
0.925
0.845
0.931
0.556
0.910
0.914
0.587

0.850
0.903
0.910
0.921
0.872
0.882

Faster-RCNN [44]
R-FCN [4]
3-DCE, 9 Slices [54]
3-DCE, 27 Slices [54]
Faster-RCNN (ours)
Faster-RCNN+DA

Backbone
VGG-16
VGG-16
VGG-16
VGG-16

SE-ResNet-50
SE-ResNet-50

Sensitivity

81.62
82.21
84.34
85.65
82.44
87.29

(a) The comparison on VOC 2007 test.
‡/† denotes with COCO trainval/val.

(b) The comparison on WiderFace Val.

(c) Sensitivity at 4 FPs per image on DeepLe-
sion test set.

ADDA [47]
Faster-RCNN[44]
SSD300 [29]
Faster-RCNN+DT+PL[17]
SSD300+DT+PL[17]
Faster-RCNN (ours)
Faster-RCNN+DA

Backbone
VGG-16
VGG-16
VGG-16
VGG-16
VGG-16

SE-ResNet-50
SE-ResNet-50

Clipart Watercolor Comic

27.4
26.2
26.8
34.9
46.0
32.1
54.6

49.8

-

49.6

-

54.3
52.6
58.2

49.8

-

24.9

-

37.2
45.8
52.6

Faster-RCNN [44]
SDP+CRC [56]
YOLOv3 [43]
MS-CNN [2]
F-PointNet [39]
Faster-RCNN (ours)
Faster-RCNN+DA

Backbone
VGG-16
VGG-16

Darknet-53

VGG-16
PointNet

SE-ResNet-50
SE-ResNet-50

Moderate

81.84
83.53
84.13
88.83
90.00
81.83
88.23

Easy
86.71
90.33
84.30
90.46
90.78
90.34
90.45

Hard
71.12
71.13
76.34
74.76
80.80
71.23
74.21

(d) The comparison on Clipart, Watercolor and Comic test set.

(e) The comparison on KITTI test set of car.

Table 5. The comparison with ofﬁcial evaluation on Pascal VOC, KITTI, DeepLesion, Clipart, Watercorlor, Comic and WiderFace.

stages are shown. The fact that some datasets, e.g. VOC and
COCO, have very similar assignment distributions, suggests
a substantial domain overlap. On the other hand, DOTA
and DeepLesion have distributions quite distinct from the
remaining. For example, on block “DA 4 1”, DeepLesion
fully occupies a single domain. These observations are con-
sistent with Figure 3, indicating that the proposed DA mod-
ule is able to learn domain-speciﬁc knowledge.

A comparison of the ﬁrst and the last blocks of each
residual stage, e.g. “DA 4 1” v.s. “DA 4 6”, shows that
the latter are much less domain sensitive than the former,
suggesting that they could be made universal. To test this
hypothesis, we trained a model with only 6 SE adapters for
the 11 datasets, and only in the ﬁrst and middle blocks, e.g.
“DA 4 1” and “DA 4 3”. This model, “universal+DA*”,
achieved the best performance with much less parameters
than the “universal+DA” detector of 11 adapters. It outper-
formed the single domain baseline by 4.5 points.

5.6. Ofﬁcial evaluation

Since, to the best of our knowledge, this is the ﬁrst work
to explore universal/multi-domain object detection on 11
datasets, there is no literature for a direct comparison. In-
stead, we compared the “universal+DA*” detector of Ta-
ble 3 to the literature using the ofﬁcial evaluation for each
dataset. This is an unfair comparison, since the universal de-
tector has to remember 11 tasks. On VOC, we trained two
models, with/without COCO. Results are shown in Table
5a, where all methods were trained on Pascal VOC 07+12
trainval. Note that our Faster R-CNN baseline ( SE-
ResNet-50 backbone) is stronger than that of [14] (ResNet-
101). Adding universal domain adapters improved on the
baseline by more than 1.1 points. Adding COCO enabled
another 3.1 points. Note that, 1) this universal training
is different from the training scheme of [45] (the network
trained on COCO then ﬁnetuned on VOC), where the ﬁnal
model is only optimized for VOC; and 2) only the 35k im-

ages of COCO2014 valminusminival were used.

The baseline was the default Faster R-CNN that initially
worked on VOC, with minimum dataset-speciﬁc changes,
e.g. in Table 1. Table 5e shows that this performed weakly
on KITTI. However, the addition of adapters, enabled a
gain of 6.4 points (Moderate setting). This is compara-
ble to detectors optimized explicitly on KITTI, e.g. MS-
CNN [2] and F-PointNet [39]. For WiderFace, which has
enough training face instances, the gains of shared knowl-
edge are smaller (see Table 5b). On the other hand, on
DeepLesion and CrossDomain (Clipart, Comic and Water-
color), see Table 5c and 5d respectively, the domain atten-
tive universal detector signiﬁcantly outperformed the state-
of-the-art. Overall, these results show that a single de-
tector, which operates on 11 datasets, is competitive with
single-domain detectors in highly researched datasets, such
as VOC or KITTI, and substantially better than the state-
of-the-art in less explored domains. This is achieved with a
relatively minor increase in parameters, vastly smaller than
that needed to deploy 11 single task detectors.

6. Conclusion

We have investigated the unexplored and challenging
problem of universal/multi-domain object detection. We
proposed a universal detector that requires no prior domain
knowledge, consisting of a single network that is active for
all tasks. The proposed detector achieves domain sensitivity
through a novel data-driven domain adaptation module and
was shown to outperform multiple universal/multi-domain
detectors on a newly established benchmark, and even indi-
vidual detectors optimized for a single task.

Acknowledgment This work was partially funded by NSF
awards IIS-1546305 and IIS-1637941, a gift from 12 Sigma
Technologies, and NVIDIA GPU donations.

7296

References

[1] Hakan Bilen and Andrea Vedaldi. Universal representations:
The missing link between faces, text, planktons, and cat
breeds. arXiv preprint arXiv:1701.07275, 2017.

[2] Zhaowei Cai, Quanfu Fan, Rogerio S Feris, and Nuno Vas-
concelos. A uniﬁed multi-scale deep convolutional neural
network for fast object detection. In ECCV, pages 354–370,
2016.

[3] Zhaowei Cai and Nuno Vasconcelos. Cascade R-CNN: Delv-

ing into high quality object detection. In CVPR, 2018.

[4] Jifeng Dai, Yi Li, Kaiming He, and Jian Sun. R-fcn: Object
detection via region-based fully convolutional networks. In
NeurIPS, pages 379–387, 2016.

[5] Mark Dredze, Alex Kulesza, and Koby Crammer. Multi-
domain learning by conﬁdence-weighted parameter combi-
nation. Machine Learning, 79(1-2):123–149, 2010.

[6] Mark Everingham, SM Ali Eslami, Luc Van Gool, Christo-
pher KI Williams, John Winn, and Andrew Zisserman. The
pascal visual object classes challenge: A retrospective. Inter-
national journal of computer vision, 111(1):98–136, 2015.

[7] Theodoros Evgeniou, Charles A Micchelli, and Massimil-
iano Pontil. Learning multiple tasks with kernel methods.
Journal of Machine Learning Research, 6(Apr):615–637,
2005.

[8] Pedro F Felzenszwalb, Ross B Girshick, David McAllester,
and Deva Ramanan. Object detection with discriminatively
trained part-based models.
IEEE transactions on pattern
analysis and machine intelligence, 32(9):1627–1645, 2010.

[9] Andreas Geiger, Philip Lenz, and Raquel Urtasun. Are we
ready for autonomous driving? the kitti vision benchmark
suite. In CVPR, pages 3354–3361, 2012.

[10] Georgios Georgakis, Md Alimoor Reza, Arsalan Mousavian,
Phi-Hung Le, and Jana Kosecka. Multiview rgb-d dataset for
object instance detection. arXiv preprint arXiv:1609.07826,
2016.

[11] Ross Girshick. Fast r-cnn. In ICCV, pages 1440–1448, 2015.

[12] Ross Girshick, Jeff Donahue, Trevor Darrell, and Jitendra
Malik. Rich feature hierarchies for accurate object detection
and semantic segmentation. In CVPR, pages 580–587, 2014.

[13] Kaiming He, Georgia Gkioxari, Piotr Doll´ar, and Ross Gir-

shick. Mask r-cnn. In ICCV, pages 2980–2988, 2017.

[14] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun.
In CVPR,

Deep residual learning for image recognition.
pages 770–778, 2016.

[15] Jie Hu, Li Shen, and Gang Sun. Squeeze-and-excitation net-

works. arXiv preprint arXiv:1709.01507, 7, 2017.

[16] Peiyun Hu and Deva Ramanan. Finding tiny faces. In CVPR,

pages 1522–1530, 2017.

[17] Naoto Inoue, Ryosuke Furuta, Toshihiko Yamasaki, and Kiy-
oharu Aizawa. Cross-domain weakly-supervised object de-
tection through progressive domain adaptation.
In CVPR,
pages 5001–5009, 2018.

[18] Laurent Itti and Pierre Baldi. A principled approach to de-
tecting surprising events in video. In CVPR, volume 1, pages
631–637, 2005.

[19] Wei Jiang, Eric Zavesky, Shih-Fu Chang, and Alex Loui.
Cross-domain learning methods for high-level visual concept
classiﬁcation. In ICIP, pages 161–164. IEEE, 2008.

[20] Mahesh Joshi, William W Cohen, Mark Dredze, and Car-
olyn P Ros´e. Multi-domain learning: when do domains mat-
ter?
In Proceedings of the 2012 Joint Conference on Em-
pirical Methods in Natural Language Processing and Com-
putational Natural Language Learning, pages 1302–1312.
Association for Computational Linguistics, 2012.

[21] Lukasz Kaiser, Aidan N Gomez, Noam Shazeer, Ashish
Vaswani, Niki Parmar, Llion Jones, and Jakob Uszko-
reit.
arXiv preprint
arXiv:1706.05137, 2017.

to learn them all.

One model

[22] Tsuyoshi Kato, Hisashi Kashima, Masashi Sugiyama, and
Kiyoshi Asai. Multi-task learning via conic programming.
In NeurIPS, pages 737–744, 2008.

[23] Aditya Khosla, Tinghui Zhou, Tomasz Malisiewicz,
Alexei A Efros, and Antonio Torralba. Undoing the damage
of dataset bias. In ECCV, pages 158–171. Springer, 2012.

[24] Taeksoo Kim, Moonsu Cha, Hyunsoo Kim, Jung Kwon Lee,
and Jiwon Kim. Learning to discover cross-domain rela-
tions with generative adversarial networks. arXiv preprint
arXiv:1703.05192, 2017.

[25] Iasonas Kokkinos. Ubernet: Training a universal convolu-
tional neural network for low-, mid-, and high-level vision
using diverse datasets and limited memory. In CVPR, page 8,
2017.

[26] Tsung-Yi Lin, Piotr Doll´ar, Ross B Girshick, Kaiming He,
Bharath Hariharan, and Serge J Belongie. Feature pyramid
networks for object detection. In CVPR, page 4, 2017.

[27] Tsung-Yi Lin, Michael Maire, Serge Belongie, James Hays,
Pietro Perona, Deva Ramanan, Piotr Doll´ar, and C Lawrence
Zitnick. Microsoft coco: Common objects in context.
In
ECCV, pages 740–755, 2014.

[28] Anan Liu, Yuting Su, Weizhi Nie, and Mohan S Kankanhalli.
Hierarchical clustering multi-task learning for joint human
action grouping and recognition. IEEE Trans. Pattern Anal.
Mach. Intell., 39(1):102–114, 2017.

[29] Wei Liu, Dragomir Anguelov, Dumitru Erhan, Christian
Szegedy, Scott Reed, Cheng-Yang Fu, and Alexander C
Berg. Ssd: Single shot multibox detector. In ECCV, pages
21–37, 2016.

[30] Mingsheng Long, Yue Cao, Jianmin Wang, and Michael I
Jordan. Learning transferable features with deep adaptation
networks. arXiv preprint arXiv:1502.02791, 2015.

[31] Arun Mallya, Dillon Davis, and Svetlana Lazebnik. Piggy-
back: Adapting a single network to multiple tasks by learn-
ing to mask weights. In ECCV, pages 67–82, 2018.

[32] Ishan Misra, Abhinav Shrivastava, Abhinav Gupta, and Mar-
tial Hebert. Cross-stitch networks for multi-task learning. In
CVPR, pages 3994–4003, 2016.

[33] Andreas Møgelmose, Mohan M Trivedi, and Thomas B
Moeslund. Vision-based trafﬁc sign detection and analy-
sis for intelligent driver assistance systems: Perspectives
and survey. IEEE Trans. Intelligent Transportation Systems,
13(4):1484–1497, 2012.

7297

[34] Mahyar Najibi, Pouya Samangouei, Rama Chellappa, and
Larry S Davis. Ssh: Single stage headless face detector. In
ICCV, pages 4885–4894, 2017.

[35] Hyeonseob Nam and Bohyung Han. Learning multi-domain
convolutional neural networks for visual tracking. In CVPR,
June 2016.

[36] Hyeonseob Nam and Bohyung Han. Learning multi-domain
convolutional neural networks for visual tracking. In CVPR,
pages 4293–4302, 2016.

[37] Stephen E Palmer. Vision science: Photons to phenomenol-

ogy. MIT press, 1999.

[38] Vishal M Patel, Raghuraman Gopalan, Ruonan Li, and Rama
Chellappa. Visual domain adaptation: A survey of recent
advances. IEEE signal processing magazine, 32(3):53–69,
2015.

[39] Charles R Qi, Wei Liu, Chenxia Wu, Hao Su, and Leonidas J
Guibas. Frustum pointnets for 3d object detection from rgb-d
data. 2018.

[40] Sylvestre-Alvise Rebufﬁ, Hakan Bilen, and Andrea Vedaldi.
Learning multiple visual domains with residual adapters. In
NeurIPS, pages 506–516, 2017.

[41] Sylvestre-Alvise Rebufﬁ, Hakan Bilen, and Andrea Vedaldi.
Efﬁcient parametrization of multi-domain deep neural net-
works. In CVPR, pages 8119–8127, 2018.

[42] Joseph Redmon, Santosh Divvala, Ross Girshick, and Ali
Farhadi. You only look once: Uniﬁed, real-time object de-
tection. In CVPR, pages 779–788, 2016.

[43] Joseph Redmon and Ali Farhadi. Yolov3: An incremental

improvement. arXiv preprint arXiv:1804.02767, 2018.

[44] Shaoqing Ren, Kaiming He, Ross Girshick, and Jian Sun.
Faster r-cnn: Towards real-time object detection with region
proposal networks. In NeurIPS, pages 91–99, 2015.

[45] Shaoqing Ren, Kaiming He, Ross Girshick, and Jian Sun.
Faster r-cnn: towards real-time object detection with region
proposal networks. IEEE Transactions on Pattern Analysis
& Machine Intelligence, (6):1137–1149, 2017.

[46] Amir Rosenfeld and John K Tsotsos. Incremental learning
through deep adaptation. IEEE transactions on pattern anal-
ysis and machine intelligence, 2018.

[47] Eric Tzeng, Judy Hoffman, Kate Saenko, and Trevor Darrell.
In CVPR,

Adversarial discriminative domain adaptation.
page 4, 2017.

[48] Parishwad P Vaidyanathan. Multirate systems and ﬁlter

banks. Pearson Education India, 1993.

[49] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszko-
reit, Llion Jones, Aidan N Gomez, Łukasz Kaiser, and Illia
Polosukhin. Attention is all you need.
In NeurIPS, pages
5998–6008, 2017.

[50] Peng Wang, Xiaohui Shen, Zhe Lin, Scott Cohen, Brian
Price, and Alan L Yuille. Towards uniﬁed depth and semantic
prediction from a single image. In CVPR, pages 2800–2809,
2015.

[51] Xiaolong Wang, Ross Girshick, Abhinav Gupta, and Kaim-

ing He. Non-local neural networks. In CVPR, 2018.

[52] Jeremy M Wolfe. Visual attention. In Seeing, pages 335–

386. Elsevier, 2000.

[53] Gui-Song Xia, Xiang Bai, Jian Ding, Zhen Zhu, Serge Be-
longie, Jiebo Luo, Mihai Datcu, Marcello Pelillo, and Liang-
pei Zhang. Dota: A large-scale dataset for object detection
in aerial images. In Proc. CVPR, 2018.

[54] Ke Yan, Mohammadhadi Bagheri, and Ronald M Summers.
3d context enhanced region-based convolutional neural net-
work for end-to-end lesion detection. In ICCV, pages 511–
519, 2018.

[55] Ke Yan, Xiaosong Wang, Le Lu, Ling Zhang, Adam Har-
rison, Mohammadhadi Bagheri, and Ronald M Summers.
Deep lesion graphs in the wild: relationship learning and
organization of signiﬁcant radiology image ﬁndings in a di-
verse large-scale lesion database. In IEEE CVPR, 2018.

[56] Fan Yang, Wongun Choi, and Yuanqing Lin. Exploit all the
layers: Fast and accurate cnn object detector with scale de-
pendent pooling and cascaded rejection classiﬁers. In CVPR,
pages 2129–2137, 2016.

[57] Jianwei Yang,

Jiasen Lu, Dhruv Batra,

and Devi
Parikh. A faster pytorch implementation of faster r-cnn.
https://github.com/jwyang/faster-rcnn.pytorch, 2017.

[58] Shuo Yang, Ping Luo, Chen-Change Loy, and Xiaoou Tang.
Wider face: A face detection benchmark. In CVPR, pages
5525–5533, 2016.

[59] Yongxin Yang and Timothy M Hospedales. A uniﬁed per-
spective on multi-domain and multi-task learning. arXiv
preprint arXiv:1412.7489, 2014.

[60] Steven Yantis. Control of visual attention.

attention,

1(1):223–256, 1998.

[61] Alfred L Yarbus. Eye movements during perception of com-
plex objects. In Eye movements and vision, pages 171–211.
Springer, 1967.

[62] Amir R Zamir, Alexander Sax, William Shen, Leonidas
Guibas, Jitendra Malik, and Silvio Savarese. Taskonomy:
Disentangling task transfer learning. In CVPR, pages 3712–
3722, 2018.

[63] Yu Zhang and Qiang Yang. An overview of multi-task learn-

ing. National Science Review, 5(1):30–43, 2017.

7298

