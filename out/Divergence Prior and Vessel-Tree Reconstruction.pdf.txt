Divergence Prior and Vessel-tree Reconstruction

Zhongwen Zhang1 Dmitrii Marin1
Egor Chesakov2
Marc Moreno Maza2 Maria Drangova3 Yuri Boykov1

1 University of Waterloo, Canada

2 Western University, Canada

3 Robarts Research, Canada

Abstract

We propose a new geometric regularization principle for
reconstructing vector ﬁelds based on prior knowledge about
their divergence. As one important example of this general
idea, we focus on vector ﬁelds modelling blood ﬂow pattern
that should be divergent in arteries and convergent in veins.
We show that this previously ignored regularization con-
straint can signiﬁcantly improve the quality of vessel tree
reconstruction particularly around bifurcations where non-
zero divergence is concentrated. Our divergence prior is
critical for resolving (binary) sign ambiguity in ﬂow orien-
tations produced by standard vessel ﬁlters, e.g. Frangi. Our
vessel tree centerline reconstruction combines divergence
constraints with robust curvature regularization. Our unsu-
pervised method can reconstruct complete vessel trees with
near-capillary details on synthetic and real 3D volumes.

1. Background on vessel detection

There is a large body of prior work on estimation of ves-
sels in computer vision and biomedical imaging communi-
ties [19]. Typically, pixel-level detection of tubular struc-
tures is based on multiscale eigen analysis of raw intensity
Hessians developed by Frangi et al. [11] and other research
groups [10]. At any given point (pixel/voxel) such vessel
enhancement ﬁlters output a tubularness measure and esti-
mates of the vessel’s scale and orientation, which describes
the ﬂow direction upto to a sign. While such local analy-
sis of Hessians is very useful, simple thresholding of points
with large-enough vesselness measure is often unreliable as
a method for computing the vessel tree structure. While
thresholding works well for detecting relatively large ves-
sels, detection of smaller vessels is complicated by noise,
partial voluming, and outliers (e.g. ring artifacts). More im-
portantly, standard tubular ﬁlters exhibit signal loss at vessel
bifurcations as those do not look like tubes.

Earlier regularization methods [30, 31] address many
tree reconstruction challenges due to noise and outliers as-
suming accurately localized “anchor” points are available
and data is relatively small. In contrast, we focus on large

3D data with 80% of near-capillary vessels of voxel-size or
less; thus, ﬁnding accurate centerline anchors is problem-
atic due to signal loss at thinner parts and bifurcations. We
propose a new regularization prior based on knowledge of
the ﬂow pattern divergence. It is critical for disambiguating
ﬂow directions and gives important cues on the vessel tree
structure. Next subsections outline related regularization
methods for vessel reconstruction and motivate our work.

It may be also interesting to apply deep learning to ves-
sel tree detection, but neural network training is problematic
since vessel tree ground truth is practically impossible in
real 3D data. Practical weakly-supervised training may re-
quire regularized loss functions [29] appropriate for vessel
tree detection. While our regularization methodology may
help to design such losses, we leave this for future work.

1.1. Vessel representation: centerline or segment

Two common approaches to representing vessels in re-
construction methods are volumetric binary mask and cen-
terline. Volumetric mask is typical for techniques directly
computing vessel segmentation, i.e. binary labeling of pix-
els/voxels.
In contrast, centerline is a 1D abstraction of
the vessel. But, if combined with information about vessel
radii, it is easy to obtain a volumetric mask or segmenta-
tion from the vessel’s centerline, e.g. using MAT [27]. Vice
versa, centerline could be estimated from the vessel’s binary
mask using skeletonization algorithms.

In the context of regularization methods for vessel re-
construction, centerline representation offers signiﬁcant ad-
vantages since powerful higher-order regularizers are easier
to apply to 1D structures. For example, centerline’s cur-
vature can be regularized [18], while conceptually compa-
rable regularization for vessel segmentation requires opti-
mization of Gaussian or minimum curvature of the vessel’s
surface with no known practical algorithms. In general, cur-
vature remains a challenging regularization criteria for sur-
faces [25, 28, 14, 24, 21]. Alternatively, some vessel seg-
mentation methods use simpler ﬁrst-order regularizers pro-
ducing minimal surfaces. While tractable, such regularizers
impose a wrong prior for surfaces of thin structures due to
their bias to compact blob shapes (a.k.a. shrinking bias).

110216

1.2. Towards whole tree centerline

Many vessel reconstruction methods directly compute
centerlines of different types that can be informaly deﬁned
as simpliﬁed (e.g.
regularized) 1D representation of the
blood ﬂow pathlines. For example, the A/B shortest path
methods require a user to specify two end points of a vessel
and apply Dijkstra to ﬁnd an optimal pathline on a graph
with edge weights based on vesselness measure.

Interactive A/B methods are not practical for large vessel
tree reconstraction problems. While it is OK to ask a user
to identify the tree root, manual identiﬁcation of all the end
points (leaves) is infeasible. There are tracing techniques
[3] designed to trace vessel tree from a given root based on
vesselness measures and some local continuation heuristics.
Our evaluations on synthetic data with groud truth show that
local tracing methods do not work well for large trees with
many thin vessels even if we use the ground truth to provide
all tree leaves as extra seeds in addition to the root.

Our goal is unsupervised reconstruction of the whole
vessel tree centerline. This problem can be solved in two
steps: (1) compute a “tubular graph” of plausible vessel
links between some centerline anchor points and (2) esti-
mate its optimal sub-tree under given regularity constraints.
It is common to do step one via simple heuristics and
to focus on the optimization problems in the second step
[30, 31]. In contrast, we focus on accurate estimation of
the centerline points (anchors) and their connectivity graph.
We use basic MST for step two, in part due to large size of
our problem where ILP [30] or genetic methods [31] do not
easily apply. To estimate centerline points, we optimize a
global objective function for a ﬁeld of centerline tangents.
Such objectives can combine vesselness measures, geomet-
ric errors, and different regularization constraints address-
ing centerline completion. Related prior work using center-
line curvature regularization is reviewed below.

1.3. Curvature regularization for centerline

Curvature, a second-order smoothness term, is a natu-
ral regularizer for thin structures. In general, curvature has
been studied for image segmentation [25, 28, 26, 5, 14, 24,
21, 18], for stereo or multi-view-reconstruction [17, 23, 33],
connectivity measures in analysis of diffusion MRI [20], for
tubular structures extraction [18], for inpainting [2, 6] and
edge completion [12, 32, 1].

Olsson et al. [22] propose curvature approximation for
surface ﬁtting regularization. Their framework employs
tangential approximation of surfaces. The authors assume
that the data points are noisy readings of the surface. The
method estimates local surface patches, which are parame-
terized by tangent planes. The (shortest) interval from the
data point to its tangent plane gives the surface normal and
deﬁnes the point of tangency.

1.

Figure
Curvature
model of [22]. Given two
points p and q on the red
curve and two tangents lp
and lq at these points, the
integrals of curvature are
approximated by (1–3).

and q on the curve and tangents lp and lq at these points are
given. Then the integrals of curvature κ(·) is estimated by
(1)

,

Z q
p |κ(s)|ds ≈ kp − lqk
kp − qk
Z q
p |κ(s)|2ds ≈ kp − lqk2
kp − qk3

.

(2)

where kp − lqk is the distance between point p and the tan-
gent line at point q represented by vector lq. Olsson et al.
[22] explore several similar approximations and argue that

κpq(lp, lq) :=

1
2

kp − lqk2 + kq − lqk2

kp − qk2

gives practically better curvature regularization1.

(3)

Marin et al. [18] generalized this surface ﬁtting problems
to detection problems where majority of the data points, e.g.
image pixels, do not belong to a thin structure. In order to
do that they introduced binary variables in their energy in-
dicating if a data point belongs to the thin structure. One of
their applications is vessel detection. The proposed vessel-
tree extraction system includes vessel enhancment ﬁltering,
non-maximum suppresion for data reduction, tangent ap-
proximation of vessels’ centerline and minimum spanning
tree for topology extraction. Assuming that detection vari-
ables are computed, the tangent approximation of vessels’
centerline is found by minimizing energy

Eu(l) =Xp

k˜p − lpk2 + γ X(p,q)∈N

κpq(lp, lq)

(4)

where summations are over detected vessel points, ˜p is the
original data point’s location, lp is the tangent vector at
point p, the denoised point location p is constraint to be
the closest point on tangent line at p, and N ⊂ Ω2 is the

neighborhood system. The curvature term in the energy
makes the tangents “collapse” onto a one-dimensional cen-
terline, see Fig.3(a,c). But the same ﬁgures also show arti-
facts around bifurcations where undesired triangular struc-
tures form, indicating unoriented tangent model limitations.
Our experiments employs the same components as in
[18]. Our work focuses on analysis of failure cases and im-
provement of the regularization stage for tangent approxi-
mation. In particular we will show the drawbacks of curva-
ture models (1-3) in the context of vessel tree extraction and
propose a solution leading to signiﬁcant improvements.

Assume there is a smooth curve, see Fig. 1. Points p

1Equation (3) is a symmetric form of regularizer recommended in [22].

10217

lqpqp~q~lp||p-lp||~||q-lp||(a) divergent vessels (arteries)

(b) inconsistent divergence

(c) convergent vessels (veins)

Figure 2. [Vessel-tree divergence] Vessels are the blood ﬂow pathlines and could be assigned orientations (7). To estimate orientations,
we penalize negative (or positive) “vessel divergence”, which we deﬁne as the divergence of oriented unit tangents of vessels/pathlines.
Such unit tangent ﬂow divergence is positive (red) or negative (blue) at bifurcations, see (a-c). Note that standard curvature [22, 18] and
oriented curvature models (6) either can not distinguish (b) from (a) and (c) or may even prefer (b) depending on speciﬁc combinations of
bifurcation angles. For example, compare vessel direction disambiguation based on curvature and the divergence prior in Fig.7 (a) & (b).

1.4. Our contributions and motivation

This work addresses an important limitation of vessel
tree reconstruction methods due to sign ambiguity in vessel
orientation produced by local vesselness ﬁlters, e.g. Frangi.
This orientation is described by the smallest eigenvector of
the local intensity Hessian, but its sign is ambiguous. Thus,
the actual ﬂow directions are not known, even though they
are an important reconstruction cue particularly at bifurca-
tions. This binary direction ambiguity can be resolved only
by looking at the global conﬁguration of vessel orientations
(tangents) allowing to determine a consistent ﬂow pattern.

We propose a divergence prior for disambiguating the
global ﬂow pattern on the vessel tree, see Fig.2. This prior
can be imposed as a regularization constraint for a vector
ﬁeld of oriented unit tangents for vessel pathlines. We pe-
nalize negative (or positive) divergence for such unit tan-
gent ﬂow to enforce a consistent ﬂow pattern2. The sum-
mary of our contributions:

• Prior knowledge about divergence is generally useful
for vector ﬁeld inference. We propose a way to eval-
uate divergence for sparsely sampled vector ﬁelds via
pairwise potentials. This makes divergence constraints
amenable to a wide range of optimization methods for
disrcrete or continuous hidden variables.

• As an important application, we show that known di-
vergence can disambiguate vessel directions output by
standard vessel ﬁlters, e.g. Frangi [11]. This requires
estimation of binary “sign” variables. The constraint
penalizing positive (or negative) divergence is non-
submodular, but it is well optimized by TRWS [15].

(a)

(c)

(b)

(d)

Figure 3. Triangle artifacts at bifurcation. Optimization of energy
(4) ignoring tangent orintations often leads to a strong local min-
ima as in (a) and (c). The line segments are the estimated tangents
of the centerline. New curvature term (6) takes into account tan-
gent orientations resolving the artifacts, see (b) and (d).

options include outlier/detection variables [18] and/or
tree structure completion techniques, e.g. using MST.

• We provide extensive quantitative validation on syn-
thetic vessel data, as well as qualitative results on real
high-resolution volumes.

The paper is organized as follows. Section 2 introduces ori-
ented vessel pathline tangents and discusses their curvature-
based regularization. It is clear that orientation of the ﬂow
at the bifurcations is important, e.g. see Fig.3. Section 3 in-
troduces our divergence prior and methods for enforcing it
in the context of vessel tree centerline estimation. The last
sections presents our experimental results.

• To estimate vessel tree centerline, the divergence con-
straint can be combined with robust oriented curva-
ture regularization for pathline tangents. Additional

2. Bifurcations and curvature

2.1. Oriented curvature constraint

2This divergence constraint is speciﬁc to unit tangent ﬂow. Note that
divergence for consistent blood ﬂow velocities is zero even at bifurcations
assuming incompressible blood.

Previous works [22, 24, 18] ignored orientations of tan-
gent vectors {lp}p∈Ω. Equations (1)–(4) do not depend on
the orientations of l. In practice, the orientations of vec-

10218

(a)

(b)

(c)

Figure 4. Illustrative examples of three interacting tangents with
unoriented curvature (a) as in (4) and two alternative oriented
conﬁgurations (b) and (c) with oriented curvature as in (5). The
green line denotes pairwise interaction with low curvature esti-
mate. Note, unoriented curvature (1–3) always chooses the small-
est angle for calculation. The red line shows “inactive” interaction
where curvature estimate (6) reaches the high saturation threshold.

tors lp are arbitrarily deﬁned. Ignoring the orientations in
energy (4) results in signiﬁcant “triangle” artifacts around
bifurcation, see Fig. 3(a,c). Consider an illustrative exam-
ple in Fig. 4(a). Each of the three tangents interacts with
the other two. The prior knowledge about blood ﬂow pat-
tern dictates that among those three tangents there should
be one incoming and one outcoming. Introduction of ori-
entations allows us to distinguish the incoming/outcoming
tangents and subsequently inactivate one of the interactions,
see Fig. 4(b), resulting in disappearance of these artifacts.

In order to introduce oriented curvature we introduce a
new vector ﬁeld ¯lp, which we call oriented. Then, we in-
troduce energy Eo(¯l) by replacing curvature term in energy
(4) with a new oriented curvature as follows

Eo(¯l) =Xp

k˜p − ¯lpk2 + γ X(p,q)∈N

¯κpq(¯lp, ¯lq)

(5)

where

¯κpq(¯lp, ¯lq)

:= (κpq(¯lp, ¯lq),

1,

h¯lp, ¯lqi ≥ τ,

otherwise,

(6)

and h¯lp, ¯lqi is the dot product of ¯lp and ¯lq and τ ≥ 0 is a

positive threshold discussed in Fig. 5.

The connection between oriented ﬁeld ¯l and l is

¯lp = xp · lp

(7)

where binary variables xp ∈ {−1, 1} ﬂip or preserve the
arbitrarily deﬁned orientations of lp.

2.2. Curvature and orientation ambiguity

Introduction of orientated curvature resolves triangle ar-
tifacts, see Fig. 3(b,d). However, the orientations are not
known in advance. For example, the Frangi ﬁlter [11] de-
ﬁnes a tangent as a unit eigenvector of a special matrix. The
unit eigenvectors are deﬁned up to orientation, which is cho-
sen arbitrarily. One may propose to treat energy (5) as a
function of tangent orientations x via relation (7) as follows

Eo(x)

:= Eo({xp · lp})(cid:12)(cid:12)(cid:12)lp=const

(8)

Figure 5. Robustness of cur-
vature (6).
The pairs of
tangent vectors that has an-
gle greater than acos τ are
not considered belonging to
the same vessel.
A con-
stant penalty is assigned to
such pairs. This “turns off”
smoothness enforcement at
bifurcations.

(a) Voronoi cells for
p, q ∈ Ω and facet fpq

ǫ-thin box f ǫ
pq

(b)
around facet fpq

Figure 6. Divergence of a sparse vector ﬁeld {¯lp|p ∈ Ω}. As-
suming that the corresponding “extrapolated” dense vector ﬁeld is
constant inside Voronoi cells (a), it is easy to estimate (non-zero)
divergence ∇¯lpq (9) concentrated in a narrow region f ǫ
pq around
each facet (b) using the divergence theorem.

However, energy (8) is under-constrained because it allows
multiple equally good solutions, see Fig. 4(b) and (c). The
example in (b) shows a divergent pattern while (c) shows
a convergent pattern suggesting artery/vein ambiguity. Un-
fortunately, energy (8) does not enforce consistent ﬂow pat-
tern across the vessel tree resulting in a mix of divergent
and convergent bifurcations as in Fig. 2(b). Real data ex-
periments conﬁrm this conclusion, see Fig. 7(a).

Thus, oriented curvature model (5) has a signiﬁcant
problem. While it can resolve “triangle artifacts” at bifur-
cations, see Fig.3, it breaks the wrong sides of the triangles
at many bifurcations:
it estimates the ﬂow pattern incor-
rectly and then give the incorrect estimation of centerline,
see Fig.8(a). Below we introduce our divergence prior di-
rectly enforcing consistent ﬂow pattern over the vessel tree.

3. Divergence constraint

3.1. Estimating divergence

Figure 6 describes our (ﬁnite element) model for estimat-

ing divergence of a sparse vector ﬁeld {¯lp|p ∈ Ω} deﬁned
for a ﬁnite set of points Ω ⊂ R3. We extrapolate the vector
ﬁeld over the whole domain R3 assuming constancy of the
vectors on the interior of the Voronoi cells for p ∈ Ω, see
Fig.6(a). Thus, vectors change only in the (narrow) region
around the cell facets where all non-zero divergence is con-

10219

60°120°  10ακκacosτ_(a) oriented curvature only (8)

(a) tangent vectors at convergence for energy (5)

(b) with divergence prior (11)

Figure 7. Disambiguating ﬂow directions in Frangi output [11].
Both examples use ﬁxed (unoriented) vessel tangents {lp} pro-
duced by the ﬁlter and compute (oriented) vectors ¯lp
= xplp (7)
by optimizing binary sign variables {xp} using energies (8) in (a)
and (11) in (b). The circles indicate divergent (red) or convergent
(blue) bifurcations similarly to the diagrams in Fig.2. The extra di-
vergence constraint in (10) enforces ﬂow pattern consistency (b).

centrated. To compute the integral of divergence in the area
between two neighboring points p, q ∈ Ω, see Fig.6(b), we
estimate ﬂux of the extrapolated vector ﬁeld over ǫ-thin box
f ǫ
pq around facet fpq

pq

h¯l, nsi ds = h¯lq, pqi − h¯lp, pqi

Zf ǫ
where ns is the outward unit normal of the box and |fpq| is
the facet’s area. Then, divergence theorem implies the fol-
lowing formula for the integral of divergence of the vector
ﬁeld inside box f ǫ
pq

· |fpq| + o(ǫ)

|pq|

∇¯lpq = h¯lq, pqi − h¯lp, pqi

|pq|

· |fpq|

(9)

where we ignore only inﬁnitesimally negligible o(ǫ) term.

3.2. Oriented centerline estimation

Constraints for divergence ∇¯lpq in the regions between
neighbors p, q ∈ D in Delaugney triangulation of Ω can
be combined with Eo(¯l) in (5) to obtain the following joint
energy for estimating oriented centerline tangents ¯lp

E(¯l) = Eo(¯l) + λ X(p,q)∈D

(∇¯lpq)−

(10)

where the negative part operator (·)− encourages divergent
ﬂow pattern as in Fig.2(a). Alternatively, one can use (·)+

(b) tangent vectors at convergence for energy (10)

Figure 8. Centerline estimation for the data in Fig.7. Instead of
showing tangent orientations estimated at the ﬁrst iteration as in
Fig.7, we now show the ﬁnal result at convergence for minimizing
energy (5) in (a) and energy (10) in (b). The blue circle shows
bifurcation reconstruction artifacts due to the wrong estimation of
vessel orientations in Fig.7(a).

to encourage a convergent ﬂow pattern as in Fig.2(c). This
joint energy for oriented centerline estimation E(¯l) com-
bines Frangi measurements, centerline curvature regularity,
and consistency of the ﬂow pattern, see Fig.7(b). Note that
speciﬁc value of facet size in (9) had a negligible effect in
our centerline estimation tests as it only changes a relative
weight of the divergence penalty at any given location. For
simplicity, one may use |fpq| ≈ const for all p, q ∈ D.
Optimization of oriented centerline energy E(¯l) in
(10) over oriented tangents {¯lp} can be done via block-

coordinate descent. As follows from deﬁnition (7)

E(¯l) ≡ E({xp · lp}).

We iterate TRWS [15] for optimizing non-submodular en-
ergy for binary “sign” disambiguation variables {xp}

and trust region [34, 18] for optimizing robust energy for
aligning tangents into 1D centerline

E(x)

E(l)

:= E({xp · lp})(cid:12)(cid:12)(cid:12)lp=const
:= E({xp · lp})(cid:12)(cid:12)(cid:12)xp=const

.

(11)

(12)

Figure 9 shows a representative example illustrating conver-
gence of energy (10) in a few iterations.

Note that the divergence constraint in joint energy (10)
resolves the problem of under-constrained objective (5) dis-
cussed at the end of Section 2. Since the ﬂow pattern con-
sistency is enforced, optimization of (10) should lead to a
consistent resolution of the triangle artifacts at bifurcations.
see Fig.8(b). Our experimental results support this claim.

10220

Figure 9. Representative
example of the decrease
in energy (10) for block-
coordinate descent iterat-
ing optimization of (11)
and (12). For initializa-
tion, we use raw undi-
rected tangents {lp} gen-
erated by Frangi ﬁlter
[11].
Then, we iter-
atively reestimate binary
sign variables {xp} and
unoriented tangents {lp}.

7

6

5

4

3

2

1

0

1

5

9

13

Iteration

Figure 12. Detection of bifurcation points (only).

4. Evaluation

4.1. Synthetic vessel volume

We used our modiﬁcation3 of a method generating syn-
thetic 3D vessel tree data [13] that includes CT-like volume
and ground truth vessel centerline tree, e.g. Fig. 10. We
generate 15 artiﬁcial volumes 100× 100× 100 containing
synthetic vascular trees with voxel intensities in the range 0
to 512. The size of each voxel is 0.046 mm. We use additive
Gaussian noise [16] with std 15.
Evaluation setup. Our evaluation system follows [18].
We ﬁrst apply the Frangi ﬁlter [11] with hyperparameters
α = 0.5, β = 0.5, γ = 30, σmin = 0.023 mm and
σmax = 0.1152 mm. The ﬁlter computes a tubularness
measure and estimates tangent lp at each
voxel p. Then we threshold the tubular-
ness measure to remove background pix-
els. Then we use non-maximum suppres-
sion4 (NMS) resulting in voxel set Ω. We
use a 26-connected neighborhood system
N . Next, we optimize our new join en-
ergy (10) to disambiguate tangent orienta-
tion and estimate centerline location, see
Sec. 3.2. The hyperparameters are γ = 3.80
(see energy (5)), λ = 18.06 (see energy
(10)), τ = cos 70◦ (see equation (6)), and
the maximum number of iterations is 1500
for both TRWS and Levenberg-Marquardt.
Finally, we extract oriented vessel tree cen-
terline as the minimum spanning tree of the complete graph.
Energy (10) assumes a quadratic curvature term (3).
However, if we replace it with (1) we get an absolute curva-

3https://gitlab.com/echesakov/VascuSynth
4The use of NMS is mainly for data reduction. Our method is able to

work on thresholded data directly, see Fig. 3(d).

10221

Figure 10. An example of one volume synthetic data. The white
lines inside vessels denote ground truth of centerline.

Figure 11. Detection of centerline points: comparison of our meth-
ods (OriAbsCurv and OriQuaCurv), unoriented quadratic curva-
ture (QuaCurv) [18], non-maximum suppression (NMS), Seg-
mentTubes (Aylward et al. [3]) and medial axis extraction (Bouix
et al. [4]). The four letters on yellow dots denote different seed
point lists: (a) using root and all leaf points; (b) using 50% of all
bifurcations and leaf points; (c) using middle points of all branch
segments; (d) using all bifurcations and leaf points.

0%2%4%6%8%10%12%14%Fall-out ratio40%50%60%70%80%90%100%Recall ratiodcabROC curve(std=15)OriAbsCurvOriQuaCurvQuaCurvNMSAylward etal.Bouix etal.0%2%4%6%8%10%12%14%Fall-out ratio40%50%60%70%80%90%100%Recall ratioROC curve at bifurcation point(std=15,Tmatch=3voxelSize)OriAbsCurvOriQuaCurvQuaCurvNMSNon-maximumSupressionFilteringRegularization,Section 3MinimumSpanning TreeThreshold(a)

(b)

(c)

(d)

Figure 13. Examples of the results around bifurcations. White line is the ground truth tree. A tree extracted from NMS ouput directly
(without regularization) is shown in (a). Solution of (4) [18] is (b). Our model (10) is (c). Our model (10) with absolute curvature is (d).

ture variant of our energy.

We evaluate different regularization methods including
energy (4) (QuaCurv), energy (10) with either quadratic
curvature (OriQuaCurv) or absolute curvature (OriAb-
sCurv) within the system outline above. We also compare
to a tracing method [3] and medial axis [4].

We adopt receiver operating characteristic (ROC) curve
methodology for evaluation of our methods and [4]. We
compute recall and fall-out statistics of an extracted ves-
sel tree for different levels of the threshold. The computed
statistics deﬁne the ROC curve.

While ground truth is deﬁned by locations at bifurcations
and leaves of the tree, all evaluated methods yield densly
sampled points on the tree. Therefore, we resample both
ground truth and reconstructed tree with step size 0.0023
mm. For each point on one tree, we ﬁnd the nearest point
on the other tree and compute the Euclidean distance.
If
the distance is less than max(r, c) voxels, this pair of points
is considered a match. Here r is the vessel radius at the

Figure 14. Bifurcaton angle errors (at detected bifurcations).

corresponding point of the ground truth and c = 0.7 is a
matching threshold measured in voxels. The recall is

NGT match
NGT total

where NGT match is the number of matched points in the
ground truth and NGT total is the total number of points in
the ground truth. The fall-out is

1 −

NRT match
NRT total

where NRT match is the number of matched points in the re-
constructed tree and NRT total is the total number of points
in the reconstructed tree.

The tracing method of [3] requires a seed points list as an
input. We generate four seed lists as described in Fig. 11.
The ROC curves in Fig. 11 favour our method. Since bi-
furcations is only a fraction of the data, the improvements
around bifurcations are largely unnoticed in these curves.
Therefore, we compute the ROC curves for only bifurca-

tion nodes. We use a bigger matching threshold c = √3

voxels. The results are shown in Fig. 12 where the gap be-
tween methods is bigger. Also we compute angle errors at
bifurcations, see Fig. 14. A few representative examples are
in Fig. 13.

4.2. Real vessel data

We obtained our qualitative experimental results using a
real micro-CT scan of mouse’s heart as shown in Fig.15.
The size of the volume is 585 × 525 × 892 voxels. Most of
the vessels are thinner than the voxel size. Due to the size
of the volume, the problem has higher computational cost
than in Sec. 4.1. We built custom GPU implementation of
Levenberg-Marquardt algorithm to handle the large volume
size [7]. Figure 16 shows the reconstructed centerline. Fig-
ure 17 demonstrate a signiﬁcant improvement of centerline
estimation around bifurcations.

10222

0.000.020.040.060.080.100.120.140.160.180.20Threshold Value15202530354045Average Angle Error/ DegreeAverage angle error at bifurcation point(std=15)OriAbsCurvOriQuaCurvQuaCurvNMS(a) cardiac microscopy CT volume

Figure 16. Vessel tree reconstruction from real data in Fig. 15
based on our method for estimating centerline tangents using prior
knowlegde about vessel divergence. The ﬁnal tree structure is ex-
tracted by MST on K-nearest-neighbour (KNN) weighted graph
with edge weights wpq deﬁned as the average arc-length between
neighbors p and q for two circles containing p and q and tangential
to either lp or lq. Different colors denote three main branches.

(b) zoom-in

Figure 15. Visualization (MIP) of the raw volumetric data obtained
from a mouse heart by microscopic computer tomography.

5. Conclusions and Future work

We propose divergence prior for a vector ﬁeld recon-
struction problem. In the contest of vessel tree estimation,
we use the divergent vessel prior to estimate vessel direc-
tions disambiguating orientations produced by the Frangi
ﬁlter. Our method signiﬁcnatly improves the accuracy of
reconstruction at bifurcations, reducing the corresponding
angle estimation errors by about 50%.

There are interesting extentions for our work on esti-
mating vessel orientations. For example, such orientations
can be directly used for extracting vessel tree topology or
connectivity. Instead of using standard MST on undirected
graphs, e.g. as in [18], we can now use Chu-Liu-Edmonds
algorithm [8, 9] to compute a minimum spanning arbores-
cence (a.k.a. directed rooted tree) on a directed weighted
graph where a weight of any edge (p, q) estimates the length
of a possible direct “vessel” connection speciﬁcally from p
to q. Such a weight can estimate the arc length from p to

Figure 17. Representative results on real data. Red shows the re-
sult of [18], see (4). Blue shows the centerline produced by our di-
rected vessel estimation model (10) including the divergence prior
and absolute curvature regularization. We highlight improvements
at bifurcations due to better estimation of vessel orientations. As
shown, mistakes lead to wrong connectivity (tubular) graphs. The
real data results are consistent with the synthetic ones in Fig.13.

q along a unique circle such that it contains p and q. This
circle is coplanar with lp and q, and is tangential to lp. How-
ever, such a constant curvature path from p to q works as a
good estimate for a plausible vessel connection from p to q
only if hlp, pqi > 0; otherwise there should be no edge from
p to q. This implies a directed graph since edges (p, q) and
(q, p) will be determined by two different tangents lp or lq
and two different conditions hlp, pqi > 0 or hlq, qpi > 0.
Finally, it is possible to explore optimal subtree algo-
rithms [30, 31] as more advanced alternatives to MST or
arborescence technqiues.

10223

References

[1] T. D. Alter and R. Basri. Extracting salient curves from im-
ages: An analysis of the saliency network. IJCV, 27(1):51–
69, 1998. 2

[2] L. Alvarez, P.-L. Lions, and J.-M. Morel.

Image selec-
tive smoothing and edge detection by nonlinear diffusion. ii.
SIAM Journal on numerical analysis, 29(3):845–866, 1992.
2

[3] S. R. Aylward and E. Bullitt. Initialization, noise, singular-
ities, and scale in height ridge traversal for tubular object
centerline extraction. IEEE transactions on medical imag-
ing, 21(2):61–75, 2002. 2, 6, 7

[4] S. Bouix, K. Siddiqi, and A. Tannenbaum. Flux driven
automatic centerline extraction. Medical image analysis,
9(3):209–221, 2005. 6, 7

[5] K. Bredies, T. Pock, and B. Wirth. Convex relaxation of a
class of vertex penalizing functionals. Journal of Mathemat-
ical Imaging and Vision, 47(3):278–302, 2013. 2

[6] T. F. Chan and J. Shen. Nontexture inpainting by curvature-
driven diffusions. Journal of Visual Communication and Im-
age Representation, 12(4):436–449, 2001. 2

[7] E. Chesakov. Vascular tree structure: Fast curvature regu-
larization and validation. Electronic Thesis and Dissertation
Repository. The University of Western Ontario, (3396), 2015.
Master of Science thesis. 7

[8] Y. J. Chu and T. H. Liu. On the shortest arborescence of a

directed graph. Science Sinica, 14:1396–1400, 1965. 8

[9] J. Edmonds. Optimum branchings. J. Res. Nat. Bur. Stan-

dards, 71B(4), October- December 1967. 8

[10] A. Enquobahrie, L. Ibanez, E. Bullitt, and S. Aylward. Vessel
enhancing diffusion ﬁlter. The Insight Journal, 1:1–14, 2007.
1

[11] A. F. Frangi, W. J. Niessen, K. L. Vincken, and M. A.
Viergever. Multiscale vessel enhancement ﬁltering. In MIC-
CAI’98, pages 130–137. Springer, 1998. 1, 3, 4, 5, 6

[12] G. Guy and G. Medioni. Inferring global perceptual contours

from local features. In CVPR, 1993. 2

[13] G. Hamarneh and P. Jassi. Vascusynth: simulating vascular
trees for generating volumetric image data with ground-truth
segmentation and tree analysis. Computerized medical imag-
ing and graphics, 34(8):605–616, 2010. 6

[14] S. Heber, R. Ranftl, and T. Pock. Approximate envelope

minimization for curvature regularity. In ECCV, 2012. 1, 2

[15] V. Kolmogorov. Convergent tree-reweighted message pass-
ing for energy minimization. PAMI, 28(10):1568–1583,
2006. 3, 5

[16] G. Lehmann. Noise simulation.

The Insight Journal,

January-June 2010. 6

[17] G. Li and S. W. Zucker. Differential geometric inference in

surface stereo. PAMI, 32(1):72–86, 2010. 2

[18] D. Marin, Y. Zhong, M. Drangova, and Y. Boykov. Thin
structure estimation with curvature regularization. In Inter-
national Conference on Computer Vision (ICCV), Santiago,
Chile, December 2015. 1, 2, 3, 5, 6, 7, 8

[19] S. Moccia, E. De Momi, S. El Hadji, and L. Mattos.
Blood vessel segmentation algorithms — review of methods,

datasets and evaluation metrics. Computer Methods and Pro-
grams in Biomedicine, 158:71–91, 2018. 1

[20] P. MomayyezSiahkal and K. Siddiqi. 3d stochastic comple-
tion ﬁelds for mapping connectivity in diffusion mri. PAMI,
35(4):983–995, 2013. 2

[21] C. Nieuwenhuis, E. Toeppe, L. Gorelick, O. Veksler, and
Y. Boykov. Efﬁcient squared curvature. In CVPR, Columbus,
Ohio, 2014. 1, 2

[22] C. Olsson and Y. Boykov. Curvature-based regularization for
surface approximation. In Conference on Computer Vision
and Pattern Recognition (CVPR), pages 1576–1583. IEEE,
2012. 2, 3

[23] C. Olsson, J. Ul´en, and Y. Boykov. In defense of 3d-label

stereo. In CVPR, pages 1730–1737. IEEE, 2013. 2

[24] C. Olsson, J. Ul´en, Y. Boykov, and V. Kolmogorov. Partial
In ICCV, pages

enumeration and curvature regularization.
2936–2943. IEEE, 2013. 1, 2, 3

[25] T. Schoenemann, F. Kahl, and D. Cremers. Curvature reg-
ularity for region-based image segmentation and inpainting:
A linear programming relaxation. In ICCV, Kyoto, 2009. 1,
2

[26] T. Schoenemann, F. Kahl, S. Masnou, and D. Cremers. A
linear framework for region-based image segmentation and
inpainting involving curvature penalization. IJCV, 2012. 2

[27] K. Siddiqi and S. Pizer. Medial representations: mathemat-
ics, algorithms and applications, volume 37. Springer Sci-
ence & Business Media, 2008. 1

[28] P. Strandmark and F. Kahl. Curvature regularization for
curves and surfaces in a global optimization framework. In
EMMCVPR, pages 205–218. Springer, 2011. 1, 2

[29] M. Tang, F. Perazzi, A. Djelouah, I. B. Ayed, C. Schroers,
and Y. Boykov. On regularized losses for weakly-supervised
cnn segmentation.
In European Conference on Computer
Vision (ECCV), Munich, Germany, September 2018. 1

[30] E. Turetken, F. Benmansour, B. Andres, P. Glowacki, H. Pﬁs-
ter, and P. Fua. Reconstructing curvilinear networks using
path classiﬁers and integer programming.
IEEE Transac-
tions on Pattern Analysis and Machine Intelligence (TPAMI),
38(12):2515–2530, December 2016. 1, 2, 8

[31] E. Turetken, G. Gonzalez, C. Blum, and P. Fua. Automated
reconstruction of dendritic and axonal trees by global op-
timization with geometric priors. Neuroinformatics, 9(2-
3):279–302, 2011. 1, 2, 8

[32] L. R. Williams and D. W. Jacobs. Stochastic completion
ﬁelds: A neural model of illusory contour shape and salience.
Neural Computation, 9(4):837–858, 1997. 2

[33] O. Woodford, P. Torr, I. Reid, and A. Fitzgibbon. Global
stereo reconstruction under second-order smoothness priors.
PAMI, 31(12):2115–2128, 2009. 2

[34] S. Wright and J. N. Holt. An inexact levenberg-marquardt
method for large sparse nonlinear least squres. The Jour-
nal of the Australian Mathematical Society. Series B. Applied
Mathematics, 26(04):387–403, 1985. 5

10224

