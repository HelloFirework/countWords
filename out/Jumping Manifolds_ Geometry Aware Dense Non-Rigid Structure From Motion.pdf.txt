Jumping Manifolds: Geometry Aware Dense Non-Rigid Structure from Motion

Suryansh Kumar

Australian National University, CECS, Canberra, ACT, 2601

suryansh.kumar@anu.edu.au

Abstract

Given dense image feature correspondences of a non-
rigidly moving object across multiple frames, this paper
proposes an algorithm to estimate its 3D shape for each
frame. To solve this problem accurately, the recent state-of-
the-art algorithm reduces this task to set of local linear sub-
space reconstruction and clustering problem using Grass-
mann manifold representation [34]. Unfortunately, their
method missed on some of the critical issues associated with
the modeling of surface deformations, for e.g., the depen-
dence of a local surface deformation on its neighbors. Fur-
thermore, their representation to group high dimensional
data points inevitably introduce the drawbacks of categoriz-
ing samples on the high-dimensional Grassmann manifold
[32, 31]. Hence, to deal with such limitations with [34],
we propose an algorithm that jointly exploits the beneﬁt of
high-dimensional Grassmann manifold to perform recon-
struction, and its equivalent lower-dimensional representa-
tion to infer suitable clusters. To accomplish this, we project
each Grassmannians onto a lower-dimensional Grassmann
manifold which preserves and respects the deformation of
the structure w.r.t its neighbors. These Grassmann points in
the lower-dimension then act as a representative for the se-
lection of high-dimensional Grassmann samples to perform
each local reconstruction. In practice, our algorithm pro-
vides a geometrically efﬁcient way to solve dense NRSfM
by switching between manifolds based on its beneﬁt and us-
age. Experimental results show that the proposed algorithm
is very effective in handling noise with reconstruction accu-
racy as good as or better than the competing methods.

1. Introduction

Non-rigid Structure-from-Motion (NRSfM), a problem
where the task is to recover the three-dimensional structure
of a deforming object from a set of image feature correspon-
dences across frames. Any solution to this problem depends
on the proper modeling of structure ∈ M and an efﬁcient
estimation of motion ∈ SE(3), where M denotes some
structure manifold and SE(3) denotes special Euclidean

(a)

(b)

(c)

Figure 1: Dense 3D reconstruction of facial expression using our
algorithm. The result show the 3D reconstruction of 73,765 points
of a complex non-rigidly deforming surface. These results can
be useful for real world applications such as 3D modeling, virtual
reality etc. The example sequence is taken from Actor dataset [7].

group which is a differentiable manifold [20]. Though, af-
ter Bregler et al. factorization framework to NRSfM [48],
motion estimations are mostly relaxed to rotation estima-
tion ∈ SO(3). Even after such relaxation, the problem still
remains unsolved for any arbitrary motion. The main dif-
ﬁculty in NRSfM comes from the fact that both the cam-
era and the object are moving and, along with it the object
themselves are deforming, hence, it becomes difﬁcult to dis-
tinguish camera motion from object motion using only im-
age data. Despite such difﬁculties, many efﬁcient and re-
liable solutions based on the priors are proposed to solve
NRSfM. A reliable solution to this problem is important as
it covers a wide range of applications from medical industry
to the entertainment industry and many more.

To solve NRSfM, the algorithms proposed in the past
can broadly be divided into two major classes 1) sparse
NRSfM and 2) dense NRSfM. This classiﬁcation is based
on the number of feature points that the algorithm can ef-
ﬁciently process to model the deformation of the object.
Although many reliable solution to this problem exists for
sparse NRSfM [18, 37, 35, 3, 47, 42, 40, 26, 29], very few
work have been done towards solving the dense NRSfM re-

5346

liably and efﬁciently [23, 17, 34, 4]. Also, the existing so-
lutions to dense NRSfM are computationally expensive and
are mostly constrained to analyze the global deformation
of the non-rigid shape [23, 17]. The basis for this gradual
progress in dense NRSfM is perhaps due to its dependence
on per pixel reliable correspondences across frames, and the
absence of a resilient structure modeling framework to cap-
ture the local non-linearities. One may argue on the efﬁcient
motion estimation, however, from image correspondences,
we can only estimate relative motion and reliable algorithms
with solid theory exists to perform this task well [18, 40].
Also, with the recent progress in deep learning algorithms,
per pixel correspondences can be achieved with a remark-
able accuracy [46], which leaves structure modeling as a
potential gray area in dense NRSfM to focus.

Very recently, Kumar et al. [34] has exploited the
Grassmann manifold to model non-rigid surfaces in dense
NRSfM. The key insight in their work is; even though the
overall complexity of the deforming shape is high, each lo-
cal deformation may be less complex [13, 14, 15, 16]. Us-
ing this idea, they proposed a union of local linear subspace
approach to solve dense NRSfM problem. Nevertheless,
their work overlooked on some of the intrinsic issues asso-
ciated with the modeling of non-rigidly deforming surface.
Firstly, their method represents each local linear subspace
independently via a high-dimensional Grassmannian repre-
sentation. Now, such representation may help reconstruct
complex 3D deformation but can lead to wrong clustering,
and it’s very important in joint reconstruction and cluster-
ing framework to have suitable clustering of subspaces, else
reconstruction may suffer. Secondly, their approach to rep-
resent local non-linear deformation completely ignored the
neighboring surfaces, which may result in an inefﬁcient rep-
resentation of the Grassmannians in the trajectory space.
Thirdly, the representation of Grassmannians in the shape
space adopted by [34] results in irredeemable discontinuity
of the trajectories (see Fig.(2)). Hence, temporal represen-
tation of the set of shapes using Grassmannians seems not
an extremely beneﬁcial choice for modeling dense NRSfM
on Grassmannian manifold1. Lastly, although the dense
NRSfM algorithm proposed in [34] works better and faster
than the previous methods, it depends on several manual pa-
rameters which are inadmissible for practical applications.
This paper introduces an algorithm that overcomes the
aforementioned limitations with Kumar et al. method [34].
The main point we are trying to make is that; reconstruction
and grouping of subspace on the same high dimensional
Grassmann manifold seem an unreasonable choice. Even
recent research in the Riemannian geometry has shown that
the low-dimensional representation of the corresponding
high dimensional Grassmann manifold is more favorable

1Purpose behind NRSfM is not the same as activity/action recognition.

See supplementary material for a detail discussion on this.

1"#Grassmann Point

2%&Grassmann Point

K#(Grassmann Point

Frames

Figure 2: Temporal representation using Grassmannians in the
shape space introduces discontinuity in the overall trajectory of
the feature point. Also, to deﬁne neighboring subspace depen-
dency graph in the time domain seems very challenging keeping
in mind that the activity/expression may repeat. Red circle shows
the feature point with its trajectory over frames (Black).

for grouping Grassmannians [32, 31]. So, we formulate
dense NRSfM in a way that it takes advantage of both high
and low dimensional representation of Grassmannians i.e.,
perform reconstruction in the original high-dimension and
cluster subspace in its lower-dimension representation.

We devise an unsupervised approach to efﬁciently rep-
resent the high-dimensional non-rigid surface on a lower
dimensional Grassmann manifold. These low-dimensional
Grassmannians are represented in such a way that it pre-
serves the local structure of the surface deformation in
accordance with its neighboring surfaces when projected.
Now, these low-dimensional Grassmannians serves as a po-
tential representative for its high-dimensional Grassmanni-
ans for suitable grouping, which subsequently help improve
the reconstruction and representation of the Grassmannians
on the high-dimensional Grassmann manifold, hence, the
term Jumping Manifolds (MoJu). Further, we drop the tem-
poral grouping of shapes using Grassmannians to discour-
age the discontinuity of trajectories (see Fig.(2)).

In essence, our work is inspired by [34] and is oriented
towards settling its important limitations. Moreover, in con-
trast to [34], we capture the notion of dependent local sub-
space in a union of subspace algorithm [39] via Grassman-
nian modeling. The algorithm we proposed is an attempt
to supply a more efﬁcient, reliable and practical solution
to this problem. Our formulation gives an efﬁcient frame-
work for modeling dense NRSfM on the Grassmann mani-
fold than [34]. Experimental results show that our method
is as accurate as other algorithms and is numerically more
efﬁcient in handling noise. The main contributions of our
work are as follows:

• An efﬁcient framework for modeling non-rigidly de-
forming surface that exploits the advantage of Grass-
mann manifold representation of different dimensions
based on its geometry.

• A formulation that encapsulates the local non-linearity
of the deforming surface w.r.t its neighbors to enable
the proper inference and representation of local linear
subspaces.

• An iterative solution to the proposed cost function

5347

based on ADMM [8], which is simple to implement
and provide results as good as the best available meth-
ods. Additionally, it helps improve the 3D reconstruc-
tion substantially, in the case of noisy trajectories.

2. Related Work

A working solution to NRSfM was ﬁrst introduced in the
seminal work by Bregler et al. [9] which is an extension to
Tomsai-Kannade rigid factorization method[48]. Although
the problem still remains unsolved for arbitrary deforma-
tions, many profound works have been done to achieve a re-
liable solution to this problem under some or the other prior
assumptions about the object [18, 3, 43, 40, 50, 37, 35, 23].
Since the literature on this topic is very extensive, we review
the works that are of close relevance to the dense NRSfM
methods under classical setting2.

Earlier attempts to solve dense NRSfM used piecewise
reconstruction of the shape parts which were further pro-
cessed via a stitching step to get a global 3D shape [12, 45].
To our knowledge, Garg et al. variational approach [24] was
the ﬁrst to propose and demonstrate per pixel dense NRSfM
algorithm without any 3D template prior. This method in-
troduced a discrete total variational constraint with trace
norm constraint on the global shape, which resulted in a
biconvex optimization problem. Despite the algorithm out-
standing results, it’s computationally very expensive and
needs a GPU to provide the solution.

In contrast, Dai et al. extended his simple prior free ap-
proach to solve dense NRSfM problem [18, 17]. The algo-
rithm proposed a spatial-temporal formulation to solve the
problem. The author revisits the temporal smoothness term
from [18] and integrate it with a spatial smoothness term
using the Laplacian of the non-rigid shape. The resultant
optimization leads to a series of least squares to be mini-
mized which makes it extremely slow to process. Recently,
Kumar et al. modeled this problem on the Grassmann man-
ifold [34]. Their work extended the spatiotemporal multi-
body framework to solve dense NRSfM [37]. The algorithm
demonstrated that such an approach is more efﬁcient, faster
and accurate than all the other recent approaches to solve
dense NRSfM task [24, 17, 4].

Consecutive frame-based approach has recently shown
some promising results to solve dense 3D reconstruction of
a general dynamic scene including non-rigid object [36, 44].
Nevertheless, motion segmentation, triangulation, as rigid
as possible constraint and scale consistency quite often
breaks down for the deforming object over frames. There-
fore, dense NRSfM becomes extremely challenging for
such algorithms. Not long ago, Gallardo et al. combined
shading, motion and generic physical deformation to model
dense NRSfM [21].

2By classical setting, we mean without using RGB-D or 3D template.

3. Preliminaries

In this paper, k.kF, k.k∗ denotes the Frobenius norm
and nuclear norm respectively. k.kG represent the notion
of norm on the Grassmann manifold. Single angle bracket
< ., . > denotes the Euclidean inner product. For ease of
understanding and completeness, in this section, we brieﬂy
review few important deﬁnitions related to the Grassmann
manifold. Firstly, a manifold is a topological space that is
locally similar to the Euclidean space. Out of several man-
ifolds, the Grassmann manifold is a topologically rich non-
linear manifold, each point of which represent the set of all
right invariant subspace of the Euclidean space [19, 1, 34].

Deﬁnition 1. The Grassmann manifold, denoted by G(p, d),
consists of all the linear p-dimensional subspace embedded
in a ‘d’ dimensional Euclidean space Rd such that 0 ≤ p ≤
d [Absil et al., 2009] [1].

A point ‘Φ’ on the Grassmann manifold can be repre-
sented by Rd×p matrix whose columns are composed of or-
thonormal basis. The space of such matrices with orthonor-
mal columns is a Riemannian manifold such that ΦTΦ = Ip,
where Ip is a p × p identity matrix.

Deﬁnition 2. Grassmann manifold can be embedded into
the space of symmetric matrices via mapping Π : G(p, d) 7→
Sym(d), Π(Φ) = ΦΦT, where Φ is a Grassmann point
[28, 30]. Given two Grassmann points Φ1 and Φ2, then
the distance between them can be measured using the pro-
jection metric d2
F [28].

g(Φ1, Φ2) = 0.5kΠ(Φ1) − Π(Φ2)k2

In the past, these two properties of Grassmann mani-
fold has been used in many computer vision applications
[28, 10, 34]. Second deﬁnition is very important as it allows
to measure the distance on the Grassmann manifold, hence,
(G, dg) forms a metric space. We used these properties in
the construction of our formulation. For comprehensive de-
tails on this topic readers may refer to [28].

4. Problem Formulation

Let ‘P’ be the total number of feature points tracked
across ‘F’ frames. Concatenating these 2D coordinates of
each feature points for all frames across the columns of a
matrix gives ‘W’ ∈ R2F×P matrix. This matrix is popularly
known as measurement matrix [48]. Our goal is, given the
image measurement matrix, estimate the camera motion and
3D coordinates of every 2D feature points across all frames.
We start our formulation with the classical representa-
tion to NRSfM i.e. W = RS, where, R ∈ R2F×3F is a block
diagonal rotation matrix with each block as a 2 × 3 ortho-
graphic rotation matrix, and S ∈ R3F×P as the 3D structure
matrix. With such a representation, the entire problem sim-
pliﬁes to the estimation of correct rotation matrix ‘R’ and

5348

structure matrix ‘S’ such that the above relation holds. Fol-
lowing the assumption of the previous work [34], we esti-
mate the rotation using Intersection method [18]. As a re-
sult, the task reduces to composing of an efﬁcient algorithm
that correctly models the surface deformations and provide
better reconstruction results. Recent algorithms in NRSfM
have demonstrated that clustering beneﬁts reconstruction
and vice-versa, however, the existing framework to employ
this idea is not scalable to millions of points. To establish
this idea for dense NRSfM, Kumar et al. [34] used LRR
on Grassmannian manifold. Using the similar notions, we
model dense deforming surface using Grassmannian repre-
sentation to provide more reliable and accurate solution.

In the following subsection, we ﬁrst introduce the Grass-
mannian representation of the surface and how to project
these Grassmannians onto the lower dimension Grassmann
manifold by preserving the neighboring information. In the
later subsection, we use these representations to formulate
the overall cost function for solving dense NRSfM problem.

4.1. Grassmannian representation

Let ‘Φi’ ∈ G(p, d) be a Grassmann point represent-
ing the ith local linear subspace spanned by ith set of
columns of ‘S’. Using this notion, we decompose the en-
tire trajectories of the structure into a set of ‘K’ Grassman-
nians ξ = {Φ1, Φ2, Φ3, ...., ΦK}. Now, such a representa-
tion treats each subspace independently and therefore, its
low-dimensional linear representation may not be suitable
to capture the surface dependent non-linearity. To prop-
erly represent Grassmannian which respects the neighbor-
ing non-linearity in low-dimension, we introduce a different
strategy to model non-rigid surface in low-dimension. For
now, let ∆ ∈ Rd×˜d be a matrix that maps ‘Φi’ ∈ G(p, d) to
‘φi’ ∈ G(p, ˜d) such that ˜d < d. Mathematically,

Its quite easy to examine that φi is not a orthogonal ma-
trix and, therefore, does not qualiﬁes as a potential point
on a Grassmann manifold. However, by performing a
orthogonal-triangular (QR) decomposition of φi, we esti-
mate the new representative of φi on the Grassmann mani-
fold of ‘˜d’ dimension.

ΘiUi = qr(φi) = ∆TΦi

(2)

Here, qr(.) is a function that returns the QR decomposition
of the matrix. The Θi ∈ R˜d×p is an orthogonal matrix and
Ui ∈ Rp×p is the upper triangular matrix3. Using Eq.(2),
we represent the equivalence of Φi in low dimension as

Θi = ∆T(ΦiU
Θi = ∆TΩi

−1
i )

(3)

3Note: The value of ˜d ≥ p, Use [Θi, Ui] = qr(φi, 0) in MATLAB to

get a square Ui matrix (Ui ∈ Rp×p)

i"# Grassmann point (	Θi) 
j"# Neighbor Grassmann point (	Θj) 

Y

Z

X

Figure 3: In contrast to [34], our modeling of surface using Grass-
mannians considers the similarity between the neighboring Grass-
mannians while representing it in the lower dimension. Based on
the assumption that spatially neighboring surface tend to span sim-
ilar subspace, deﬁning neighboring subspace dependency graph is
easy and most of the real-world examples follows such assump-
tion. However, building such graph in shape space can be tricky.

−1
i ∈ Rd×p. The key-point to note is that
where, Ωi = ΦiU
both Θi and φi has the same column space. In principle
such a representation is useful however, it does not serve the
purpose of preserving the non-linearity w.r.t its neighbors.
In order to encapsulate the local dependencies (see Fig.(3),
Fig.(4)), we further constrain our representation as:

E(∆) = minimize

∆

K

X

(i,j)

wij

1
2

kΠ(Θi) − Π(Θj)kF
2

(4)

The parameter ‘wij’ accommodate the similarity knowledge
between the two Grassmannians. Using the Deﬁnition(2)
and Eq.(3), we further simplify Eq.(4) as

E(∆) ≡ minimize

∆

E(∆) ≡ minimize

∆

K

X

(i,j)

K

X

(i,j)

K

X

(i,j)

wij

wij

wij

1
2

1
2

1
2

k∆TΩiΩT

i∆ − ∆TΩjΩT

j∆k2

F

k∆T(ΩiΩT

i − ΩjΩT

j)∆k2

F

k∆T(Λij)∆k2

F

(5)
where, Λij ∈ Sym(d). The parameter ‘wij’ (similarity
graph) is set as exp(−d2
g(Φi, Φj)) with dg as the projec-
tion metric (see Deﬁnition (2)). Eq.(5) is an unconstrained
optimization problem and its solution may provide a trivial
solution. To estimate the useful solution, we further con-
strain the problem. Using ith Grassmann point ‘Ωi’ and
its neighbors, expand Eq.(5). By performing some simple
algebraic manipulation, Eq.(5) reduces to

trace(cid:16)∆T(cid:0)

K

X

i=1

λiiΩiΩT

i(cid:1)∆(cid:17)

(6)

where, λii = PK

j=1 wij. Constraining the value of Eq.(6)

5349

φi = ∆TΦi

(1)

E(∆) ≡ minimize

∆

to 1 provides the overall optimization for an efﬁcient rep-
resentation of the local non-rigid surface on the Grassmann
manifold.

E(∆) ≡ minimize

∆

K

X

(i,j)

wij

1
2

k∆T(Λij)∆k2

F

subject to:

(7)

K

i=1

X

λiiΩiΩT

trace(cid:16)∆T(cid:0)

i(cid:1)∆(cid:17) = 1
Its easy to verify that the matrix Λ and (cid:0)PK

i(cid:1)
i=1 λiiΩiΩT
are symmetric and positive semi-deﬁnite, and therefore, the
above optimization can be solved as a generalized eigen
value problem —refer supplementary material for details.

4.2. Dense NRSfM formulation

To solve the dense non-rigid structure from motion with
the representation formulated in the previous sub-section
§4.1, we propose to jointly optimize the objective function
over the 3D structure and its local group representation. In
order to build the overall objective function, we introduce
each constraint equation one by one for clear understanding
of our overall cost function.

Ep(S) = minimize

S

1
2

kW − RSk2

F

(8)

The ﬁrst term constrain the 3D structure such that it satisﬁes
the re-projection error.

Es(S♯) = minimize

S♯

kS♯k∗

(9)

The second term caters the global assumption about the
non-rigid object; that is the overall shape matrix is low-rank.
To establish this assumption, we perform rank minimization
of the shape matrix. Although the rank minimization of a
matrix is NP-hard, it’s relaxed to nuclear norm minimiza-
tion to ﬁnd an approximate solution. This term mainly pe-
nalizes the total number of independent shape required to
represent the shape. The choice of minimizing S♯ ∈ R3P×F
instead to S ∈ R3F×P is inspired from Dai et al.’s work [18].
Since the dense deforming shape is composed of several lo-
cal linear low-dimensional subspace, the global constraint
(Eq.(9)) may not reﬂect their local dependency. Therefore,
in order to introduce the local subspace constraint on the
shape, we use the notion of self-expressiveness on the non-
linear Grassmann manifold space.

minimize

E,C,S♯

kEk2

G + β2kS♯k∗ + β3kCk∗

subject to: S♯ = f (S), S = SC + E

(10)

Here, we deﬁne f : S ∈ R3F×P 7→ S♯ ∈ R3P×F and
C ∈ RP×P as the coefﬁcient matrix. We know from the liter-
ature that the Grassmann manifold is isometrically equiva-
lent to the symmetric idempotent matrix [11]. So, we embed

!(p, d)

!(p, d&)

Y

Z

X

High Dimensional 
Grassmann Manifold

Low Dimensional 
Grassmann Manifold

Y

Z

X

3D Reconstruction

(a)

(b)

(c)

Figure 4: Conceptual illustration of our modeling (a) Modeling of
3D trajectories to Grassmann points (b) The two grassmann mani-
fold and mapping of the points between them to infer better cluster
index that leads to better reconstruction (c) The 3D reconstruction
of the non-rigid deforming object.

the Grassmann manifold into symmetric matrix manifold to
deﬁne the self-expressiveness. Let ˜ξ = {Θ1, Θ2, ..., ΘK} be
the set of Grassmannians on a low-dimensional Grassmann
manifold. The elements of ˜ξ are the projection of high-
dimensional Grassmannian representation of the columns
of ‘S’ matrix. Let χ = {(Θ1ΘT
K)} be
its embedding onto symmetric matrix manifold. Using such
embedding techniques we re-write Eq.(10) as

2), ..., (ΘKΘT

1), (Θ2ΘT

minimize

E,˜C,S♯

kEk2

F + β2kS♯k∗ + β3k˜Ck∗

subject to:
S♯ = f (S), χ = χ˜C + E

(11)

where, ˜C ∈ RK×K and χ ∈ R˜d×˜d×K denotes the coefﬁcient
matrix of Grassmannians and structure tensor respectively,
with K as the total number of Grassmannians. Generally,
K << P, which makes such representation scalable.

The third term we introduce is composed of few con-
straint functions that provides a way to group Grassman-
nians and recover 3D shape simultaneously. Let P ∈
R1×P be an ordering vector that contains the index of
columns of S. Our function deﬁnition is of the form
{(output, function(.)) : deﬁnition}. Using it, we deﬁne the
function fg, fh, fp and fs as follows:

i=1 columns of S of using P,

(cid:8)(cid:0)ξ, fg(P, S)(cid:1) : order {Si}K
ξ := {Φi}K

(12)

i=1, Θi = ∆T(ΦiU

i=1where, [ Φi, Σi, ξvi] = svds(Si, p)(cid:9)
(cid:8)(cid:0) ˜ξ, fh(∆, ξ)(cid:1) : ˜ξ = {Θi}K
−1
i ),
where, ∆ = solution to the minimization of Eq.(7)(cid:9)
(cid:8)(P, fp( ˜ξ, ˜C, Po) : P = spectral clustering( ˜ξ, ˜C, Po)(cid:9)(14)
(cid:8)(cid:0)S, fs(ξ, Σ, ξv)(cid:1) : Si = [ξi Σi ξvi], where Σi ∈ Rp×p(cid:9)
(15)
Intuitively, the ﬁrst function (fg) uses the ordering vector
P ∈ R1×P to reﬁne the grouping of the trajectories for
suitable Grassmannian representation. The second function

(13)

5350

(fh) projects the Grassmannians to a lower dimension in ac-
cordance with the neighbors using Eq.(7). The third func-
tion (fp) uses the projected Grassmannians to assign proper
labeling to the Grassmann points and update the given or-
dering vector P using spectral clustering. The fourth func-
tion (fs) uses the group of trajectories to reconstruct back
the set of local surface. Σ, ξv are the singular values and
right singular vector matrices in the high-dimension.
Objective Function: Combining all the above terms and
constraints provides our overall cost function.

minimize

E,˜C,S,S♯

1
2

kW − RSk2

F + β1kEk2

F + β2kS♯k∗ + β3k˜Ck∗

subject to:
S♯ = f (S), χ = χ˜C + E,
ξ = fg(P, S), ˜ξ = fh(∆, ξ),
S = fs(ξ, Σ, ξv), P = fp( ˜ξ, ˜C, Po)

(16)
where Po vector contains the initial ordering of the
columns of ‘W’ and ‘S’. The function (fp) provides the
ordering index to rearrange the columns of ‘S’ matrix to
be consistent with ‘W’ matrix. This is important because,
grouping the set of columns of ‘S’ over iteration, disturbs
its initial arrangements.

Algorithm 1 Dense Non-rigid Structure from Motion (MoJu)
Require: W, R, {βi}3
Initialize: S=pinv(R)W, S♯=f (S), Z=0, {Li}2

i=1, ρ=e−2, ρm=e8, ǫ=e−10, c =1.1, K;

i=1=0, ˜d;
∆ = [I˜d×˜d; random values], p %top singular values
Po = kmeans++(S, K), iter = 1, Pstore(iter, :) = Po,
P = Po

while not converged do

) + RTW(cid:1);

ρ

1. S := mldivide(cid:0)RTR + ρI, ρ(f −1(S♯) + f −1(L1)
2. ξ := fg(P, S); see Eq.(12)
3. W := arrange column(P, W)
4. Update the similarity matrix ‘wij’ using ξ. §4.1
5. ˜ξ := fh(ξ, ∆); s.t, ∆ ≡ minimize
6. Γij = Tr[(ΘT
7. ˜C := mldivide(cid:0)2β1LLT + ρI, 2β1LLT + ρ(Z − L2
8. P := fp( ˜ξ, ˜C, P);
9. S := fs(ξ, Σ, ξv); see Eq.(14)
10. S♯ := UsS β2

iΘj)]; Γ = (Γij)K

jΘi)((ΘT

∆

E(∆); see Eq.(13)

ij=1; L = chol(Γ)

ρ )(cid:1);

ρ
11. Z := UzS β3
ρ

(Σs)Vs; s.t, [Us, Σs, Vs] := svd(f (S)− L1
ρ )

(Σz)Vz; s.t, [Uz, Σz, Vz] := svd(˜C + L2

ρ );

12. L1 := L1 + ρ(S♯ − f (S)); L2 := L2 + ρ(˜C − Z)
13. iter := iter + 1; Pstore(iter, :) := P;
14. ρ := min(ρm, cρ);
15. gap := max{kS♯ − f (S)k∞, k˜C − Zk∞};
(gap < ǫ) ∨ (ρ > ρm) → break; %convergence check

end while
return S;

5. Solution

e3D = Estimate error (S, SGT, Pstore); %use Eq.(18)

The optimization proposed in Eq.(16) is a coupled op-
timization problem. Several methods of Bi-level optimiza-
tion can be used to solve such minimization problem [6, 27].
Nevertheless, we propose ADMM [8] based solution due to
its application in many non-convex optimization problems.
The key point to note is that one of our constraint is com-
posed of separate optimization problem (fh) i.e., the solu-
tion to Eq.(7), and therefore, we cannot directly embed the
constraint to the main objective function. Instead, we only
introduce two Lagrange multiplier L1, L2 to concatenate a
couple of constraints back to the original objective func-
tion. The remaining constraints are enforced over iteration.
To decouple the variable ˜C from χ, we introduce auxiliary
variable ˜C = Z. We apply these operations to our optimiza-
tion problem to get the following Augmented Lagrangian
form:

minimize

Z,˜C,S,S♯

1
2

kW − RSk2

F + β1kχ − χ˜Ck2

F + β2kS♯k∗+

ρ
2
ρ
2

kS♯ − f (S)k2

F+ < L1, S♯ − f (S) > +β3kZk∗+

k˜C − Zk2

F+ < L2, ˜C − Z >

subject to: ξ = fg(P, S), ˜ξ = fh(∆, ξ),
S = fs(ξ, Σ, ξv), P = fp( ˜ξ, ˜C, Po)

Note that ˜C provides the information about the subspace,
not the vectorial points. However, we have the chart of
the trajectories and its corresponding subspace. Once, we
group the trajectories based on ˜C, fg(.) provides new Grass-
mann sample corresponding to each group. The deﬁnition
of fh(.) and fs(.) is provided in Eq.(7) and Eq.(14) respec-
tively. More generally, the solution to the optimization in
Eq.(7) is obtained by solving it as a generalized eigenvalue
problem. To keep the order of columns of ‘S’ matrix consis-
tent with ‘W’ matrix fp(.) provides the ordering index. We
provide the implementation details of our method with suit-
able MATLAB commands in the Algorithm Table (1). For
details on the derivation to each sub-problem, kindly refer
to the supplementary material.

6. Initialization and Evaluation

We performed experiments and evaluation on the avail-
able standard benchmark datasets [23, 49, 7]. To keep our
evaluations consistent with the previous methods, we com-
pute the mean normalized 3D reconstruction error of the
estimated shape ‘Sest’ after convergence as

e3D =

1
F

F

X

i=1

kSi

GTkF

est − Si
kSi
GTkF

(18)

(17)

5351

Figure 5: From left: 3D reconstruction results on Back [23],
Heart [23], Paper[49] and T-shirt [49] data sequence respectively.

(a)

(b)

(c)

(d)

Figure 6: 3D reconstruction results on the Actor sequence [7].

here ‘SGT’ denotes the ground-truth 3D shape matrix.

Initialization: We used Intersection method [18] to esti-
mate the rotation matrix and initialize S = pinv(R)W. The
initial grouping of the trajectories or columns of S is done
using k-means++ algorithm [5]. These groups are then used
to initialize Po, P and the Grassmann points {Φi}K
i=1 ∈ ξ
via subset of singular vectors. To represent the Grassman-
nians in the lower-dimension, we solve Eq.(7) to initialize ˜ξ
and store corresponding singular values. The similarity ma-
trix or graph in Eq.(7) is build using the distance measure
between the Grassmannians in the embedding space §4.1.
1. Results on synthetic Face dataset: The synthetic face
dataset is composed of four distinct sequence [23] with
28,880 feature points tracked over multiple frames. Each
sequence captures the human facial expression with a dif-
ferent range of deformations and camera motion. Sequence
1 and Sequence 2 are 10 frame long video with rotation
in the range ±30◦ and ±90◦ respectively. Sequence 3 and
Sequence 4 are 99 frame long video that contains high fre-
quencies and low frequencies rotation respectively which
captures real human facial deformations. Table (1) shows
the statistical results obtained on these sequences using our
algorithm. For qualitative results on these sequences kindly
refer to the supplementary material.
2. Results on Paper and T-shirt dataset: Varol et al. in-
troduced ‘kinect paper’ and ‘kinect tshirt’ datasets to test
the performance of NRSfM algorithm under real condi-
tions [49]. This dataset provides sparse SIFT [41] feature
tracks and noisy depth information captured from Microsoft
Kinect for all the frames. As a result, to get dense 2D
feature correspondences of the non-rigid object for all the
frames becomes difﬁcult. To circumvent this issue, we used
Garg et al. [22] algorithm to estimate the measurement ma-
trix. To keep the numerical comparison consistent with the
previous work in dense NRSfM [34], we used the same co-
ordinate range for tracking the features. Numerically, its xw

= (253, 253, 508, 508), yw = (132, 363, 363, 132) rectangu-
lar window across 193 frames for kinect paper sequence.
For kinect tshirt sequence, we considered rectangular win-
dow of xw = (203, 203, 468, 468), yw = (112, 403, 403, 112)
across 313 frames, same as used in Kumar et al. work [34].
Fig.(5) shows the reconstruction results on these sequence
with comparative results provided in Table (1).
3. Results on Actor dataset: Beeler et al. [7] introduced
Actor dataset for high-quality facial performance capture.
This dataset is composed of 346 frames captured from seven
cameras with 1,180,232 vertices. The dataset captures the
ﬁne details of facial expressions which is extremely useful
in the testing of NRSfM algorithms. Nevertheless, for our
experiment, we require dense 2D image feature correspon-
dences across all images as input, which we synthesized us-
ing ground-truth 3D points and synthetically generated or-
thographic camera rotations. To maintain the consistency
with the previous works in dense NRSfM for performance
evaluations, we synthesized two different datasets namely
Actor Sequence1 and Actor Sequence2 based on the head
movement as described in Ansari et al. work [4]. Fig.(6)
shows the dense detailed reconstruction that is achieved us-
ing our algorithm. Table (1) clearly indicates the beneﬁt of
our approach to reconstruct such complex deformations.
4. Results on Face, Heart, Back dataset: To evaluate the
variational approach to dense NRSfM [23] Garg et al. intro-
duced these datasets. Its sequences are composed of monoc-
ular video’s captured in a natural environment with vary-
ing lighting condition and large displacements. It consists
of three different videos with 120, 150 and 80 frames for
face sequence, back sequence and heart sequence respec-
tively. Additionally, it provides dense 2D feature track for
the same with 28332, 20561, and 68295 features track over
the frames for face, back and heart sequence. No ground-
truth 3D is available with this dataset for evaluation. Fig.(5)
show reconstruction results on back and heart sequence. For
more qualitative results on these sequences, kindly refer to
the supplementary material.

5352

(a)(b)(c)(d)Dataset ↓ / Method → MP [42]
0.2572
0.0644
0.0682
0.0762
0.5226
0.2737
0.0827
0.0741

Face Sequence 1
Face Sequence 2
Face Sequence 3
Face Sequence 4
Actor Sequence 1
Actor Sequence 2
Paper Sequence
T-shirt Sequence

PTA [2]
0.1559
0.1503
0.1252
0.1348
0.0418
0.0532
0.0918
0.0712

CSF1 [25]

0.5325
0.9266
0.5274
0.5392
0.3711
0.2275
0.0842
0.0644

0.0531
0.0457
0.0346
0.0379

CSF2[26] DV [23] DS [17]
0.0636
0.0569
0.0374
0.0428
0.0891
0.0822
0.0612
0.0636

0.4677
0.7909
0.5474
0.5292
0.3708
0.2279
0.0801
0.0628

-
-
-
-

SMSR [4]

SDG[34]

0.1893
0.2133
0.1345
0.0984
0.0352
0.0334

-
-

0.0443
0.0381
0.0294
0.0309
0.0340
0.0342
0.0394
0.0362

Ours
0.0404
0.0392
0.0280
0.0327
0.0274
0.0289
0.0338
0.0386

Table 1: Statistical comparison of our method with other competing approaches. Quantitative evaluations for SMSR [4] and DV [23] are
not performed by us due to the unavailability of their code, and therefore, we tabulated their reconstruction error from their published work.

DS

SDG

Ours

 
r
o
r
r
E

 
 

D
3

 

n
a
e

 

M
d
e
s
i
l
a
m
r
o
N

 
.

g
v
A

0.08

0.068

0.055

0.043

0.03

0.25

0.2

0.15

0.1

0.05

 

r
o
r
r
E
n
o
i
t
c
u
r
t
s
n
o
c
e
R

 
.

g
v
A

 

Face Sequence 1
Face Sequence 2
Face Sequence 3
Face Sequence 4

s
d
n
o
c
e
s
 

 

i

n
i
 
e
m
T
g
n
i
s
s
e
c
o
r
P

0.005 0.010 0.015 0.020 0.025 0.030 0.035 0.040 0.045 0.050 0.055

3

8

13

18

23

28

5000

3750

2500

1250

0

MP

DS

SDG

Ours

Face Seq1 Face Seq2 Face Seq3 Face Seq4

Paper

T-shirt

Noise Ratio

(a)

 Number of top singular values(p)

(b)

Dataset

(c)

1.4

1.2

1

0.8

0.6

0.4

0.2

 

s
s
o
L
n
o
i
t
a
z
i
m
i
n
i
M

 

0

0

gap1 = max(max(jS] ! f (S)j))
gap2 = max(max(j ~C ! Zj))
max(gap1; gap2)

50

100

150

 Number of Iterations

(d)

Figure 7: (a) Variation in the average 3D reconstruction error with change in the noise ratio’s for face dataset[23]. (b) Fluctuation in the
3D reconstruction accuracy with change number of top singular values and corresponding singular vectors used by our algorithm for face
sequence[23]. (c) Processing time againt other competing algorithm’s on Intel Core i7-4790 CPU @3.60GHz x 8 Desktop with MATLAB
2017b, our method show comparable execution timing to SDG[34]. (d) A typical ADMM optimization convergence curve of our algorithm.

6.1. Algorithmic Analysis

We performed some more experiments to understand the be-
havior of our algorithm under different input parameters and
evaluation setups. In practice these experiment help analyze
the practical applicability of our algorithm.
1. Performance over noisy trajectories: We utilized the
standard experimental procedure to analyze the behavior of
our algorithm under different noise levels. Similar to the
work of Kumar et al. [34], we added the Gaussian noise to
the input trajectories. The standard deviation of the noise
are adjusted as σg = λgmax{|W|} with λg varying from
0.01 to 0.055. Fig.(7(a)) show the quantitative comparison
of our approach with recent algorithms namely DS [17] and
SDG [34]. The graph is plotted by taking the average re-
construction error of all the four synthetic face dataset [23].
The procured statistics indicate that our algorithm is more
resilient to noise than other competing methods.
2. Performance with change in the number of singular
values: The selection of ‘p’ in G(p, d) i.e. the number of
top singular vectors for Grassmannian representation and
its corresponding singular values to perform reconstruction
can directly affect the performance of our algorithm. How-
ever, it has been observed over several experiments that we
need very few singular value and singular vectors to recover
dense detailed 3D reconstruction of the deforming object.
Fig.(7(b)) show the variation in average 3D reconstruction
with the values of ‘p’ for synthetic face dataset [23].

3. Processing Time and Convergence: Our algorithm ex-
ecution time is almost at par or a bit slower than SDG [34].
Fig.(7(c)) show the processing time taken by our method
on different datasets. Fig.(7(d)) show a typical convergence
curve of our algorithm. Ideally, it takes 120-150 iteration to
provide an optimal solution to the problem.

7. Conclusion

Our Grassmannian representation of a non-rigidly deform-
ing surface exploits the advantage of Grassmannians of
different dimensions to jointly estimate better grouping of
subspaces and their corresponding 3D geometry. Our ap-
proach explicitly leverages the geometric structure of the
non-rigidly moving object w.r.t its neighbors on manifold
via similarity graph and, it’s embedding in the lower dimen-
sion. We empirically demonstrated that our method is able
to achieve 3D reconstruction accuracy which is better or as
good as the state-of-the-art, with signiﬁcant improvement in
handling noisy trajectories.
Acknowledgement. The author was supported in part by the ARC
Centre of Excellence for Robotic Vision (CE140100016), ARC Discovery

project on 3D computer vision for geo-spatial localisation (DP190102261)

and ARC DECRA project (DE140100180). The author thank his elder

brother Aditya Kumar for his relentless support and advise. Thank you

Roya Safaei for her constant help and constructive suggestions. Also, the

author thank Dr. J. Varela and Dr. C. Punch, ACT for the medical treatment
during the course of this work.

5353

References

[1] P-A Absil, Robert Mahony, and Rodolphe Sepulchre. Opti-
mization algorithms on matrix manifolds. Princeton Univer-
sity Press, 2009.

[2] Ijaz Akhter, Yaser Sheikh, Sohaib Khan, and Takeo Kanade.
Nonrigid structure from motion in trajectory space. In Ad-
vances in neural information processing systems, pages 41–
48, 2009.

[3] Ijaz Akhter, Yaser Sheikh, Sohaib Khan, and Takeo Kanade.
Trajectory space: A dual representation for nonrigid struc-
ture from motion.
IEEE Transactions on Pattern Analysis
and Machine Intelligence, 33(7):1442–1456, 2011.

[4] Mohammad Dawud Ansari, Vladislav Golyanik, and Didier
Stricker. Scalable dense monocular surface reconstruction.
arXiv preprint arXiv:1710.06130, 2017.

[5] David Arthur and Sergei Vassilvitskii. k-means++: The ad-
vantages of careful seeding.
In Proceedings of the eigh-
teenth annual ACM-SIAM symposium on Discrete algo-
rithms, pages 1027–1035. Society for Industrial and Applied
Mathematics, 2007.

[6] Jonathan F Bard. Practical bilevel optimization: algorithms
and applications, volume 30. Springer Science & Business
Media, 2013.

[7] Thabo Beeler, Fabian Hahn, Derek Bradley, Bernd Bickel,
Paul Beardsley, Craig Gotsman, Robert W Sumner, and
Markus Gross. High-quality passive facial performance cap-
ture using anchor frames. In ACM Transactions on Graphics
(TOG), volume 30, page 75. ACM, 2011.

[8] Stephen Boyd, Neal Parikh, Eric Chu, Borja Peleato, and
Jonathan Eckstein. Distributed optimization and statistical
learning via the alternating direction method of multipliers.
Foundations and Trends R(cid:13) in Machine Learning, 3(1):1–
122, 2011.

[9] Christoph Bregler, Aaron Hertzmann, and Henning Bier-
mann. Recovering non-rigid 3d shape from image streams.
In IEEE Conference on Computer Vision and Pattern Recog-
nition, volume 2, pages 690–696. IEEE, 2000.

[10] Hasan Ertan Cetingul and Ren´e Vidal. Intrinsic mean shift
for clustering on stiefel and grassmann manifolds. In IEEE
Conference on Computer Vision and Pattern Recognition,
pages 1896–1902, 2009.

[11] Yasuko Chikuse. Statistics on special manifolds, volume

174. Springer Science & Business Media, 2012.

[12] T Collins and A Bartoli. Locally afﬁne and planar de-
formable surface reconstruction from video. In International
Workshop on Vision, Modeling and Visualization, pages 339–
346, 2010.

[13] Keenan Crane. Conformal geometry processing. California

Institute of Technology, 2013.

[14] Keenan Crane. Discrete differential geometry: An applied

introduction. 2015.

[15] Keenan Crane, Fernando De Goes, Mathieu Desbrun, and
Peter Schr¨oder. Digital geometry processing with discrete
exterior calculus. In ACM SIGGRAPH 2013 Courses, page 7.
ACM, 2013.

[16] Keenan Crane and Max Wardetzky. A glimpse into discrete
differential geometry. Notices of the American Mathematical
Society, 64(10):1153–1159, November 2017.

[17] Yuchao Dai, Huizhong Deng, and Mingyi He. Dense
easy-a
spatial-
arXiv preprint

non-rigid structure-from-motion made
temporal smoothness based solution.
arXiv:1706.08629, 2017.

[18] Yuchao Dai, Hongdong Li, and Mingyi He. A simple prior-
free method for non-rigid structure-from-motion factoriza-
tion. International Journal of Computer Vision, 107(2):101–
122, 2014.

[19] Piotr Doll´ar, Vincent Rabaud, and Serge Belongie. Non-
isometric manifold learning: Analysis and an algorithm. In
International Conference on Machine Learning, pages 241–
248, 2007.

[20] Mari´an Fecko. Differential geometry and Lie groups for

physicists. Cambridge University Press, 2006.

[21] Mathias Gallardo, Toby Collins, Adrien Bartoli, and France
Mathias. Dense non-rigid structure-from-motion and shad-
ing with unknown albedos. In Proceedings of the IEEE Con-
ference on Computer Vision and Pattern Recognition, pages
3884–3892, 2017.

[22] Ravi Garg, Anastasios Roussos, and Lourdes Agapito. Ro-
bust trajectory-space tv-l1 optical ﬂow for non-rigid se-
quences.
In Energy Minimization Methods in Computer
Vision and Pattern Recognition, pages 300–314. Springer,
2011.

[23] Ravi Garg, Anastasios Roussos, and Lourdes Agapito. Dense
variational reconstruction of non-rigid surfaces from monoc-
ular video.
In IEEE Conference on Computer Vision and
Pattern Recognition, pages 1272–1279, 2013.

[24] Ravi Garg, Anastasios Roussos, and Lourdes Agapito. A
variational approach to video registration with subspace
constraints.
journal of computer vision,
104(3):286–314, 2013.

International

[25] Paulo FU Gotardo and Aleix M Martinez. Computing
smooth time trajectories for camera and deformable shape
in structure from motion with occlusion. IEEE Transactions
on Pattern Analysis and Machine Intelligence, 33(10):2051–
2065, 2011.

[26] Paulo FU Gotardo and Aleix M Martinez. Non-rigid struc-
ture from motion with complementary rank-3 spaces.
In
Computer Vision and Pattern Recognition (CVPR), 2011
IEEE Conference on, pages 3065–3072. IEEE, 2011.

[27] Stephen Gould, Basura Fernando, Anoop Cherian, Peter
Anderson, Rodrigo Santa Cruz, and Edison Guo. On
differentiating parameterized argmin and argmax problems
with application to bi-level optimization.
arXiv preprint
arXiv:1607.05447, 2016.

[28] Jihun Hamm and Daniel D Lee. Grassmann discriminant
analysis: a unifying view on subspace-based learning.
In
International conference on Machine learning, pages 376–
383. ACM, 2008.

[29] Onur C Hamsici, Paulo FU Gotardo, and Aleix M Martinez.
Learning spatially-smooth mappings in non-rigid structure
from motion. In European Conference on Computer Vision,
pages 260–273. Springer, 2012.

5354

[30] Mehrtash Harandi, Conrad Sanderson, Chunhua Shen, and
Brian Lovell. Dictionary learning and sparse coding on
grassmann manifolds: An extrinsic solution. In Computer Vi-
sion (ICCV), 2013 IEEE International Conference on, pages
3120–3127. IEEE, 2013.

[31] Mehrtash T Harandi, Mathieu Salzmann, and Richard Hart-
ley. From manifold to manifold: Geometry-aware dimen-
sionality reduction for spd matrices. In European conference
on computer vision, pages 17–32. Springer, 2014.

[32] Zhiwu Huang, Ruiping Wang, Shiguang Shan, and Xilin
Chen. Projection metric learning on grassmann manifold
with application to video based face recognition.
In Pro-
ceedings of the IEEE Conference on Computer Vision and
Pattern Recognition, pages 140–149, 2015.

[33] Suryansh Kumar.

Prior-free factorization method revisited.
arXiv:1902.10274, 2019.

Non-rigid structure from motion:
arXiv preprint

[34] Suryansh Kumar, Anoop Cherian, Yuchao Dai, and Hong-
dong Li. Scalable dense non-rigid structure-from-motion: A
grassmannian perspective. In The IEEE Conference on Com-
puter Vision and Pattern Recognition (CVPR), June 2018.

[35] Suryansh Kumar, Yuchao Dai, and Hongdong Li. Multi-
body non-rigid structure-from-motion. In 3D Vision (3DV),
2016 Fourth International Conference on, pages 148–156.
IEEE, 2016.

[36] Suryansh Kumar, Yuchao Dai, and Hongdong Li. Monocular
dense 3d reconstruction of a complex dynamic scene from
two perspective frames. In IEEE International Conference
on Computer Vision (ICCV), pages 4649–4657, Oct 2017.

[37] Suryansh Kumar, Yuchao Dai, and Hongdong Li. Spatio-
temporal union of subspaces for multi-body non-rigid
structure-from-motion. Pattern Recognition, 71:428–443,
May 2017.

[38] Suryansh Kumar, Ram Srivatsav Ghorakavi, Yuchao Dai,
and Hongdong Li. Dense depth estimation of a complex dy-
namic scene without explicit 3d motion estimation. arXiv
preprint arXiv:1902.03791, 2019.

[39] Viktor Larsson and Carl Olsson. Compact matrix factoriza-
tion with dependent subspaces. In IEEE Conference on Com-
puter Vision and Pattern Recognition (CVPR), 2017, volume
2017, pages 4361–4370. Institute of Electrical and Electron-
ics Engineers Inc., 2017.

[40] Minsik Lee, Jungchan Cho, Chong-Ho Choi, and Songhwai
Oh. Procrustean normal distribution for non-rigid structure

from motion. In IEEE Conference on Computer Vision and
Pattern Recognition, pages 1280–1287, 2013.

[41] David G Lowe. Object recognition from local scale-invariant
features. In IEEE International Conference on Computer vi-
sion, pages 1150–1157, 1999.

[42] Marco Paladini, Alessio Del Bue, Joao Xavier, Lourdes
Agapito, Marko Stovsic, and Marija Dodig. Optimal met-
ric projections for deformable and articulated structure-
from-motion.
International journal of computer vision,
96(2):252–276, 2012.

[43] Hyun Soo Park, Takaaki Shiratori, Iain Matthews, and Yaser
Sheikh. 3d reconstruction of a moving point from a series of
2d projections. In European conference on computer vision,
pages 158–171. Springer, 2010.

[44] Ren´e Ranftl, Vibhav Vineet, Qifeng Chen, and Vladlen
Koltun. Dense monocular depth estimation in complex dy-
namic scenes. In IEEE Conference on Computer Vision and
Pattern Recognition, pages 4058–4066, 2016.

[45] Chris Russell, Joao Fayad, and Lourdes Agapito. Dense non-
rigid structure from motion. In International Conference on
3D Imaging, Modeling, Processing, Visualization and Trans-
mission, pages 509–516, 2012.

[46] Deqing Sun, Xiaodong Yang, Ming-Yu Liu, and Jan Kautz.
Pwc-net: Cnns for optical ﬂow using pyramid, warping,
and cost volume.
In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, pages 8934–
8943, 2018.

[47] Jonathan Taylor, Allan D Jepson, and Kiriakos N Kutulakos.
Non-rigid structure from locally-rigid motion. In IEEE Con-
ference on Computer Vision and Pattern Recognition, pages
2761–2768. IEEE, 2010.

[48] Carlo Tomasi and Takeo Kanade. Shape and motion from
image streams under orthography: a factorization method.
International Journal of Computer Vision, 9(2):137–154,
1992.

[49] Aydin Varol, Mathieu Salzmann, Pascal Fua, and Raquel Ur-
tasun. A constrained latent variable model. In IEEE Con-
ference on Computer Vision and Pattern Recognition, pages
2248–2255. Ieee, 2012.

[50] Yingying Zhu, Dong Huang, Fernando De La Torre, and Si-
mon Lucey. Complex non-rigid motion 3d reconstruction by
union of subspaces. In IEEE Conference on Computer Vision
and Pattern Recognition, pages 1542–1549, 2014.

5355

