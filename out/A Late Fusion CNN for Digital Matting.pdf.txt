A Late Fusion CNN for Digital Matting

Yunke Zhang1, Lixue Gong1, Lubin Fan2, Peiran Ren2, Qixing Huang3, Hujun Bao1 and Weiwei Xu∗1

1Zhejiang University

2Alibaba Group

3University of Texas at Austin

{yunkezhang, gonglx}@zju.edu.cn, {lubin.ﬂb, peiran.rpr}@alibaba-inc.com, huangqx@cs.uteaxs.edu,{bao, xww}@cad.zju.edu.cn

Abstract

This paper studies the structure of a deep convolutional
neural network to predict the foreground alpha matte by
taking a single RGB image as input. Our network is fully
convolutional with two decoder branches for the foreground
and background classiﬁcation respectively. Then a fusion
branch is used to integrate the two classiﬁcation results
which gives rise to alpha values as the soft segmentation
result. This design provides more degrees of freedom than
a single decoder branch for the network to obtain better
alpha values during training. The network can implicitly
produce trimaps without user interaction, which is easy to
use for novices without expertise in digital matting. Exper-
imental results demonstrate that our network can achieve
high-quality alpha mattes for various types of objects and
outperform the state-of-the-art CNN-based image matting
methods on the human image matting task.

1. Introduction

Digital matting is to accurately extract the foreground
object in an image for object-level image composition. It
has the advantage of estimating the alpha (opacity) values
of the pixels to create an alpha matte so that the foreground
object can be correctly abstracted and then composed with
a new background image to render a new scene. Formally
speaking, we assume that the observed image I is generated
from three underlying images: the foreground image F, the
background image B, and the alpha matte α, through the
following model:

Ip = αpFp + (1 − αp)Bp

(1)

where p represents a pixel across all images, and the value
of αp ∈ [0, 1].

A common approach to digital matting [10, 15, 36] pro-
ceeds in three steps, namely, (1) learn the foreground and

∗Corresponding author. The authors from Zhejiang University are af-

ﬁliated with the State Key Lab of CAD&CG.

Image

Our alpha matte

Composition

Figure 1. Two example matting results of our late fusion CNN that
does not need trimaps as input. Left: two images collected from
internet outside of our training dataset. Middle: the alpha mattes
predicted by our network. Right: the composition results.

background color models, (2) compute the probabilities of
each pixel belonging to the learned models, and (3) obtain
the alpha values. To this end, a critical task in digital mat-
ting is to determine the pixel alpha values α, which rep-
[20] leverages
resents a soft segmentation of the image.
the spectral clustering to compute α. However, such meth-
ods usually rely on user-inputs such as trimaps and scrib-
bles: The trimap separates an image into foreground region,
background region and a transition region to cover fuzzy
or transparent foreground object boundaries [10], while the
scribbles specify sparse pixels on the foreground and back-
ground [35]. Early works exploit the local color as the
main feature, which may lead to blurred or chunky arti-
facts as shown in [39]. Recent works (e.g., [9, 31, 38, 39])
leverage fully convolutional neural network (CNN) to learn
multi-scale features, which lead to high-quality semantic
image segmentation results. In addition, deep image mat-
ting (DIM) [39] has shown that high-quality alpha mattes
can be directly predicted through a deep CNN trained on
a large-scale image matting dataset. A recent contribution
combines the multi-scale features learned by deep CNN and

7469

It
the spectral matting method to obtain alpha matte [2].
is fully automatic but has the disadvantage of slow perfor-
mance due to solving the large-scale spectral problem.

While existing deep learning based digital matting ap-
proaches rely on a trimap as input, we propose a fully con-
volutional network (FCN) for automatic image matting by
taking a single RGB image as input. We achieve this goal
by designing two decoder branches in the network for the
foreground and background classiﬁcation, and then use a fu-
sion branch to integrate the two classiﬁcation results, which
gives rise to the soft segmentation result. This design pro-
vides more degrees of freedom than a single decoder branch
for the network to obtain better alpha values.
It is based
on the observation that the classiﬁcation branches can well
predict the hard segmentation result, but have difﬁculties in
predicting precise probabilities as the alpha values at the
pixel level. The two-decoder branch structure allows us to
design a fusion branch to correct the residuals left in the
classiﬁcation branches. Moreover, our training loss encour-
ages the two decoder branches to agree with each other at
the hard segmentation part and leave the soft segmentation
part to be corrected by the fusion branch. Therefore, our
approach can implicitly produce trimap without any user
interaction, which is easy to use for novice users without
expertise in digital matting.

Our two-branch network structure at the decoder stage of
FCN follows the late fusion structure which is widely used
in deep learning [8, 26] and can be categorized as a type of
ensemble learning to improve the accuracy of the predicated
alpha values. However, instead of simply maximizing or
averaging the output of the two classiﬁcation branches, we
learn the fusion weights. We thus denote our network by
late fusion CNN hereafter.

We have evaluated our network on the image matting
dataset in [39] to shown that it can produce high-quality
matting results for different types of objects. In addition,
we also construct a human image matting dataset to test the
network on this speciﬁc type of images. Fig. 1 illustrates the
matting results of our network on two internet images, and
the experimental results show that our network that does not
need trimaps as input can still achieve comparable results to
the state-of-the-art CNN-based methods and outperform on
the human image matting task.

2. Related Work

In this section, we brieﬂy review three main approaches,
such as sampling-based, afﬁnity-based, and deep learning
based approaches, to digital image matting.

Sampling-based approaches [10, 13, 14, 16, 29] use the
color of sampled pixels to infer the alpha values of the pix-
els in the transition region in an image. The key tasks of
these approaches are (1) to collect the sampled pixels [13,
16, 29, 30], and (2) to build a foreground and background

color model from the sampled pixels [10, 16, 34, 35]. These
approaches take the advantage of natural image statistics for
solving the ill-posed matting problem and work well when
the trimap is carefully deﬁned so that there are strong cor-
relations between the pixel color distribution of the transi-
tion region and that of the foreground/background regions.
Afﬁnity-based approaches [1, 2, 3, 7, 15, 19, 20, 33] prop-
agate the alpha values of the known foreground and back-
ground pixels to the unknown regions and have proven to be
more robust than sampling-based approaches when dealing
with complex images [10, 14, 29]. The quality of gener-
ated alpha mattes using these approaches is highly related to
the deﬁned afﬁnity score [15, 19, 33]. Global optimization
strategies, such as spectral techniques [20], are continuous
relaxations of binary optimization techniques, which is not
guaranteed to obtain optimal solutions. For a comprehen-
sive survey of traditional approaches, we refer the readers
to [37] for more details.

Deep learning based matting approaches directly learn a
mapping from an input image to its alpha matte from large-
scale labeled results. Cho et al. [9] proposed an end-to-end
CNN by combing the closed-form matting formulation de-
scribed in [19] and the methodology of KNN mating [7]. Xu
et al. [39] integrated an encoder-decoder network and a sub-
sequent detail reﬁnement network for digital matting, which
takes an image and the corresponding trimap as inputs. Lutz
et al. [25] presented a generative adversarial network for im-
age matting. They improved the decoder structure of [39]
by adding the atrous spatial pyramid pooling module [5] to
resample the features at several scales. Wang et al. [38] pro-
posed a deep propagation based image matting framework
by learning an alpha matte propagation principle using a
deep neural network. However, these techniques require a
trimap as input to initialize the propagation process. Several
recent techniques study image matting for a speciﬁc type of
objects. Chen et al. [6] proposed an automatic approach for
human matting. It takes an RGB image as input and ﬁrst
predicts the foreground and background regions as well as
the transition region using the three-class segmentation net-
work. The segmentation result is then used as a trimap for
the alpha matte generation. In contrast, our approach gen-
erates the ﬁnal alpha matte by blending the foreground and
background probability maps using a fusion network, which
avoids the difﬁcult trimap generation problem. The CNN-
based portrait matting in [31] uses an average mask as a
trimap by assuming the upper body appears at similar po-
sitions in portrait images. However, this assumption does
not apply in our setting. Zhu et al. [41] followed the similar
pipeline while designing a smaller network and a fast ﬁlter
similar to the guided ﬁlter for matting to deploy the model
on mobile phones. Chen et al. [4] formulates transparent
object matting as reﬂective ﬂow estimation and leverages a
multi-scale encoder-decoder network for prediction.

7470

128

Input Image

DenseNet
Encoder

Concatenate

Skip Connection

Foreground

Decoder

Background

Decoder

Skip Connection

Segmentation Network

Foreground

Probability Map

Fusion Network

Linear Blending

DenseNet Block
Decoder Block
3x3 Conv+BN+ReLU
3x3 Conv+Sigmoid

Alpha Matte

256
256

128
128

128
128

64
64

256
256

Blending Weight

Map

Linear Blending

Background

Probability Map

Fusion Network

Figure 2. A high-level visualization of our network architecture. The segmentation network consists of one encoder and two decoders. The
fusion network is a fully convolutional network without downsampling. The ﬁnal alpha matte is a linear blending using the outputs of two
networks. The number below the block in the fusion network denotes the number of output channels of different convolution layers.

3. Approach

In this section, we introduce the technical details of our
approach. We begin with the approach overview in Sec. 3.1.
We then elaborate the structure and training loss of segmen-
tation and fusion networks in Sec. 3.2 and 3.3. Finally, we
give the training details of our network in Sec. 3.4.

3.1. Approach Overview

We introduce a novel end-to-end neural network that
takes an image containing a foreground object as input and
outputs an alpha matte of the foreground object.1 As illus-
trated in Fig. 2, the key idea of our approach is to use neural
network modules to predict three maps, namely, the fore-
ground probability map, the background probability map,
and the blending weight map. The output alpha matte is
given by using the blending weight map to interpolate the
foreground/background probability maps. The network is
trained over three consecutive steps: segmentation network
pre-training step, fusion network pre-training step and ﬁ-
nally end-to-end joint training step whose training loss is
imposed on the output alpha matte.

Formally speaking, we try to predict the alpha values

with the following fusion formula:

αp = βp ¯Fp + (1 − βp)(1 − ¯Bp),

(2)

where ¯Fp and ¯Bp represent the predicted foreground and
background probability at pixel p. βp is the blending weight
predicted by the fusion network.
In our implementation,
the fusion network takes the input image and the features
before the logistic regression of foreground and background
classiﬁcation branches as input (see Fig. 2).

1Please see the supplementary material for the network details at

https://github.com/yunkezhang/FusionMatting.

From the optimization perspective, the derivative of αp

with respect to βp vanishes when

¯Bp + ¯Fp = 1.

(3)

The advantages of Eq. 2 are two-fold. First, the fusion net-
work will focus on learning the transition region from the
foreground to the background if the predictions of the fore-
ground/background probability maps are accurate (meaning
Eq. 3 is satisﬁed), which is the bottleneck for solving the
matting problem. Second, we can carefully design the loss
function to encourage that the ¯Fp + ¯Bp 6= 1 within the
transition region (see Sec. 3.2), which can provide useful
gradients to train the fusion network.

3.2. Segmentation Network

We proceed to describe the architecture of the segmenta-
tion network and its training loss. In particular, the training
loss favors 0 or 1 probability of solid foreground and back-
ground regions. It also tries to predict the upper bound and
lower bound of the true alpha values in the transition region.
Network structure. The segmentation network consists of
one encoder and two decoders. The encoder extracts seman-
tic features from the input image. The two decoders share
the same encoded bottleneck and predict the foreground and
background probability maps, respectively. Speciﬁcally, we
use DenseNet-201 [18] without the fully-connected layer
head as our encoder. Each branch consists of ﬁve decoder
blocks which correspond to the ﬁve encoder blocks, and the
decoder block follows the design of feature pyramid net-
work structure in [22]. To enhance the pixel-level segmen-
tation result, we employ the skip connections in [28] to
concatenate the multi-scale features from the encoder block
(right before the average down-sampling) with the features
upsampled through deconvolution layer.

7471

Training loss. The training loss combines the L1 loss, the
L2 loss, and the cross-entropy loss. In particular, we control
the behavior of the training process of our network by set-
ting different weights for different pixels according to the
alpha matte.

We ﬁrst measure the difference between the predicted

probability values and the ground truth alpha values:

Ld( ¯Fp) = (cid:26) | ¯Fp − αp|,
( ¯Fp − αp)2,

0 < αp < 1.
αp = 0, 1.

(4)

The difference is chosen to be L1 inside transition regions
so as to recover the details of the alpha matte there, while
the L2 loss is used in the rest of the regions to penalize
the possible segmentation error. We ﬁnd this setting can
well balance between the soft segmentation and the hard
segmentation.

We also introduce the L1 loss on the gradients of the
predicted alpha matte since it is beneﬁcial to remove the
over-blurred alpha matte after classiﬁcation:

Lg( ¯Fp) = |∇x( ¯Fp)−∇x(αp)|+|∇y( ¯Fp)−∇y(αp)|. (5)

The cross-entropy (CE) loss for the foreground classiﬁca-
tion branch at a pixel p is given by:

CE( ¯Fp) = wp · (− ˆαp log( ¯Fp) − (1 − ˆαp) log(1 − ¯Fp)),
(6)
The weight wp is set to 1 when αp = 1 or 0 and set to
0.5 when αp is in (0, 1). We let ˆαp be 1 inside both the
foreground and the transition regions (0 inside background
region) so that the cross-entropy loss encourages the seg-
mentation network to output probability value towards 1 for
an upper bound. However, it does not provide useful gra-
dients within the transition region. We thus adopt a small
weight in the transition region and combine it with the L1
and L2 loss below to obtain a preliminary alpha matte.

The ﬁnal loss function of the foreground classiﬁcation

branch with respect to an image is:

LF = Xp

CE( ¯Fp) + Ld( ¯Fp) + Lg( ¯Fp).

(7)

For the background classiﬁcation branch, its loss LB can
be simply computed by setting αp = 1 − αp in Eq. 1, 4 and
5. We also impose the LF and LB loss at each decoder
block of two branches to further regulate the behavior of
the network, similar to the side loss used in [24].

Note that the combination of the cross-entropy and the
L1 loss inside the transition regions tries to give larger prob-
abilities than the ground truth values since the cross-entropy
loss will drag the probabilities to 1. Thus, the true alpha val-
ues can be bracketed in the interval formed by the two prob-
abilities predicted by the two branches, since the 1 − ¯Bp in
Eq. 2 should be less than the αp in our setting. This de-
sign enables us to regress for the precise alpha values after

Figure 3. Implicit trimaps predicted by our network for two images
in Fig. 1. The implicit transition regions are indicated by gray pix-
els where the predicted foreground/background probabilities are
less than 1.

applying the fusion network. Moreover, enforcing the fore-
ground and background segmentation branches to be trained
with different losses helps to learn different features of the
input image. These characteristics beneﬁt the result of en-
semble learning. As illustrated in Fig. 3 and Fig. 4, this
design of the segmentation loss does lead to the generation
of meaningful implicit trimaps. Moreover, the alpha values
between 0 and 1 are mostly bracketed by the two predicted
probabilities.

3.3. Fusion Network

The goal of the fusion network is to output βp at pixels to

fuse the foreground and background classiﬁcation results.

Network structure. It is a fully convolutional network
with ﬁve convolution layers and one sigmoid layer to com-
pute the blending weights βp (see Fig. 2). The input of the
network consists of (1) the feature maps from the last block
of the foreground and background decoders; (2) the feature
from the convolution with the input RGB image. We set the
size of convolution kernel to 3 × 3 according to the exper-
iments and found that the fusion network with this kernel
size can better produce the details of the alpha matte.

Training loss. Assuming that the foreground and back-
ground decoders already provide reasonable segmentation
results for the solid pixels, we design the training loss to
lean towards pixels in the transition region. The loss func-
tion of the fusion network can be directly derived according
to Eq. 2:

Lu = Xp

wp · |βp ¯Fp + (1 − βp)(1 − ¯Bp) − αp|.

(8)

Speciﬁcally, the weights of pixels wp are set to 1 whenever
0 < αp < 1, and 0.1 otherwise.

3.4. Training Details

We use DenseNet-201 network pre-trained with
ImageNet-1K [11] as our encoder backbone. We ﬁrst
perform the segmentation network pre-training for 15
epochs. In the fusion network pre-training step, we freeze

7472

Figure 4. The bracketed alpha values after segmentation. Left: an
input image. Middle: the ground truth alpha matte. Right: the
groundtruth alpha values of the red highlighted pixels are brack-
eted by two probabilities ¯F
p which are outputted by
our two decoder branches.

p and 1 − ¯B

the segmentation stage and train the fusion stage alone for
4 epochs. Finally, we perform the end-to-end joint training
for 7 epochs, which back-propagates the gradient of the
fusion result to both the segmentation and fusion network
to further reduce the training loss. All batch normalization
layers are frozen in the joint training step to save the
memory footprint. Cyclical learning rate strategy [32] is
used to accelerate the convergence speed during the whole
training procedure. The base learning rate is 5.0 × 10−4
for all steps. The maximum learning rate in pre-training
steps is 1.5 × 10−3. A smaller maximum learning rate
1.0 × 10−3 is set during the joint training steps.

We also use a special loss while performing the end-to-
end joint training for ﬁne-tuning the whole network. The
loss is based on the loss of the fusion network while adding
the loss of the segmentation network to avoid overﬁtting.
The overall joint training loss is described as following:

LJ = Lu + w1(LF + LB) + w2Ls.

(9)

We set w1 = 0.5 and w2 = 0.01 in our implementation.
The third term Ls is directly adopted from [20] to penalize
the amount of soft segmentation pixels, i.e.:

Ls = Xp

αγ
p + (1 − αp)γ , γ ∈ [0, 1].

(10)

where γ is set to 0.9 in our experiments.

4. Experimental Results

In this section, we evaluate our late fusion CNN on two
testing datasets. (1) Human image matting testing dataset,
which is to measure the performance of our method on a
speciﬁc task. To this end, we collect 40 human images
in which 29 are from the internet whose alpha mattes are
carefully matted by designers and 11 are from composition-
1k testing dataset in [39] due to their abundant details.

Gradient Connectivity

30.85
18.92
25.04
33.76
25.71
25.11
21.56
24.41
19.20
44.01
24.46
15.57
15.60
16.91
16.97

SAD
16.54
13.31
15.80
27.47
15.92
18.27
14.92
13.34
10.39
20.93
14.23
10.08
9.75
10.87
10.49

MSE
0.022
0.014
0.020
0.029
0.021
0.023
0.017
0.017
0.014
0.033
0.019
0.010
0.010
0.002
0.002

Methods
Shared Matting [19]
Comprehensive [30]
Learning Based [27]
Global Matting [7]
Closed-form [40]
KNN Matting [14]
DCNN [9]
SHM [6]
DIM [39]
Ours-FG/BG-Only-25
Ours-Fusion-Only-25
Ours-raw-25
Ours-reﬁned-25
Ours-raw-full
Ours-reﬁned-full
Table 1. The quantitative results of our human image matting test-
ing dataset. Ours-FG/BG-only: pre-trained segmentation network
stage. Ours-Fusion-only: pre-trained fusion network stage. Ours-
raw: end-to-end jointly trained network. Ours-reﬁned: reﬁned by
guided ﬁlter [17]. “-25”: computed in the transition regions gen-
erated by 25 pixels dilation. “-full”: computed over the whole
image.

15.75
11.80
13.77
24.98
13.87
16.88
13.02
12.71
9.64
20.34
13.26
9.24
8.96
9.80
9.52

We compose each testing image with 25 random back-
ground images from PASCAL VOC [12] to form a test-
ing dataset with 1000 images. The training dataset for this
task is independent on the testing images, which consists
of 228 human images with high-quality alpha mattes com-
bined with another 211 human foreground objects from the
DIM dataset [39]. Similarly, we compose these foregrounds
with randomly picked unique background images from MS-
COCO [23] to form the ﬁnal dataset, totally 28610 images
for training.
(2) Composition-1k testing dataset in [39],
which is to evaluate how our network performs on natural
images. This testing dataset contains 1000 images, com-
posed of 50 unique foregrounds and 20 background im-
ages. For this evaluation, we train our network on the DIM
dataset [39] independent on the testing images. It consists
of 431 unique foreground objects with alpha mattes. Each
object is composed of 100 background images randomly
picked from MS-COCO.

For the data augmentation during the training process,
we crop the image and trimap pairs centered on random
pixels in the transition regions indicated by trimaps. The
crop sizes are selected to be 512 × 512 and 800 × 800. We
also resize all the training images to the size of 512 × 512
to warm-up the network. Random ﬂipping and rotation are
applied to all the cropped and resized training data. Due to
the memory limit, we require the longer side of the image to
be less than 800 in the training. This size constraint is also
imposed during inference. The training time of our network
on a GPU server (conﬁguration: E5-2682 CPU, 32G RAM,
and 8 Tesla P100 graphics cards) is 2.5 days for human im-
age matting dataset and 4 days for the DIM dataset. For

7473

Image

Trimap

SSS [2]

DIM [39]

Ours

GT

Figure 5. The visual comparisons on human image matting testing dataset. The segments in SSS [2] are hand-picked.

Image

Trimap

Closed-form [19]

DIM [39]

Ours

GT

Figure 6. The visual comparisons on the composition-1k testing dataset.

testing, the average running time on a 800 × 800 image is
0.39 seconds.

Evaluation metrics. There are four metrics used in the
evaluations: SAD (sum of absolution difference), MSE
(mean square error), gradient and connectivity deﬁned
in [39] . The lower values of the metrics, the better the
predicted alpha matte is. The details of gradient and con-
nectivity metrics can be found in [27], and they are used to
reﬂect the visual quality of the alpha matte when observed
by a human. For the computation of all the metrics, after
summing the metrics at each pixel p for a testing image, we
then compute their average over all the images in the testing
dataset.

Evaluation on human image matting testing dataset. To
compare our network with the state-of-the-art image mat-
ting methods, we also train the DIM network on this dataset
by feeding both RGB images and trimaps generated by
random dilation at pixels whose alpha values are neither
0 nor 1, while the transition regions of the trimaps used
for the metric computation are generated by 25 pixels di-
lation. Since narrowing down the image type to human im-
age lowers the difﬁculty of the segmentation, our network
can closely match the DIM network w.r.t. different met-
rics as reported in Tab. 1.
If only computing the metrics
in the trimap transition regions as [39], our method outper-
forms the DIM network in all four metrics (see “ours-raw-

7474

Image

Trimap-less DIM

Ours

(a) Trimap-less DIM vs. Ours.

Image
Ours
(b) Our network and DIM using different trimaps.

DIM+small

DIM+large

Figure 7. Comparisons to DIM.Top-left in (b): manually speciﬁed
trimaps. ‘small’ and ‘large’ indicate the size of the trimap.

Image

Single branch

GT

FG

BG

Ours

Image

Single branch

GT

FG

BG

Ours

Figure 8. Self-comparisons. Single branch: our foreground branch
plus the DIM reﬁnement network trained with L1 loss. ‘FG’ and
‘BG’: our foreground and background probability maps.

25” and “ours-reﬁned-25” in Tab. 1). After computing the
four metrics on the whole image, the metrics of our algo-
rithm get increased slightly indicating that the segmentation
error is well controlled in this case (see “ours-raw-full” and
“ours-reﬁne-full” in Tab. 1). The “ours-FG/BG-Only-25”
and “ours-Fusion-Only-25” also verify that the matting re-
sults get improved as we gradually add each sub-network
into late fusion CNN. Fig. 5 illustrates three selected mat-
ting results in the testing images. Note that our network
works well for various poses and scales of the human in the

MSE
0.074
0.066
0.058
0.078
0.076
0.098
0.079
0.110
0.017
0.077
0.034
0.022
0.020
0.011
0.011

SAD
Methods
115.20
Shared Matting [19]
109.80
Comprehensive [30]
Learning Based [27]
100.51
121.46
Global Matting [7]
Closed-form [40]
121.18
133.99
KNN Matting [14]
DCNN [9]
122.40
70.31
DIM-Trimap-less-25
33.64
DIM [39]
Ours-FG/BG-Only-25 103.21
66.05
Ours-Fusion-Only-25
49.05
Ours-raw-25
49.02
Ours-reﬁned-25
Ours-raw-full
58.34
Ours-reﬁned-full
58.29
Table 2. The quantitative results on the Composition-1k testing
dataset. The metrics measured on our results are same with
Tab. 1.
‘DIM-Trimap-less-25’ denotes the results of the DIM
method without trimap as input during training.

Gradient Connectivity
139.88
116.27
94.68
125.11
130.63
140.29
129.57
70.06
30.23
91.85
69.80
36.58
34.33
41.63
36.58

121.35
107.86
104.74
133.23
120.16
134.03
121.80
70.05
31.92
109.27
69.80
50.70
50.60
59.74
59.63

foreground. For instance, the woman viewed from the back
(second row in Fig. 5) is difﬁcult for the deep automatic
portrait matting [31].
Evaluation on composition-1k testing dataset. Fig. 6
shows three qualitative results and visual comparisons on
this dataset. It can be observed that our results are com-
parable to the results of the DIM [39] even in challenging
lace image case. The corresponding metrics are reported
in Tab. 2. Due to the image size constraint imposed in
the training of late fusion CNN, we also compute the met-
rics of the DIM network on the resized testing images for
a consistent comparison. We ﬁrst compute the four met-
rics inside the transition regions in the trimaps provided in
the testing dataset, a similar strategy adopted in [39]. It is
easy to observe that our method surpasses all the non-CNN
image matting methods on this dataset by a large margin
since our network can exploit multi-scale features to bet-
ter understand the semantics in the image. Comparing to
CNN-based method, our network is better than DCNN but
still inferior to DIM. It is as expected since DIM requests a
much stronger input compared to our setting. Speciﬁcally,
the trimap fed into the DIM network can avoid the possible
segmentation errors in our case. After computing the met-
rics over the complete dataset, our results still rank No.2.

To further verify whether or not the reﬁnement network
used in [39] can correct the residual left in single classi-
ﬁcation branch results, we train the DIM network without
input trimap channel as a comparison and report the re-
sult of this setup in the row of ”DIM-Trimap-less-25” in
Tab. 2. The qualitative comparison is illustrated in Fig. 7.a.
Fig.7.b shows two additional qualitative comparisons where
the DIM network is fed with the manually speciﬁed trimaps.
It demonstrates that the quality of the matting results of the
DIM network downgrades as the size of the transition region

7475

Figure 9. Internet image matting results.

increases. Therefore, it is important to have image matting
algorithms robust to the trimap quality.
Self-comparisons. The two-branch design provides three
degrees of freedoms, which allows the optimizer to balance
among them for better results. The single branch network
in Fig. 8 is created by discarding the background and fu-
sion branch. Similar to the DIM method, we also add a
fully convolutional network as reﬁnement and use L1 loss
only during training. Its results contain segmentation errors,
which are removed by the two-branch network, as illus-
trated in Fig. 8. In contrast, the foreground and background
probability maps of our method are more ‘solid’ in the non-
transition regions since our segmentation loss there favors a
hard segmentation. The ﬁnal results of our late-fusion CNN
demonstrate that our fusion network is able to fuse the fore-
ground and background probability maps for detailed alpha
mattes (see the second and fourth row of Fig. 8).
Evaluation on internet images. Fig. 1 and Fig. 9 shows
the matting results for collected internet images to test the
generalization ability of our method.2 All the human image
matting results are obtained through our network trained
with human image matting dataset, and the other results
are from the late fusion CNN trained with the DIM dataset.
The results prove that our network has the ability to cap-
ture transition regions of different types of various objects.
However, the difﬁculty in capturing the semantic feature of

2Please see the supplementary material for more matting results.

the foreground can possibly lead to segmentation errors in
our results, for example, the error around the mouth of the
horse as shown in the bottom row of Fig. 9.

5. Conclusions and Future Work

In this paper, we proposed a late fusion fully convolu-
tional neural network for image matting.
It utilizes two
decoder branches for foreground/background classiﬁcation
and fuses the classiﬁcation results to obtain the ﬁnal alpha
values through a fusion network. The network does not
need trimap as input, which greatly improves the efﬁciency
of the image matting.

In the future, we would like to explore how to improve
the decoder network structure to further reduce segmenta-
tion errors. The recent development of multi-scale feature
fusion network, such as Reﬁne-net [21], can be tested in
the late fusion CNN. It is also interesting to explore how to
apply the two-branch design to video object matting.

Acknowledgements

We would like to thank the anonymous reviewers for
their constructive comments. Weiwei Xu is partially sup-
ported by NSFC (No. 61732016) and Zhejiang Lab. Qixing
Huang would like to thank for the gift from snap research.
Weiwei Xu and Hujun Bao are also supported by the Fun-
damental Research Funds for the Central Universities.

7476

References

[1] Y. Aksoy, T. O. Aydin, and M. Pollefeys. Designing effec-
tive inter-pixel information ﬂow for natural image matting.
In IEEE Conference on Computer Vision and Pattern Recog-
nition (CVPR), pages 228–236, 2017. 2

[2] Y. Aksoy, T.-H. Oh, S. Paris, M. Pollefeys, and W. Matusik.
Semantic soft segmentation. ACM Transactions on Graphics
(TOG), 37(4):72, 2018. 2, 6

[3] X. Bai and G. Sapiro. A geodesic framework for fast inter-
active image and video segmentation and matting. Interna-
tional Journal of Computer Vision (IJCV), 82(2):113–132,
2009. 2

[4] G. Chen, K. Han, and K.-Y. K. Wong. Tom-net: Learning
transparent object matting from a single image. In Proceed-
ings of IEEE Conference on Computer Vision and Pattern
Recognition (CVPR), 2018. 2

[5] L. C. Chen, G. Papandreou, F. Schroff, and H. Adam. Re-
thinking atrous convolution for semantic image segmenta-
tion. CoRR, abs/1706.05587, 2017. 2

[6] Q. Chen, T. Ge, Y. Xu, Z. Zhang, X. Yang, and K. Gai. Se-
mantic human matting. arXiv preprint arXiv:1809.01354,
2018. 2, 5

[7] Q. Chen, D. Li, and C.-K. Tang. Knn matting.

IEEE
transactions on pattern analysis and machine intelligence,
35(9):2175–2188, 2013. 2, 5, 7

[8] J. Cheng, B. Aurlien, and v. d. L. Mark J. The relative perfor-
mance of ensemble methods with deep convolutional neural
networks for image classiﬁcation. CoRR, abs/1704.01664,
2017. 2

[9] D. Cho, Y.-W. Tai, and I. Kweon. Natural image matting us-
ing deep convolutional neural networks.
In The European
Conference on Computer Vision (ECCV), pages 626–643.
Springer, 2016. 1, 2, 5, 7

[10] Y.-Y. Chuang, B. Curless, D. Salesin, and R. Szeliski. A
bayesian approach to digital matting.
In Computer Vision
and Pattern Recognition, 2001. CVPR 2001. Proceedings of
the 2001 IEEE Computer Society Conference on, volume 2,
pages II–II. IEEE, 2001. 1, 2

[11] J. Deng, W. Dong, R. Socher, L.-J. Li, K. Li, and F.-F. Li.
In
Imagenet: A large-scale hierarchical image database.
IEEE Conference on Computer Vision and Pattern Recog-
nition (CVPR), pages 248–255. IEEE, 2009. 4

[12] M. Everingham, L. Van Gool, C. K. I. Williams, J. Winn,
and A. Zisserman. The pascal visual object classes (voc)
challenge. International Journal of Computer Vision (IJCV),
88(2):303–338, June 2010. 5

[13] X. Feng, X. Liang, and Z. Zhang. A Cluster Sampling
Method for Image Matting via Sparse Coding. Springer In-
ternational Publishing, 2016. 2

[14] E. S. Gastal and M. M. Oliveira. Shared sampling for real-
time alpha matting.
In Computer Graphics Forum, vol-
ume 29, pages 575–584. Wiley Online Library, 2010. 2, 5,
7

[15] L. Grady, T. Schiwietz, S. Aharon, and R. Westermann. Ran-
dom walks for interactive alpha-matting. In Proceedings of
VIIP, volume 2005, pages 423–429, 2005. 1, 2

[16] K. He, C. Rhemann, C. Rother, X. Tang, and J. Sun. A global

sampling method for alpha matting. 2011. 2

[17] K. He, J. Sun, and X. Tang. Guided image ﬁltering. IEEE
transactions on pattern analysis and machine intelligence,
(6):1397–1409, 2013. 5

[18] G. Huang, Z. Liu, L. van der Maaten, and K. Q. Wein-
berger. Densely connected convolutional networks. In The
IEEE Conference on Computer Vision and Pattern Recogni-
tion (CVPR), 2017. 3

[19] A. Levin, D. Lischinski, and Y. Weiss. A closed form solu-
tion to natural image matting. In IEEE Conference on Com-
puter Vision and Pattern Recognition (CVPR), 2006 IEEE
Computer Society Conference on, volume 1, pages 61–68.
IEEE, 2006. 2, 5, 6, 7

[20] A. Levin, A. Rav-Acha, and D. Lischinski. Spectral matting.
IEEE transactions on pattern analysis and machine intelli-
gence, 30(10):1699–1712, 2008. 1, 2, 5

[21] G. Lin, A. Milan, C. Shen, and I. D. Reid. Reﬁnenet: Multi-
path reﬁnement networks for high-resolution semantic seg-
mentation. CoRR, abs/1611.06612, 2016. 8

[22] T.-Y. Lin, P. Doll´ar, R. B. Girshick, K. He, B. Hariharan, and
S. J. Belongie. Feature pyramid networks for object detec-
tion. In IEEE Conference on Computer Vision and Pattern
Recognition (CVPR), volume 1, page 4, 2017. 3

[23] T.-Y. Lin, M. Maire, S. Belongie, J. Hays, P. Perona, D. Ra-
manan, P. Doll´ar, and C. L. Zitnick. Microsoft coco: Com-
mon objects in context. In European Conference on Com-
puter Vision (ICCV), pages 740–755. Springer, 2014. 5

[24] J. Long, E. Shelhamer, and T. Darrell. Fully convolutional
networks for semantic segmentation.
In IEEE Conference
on Computer Vision and Pattern Recognition (CVPR), June
2015. 4

[25] S. Lutz, K. Amplianitis, and A. Smolic. Alphagan: Gener-
ative adversarial networks for natural image matting. arXiv
preprint arXiv:1807.10088, 2018. 2

[26] Y. Ren, L. Zhang, and P. N. Suganthan. Ensemble classiﬁ-
cation and regression-recent developments, applications and
future directions. IEEE Comp. Int. Mag., 11(1):41–53, 2016.
2

[27] C. Rhemann, C. Rother, J. Wang, M. Gelautz, P. Kohli, and
P. Rott. A perceptually motivated online benchmark for im-
age matting. In IEEE Conference on Computer Vision and
Pattern Recognition (CVPR), pages 1826–1833. IEEE, 2009.
5, 6, 7

[28] O. Ronneberger, P. Fischer, and T. Brox. U-net: Convo-
lutional networks for biomedical image segmentation.
In
International Conference on Medical image computing and
computer-assisted intervention, pages 234–241. Springer,
2015. 3

[29] M. A. Ruzon and C. Tomasi. Alpha estimation in natural
images. In IEEE Conference on Computer Vision and Pattern
Recognition (CVPR), page 1018. IEEE, 2000. 2

[30] E. Shahrian, D. Rajan, B. Price, and S. Cohen.

Improv-
ing image matting using comprehensive sampling sets.
In
IEEE Conference on Computer Vision and Pattern Recogni-
tion (CVPR), pages 636–643, 2013. 2, 5, 7

7477

[31] X. Shen, X. Tao, H. Gao, C. Zhou, and J. Jia. Deep automatic
portrait matting. In European Conference on Computer Vi-
sion (ECCV), pages 92–107. Springer, 2016. 1, 2, 7

[32] L. N. Smith. Cyclical learning rates for training neural net-
works.
In Applications of Computer Vision (WACV), 2017
IEEE Winter Conference on, pages 464–472. IEEE, 2017. 5
[33] J. Sun, J. Jia, C. K. Tang, and H. Y. Shum. Poisson matting.

ACM Transactions on Graphics, 23(3):315–321, 2004. 2

[34] J. Wang, M. Agrawala, and M. F. Cohen. Soft scissors: an
In ACM

interactive tool for realtime high quality matting.
SIGGRAPH, page 9, 2007. 2

[35] J. Wang and M. F. Cohen. An iterative optimization approach
for uniﬁed image segmentation and matting. In Tenth IEEE
International Conference on Computer Vision, pages 936–
943, 2005. 1, 2

[36] J. Wang and M. F. Cohen. Optimized color sampling for
robust matting. In IEEE Conference on Computer Vision and
Pattern Recognition (CVPR), pages 1–8. IEEE, 2007. 1

[37] J. Wang, M. F. Cohen, et al.

Image and video matting: a
survey. Foundations and Trends R(cid:13) in Computer Graphics
and Vision, 3(2):97–175, 2008. 2

[38] Y. Wang, Y. Niu, P. Duan, J. Lin, and Y. Zheng. Deep prop-
In IJCAI, pages 999–1006,

agation based image matting.
2018. 1, 2

[39] N. Xu, B. L. Price, S. Cohen, and T. S. Huang. Deep image
matting. In IEEE Conference on Computer Vision and Pat-
tern Recognition (CVPR), volume 2, page 4, 2017. 1, 2, 5, 6,
7

[40] Y. Zheng and C. Kambhamettu. Learning based digital mat-
In Computer Vision, 2009 IEEE 12th International

ting.
Conference on, pages 889–896. IEEE, 2009. 5, 7

[41] B. Zhu, Y. Chen, J. Wang, S. Liu, B. Zhang, and M. Tang.
Fast deep matting for portrait animation on mobile phone.
pages 297–305, 2017. 2

7478

