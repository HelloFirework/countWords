Towards VQA Models That Can Read

Amanpreet Singh1, Vivek Natarajan, Meet Shah1, Yu Jiang1, Xinlei Chen1,

Dhruv Batra1,2, Devi Parikh1,2, and Marcus Rohrbach1

1Facebook AI Research, 2Georgia Institute of Technology

Abstract

Studies have shown that a dominant class of questions
asked by visually impaired users on images of their sur-
roundings involves reading text in the image. But today’s
VQA models can not read! Our paper takes a ﬁrst step to-
wards addressing this problem. First, we introduce a new
“TextVQA” dataset to facilitate progress on this important
problem. Existing datasets either have a small proportion
of questions about text (e.g., the VQA dataset) or are too
small (e.g., the VizWiz dataset). TextVQA contains 45,336
questions on 28,408 images that require reasoning about
text to answer. Second, we introduce a novel model archi-
tecture that reads text in the image, reasons about it in the
context of the image and the question, and predicts an an-
swer which might be a deduction based on the text and the
image or composed of the strings found in the image. Con-
sequently, we call our approach Look, Read, Reason & An-
swer (LoRRA). We show that LoRRA outperforms existing
state-of-the-art VQA models on our TextVQA dataset. We
ﬁnd that the gap between human performance and machine
performance is signiﬁcantly larger on TextVQA than on
VQA 2.0, suggesting that TextVQA is well-suited to bench-
mark progress along directions complementary to VQA 2.0.

1. Introduction

The focus of this paper is endowing Visual Question An-
swering (VQA) models a new capability – the ability to read
text in images and answer questions by reasoning over the
text and other visual content.

VQA has witnessed tremendous progress. But today’s
VQA models fail catastrophically on questions requiring
reading!1 This is ironic because these are exactly the ques-
tions visually-impaired users frequently ask of their assis-
tive devices. Speciﬁcally, the VizWiz study [5] found that
up to 21% of these questions involve reading and reasoning
about the text captured in the images of a user’s surround-

Figure 1: Examples from our TextVQA dataset that require VQA
models to understand text embedded in images to answer the ques-
tions correctly. Ground truth answers are shown in green and the
answers predicted by a state-of-the-art VQA model (Pythia [17])
are shown in red. Clearly, today’s VQA models fail at answering
questions that involve reading and reasoning about text in images.

ings – ‘what temperature is my oven set to?’, ‘what denom-
ination is this bill?’.

Consider the question in Fig. 1(a) – ‘What does it say
near the star on the tail of the plane?’ from the TextVQA
dataset. With a few notable exceptions, today’s state-of-
art VQA models are predominantly monolithic deep neu-
ral networks (without any specialized components). Con-
sider what we are asking such models to learn to answer
this question – the model must learn to

1All top entries in the CVPR VQA Challenges (2016-18) struggle to

answer questions in category requiring reading correctly.

• realize when the question is about text (‘What . . . say?’),
• detect image regions containing text ( ‘15:20’, ‘500’ ),

8317

      • convert pixel representations of these regions (convolu-
tional features) to symbols (‘15:20’) or textual representa-
tions (semantic word-embeddings),

• jointly reason about detected text and visual content, e.g.
resolving spatial or other visual reference relations (‘tail of
the plane . . . on the back’) to focus on the correct regions.
• ﬁnally, decide if the detected text needs to be ‘copy-
pasted’ as the answer (e.g. ‘16’ in Fig. 1 (c)) or if the
detected text informs the model about an answer in the
answer space (e.g. answering ‘jet’, in Fig. 1(a))

When laid out like that, it is perhaps unsurprising why
today’s models have not been able to make progress on
reading questions – simply put, despite all the strengths of
deep learning, it seems hopelessly implausible that all of the
above skills will simply emerge in a monolithic network all
from the distant supervision of VQA accuracy.

Fortunately, we can do more than just hope. Optical
Character Recognition (OCR) is a mature sub-ﬁeld of com-
puter vision. A key thesis of this work is the following –
we should bake in inductive biases and specialized com-
ponents (e.g. OCR) into models to endow them with the
different skills (e.g. reading, reasoning) required by the all-
encompassing task of VQA.

Speciﬁcally, we propose a new VQA model that includes
OCR as a module. We call it Look, Read, Reason & Answer
(LoRRA). Our model architecture incorporates the regions
(bounding boxes) in the image containing text as entities
to attend over (in addition to object proposals). It also in-
corporates the actual text recognized in these regions (e.g.
‘15:20’) as information (in addition to visual features) that
the model learns to reason over. Finally, our model includes
a mechanism to decide if the answer produced should be
‘copied’ over from the OCR output (in more of a generation
or slot-ﬁlling ﬂavor), or should be deduced from the text
(as in a standard discriminative prediction paradigm popu-
lar among existing VQA models). Our model learns this
mechanism end-to-end. While currently limited in scope
to OCR, our model is as an initial step towards endowing
VQA models with the ability to reason over unstructured
sources of external knowledge (in this case text found in
a test image) and accommodate multiple streams of infor-
mation ﬂow (in this case predicting an answer from a pre-
determined vocabulary or generating an answer via copy).

One reason why there has been limited progress on VQA
models that can read and reason about text in images is be-
cause such questions, while being a dominant category in
real applications for aiding visually impaired users [5], are
infrequent in the standard VQA datasets [3, 10, 51] because
they were not collected in settings that mimic those of vi-
sually impaired users. While the VizWiz dataset [13] does
contain data collected from visually impaired users, the ef-
fective size of the dataset is small due to 58% of the ques-
tions being “unanswerable”. This makes it challenging to

study the problem systematically, train effective models, or
even draw sufﬁcient attention to this important skill that cur-
rent VQA models lack.

To this end, we introduce the TextVQA dataset. It con-
tains 45,336 questions asked by (sighted) humans on 28,408
images from the Open Images dataset [27] from categories
that tend to contain text e.g. “billboard”, “trafﬁc sign”,
“whiteboard”. Questions in the dataset require reading and
reasoning about text in the image. Each question-image pair
has 10 ground truth answers provided by humans.

Models that do well on this dataset will not only need to
parse the image and the question as in traditional VQA, but
also read the text in the image, identify which of the text
might be relevant to the question, and recognize whether a
subset of the detected text is directly the answer (e.g., in
the case of ‘what temperature is my oven set to?’) or addi-
tional reasoning is required on the detected text to answer
the question (e.g., ‘which team is winning?’).

We show that LoRRA outperforms existing state-of-the-
art VQA models on the TextVQA dataset. Overall, our con-
tributions are:
• We introduce a novel dataset (TextVQA) containing
questions which require the model to read and reason
about the text in the image to be answered.

• We propose Look, Read, Reason & Answer (LoRRA): a
novel model architecture which explicitly reasons over the
outputs from an OCR system when answering questions.
• LoRRA outperforms existing state-of-the-art VQA mod-

els on our TextVQA dataset.

2. Related work

Visual Question Answering. VQA has seen numerous
advances and new datasets since the ﬁrst large-scale VQA
dataset was introduced by Antol et al. [3]. This dataset
was larger, more natural, and more varied than earlier VQA
datasets such as DAQUAR [31] or COCO-QA [38] but had
linguistic priors which were exploited by models to answer
questions without sufﬁcient visual grounding. This issue
was addressed by Goyal et al. [10] by adding complemen-
tary triplets (Ic, q, ac) for each original triplet (Io, q, ao)
where image Ic is similar to image Io but the answer for
the given question q changes from ao to ac. To study vi-
sual reasoning independent of language, non-photo-realistic
VQA datasets have been introduced such as CLEVR [18],
NLVR [42] and FigureQA [21]. Wang et al. [45] introduced
a Fact-Based VQA dataset which explicitly requires exter-
nal knowledge to answer a question.

Text based VQA. Several existing datasets study text de-
tection and/or parsing in natural everyday scenes: COCO-
Text [43], Street-View text [44] IIIT-5k [33] and ICDAR
2015 [22]. These do not involve answering questions about
the images or reasoning about the text. DVQA [20] as-
sesses automatic bar-chart understanding by training mod-
els to answer questions about graphs and plots. The Multi-

8318

Figure 2: Overview of our approach Look, Read, Reason & Answer (LoRRA). Our approach looks at the image, reads its text, reasons
about the image and text content and then answers, either with an answer a from the ﬁxed answer vocabulary or by selecting one of the
OCR strings s. Dashed lines indicated not jointly-trained components. The answer cubes on the right with darker color have more attention
weight. The OCR token “20” has the highest attention weight in the example.

Output Model (MOM) introduced in DVQA uses an OCR
module to read chart speciﬁc content. Textbook QA (TQA)
[24] considers the task of answering questions from middle-
school textbooks, which often require understanding and
reasoning about text and diagrams. Similarly, AI2D [23]
contains diagram based multiple-choice questions. Note
that these works all require reasoning about text to answer
questions, but in narrow domains (bar charts, textbook dia-
grams, etc.). The focus of our work is to reason and answer
questions about text in natural everyday scenes. MemexQA
[16] introduces a VQA task which involves reasoning about
the time and date at which a photo/video was taken, but this
information is structured and is part of the meta data.

Visual Representations for VQA Models. VQA mod-
els typically use some variant of attention to get a represen-
tation of the image that is relevant for answering the ques-
tion [2, 7, 30, 47, 48, 51, 17]. Object region proposals and
the associated features are generated by using a detection
network which are then spatially attended to, conditioned on
a question representation. In this work, we extend the repre-
sentations that a VQA model reasons over. Speciﬁcally, in
addition to attending over object proposals, our model also
attends over the regions where text is detected.

Copy Mechanism. A core component of our proposed
model is its ability to decide whether the answer to a ques-
tion should be an OCR token detected in the image, or if
the OCR tokens should only inform the answer to the ques-
tion. The former is implemented as a “copy mechanism”
– a learned slot ﬁlling approach. Our copy mechanism is
based on a series of works on pointer generator networks
[11, 39, 32, 12, 34]. A copy mechanism provides networks
the ability to generate out-of-vocabulary words by pointing
at a word in context and then copying it to the generated
result. This approach has been used for a variety of tasks in
NLP such as summarization [11, 34, 39], question answer-

ing [46], language modelling [32], neural machine transla-
tion [12], and dialog [37].

3. LoRRA: Look, Read, Reason & Answer

In this section, we introduce our novel model architec-
ture to answer questions about images which require read-
ing the text in the images to answer the questions.

We assume we get an image v and a question q as input,
where the question consists of L words w1, w2, . . . , wL. At
a high level, our model contains three components: (i) a
VQA component to reason and infer the answer based on
the image v and the question q (Sec 3.3); (ii) a reading com-
ponent which allows our model to read the text in the image
(Sec 3.2); and (iii) an answering module which either pre-
dicts from an answer space or points to the text read by the
reading component (Sec. 3.3). The overall model is shown
in Fig. 2. Note that, the OCR module and backbone VQA
model and can be any OCR model and any recent attention-
based VQA model. Our approach is agnostic to the internal
details of these components. We detail the exact implemen-
tation choices and hyper parameters in Sec. 3.4.

3.1. VQA Component

Similar to many VQA models [7, 17], we ﬁrst embed
the question words w1, w2, . . . , wL of the question q with a
pre-trained embedding function (e.g. GloVe [36]) and then
encode the resultant word embeddings iteratively with a re-
current network (e.g. LSTM [15]) to produce a question em-
bedding fQ(q). For images, the visual features are repre-
sented as spatial features, either in the form of grid-based
convolutions and/or features extracted from the bounding
box proposals [1]. We refer to these features as fI (v) where
fI is the network which extracts the image representation.
We use an attention mechanism fA over the spatial fea-
tures [4, 7], which predicts attentions based on the fI (v)

8319

and fQ(q) and gives a weighted average over the spatial
features as the output. We then combine the output with the
question embedding. At a high level, the calculation of our
VQA features fV QA(v, q) can be written as:

fV QA(v, q) = fcomb(fA(fI (v), fQ(q)), fQ(q))

(1)

where fcomb is the combination module (N) in Fig. 2.

Assuming we have a ﬁxed answer space of a1, . . . , aN ,
we use a feed-forward MLP fc on the combined embed-
ding fV QA(v, q) to predict probabilities p1, . . . , pN where
the probability of ai being the correct answer is pi.

3.2. Reading Component

To add the capability of reading text from an image, we
rely on an OCR model which is not jointly trained with our
system. We assume that the OCR model can read and return
word tokens from an image, e.g. [6, 41]. The OCR model
extracts M words s = s1, s2, ..., sM from the image which
are then embedded with a pre-trained word embedding, fO.
Finally, we use the same architecture as VQA component to
get combined OCR-question features, fOCR. Speciﬁcally,

fOCR(s, q) = fcomb(fA(fO(s), fQ(q)), fQ(q))

(2)

This is visualized in Fig. 2. Note that the parameters of the
functions fA and fcomb are not shared with the VQA model
component above but they have the same architecture, just
with different input dimensions. During weighted attention
as the features are multiplied by weights and then averaged,
the ordering information gets lost. To provide the answer
module with the ordering information of the original OCR
tokens, we concatenate the attention weights and the ﬁnal
weight-averaged features. This allows the answer module to
know the original attention weights for each token in order.

3.3. Answer Module

With a ﬁxed answer space, the current VQA models are
only able to predict ﬁxed tokens which limits the generaliza-
tion to out-of-vocabulary (OOV) words. As the text in im-
ages frequently contains words not seen at training time, it is
hard to answer text-based questions based on a pre-deﬁned
answer space alone. To generalize to arbitrary text, we take
inspiration from pointer networks which allow pointing to
OOV words in context [11, 39, 32, 12, 34]. We extend
our answer space through addition of a dynamic component
which corresponds to M OCR tokens. The model now has
to predict probabilities (p1, . . . , pN , . . . , pN +M ) for N +M
items in the answer space instead of the original N items.

We pick the index with the highest probability pi as the
index of our predicted answer. If the model predicts an in-
dex larger than N (i.e., among the last M tokens in answer
space), we directly “copy” the corresponding OCR token
as the predicted answer. Hence, our answering module can

VQA 2.0 Accuracy

Model

BUTD [1]

Counter [50]

BAN [25]

Pythia v0.1 [17]

Pythia v0.3 (Ours)

Pythia v0.3 + LoRRA (Ours)

VizWiz Accuracy

Model

BAN[25]

Pythia v0.3 (Ours)

test-dev

65.32

68.09

69.08

68.49

68.71

69.21

test

51.40

54.72

Table 1: Single model VQA 2.0 and VizWiz performance in %.
Our revised implementation of Pythia, v0.3, with LoRRA outper-
forms or is comparable to state-of-the-art.

be thought of as “copy if you need” module which allows
answering from the OOV words using the OCR tokens.

With all of the components, the ﬁnal equation fLoRRA

for predicting the answer probabilities can be written as:

fLoRRA(v, s, q) = fM LP ([fV QA(v, q); fOCR(s, q)]) (3)

where [; ] refers to concatenation and fM LP is a two-layer
feed-forward network which predicts the binary probabil-
ities as logits for each answer. We opt for binary cross
entropy using logits instead of calculating the probabili-
ties through softmax as it allows us to handle cases where
the answer can be in both the actual answer space and the
OCR tokens without penalizing for predicting either one
(the likelihood of logits is independent of each other). Note
that if the model chooses to copy, it can only produce one
of the OCR tokens as the predicted answer. 8.9% of the
TextVQA questions can be answered only by combining
multiple OCR tokens; we leave this as future work.

3.4. Implementation Details

Our VQA component is based on the VQA 2018 chal-
lenge winner entry, Pythia v0.1 [17]. Our revised im-
plementation, Pythia v0.3, with slight changes in hyper-
parameters (e.g. size of question vocabulary, hidden dimen-
sions) achieves state-of-the-art VQA accuracy for a single
model (i.e. w/o ensemble) as shown in Tab. 1 on both VQA
v2.0 dataset [9] and VizWiz dataset [13]. The revised de-
sign choices are discussed in [40].

Pythia [17, 40] is inspired from the detector-based
bounding box prediction of the bottom-up top-down atten-
tion network [1] (VQA winner 2017), which in turn has a
multi-modal attention mechanism similar to the VQA 2016
winner [7], which relied on grid-based features.

In Pythia, for spatial features fI (v), we rely on both grid
and region based features for an image. The grid based
features are obtained by average pooling 2048D features

8320

Figure 3: Examples from TextVQA. Questions require inferring hidden characters (“intel”), handling rotated text (“crayola”), reasoning
(“bose” versus “freestyle”) and selecting among multiple texts in image “cu58 ckk” versus “western power distribution”).

from the res-5c block of a pre-trained ResNet-152 [14].
The region based features are extracted from fc6 layer of
an improved Faster-RCNN model [8] trained on the Visual
Genome [28] objects and attributes as provided in [1]. Dur-
ing training, we ﬁne-tune the fc7 weights as in [17].

We use pre-trained GloVe embeddings with a custom vo-
cabulary (top ∼77k question words in the VQA 2.0) for the
question embedding [36]. The fQ module passes GloVe
embeddings to an LSTM [15] with self-attention [49] to
generate a sentence embedding for the question. For OCR,
we run the Rosetta OCR system [6] to provide us word
strings s1, ..., sN . OCR tokens are ﬁrst embedded using
pretrained FastText embeddings (fO) [19], which can gen-
erate word embeddings even for OOV tokens.

In fA, the question embedding fQ(q) is used to obtain
the top-down i.e. task-speciﬁc attention on both fO(s) OCR
tokens features and fI (v) image features. The features are
then averaged based on the attention weights to get a ﬁnal
feature representation for both the OCR tokens and the im-
age features. The ﬁnal grid-level and region-based features
are concatenated in case of image features. For the OCR
tokens, attention weights are concatenated to the ﬁnal at-
tended features as explained in 3.1. Finally, in fcomb(x, y),
the two feature embeddings in consideration are fused using
element-wise/hadamard product, ⊗, of the features. The
fused features from fOCR(s, q) and fV QA(v, q) are con-
catenated and passed through an MLP to produce logits.

4.

To study the task of answering questions that require
reading text in images, we collect a new dataset called
TextVQA which is publicly available at https://textvqa.org.
In this section, we start by describing how we selected the
images that we use in TextVQA. We then explain our data
collection pipeline for collecting the questions and the an-
swers. Finally, we provide statistics and an analysis of the
dataset. Snapshots of the annotation interface and detailed
instructions can be found in the supplementary material.

Figure 4: Distribution of ﬁrst four words in questions in TextVQA.
Most questions start with “what”.

Figure 5: (Left) Wordcloud for majority answers in TextVQA.
Frequently occurring answers include yes, brand names, “stop”
and city names. (Right) Wordcloud for OCR tokens predicted by
Rosetta. Note the overlap with answers on brand names (lg), cities
(london) and verbs (stop).

4.1. Images

We use Open Images v3 dataset [27] as the source of our
images. In line with the goal of developing and studying
VQA models that reason about text, we are most interested
in the images that contain text in them. Several categories
in Open Images ﬁt this criterion (e.g., billboard, trafﬁc sign,
whiteboard). To automate this process of identifying cate-

8321

(a) Question: which processorBrand is featured on the top left?Answer: intel(b) Question: which brand are the crayons?Answer: crayola(c) Question: what is the name of the bosespeaker style in these boxes?Answer: freestyle(d) Question: what is the license number?Answer: cu58 ckkbrandnamelastnumberwordfirsttitlelicensedateonthewrittenthisofthethisthephoneisofissaysignittheofontheisthesitisistypearebrandyeardoeskindnumber'timeauthortheisthismanywhatwhowhereiswhichhow(a) Number of questions with a particular ques-
tion length. We see that average question length
(7.16) is higher in TextVQA compared to others.

(b) Number of majority answers with a par-
ticular length. Average answer length (1.7) is
high and answer can contain long paragraph and
quotes.

(c) Number of images with a particular num-
ber of OCR tokens. Average number of tokens is
around 3.14. In TextVQA, 10x more images con-
tain OCR text than others.

(d) Text of top 15 most occurring questions in
TextVQA. Most of the top questions start with
“what”.

(e) Total occurrences for 500 most common
questions among 23184 unique questions with
markers for particular ranks.

(f) Similar to 6e, plot shows total occurrences for
500 most common majority answers with mark-
ers for particular ranks.

Figure 6: Question, Answer and OCR statistics for TextVQA. We show comparisons with VQA 2.0 [10] and VizWiz [13].

gories that tend to have images with text in them, we se-
lect 100 random images for each category (or all images
if max images for that category is less than 100). We run a
state-of-the-art OCR model Rosetta [6] on these images and
compute the average number of OCR boxes in a category.
The average number of OCR boxes per-category were nor-
malized and used as per-category weights for sampling the
images from the categories.

We collect TextVQA’s training and validation set from
Open Images’ training set while test set is collected from
Open Images’ test set. We set up a three stage pipeline for
crowd-sourcing our data. In the ﬁrst stage, annotators were
asked to identify images that did not contain text (using a
forced-choice “yes”/“no” ﬂag). Filtering those (and noisy
data from annotators) out resulted in 28,408 images, which
from the basis of our TextVQA dataset.

4.2. Questions and Answers

In the second stage, we collect 1-2 questions for each im-
age. For the ﬁrst question, we show annotators an image and
ask them to provide a question which requires reading the
text to answer. Speciﬁcally, they were told to ‘Please ensure
that answering the question requires reading of the text in
the image. It is OK if the answer cannot be directly copied
from the text but needs to be inferred or paraphrased.’

To collect a second question that is different from the
ﬁrst, we show annotators the ﬁrst question and ask them

to come up with a question that requires reasoning about
the text in the image and has a different answer. Follow-
ing VQA [3, 10] and VizWiz [13] datasets, we collect 10
answers for each question.

To ensure answer quality, we gave annotators instruc-
tions similar to those used in [3, 13] when collecting the
VQA and VizWiz datasets. In addition, to catch any poor
quality data from earlier steps, we give annotators these four
options: (i) no text in image; (ii) not a question; (iii) answer-
ing the question doesn’t require reading any text in image;
and (iv) unanswerable, e.g. questions involving speculation
about the meaning of text. We remove the questions where
a majority of workers marked any of these ﬂags. Addition-
ally, we use hand-crafted questions for which we know the
correct answers to identify and ﬁlter out bad annotators.

4.3. Statistics and Analysis

We ﬁrst analyze the diversity of the questions that we
have in the dataset. TextVQA contains 45,336 questions of
which 37,912 (83.6%) are unique. Fig. 6a shows the distri-
bution of question length along with the same statistics for
the VQA 2.0 and the VizWiz datasets for reference. The
average question length in TextVQA is 7.18 words which
is higher than in VQA 2.0 (6.29) and VizWiz (6.68). We
also note that the minimum question length is 3 words.
Workers often form questions which are longer to disam-
biguate the response (e.g. specifying where exactly the text

8322

14710131619222528Number of words in question100101102103104105Number of question (log)DatasetTextVQAVQAVizWiz135791113151719Number of words in answer100101102103104105106Number of answers (log)DatasetTextVQAVQAVizWiz0102030405060708090100Number of OCR tokens100101102103104105Number of Images (log)DatasetTextVQAVQAVizWiz0100200300400500Rank of question0255075100125150175200Number of OccurencesQuestionwhat time is itwho is the authorwhat is the brandwhat type of beer is thiswhat kind of ale is thiswhat is the name of the barwhat brand is this monitorwhat website is thiswhat is the team name on the jersey0100200300400500Rank of answer0500100015002000Number of OccurencesAnsweryes1samsung7snavyone way53corona extra500 mlis in the image, see Fig. 3). Fig. 6d shows top 15 most
occurring questions in the dataset with their count while
Fig. 6e shows top 500 most occurring questions with their
counts. We can see the uniform shift from common ques-
tions about “time” to questions occurring in speciﬁc situa-
tions like “team names”. Fig. 4 shows sunburst for ﬁrst 4
words in questions. We also observe that most questions
involve reasoning about common things (e.g. ﬁguring out
brand names, cities and temperature). Questions often start
with “what”, frequently inquiring about “time”, “names”,
“brands” or “authors”.

In total there are 26,263 (49.2%) unique majority an-
swers in TextVQA. The percentage of unique answers in
TextVQA is quite high compared to VQA 2.0 (3.4%) and
VizWiz (22.8%). All 10 annotators agree on the most com-
mon answer for 22.8% questions, while 3 or more annota-
tors agree on most common answer for 97.9% questions.
Fig. 5 (left) shows a word cloud plot for the majority an-
swers in the dataset. The answer space is diverse and in-
volves brand names, cities, people’s names, time, and coun-
tries. Note that this diversity makes it difﬁcult to have a
ﬁxed answer space – a challenge that most existing VQA
datasets do not typically pose. The most common answer
(“yes”) is the majority answer for only 4.71% of the dataset
and “yes/no” (majority answer) questions in total only make
up 5.55% of the dataset. The average answer length is 1.58
(Fig. 6b). In a few occurrences where the text in the image
is long (e.g., a quote or a paragraph), the answer length is
high. Fig. 6f shows the frequency of top 500 most com-
mon answers. The gradual shift from brands to rare cities is
depicted. We also note that the drop in TextVQA for num-
ber of answers of a particular answer length is more gradual
than in VQA 2.0 which drops sharply after answer length

Finally, we analyze the OCR tokens produced by the
Rosetta OCR system [6]. In Fig. 6c, we plot number of
images containing “x” number of OCR tokens. The peak
between 4 and 5 shows that a lot of images in our dataset
contain a good number of OCR tokens. In some cases, when
the system is unable to detect text we get 0 tokens but those
cases are restricted to ∼1.5k images and we manually ver-
iﬁed that the images actually do contain text. Fig. 5 (right)
shows a word cloud of OCR tokens which shows they do
contain common answers such as brand names and cities.

5. Experiments

We start by explaining our baselines including both
heuristics and end-to-end trained models which we compare
with LoRRA. We divide TextVQA into train, validation and
test splits with size 34,602, 5,000, and 5,734, respectively.
The TextVQA questions collected from Open Images v3’s
training set were randomly split into training and valida-
tion sets. There is no image overlap between the sets. For
our approach, we use a vocabulary SA of size 3996, which

Accuracy(%)

Accuracy(%)

Model

Val

Test

Model

Vocab Val

Test

Human
85.01
OCR UB
37.12
LA UB
48.46
LA+OCR UB 67.56
Rand 100
0.22
Wt. Rand 100 0.27
Majority Ans
4.48
Random OCR 7.72
OCR Max
9.76

86.79
36.52
48.16
68.24
0.20
0.26
2.63
9.12
11.60

Q
LA 8.09
I
LA 6.29
Pythia (I+Q) LA 13.04
+O
LA 18.35
+O+C
n/a 20.06
+LoRRA LA 26.23
+LoRRA SA 26.56

BAN (I+Q)

LA 12.30
+LoRRA SA 18.41

8.70
5.58
14.0
–
–
–
27.63

–
–

Table 2: Evaluation on TextVQA. (Left) Accuracies for various
heuristics baselines, which show that using OCR can help in
achieving a good accuracy on TextVQA. LA+OCR UB refers to
maximum accuracy achievable by models using LoRRA with our
OCR tokens. (Right) Accuracies of our trained baselines and ab-
lations in comparison with our model LoRRA. I denotes usage of
image features, Q question features, O OCR tokens’ features, and
C copy mechanism. LA and SA refer to use of large and short
vocabulary, respectively. Models with LoRRA outperform VQA
SoTA (Pythia, BAN) and other baselines.

contains answers which appear at least twice in the training
set. For the baselines that don’t use the copy mechanism,
this vocabulary turns out to be too limited. To give them
a fair shot, we also create a larger vocabulary (LA), con-
taining the 8000 most frequent answers. Upper Bounds
and Heuristics. These mainly evaluate the upper bounds
of what can be achieved using the OCR tokens detected by
our OCR module and benchmark biases in the dataset. We
test (i) OCR UB: the upper bound accuracy one can get if
the answer can be build directly from OCR tokens (and can
always be predicted correctly). OCR UB considers combi-
nations of OCR tokens upto 4-grams. (ii) LA UB: the upper
bound accuracy by always predicting the correct answer if
it is present in LA. (iii) LA+OCR UB: (i) + (ii) - the upper
bound accuracy one can get by predicting the correct answer
if it is present in either LA or OCR tokens. (iv) Rand 100:
the accuracy one can get by selecting a random answer from
top 100 most frequent answers (v) Wt. Rand 100: the ac-
curacy of baseline (iv) but with weighted random sampling
using 100 most occurring tokens’ frequencies as weights.
(vi) Majority Ans: the accuracy of always predicting the
majority answer “yes” (vii) Random OCR token: the ac-
curacy of predicting a random OCR token from the OCR
tokens detected in an image (viii) OCR Max: accuracy of
always predicting the OCR token that is detected maximum
times in the image (e.g., “crayola” in Fig. 3 (b)).
Baselines.2 We make modiﬁcations to the implementa-
tion discussed in Sec. 3.4 for our baselines which include
(i) Question Only (Q): we only use the fQ(q) module of
LoRRA to predict the answer and the rest of the features
are zeroed out. (ii) Image Only (I): similar to Q, we only

2Code for experiments is available at https://textvqa.org/code

8323

use image features fI (v) to predict answers. Q and I do not
have access to OCR tokens and predict from LA.

Ablations. We create several ablations of our approach
LoRRA by using the reading component and answering
module in conjunction and alternatively. (i) I+Q: This ab-
lation is state-of-the-art for VQA 2.0 and doesn’t use any
kind of OCR features; we provide results on Pythia v0.3
and BAN [25] in Tab. 1; (ii) Pythia+O: Pythia with OCR
features as input but no copy module or dynamic answer
space; (iii) Pythia+O+C: (ii) with the copy mechanism but
no ﬁxed answer space i.e. the model can only predict from
the OCR tokens. Abbreviation C is used when we add the
copy module and dynamic answer space to a model.

Our full model corresponds to LoRRA attached to
Pythia. We also compare Pythia+LoRRA with small an-
swer space (SA) to a version with large answer space (LA).
We also provide results on LoRRA attached to BAN [25].

Experimental Setup. We develop our model in PyTorch
[35]. We use AdaMax optimizer [26] to perform back-
propagation [29]. We predict logits and train using binary
cross-entropy loss. We train all of our models for 24000
iterations with a batch size of 128 on 8 GPUs. We set the
maximum question length to 14 and maximum number of
OCR tokens to 50. We pad rest of the sequence if it is less
than the maximum length. We use a learning rate of 5e-
2 for all layers except the f c7 layers used for ﬁne-tuning
which are trained with 5e-3. We uniformly decrease the
learning rate to 5e-4 after 14k iterations. We calculate val
accuracy using VQA accuracy metric [10] at every 1000th
iteration and use the model with the best validation accu-
racy to calculate the test accuracy. All validation accuracies
are averaged over 5 runs with different seeds.

Results. Tab. 2 shows accuracies on both heuristics (left)
and trained baselines and models (right). Despite collecting
open-ended answers from annotators, we ﬁnd that human
accuracy is 85.01%, consistent with that on VQA 2.0 [10]
and VizWiz [13]. While the OCR system we used is not
perfect, the upper-bound on the validation set that one can
achieve by correctly predicting the answer using these OCR
tokens is 37.12%. This is higher than our best model, sug-
gesting room for improvement to reason about the OCR to-
kens. LA UB is quite high as they contain most commonly
occurring questions. This accuracy on VQA 2.0 validation
set with 3129 most common answers is 88.9% which sug-
gests uniqueness of answers in TextVQA and limits of a
ﬁxed answer space. The difference between LoRRA and
LA+OCR UB of 41% represents the room for improvement
in modelling with current OCR tokens and LA. Majority an-
swer (“yes”) gets only 4.48% on test set. Random baselines,
even the weighted one, are rarely correct. Random OCR
token selection and maximum occurring OCR token selec-
tion (OCR Max) yields better accuracies compared to other
heuristics baselines.

Question only (Q) and Image only (I) baseline get 8.09%
and 6.29% validation accuracies, respectively, which shows
that the dataset does not have signiﬁcant biases w.r.t. im-
I+Q models - Pythia v0.3 [40] and
ages and questions.
BAN [25], which are state-of-the-art on VQA 2.0 and
VizWiz only achieve 13.04% and 12.3% validation accu-
racy on TextVQA, respectively. This demonstrates the in-
ability of current VQA models to read and reason about text
in images. A jump in accuracy to 18.35% is observed by
feeding OCR tokens (Pythia+O) into the model; this sup-
ports the hypothesis that OCR tokens do help in predict-
ing correct answers. Validation accuracy of 20.06 achieved
by Pythia+O+C by only predicting answers from OCR to-
kens, further bolsters OCR importance as it is quite high
compared to our Pythia v0.3 [40]. Our LoRRA (LA) with
Pythia model outperforms all of the ablations. Finally, a
slight modiﬁcation which allows the model to predict from
the OCR tokens more often by changing the ﬁxed answer
space LA to SA further improves performance. Validation
accuracy for BAN [25] also improves to 18.41% by adding
LoRRA. This suggests that LoRRA can help state-of-the-art
VQA models to perform better on TextVQA.

While LoRRA can reach up to 26.56% accuracy on the
TextVQA’s validation set, there is a large gap to human per-
formance of 85.01% and LA+OCR UB of 67.56%.

Interestingly, when adding LoRRA to Pythia it improves
accuracy from 68.71 to 69.21 on VQA 2.0 [9] (see Tab. 1),
indicating the ability of our model to also exploit reading
and reasoning in this more general VQA benchmark.
6. Conclusion

We explore a speciﬁc skill in Visual Question Answering
that is important for applications involving aiding visually
impaired users – answering questions about everyday im-
ages that involve reading and reasoning about text in these
images. We ﬁnd that existing datasets do not support a sys-
tematic exploration of the research efforts towards this goal.
To this end, we introduce the TextVQA dataset which con-
tains questions which can only be answered by reading and
reasoning about text in images. We also introduce Look,
Read, Reason & Answer (LoRRA), a novel model archi-
tecture for answering questions based on text in images.
LoRRA reads the text in images, reasons about it based on
the provided question, and predicts an answer from a ﬁxed
vocabulary or the text found in the image. LoRRA is agnos-
tic to the speciﬁcs of the underlying OCR and VQA mod-
ules. LoRRA signiﬁcantly outperforms the current state-of-
the-art VQA models on TextVQA. Our OCR model, while
mature, still fails at detecting text that is rotated, a bit un-
structured (e.g., a scribble) or partially occluded. We be-
lieve TextVQA will encourage research both on improv-
ing text detection and recognition in unconstrained environ-
ments as well as on enabling the VQA models to read and
reason about text in images.

8324

References

[1] Peter Anderson, Xiaodong He, Chris Buehler, Damien
Teney, Mark Johnson, Stephen Gould, and Lei Zhang.
Bottom-up and top-down attention for image captioning and
visual question answering. In Computer Vision and Pat-tern
Recognition (CVPR), 2018.

[2] Jacob Andreas, Marcus Rohrbach, Trevor Darrell, and Dan
In Computer Vision and

Klein. Neural module networks.
Pat-tern Recognition (CVPR), 2016.

[3] Stanislaw Antol, Aishwarya Agrawal, Jiasen Lu, Margaret
Mitchell, Dhruv Batra, C Lawrence Zitnick, and Devi Parikh.
Vqa: Visual question answering. In ICCV, 2015.

[4] Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Bengio.
Neural machine translation by jointly learning to align and
translate.
In International Conference on Learning Repre-
sentations (ICLR), 2015.

[5] Jeffrey P Bigham, Chandrika Jayant, Hanjie Ji, Greg Lit-
tle, Andrew Miller, Robert C Miller, Robin Miller, Aubrey
Tatarowicz, Brandyn White, Samual White, et al. Vizwiz:
nearly real-time answers to visual questions. In Proceedings
of the 23nd annual ACM symposium on User interface soft-
ware and technology, pages 333–342. ACM, 2010.

[6] Fedor Borisyuk, Albert Gordo, and Viswanath Sivakumar.
Rosetta: Large scale system for text detection and recogni-
tion in images. In Proceedings of the 24th ACM SIGKDD
International Conference on Knowledge Discovery & Data
Mining, pages 71–79. ACM, 2018.

[7] Akira Fukui, Dong Huk Park, Daylen Yang, Anna Rohrbach,
Trevor Darrell, and Marcus Rohrbach. Multimodal com-
pact bilinear pooling for visual question answering and vi-
sual grounding. In EMNLP, 2016.

[8] Ross Girshick, Ilija Radosavovic, Georgia Gkioxari, Piotr
Doll´ar, and Kaiming He. Detectron. https://github.
com/facebookresearch/detectron, 2018.

[9] Priya Goyal, Piotr Doll´ar, Ross Girshick, Pieter Noord-
huis, Lukasz Wesolowski, Aapo Kyrola, Andrew Tulloch,
large mini-
Yangqing Jia, and Kaiming He. Accurate,
batch sgd:
arXiv preprint
arXiv:1706.02677, 2017.

training imagenet in 1 hour.

[10] Yash Goyal, Tejas Khot, Douglas Summers-Stay, Dhruv Ba-
tra, and Devi Parikh. Making the V in VQA matter: Ele-
vating the role of image understanding in Visual Question
Answering. In Conference on Computer Vision and Pattern
Recognition (CVPR), 2017.

[11] J Gu, Z Lu, H Li, and VOK Li. Incorporating copying mech-
anism in sequence-to-sequence learning.
In Annual Meet-
ing of the Association for Computational Linguistics (ACL),
2016. Association for Computational Linguistics., 2016.

[12] Caglar Gulcehre, Sungjin Ahn, Ramesh Nallapati, Bowen
Zhou, and Yoshua Bengio. Pointing the unknown words. In
ACL, 2016.

[13] Danna Gurari, Qing Li, Abigale J Stangl, Anhong Guo, Chi
Lin, Kristen Grauman, Jiebo Luo, and Jeffrey P Bigham.
Vizwiz grand challenge: Answering visual questions from
blind people.
In Conference on Computer Vision and Pat-
ternRecognition (CVPR), 2017.

[14] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun.
Deep residual learning for image recognition. In Proceed-

ings of the IEEE conference on computer vision and pattern
recognition, pages 770–778, 2016.

[15] Sepp Hochreiter and J¨urgen Schmidhuber. Long short-term

memory. Neural computation, 9(8):1735–1780, 1997.

[16] Lu Jiang, Junwei Liang, Liangliang Cao, Yannis Kalantidis,
Sachin Farfade, and Alexander G Hauptmann. Memexqa:
Visual memex question answering. arXiv:1708.01336, 2017.
[17] Yu Jiang, Vivek Natarajan, Xinlei Chen, Marcus Rohrbach,
the win-
arXiv preprint

Dhruv Batra, and Devi Parikh. Pythia v0. 1:
ning entry to the vqa challenge 2018.
arXiv:1807.09956, 2018.

[18] Justin Johnson, Bharath Hariharan, Laurens van der Maaten,
Li Fei-Fei, C Lawrence Zitnick, and Ross Girshick. Clevr:
A diagnostic dataset for compositional language and ele-
mentary visual reasoning.
In Computer Vision and Pat-
tern Recognition (CVPR), 2017 IEEE Conference on, pages
1988–1997. IEEE, 2017.

[19] Armand Joulin, Edouard Grave, Piotr Bojanowski, and
Tomas Mikolov. Bag of tricks for efﬁcient text classiﬁcation.
In European Chapter of the Association for Computational
Linguistics, 2017.

[20] Kushal Kaﬂe, Scott Cohen, Brian Price, and Christopher
Kanan. Dvqa: Understanding data visualizations via ques-
tion answering.
In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, pages 5648–
5656, 2018.

[21] Samira Ebrahimi Kahou, Vincent Michalski, Adam Atkin-
son, Akos Kadar, Adam Trischler, and Yoshua Bengio. Fig-
ureqa: An annotated ﬁgure dataset for visual reasoning. In
ICLR workshop track, 2018.

[22] Dimosthenis Karatzas, Lluis Gomez-Bigorda, Anguelos
Nicolaou, Suman Ghosh, Andrew Bagdanov, Masakazu Iwa-
mura, Jiri Matas, Lukas Neumann, Vijay Ramaseshan Chan-
drasekhar, Shijian Lu, et al. Icdar 2015 competition on robust
reading.
In Document Analysis and Recognition (ICDAR),
2015 13th International Conference on, pages 1156–1160.
IEEE, 2015.

[23] Aniruddha Kembhavi, Mike Salvato, Eric Kolve, Minjoon
Seo, Hannaneh Hajishirzi, and Ali Farhadi. A diagram is
worth a dozen images. In European Conference on Computer
Vision, pages 235–251. Springer, 2016.

[24] Aniruddha Kembhavi, Min Joon Seo, Dustin Schwenk,
Jonghyun Choi, Ali Farhadi, and Hannaneh Hajishirzi. Are
you smarter than a sixth grader? textbook question answer-
ing for multimodal machine comprehension.
In Computer
Vision and Pat-tern Recognition (CVPR), volume 2, page 3,
2017.

[25] Jin-Hwa Kim, Jaehyun Jun, and Byoung-Tak Zhang. Bilin-
In Neural Information Processing

ear attention networks.
Systems, 2018.

[26] Diederik P Kingma and Jimmy Ba. Adam: A method
for stochastic optimization. In International Conference on
Learning Representations (ICLR), 2015.

[27] Ivan Krasin, Tom Duerig, Neil Alldrin, Andreas Veit, Sami
Abu-El-Haija, Serge Belongie, David Cai, Zheyun Feng, Vit-
torio Ferrari, Victor Gomes, et al. Openimages: A pub-
lic dataset for large-scale multi-label and multi-class im-
age classiﬁcation. Dataset available from https://github.
com/openimages, 2(6):7, 2016.

8325

[43] Andreas Veit, Tomas Matera, Lukas Neumann, Jiri Matas,
and Serge Belongie. Coco-text: Dataset and benchmark
for text detection and recognition in natural images. arXiv
preprint arXiv:1601.07140, 2016.

[44] Kai Wang and Serge Belongie. Word spotting in the wild. In
European Conference on Computer Vision, pages 591–604.
Springer, 2010.

[45] Peng Wang, Qi Wu, Chunhua Shen, Anthony Dick, and An-
ton van den Hengel. Fvqa: Fact-based visual question an-
swering. IEEE transactions on pattern analysis and machine
intelligence, 2018.

[46] Caiming Xiong, Victor Zhong, and Richard Socher. Dy-
namic coattention networks for question answering. In In-
ternational Conference on Learning Representations (ICLR),
2016.

[47] Huijuan Xu and Kate Saenko. Ask, attend and answer: Ex-
ploring question-guided spatial attention for visual question
answering.
In European Conference on Computer Vision,
pages 451–466. Springer, 2016.

[48] Zichao Yang, Xiaodong He, Jianfeng Gao, Li Deng, and
Alex Smola. Stacked attention networks for image question
answering.
In Computer Vision and Pat-tern Recognition
(CVPR), 2016.

[49] Zhou Yu, Jun Yu, Chenchao Xiang, Jianping Fan, and
Dacheng Tao. Beyond bilinear: Generalized multimodal
factorized high-order pooling for visual question answering.
IEEE Transactions on Neural Networks and Learning Sys-
tems, 2018.

[50] Yan Zhang, Jonathon Hare, and Adam Pr¨ugel-Bennett.
Learning to count objects in natural images for visual ques-
tion answering.
In International Conference on Learning
Representations (ICLR), 2018.

[51] Yuke Zhu, Oliver Groth, Michael Bernstein, and Li Fei-Fei.
Visual7w: Grounded question answering in images. In Pro-
ceedings of the IEEE Conference on Computer Vision and
Pattern Recognition, pages 4995–5004, 2016.

[28] Ranjay Krishna, Yuke Zhu, Oliver Groth, Justin Johnson,
Kenji Hata, Joshua Kravitz, Stephanie Chen, Yannis Kalan-
tidis, Li-Jia Li, David A Shamma, et al. Visual genome:
Connecting language and vision using crowdsourced dense
image annotations. IJCV, 2017.

[29] Yann LeCun, Bernhard Boser, John S Denker, Donnie
Henderson, Richard E Howard, Wayne Hubbard, and
Lawrence D Jackel. Backpropagation applied to handwrit-
ten zip code recognition. Neural computation, 1(4):541–551,
1989.

[30] Jiasen Lu, Jianwei Yang, Dhruv Batra, and Devi Parikh.
Hierarchical question-image co-attention for visual question
answering. In Advances In Neural Information Processing
Systems, pages 289–297, 2016.

[31] Mateusz Malinowski and Mario Fritz. A multi-world ap-
proach to question answering about real-world scenes based
on uncertain input. In Advances in neural information pro-
cessing systems, pages 1682–1690, 2014.

[32] Stephen Merity, Caiming Xiong, James Bradbury, and
Richard Socher. Pointer sentinel mixture models.
In In-
ternational Conference on Learning Representations (ICLR),
2017.

[33] Anand Mishra, Karteek Alahari, and CV Jawahar. Scene text
recognition using higher order language priors. In BMVC-
British Machine Vision Conference. BMVA, 2012.

[34] Ramesh Nallapati, Bowen Zhou, Caglar Gulcehre, Bing Xi-
ang, et al. Abstractive text summarization using sequence-to-
sequence rnns and beyond. In The SIGNLL Conference on
Computational Natural Language Learning (CoNLL), 2016.
[35] Adam Paszke, Sam Gross, Soumith Chintala, Gregory
Chanan, Edward Yang, Zachary DeVito, Zeming Lin, Al-
ban Desmaison, Luca Antiga, and Adam Lerer. Automatic
differentiation in pytorch. NIPS AutoDiff Workshop, 2017.

[36] Jeffrey Pennington, Richard Socher, and Christopher Man-
In

ning. Glove: Global vectors for word representation.
EMNLP, 2014.

[37] Dinesh Raghu, Nikhil Gupta, et al. Hierarchical pointer
memory network for task oriented dialogue. arXiv preprint
arXiv:1805.01216, 2018.

[38] Mengye Ren, Ryan Kiros, and Richard Zemel. Exploring
models and data for image question answering. In Advances
in neural information processing systems, pages 2953–2961,
2015.

[39] Abigail See, Peter J Liu, and Christopher D Manning. Get to
the point: Summarization with pointer-generator networks.
In Association for Computational Linguistics, 2017.

[40] Amanpreet Singh, Vivek Natarajan, Yu Jiang, Xinlei Chen,
Meet Shah, Marcus Rohrbach, Dhruv Batra, and Devi
Parikh. Pythia-a platform for vision & language research.
SysML Workshop, NeurIPS 2019, 2018.

[41] Ray Smith. An overview of the tesseract ocr engine.

In
Document Analysis and Recognition, 2007. ICDAR 2007.
Ninth International Conference on, volume 2, pages 629–
633. IEEE, 2007.

[42] Alane Suhr, Mike Lewis, James Yeh, and Yoav Artzi. A cor-
pus of natural language for visual reasoning. In Proceedings
of the 55th Annual Meeting of the Association for Computa-
tional Linguistics (Volume 2: Short Papers), volume 2, pages
217–223, 2017.

8326

